"use strict";
// tslint:disable
/** This file was generated by the graphql-errors-plugin, which is part of the "codegen" npm script. */
Object.defineProperty(exports, "__esModule", { value: true });
exports.shopErrorOperationTypeResolvers = exports.NoActiveOrderError = exports.NotVerifiedError = exports.PasswordResetTokenExpiredError = exports.PasswordResetTokenInvalidError = exports.IdentifierChangeTokenExpiredError = exports.IdentifierChangeTokenInvalidError = exports.VerificationTokenExpiredError = exports.VerificationTokenInvalidError = exports.PasswordAlreadySetError = exports.MissingPasswordError = exports.AlreadyLoggedInError = exports.CouponCodeLimitError = exports.CouponCodeExpiredError = exports.CouponCodeInvalidError = exports.PaymentDeclinedError = exports.PaymentFailedError = exports.IneligiblePaymentMethodError = exports.OrderPaymentStateError = exports.IneligibleShippingMethodError = exports.OrderModificationError = exports.InsufficientStockError = exports.NegativeQuantityError = exports.OrderLimitError = exports.EmailAddressConflictError = exports.OrderStateTransitionError = exports.InvalidCredentialsError = exports.NativeAuthStrategyError = exports.ErrorResult = void 0;
class ErrorResult {
}
exports.ErrorResult = ErrorResult;
class NativeAuthStrategyError extends ErrorResult {
    constructor() {
        super();
        this.__typename = 'NativeAuthStrategyError';
        this.errorCode = 'NATIVE_AUTH_STRATEGY_ERROR';
        this.message = 'NATIVE_AUTH_STRATEGY_ERROR';
    }
}
exports.NativeAuthStrategyError = NativeAuthStrategyError;
class InvalidCredentialsError extends ErrorResult {
    constructor(authenticationError) {
        super();
        this.authenticationError = authenticationError;
        this.__typename = 'InvalidCredentialsError';
        this.errorCode = 'INVALID_CREDENTIALS_ERROR';
        this.message = 'INVALID_CREDENTIALS_ERROR';
    }
}
exports.InvalidCredentialsError = InvalidCredentialsError;
class OrderStateTransitionError extends ErrorResult {
    constructor(transitionError, fromState, toState) {
        super();
        this.transitionError = transitionError;
        this.fromState = fromState;
        this.toState = toState;
        this.__typename = 'OrderStateTransitionError';
        this.errorCode = 'ORDER_STATE_TRANSITION_ERROR';
        this.message = 'ORDER_STATE_TRANSITION_ERROR';
    }
}
exports.OrderStateTransitionError = OrderStateTransitionError;
class EmailAddressConflictError extends ErrorResult {
    constructor() {
        super();
        this.__typename = 'EmailAddressConflictError';
        this.errorCode = 'EMAIL_ADDRESS_CONFLICT_ERROR';
        this.message = 'EMAIL_ADDRESS_CONFLICT_ERROR';
    }
}
exports.EmailAddressConflictError = EmailAddressConflictError;
class OrderLimitError extends ErrorResult {
    constructor(maxItems) {
        super();
        this.maxItems = maxItems;
        this.__typename = 'OrderLimitError';
        this.errorCode = 'ORDER_LIMIT_ERROR';
        this.message = 'ORDER_LIMIT_ERROR';
    }
}
exports.OrderLimitError = OrderLimitError;
class NegativeQuantityError extends ErrorResult {
    constructor() {
        super();
        this.__typename = 'NegativeQuantityError';
        this.errorCode = 'NEGATIVE_QUANTITY_ERROR';
        this.message = 'NEGATIVE_QUANTITY_ERROR';
    }
}
exports.NegativeQuantityError = NegativeQuantityError;
class InsufficientStockError extends ErrorResult {
    constructor(quantityAvailable, order) {
        super();
        this.quantityAvailable = quantityAvailable;
        this.order = order;
        this.__typename = 'InsufficientStockError';
        this.errorCode = 'INSUFFICIENT_STOCK_ERROR';
        this.message = 'INSUFFICIENT_STOCK_ERROR';
    }
}
exports.InsufficientStockError = InsufficientStockError;
class OrderModificationError extends ErrorResult {
    constructor() {
        super();
        this.__typename = 'OrderModificationError';
        this.errorCode = 'ORDER_MODIFICATION_ERROR';
        this.message = 'ORDER_MODIFICATION_ERROR';
    }
}
exports.OrderModificationError = OrderModificationError;
class IneligibleShippingMethodError extends ErrorResult {
    constructor() {
        super();
        this.__typename = 'IneligibleShippingMethodError';
        this.errorCode = 'INELIGIBLE_SHIPPING_METHOD_ERROR';
        this.message = 'INELIGIBLE_SHIPPING_METHOD_ERROR';
    }
}
exports.IneligibleShippingMethodError = IneligibleShippingMethodError;
class OrderPaymentStateError extends ErrorResult {
    constructor() {
        super();
        this.__typename = 'OrderPaymentStateError';
        this.errorCode = 'ORDER_PAYMENT_STATE_ERROR';
        this.message = 'ORDER_PAYMENT_STATE_ERROR';
    }
}
exports.OrderPaymentStateError = OrderPaymentStateError;
class IneligiblePaymentMethodError extends ErrorResult {
    constructor(eligibilityCheckerMessage) {
        super();
        this.eligibilityCheckerMessage = eligibilityCheckerMessage;
        this.__typename = 'IneligiblePaymentMethodError';
        this.errorCode = 'INELIGIBLE_PAYMENT_METHOD_ERROR';
        this.message = 'INELIGIBLE_PAYMENT_METHOD_ERROR';
    }
}
exports.IneligiblePaymentMethodError = IneligiblePaymentMethodError;
class PaymentFailedError extends ErrorResult {
    constructor(paymentErrorMessage) {
        super();
        this.paymentErrorMessage = paymentErrorMessage;
        this.__typename = 'PaymentFailedError';
        this.errorCode = 'PAYMENT_FAILED_ERROR';
        this.message = 'PAYMENT_FAILED_ERROR';
    }
}
exports.PaymentFailedError = PaymentFailedError;
class PaymentDeclinedError extends ErrorResult {
    constructor(paymentErrorMessage) {
        super();
        this.paymentErrorMessage = paymentErrorMessage;
        this.__typename = 'PaymentDeclinedError';
        this.errorCode = 'PAYMENT_DECLINED_ERROR';
        this.message = 'PAYMENT_DECLINED_ERROR';
    }
}
exports.PaymentDeclinedError = PaymentDeclinedError;
class CouponCodeInvalidError extends ErrorResult {
    constructor(couponCode) {
        super();
        this.couponCode = couponCode;
        this.__typename = 'CouponCodeInvalidError';
        this.errorCode = 'COUPON_CODE_INVALID_ERROR';
        this.message = 'COUPON_CODE_INVALID_ERROR';
    }
}
exports.CouponCodeInvalidError = CouponCodeInvalidError;
class CouponCodeExpiredError extends ErrorResult {
    constructor(couponCode) {
        super();
        this.couponCode = couponCode;
        this.__typename = 'CouponCodeExpiredError';
        this.errorCode = 'COUPON_CODE_EXPIRED_ERROR';
        this.message = 'COUPON_CODE_EXPIRED_ERROR';
    }
}
exports.CouponCodeExpiredError = CouponCodeExpiredError;
class CouponCodeLimitError extends ErrorResult {
    constructor(couponCode, limit) {
        super();
        this.couponCode = couponCode;
        this.limit = limit;
        this.__typename = 'CouponCodeLimitError';
        this.errorCode = 'COUPON_CODE_LIMIT_ERROR';
        this.message = 'COUPON_CODE_LIMIT_ERROR';
    }
}
exports.CouponCodeLimitError = CouponCodeLimitError;
class AlreadyLoggedInError extends ErrorResult {
    constructor() {
        super();
        this.__typename = 'AlreadyLoggedInError';
        this.errorCode = 'ALREADY_LOGGED_IN_ERROR';
        this.message = 'ALREADY_LOGGED_IN_ERROR';
    }
}
exports.AlreadyLoggedInError = AlreadyLoggedInError;
class MissingPasswordError extends ErrorResult {
    constructor() {
        super();
        this.__typename = 'MissingPasswordError';
        this.errorCode = 'MISSING_PASSWORD_ERROR';
        this.message = 'MISSING_PASSWORD_ERROR';
    }
}
exports.MissingPasswordError = MissingPasswordError;
class PasswordAlreadySetError extends ErrorResult {
    constructor() {
        super();
        this.__typename = 'PasswordAlreadySetError';
        this.errorCode = 'PASSWORD_ALREADY_SET_ERROR';
        this.message = 'PASSWORD_ALREADY_SET_ERROR';
    }
}
exports.PasswordAlreadySetError = PasswordAlreadySetError;
class VerificationTokenInvalidError extends ErrorResult {
    constructor() {
        super();
        this.__typename = 'VerificationTokenInvalidError';
        this.errorCode = 'VERIFICATION_TOKEN_INVALID_ERROR';
        this.message = 'VERIFICATION_TOKEN_INVALID_ERROR';
    }
}
exports.VerificationTokenInvalidError = VerificationTokenInvalidError;
class VerificationTokenExpiredError extends ErrorResult {
    constructor() {
        super();
        this.__typename = 'VerificationTokenExpiredError';
        this.errorCode = 'VERIFICATION_TOKEN_EXPIRED_ERROR';
        this.message = 'VERIFICATION_TOKEN_EXPIRED_ERROR';
    }
}
exports.VerificationTokenExpiredError = VerificationTokenExpiredError;
class IdentifierChangeTokenInvalidError extends ErrorResult {
    constructor() {
        super();
        this.__typename = 'IdentifierChangeTokenInvalidError';
        this.errorCode = 'IDENTIFIER_CHANGE_TOKEN_INVALID_ERROR';
        this.message = 'IDENTIFIER_CHANGE_TOKEN_INVALID_ERROR';
    }
}
exports.IdentifierChangeTokenInvalidError = IdentifierChangeTokenInvalidError;
class IdentifierChangeTokenExpiredError extends ErrorResult {
    constructor() {
        super();
        this.__typename = 'IdentifierChangeTokenExpiredError';
        this.errorCode = 'IDENTIFIER_CHANGE_TOKEN_EXPIRED_ERROR';
        this.message = 'IDENTIFIER_CHANGE_TOKEN_EXPIRED_ERROR';
    }
}
exports.IdentifierChangeTokenExpiredError = IdentifierChangeTokenExpiredError;
class PasswordResetTokenInvalidError extends ErrorResult {
    constructor() {
        super();
        this.__typename = 'PasswordResetTokenInvalidError';
        this.errorCode = 'PASSWORD_RESET_TOKEN_INVALID_ERROR';
        this.message = 'PASSWORD_RESET_TOKEN_INVALID_ERROR';
    }
}
exports.PasswordResetTokenInvalidError = PasswordResetTokenInvalidError;
class PasswordResetTokenExpiredError extends ErrorResult {
    constructor() {
        super();
        this.__typename = 'PasswordResetTokenExpiredError';
        this.errorCode = 'PASSWORD_RESET_TOKEN_EXPIRED_ERROR';
        this.message = 'PASSWORD_RESET_TOKEN_EXPIRED_ERROR';
    }
}
exports.PasswordResetTokenExpiredError = PasswordResetTokenExpiredError;
class NotVerifiedError extends ErrorResult {
    constructor() {
        super();
        this.__typename = 'NotVerifiedError';
        this.errorCode = 'NOT_VERIFIED_ERROR';
        this.message = 'NOT_VERIFIED_ERROR';
    }
}
exports.NotVerifiedError = NotVerifiedError;
class NoActiveOrderError extends ErrorResult {
    constructor() {
        super();
        this.__typename = 'NoActiveOrderError';
        this.errorCode = 'NO_ACTIVE_ORDER_ERROR';
        this.message = 'NO_ACTIVE_ORDER_ERROR';
    }
}
exports.NoActiveOrderError = NoActiveOrderError;
const errorTypeNames = new Set(['NativeAuthStrategyError', 'InvalidCredentialsError', 'OrderStateTransitionError', 'EmailAddressConflictError', 'OrderLimitError', 'NegativeQuantityError', 'InsufficientStockError', 'OrderModificationError', 'IneligibleShippingMethodError', 'OrderPaymentStateError', 'IneligiblePaymentMethodError', 'PaymentFailedError', 'PaymentDeclinedError', 'CouponCodeInvalidError', 'CouponCodeExpiredError', 'CouponCodeLimitError', 'AlreadyLoggedInError', 'MissingPasswordError', 'PasswordAlreadySetError', 'VerificationTokenInvalidError', 'VerificationTokenExpiredError', 'IdentifierChangeTokenInvalidError', 'IdentifierChangeTokenExpiredError', 'PasswordResetTokenInvalidError', 'PasswordResetTokenExpiredError', 'NotVerifiedError', 'NoActiveOrderError']);
function isGraphQLError(input) {
    return input instanceof ErrorResult || errorTypeNames.has(input.__typename);
}
exports.shopErrorOperationTypeResolvers = {
    UpdateOrderItemsResult: {
        __resolveType(value) {
            return isGraphQLError(value) ? value.__typename : 'Order';
        },
    },
    RemoveOrderItemsResult: {
        __resolveType(value) {
            return isGraphQLError(value) ? value.__typename : 'Order';
        },
    },
    ApplyCouponCodeResult: {
        __resolveType(value) {
            return isGraphQLError(value) ? value.__typename : 'Order';
        },
    },
    TransitionOrderToStateResult: {
        __resolveType(value) {
            return isGraphQLError(value) ? value.__typename : 'Order';
        },
    },
    ActiveOrderResult: {
        __resolveType(value) {
            return isGraphQLError(value) ? value.__typename : 'Order';
        },
    },
    SetOrderShippingMethodResult: {
        __resolveType(value) {
            return isGraphQLError(value) ? value.__typename : 'Order';
        },
    },
    AddPaymentToOrderResult: {
        __resolveType(value) {
            return isGraphQLError(value) ? value.__typename : 'Order';
        },
    },
    SetCustomerForOrderResult: {
        __resolveType(value) {
            return isGraphQLError(value) ? value.__typename : 'Order';
        },
    },
    NativeAuthenticationResult: {
        __resolveType(value) {
            return isGraphQLError(value) ? value.__typename : 'CurrentUser';
        },
    },
    AuthenticationResult: {
        __resolveType(value) {
            return isGraphQLError(value) ? value.__typename : 'CurrentUser';
        },
    },
    RegisterCustomerAccountResult: {
        __resolveType(value) {
            return isGraphQLError(value) ? value.__typename : 'Success';
        },
    },
    RefreshCustomerVerificationResult: {
        __resolveType(value) {
            return isGraphQLError(value) ? value.__typename : 'Success';
        },
    },
    VerifyCustomerAccountResult: {
        __resolveType(value) {
            return isGraphQLError(value) ? value.__typename : 'CurrentUser';
        },
    },
    UpdateCustomerPasswordResult: {
        __resolveType(value) {
            return isGraphQLError(value) ? value.__typename : 'Success';
        },
    },
    RequestUpdateCustomerEmailAddressResult: {
        __resolveType(value) {
            return isGraphQLError(value) ? value.__typename : 'Success';
        },
    },
    UpdateCustomerEmailAddressResult: {
        __resolveType(value) {
            return isGraphQLError(value) ? value.__typename : 'Success';
        },
    },
    RequestPasswordResetResult: {
        __resolveType(value) {
            return isGraphQLError(value) ? value.__typename : 'Success';
        },
    },
    ResetPasswordResult: {
        __resolveType(value) {
            return isGraphQLError(value) ? value.__typename : 'CurrentUser';
        },
    },
};
//# sourceMappingURL=generated-graphql-shop-errors.js.map
{"version":3,"file":"vendure-admin-ui-catalog.js","sources":["../../src/lib/catalog/src/components/asset-detail/asset-detail.component.ts","../../src/lib/catalog/src/components/asset-list/asset-list.component.ts","../../src/lib/catalog/src/components/collection-contents/collection-contents.component.ts","../../src/lib/catalog/src/components/collection-detail/collection-detail.component.ts","../../src/lib/catalog/src/components/collection-list/collection-list.component.ts","../../src/lib/catalog/src/components/facet-detail/facet-detail.component.ts","../../src/lib/catalog/src/components/facet-list/facet-list.component.ts","../../src/lib/catalog/src/providers/product-detail/replace-last.ts","../../src/lib/catalog/src/providers/product-detail/product-detail.service.ts","../../src/lib/catalog/src/components/apply-facet-dialog/apply-facet-dialog.component.ts","../../src/lib/catalog/src/components/assign-products-to-channel-dialog/assign-products-to-channel-dialog.component.ts","../../src/lib/catalog/src/components/product-detail/product-detail.component.ts","../../src/lib/catalog/src/components/product-search-input/product-search-input.component.ts","../../src/lib/catalog/src/components/product-list/product-list.component.ts","../../src/lib/catalog/src/components/product-variants-editor/product-variants-editor.component.ts","../../src/lib/catalog/src/providers/routing/asset-resolver.ts","../../src/lib/catalog/src/providers/routing/collection-resolver.ts","../../src/lib/catalog/src/providers/routing/facet-resolver.ts","../../src/lib/catalog/src/providers/routing/product-resolver.ts","../../src/lib/catalog/src/providers/routing/product-variants-resolver.ts","../../src/lib/catalog/src/catalog.routes.ts","../../src/lib/catalog/src/components/collection-tree/array-to-tree.ts","../../src/lib/catalog/src/components/collection-tree/collection-tree.component.ts","../../src/lib/catalog/src/components/collection-tree/collection-tree-node.component.ts","../../src/lib/catalog/src/components/generate-product-variants/generate-product-variants.component.ts","../../src/lib/catalog/src/components/option-value-input/option-value-input.component.ts","../../src/lib/catalog/src/components/product-assets/product-assets.component.ts","../../src/lib/catalog/src/components/update-product-option-dialog/update-product-option-dialog.component.ts","../../src/lib/catalog/src/components/product-variants-list/product-variants-list.component.ts","../../src/lib/catalog/src/components/product-variants-table/product-variants-table.component.ts","../../src/lib/catalog/src/components/variant-price-detail/variant-price-detail.component.ts","../../src/lib/catalog/src/catalog.module.ts","../../src/lib/catalog/src/public_api.ts","../../src/lib/catalog/src/vendure-admin-ui-catalog.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    Asset,\n    BaseDetailComponent,\n    CustomFieldConfig,\n    GetAsset,\n    LanguageCode,\n} from '@vendure/admin-ui/core';\nimport { DataService, NotificationService, ServerConfigService } from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-asset-detail',\n    templateUrl: './asset-detail.component.html',\n    styleUrls: ['./asset-detail.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AssetDetailComponent extends BaseDetailComponent<GetAsset.Asset> implements OnInit, OnDestroy {\n    detailForm = new FormGroup({});\n    customFields: CustomFieldConfig[];\n\n    constructor(\n        router: Router,\n        route: ActivatedRoute,\n        serverConfigService: ServerConfigService,\n        private notificationService: NotificationService,\n        protected dataService: DataService,\n        private formBuilder: FormBuilder,\n    ) {\n        super(route, router, serverConfigService, dataService);\n        this.customFields = this.getCustomFieldConfig('Asset');\n    }\n\n    ngOnInit() {\n        this.detailForm = new FormGroup({\n            name: new FormControl(''),\n            tags: new FormControl([]),\n            customFields: this.formBuilder.group(\n                this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\n            ),\n        });\n        this.init();\n    }\n\n    ngOnDestroy() {\n        this.destroy();\n    }\n\n    onAssetChange(event: { id: string; name: string; tags: string[] }) {\n        this.detailForm.get('name')?.setValue(event.name);\n        this.detailForm.get('tags')?.setValue(event.tags);\n        this.detailForm.markAsDirty();\n    }\n\n    save() {\n        this.dataService.product\n            .updateAsset({\n                id: this.id,\n                name: this.detailForm.value.name,\n                tags: this.detailForm.value.tags,\n                customFields: this.detailForm.value.customFields,\n            })\n            .subscribe(\n                () => {\n                    this.notificationService.success(_('common.notify-update-success'), { entity: 'Asset' });\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-update-error'), {\n                        entity: 'Asset',\n                    });\n                },\n            );\n    }\n\n    protected setFormValues(entity: GetAsset.Asset, languageCode: LanguageCode): void {\n        this.detailForm.get('name')?.setValue(entity.name);\n        this.detailForm.get('tags')?.setValue(entity.tags);\n        if (this.customFields.length) {\n            const customFieldsGroup = this.detailForm.get('customFields') as FormGroup;\n\n            for (const fieldDef of this.customFields) {\n                const key = fieldDef.name;\n                const value = (entity as any).customFields[key];\n                const control = customFieldsGroup.get(key);\n                if (control) {\n                    control.patchValue(value);\n                }\n            }\n        }\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    Asset,\n    BaseListComponent,\n    DataService,\n    DeletionResult,\n    GetAssetList,\n    LogicalOperator,\n    ModalService,\n    NotificationService,\n    SortOrder,\n    TagFragment,\n} from '@vendure/admin-ui/core';\nimport { PaginationInstance } from 'ngx-pagination';\nimport { BehaviorSubject, combineLatest, EMPTY, Observable } from 'rxjs';\nimport { debounceTime, finalize, map, switchMap, takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'vdr-asset-list',\n    templateUrl: './asset-list.component.html',\n    styleUrls: ['./asset-list.component.scss'],\n})\nexport class AssetListComponent\n    extends BaseListComponent<GetAssetList.Query, GetAssetList.Items, GetAssetList.Variables>\n    implements OnInit {\n    searchTerm$ = new BehaviorSubject<string | undefined>(undefined);\n    filterByTags$ = new BehaviorSubject<TagFragment[] | undefined>(undefined);\n    uploading = false;\n    allTags$: Observable<TagFragment[]>;\n    paginationConfig$: Observable<PaginationInstance>;\n\n    constructor(\n        private notificationService: NotificationService,\n        private modalService: ModalService,\n        private dataService: DataService,\n        router: Router,\n        route: ActivatedRoute,\n    ) {\n        super(router, route);\n        super.setQueryFn(\n            (...args: any[]) => this.dataService.product.getAssetList(...args),\n            data => data.assets,\n            (skip, take) => {\n                const searchTerm = this.searchTerm$.value;\n                const tags = this.filterByTags$.value?.map(t => t.value);\n                return {\n                    options: {\n                        skip,\n                        take,\n                        ...(searchTerm\n                            ? {\n                                  filter: {\n                                      name: { contains: searchTerm },\n                                  },\n                              }\n                            : {}),\n                        sort: {\n                            createdAt: SortOrder.DESC,\n                        },\n                        tags,\n                        tagsOperator: LogicalOperator.AND,\n                    },\n                };\n            },\n            { take: 25, skip: 0 },\n        );\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n        this.paginationConfig$ = combineLatest(this.itemsPerPage$, this.currentPage$, this.totalItems$).pipe(\n            map(([itemsPerPage, currentPage, totalItems]) => ({ itemsPerPage, currentPage, totalItems })),\n        );\n        this.searchTerm$.pipe(debounceTime(250), takeUntil(this.destroy$)).subscribe(() => this.refresh());\n\n        this.filterByTags$.pipe(takeUntil(this.destroy$)).subscribe(() => this.refresh());\n        this.allTags$ = this.dataService.product.getTagList().mapStream(data => data.tags.items);\n    }\n\n    filesSelected(files: File[]) {\n        if (files.length) {\n            this.uploading = true;\n            this.dataService.product\n                .createAssets(files)\n                .pipe(finalize(() => (this.uploading = false)))\n                .subscribe(({ createAssets }) => {\n                    let successCount = 0;\n                    for (const result of createAssets) {\n                        switch (result.__typename) {\n                            case 'Asset':\n                                successCount++;\n                                break;\n                            case 'MimeTypeError':\n                                this.notificationService.error(result.message);\n                                break;\n                        }\n                    }\n                    if (0 < successCount) {\n                        super.refresh();\n                        this.notificationService.success(_('asset.notify-create-assets-success'), {\n                            count: successCount,\n                        });\n                    }\n                });\n        }\n    }\n\n    deleteAssets(assets: Asset[]) {\n        this.showModalAndDelete(assets.map(a => a.id))\n            .pipe(\n                switchMap(response => {\n                    if (response.result === DeletionResult.DELETED) {\n                        return [true];\n                    } else {\n                        return this.showModalAndDelete(\n                            assets.map(a => a.id),\n                            response.message || '',\n                        ).pipe(map(r => r.result === DeletionResult.DELETED));\n                    }\n                }),\n            )\n            .subscribe(\n                () => {\n                    this.notificationService.success(_('common.notify-delete-success'), {\n                        entity: 'Assets',\n                    });\n                    this.refresh();\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-delete-error'), {\n                        entity: 'Assets',\n                    });\n                },\n            );\n    }\n\n    private showModalAndDelete(assetIds: string[], message?: string) {\n        return this.modalService\n            .dialog({\n                title: _('catalog.confirm-delete-assets'),\n                translationVars: {\n                    count: assetIds.length,\n                },\n                body: message,\n                buttons: [\n                    { type: 'secondary', label: _('common.cancel') },\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\n                ],\n            })\n            .pipe(\n                switchMap(res => (res ? this.dataService.product.deleteAssets(assetIds, !!message) : EMPTY)),\n                map(res => res.deleteAssets),\n            );\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    SimpleChanges,\n    TemplateRef,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BehaviorSubject, combineLatest, Observable, of, Subject } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    startWith,\n    switchMap,\n    takeUntil,\n    tap,\n} from 'rxjs/operators';\n\nimport { GetCollectionContents } from '@vendure/admin-ui/core';\nimport { DataService } from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-collection-contents',\n    templateUrl: './collection-contents.component.html',\n    styleUrls: ['./collection-contents.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CollectionContentsComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() collectionId: string;\n    @ContentChild(TemplateRef, { static: true }) headerTemplate: TemplateRef<any>;\n\n    contents$: Observable<GetCollectionContents.Items[]>;\n    contentsTotalItems$: Observable<number>;\n    contentsItemsPerPage$: Observable<number>;\n    contentsCurrentPage$: Observable<number>;\n    filterTermControl = new FormControl('');\n    private collectionIdChange$ = new BehaviorSubject<string>('');\n    private refresh$ = new BehaviorSubject<boolean>(true);\n    private destroy$ = new Subject<void>();\n\n    constructor(private route: ActivatedRoute, private router: Router, private dataService: DataService) {}\n\n    ngOnInit() {\n        this.contentsCurrentPage$ = this.route.paramMap.pipe(\n            map(qpm => qpm.get('contentsPage')),\n            map(page => (!page ? 1 : +page)),\n            startWith(1),\n            distinctUntilChanged(),\n        );\n\n        this.contentsItemsPerPage$ = this.route.paramMap.pipe(\n            map(qpm => qpm.get('contentsPerPage')),\n            map(perPage => (!perPage ? 10 : +perPage)),\n            startWith(10),\n            distinctUntilChanged(),\n        );\n\n        const filterTerm$ = this.filterTermControl.valueChanges.pipe(\n            debounceTime(250),\n            tap(() => this.setContentsPageNumber(1)),\n            startWith(''),\n        );\n\n        const collection$ = combineLatest(\n            this.collectionIdChange$,\n            this.contentsCurrentPage$,\n            this.contentsItemsPerPage$,\n            filterTerm$,\n            this.refresh$,\n        ).pipe(\n            takeUntil(this.destroy$),\n            switchMap(([id, currentPage, itemsPerPage, filterTerm]) => {\n                const take = itemsPerPage;\n                const skip = (currentPage - 1) * itemsPerPage;\n                if (id) {\n                    return this.dataService.collection\n                        .getCollectionContents(id, take, skip, filterTerm)\n                        .mapSingle(data => data.collection);\n                } else {\n                    return of(null);\n                }\n            }),\n        );\n\n        this.contents$ = collection$.pipe(map(result => (result ? result.productVariants.items : [])));\n        this.contentsTotalItems$ = collection$.pipe(\n            map(result => (result ? result.productVariants.totalItems : 0)),\n        );\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('collectionId' in changes) {\n            this.collectionIdChange$.next(changes.collectionId.currentValue);\n        }\n    }\n\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    setContentsPageNumber(page: number) {\n        this.setParam('contentsPage', page);\n    }\n\n    setContentsItemsPerPage(perPage: number) {\n        this.setParam('contentsPerPage', perPage);\n    }\n\n    refresh() {\n        this.refresh$.next(true);\n    }\n\n    private setParam(key: string, value: any) {\n        this.router.navigate(['./', { ...this.route.snapshot.params, [key]: value }], {\n            relativeTo: this.route,\n            queryParamsHandling: 'merge',\n        });\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    Asset,\n    BaseDetailComponent,\n    Collection,\n    ConfigurableOperation,\n    ConfigurableOperationDefinition,\n    ConfigurableOperationInput,\n    CreateCollectionInput,\n    createUpdatedTranslatable,\n    CustomFieldConfig,\n    DataService,\n    encodeConfigArgValue,\n    findTranslation,\n    getConfigArgValue,\n    LanguageCode,\n    ModalService,\n    NotificationService,\n    Permission,\n    ServerConfigService,\n    UpdateCollectionInput,\n} from '@vendure/admin-ui/core';\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\nimport { combineLatest } from 'rxjs';\nimport { mergeMap, take } from 'rxjs/operators';\n\nimport { CollectionContentsComponent } from '../collection-contents/collection-contents.component';\n\n@Component({\n    selector: 'vdr-collection-detail',\n    templateUrl: './collection-detail.component.html',\n    styleUrls: ['./collection-detail.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CollectionDetailComponent\n    extends BaseDetailComponent<Collection.Fragment>\n    implements OnInit, OnDestroy {\n    customFields: CustomFieldConfig[];\n    detailForm: FormGroup;\n    assetChanges: { assets?: Asset[]; featuredAsset?: Asset } = {};\n    filters: ConfigurableOperation[] = [];\n    allFilters: ConfigurableOperationDefinition[] = [];\n    readonly updatePermission = [Permission.UpdateCatalog, Permission.UpdateCollection];\n    @ViewChild('collectionContents') contentsComponent: CollectionContentsComponent;\n\n    constructor(\n        router: Router,\n        route: ActivatedRoute,\n        serverConfigService: ServerConfigService,\n        private changeDetector: ChangeDetectorRef,\n        protected dataService: DataService,\n        private formBuilder: FormBuilder,\n        private notificationService: NotificationService,\n        private modalService: ModalService,\n    ) {\n        super(route, router, serverConfigService, dataService);\n        this.customFields = this.getCustomFieldConfig('Collection');\n        this.detailForm = this.formBuilder.group({\n            name: ['', Validators.required],\n            slug: '',\n            description: '',\n            visible: false,\n            filters: this.formBuilder.array([]),\n            customFields: this.formBuilder.group(\n                this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\n            ),\n        });\n    }\n\n    ngOnInit() {\n        this.init();\n        this.dataService.collection.getCollectionFilters().single$.subscribe(res => {\n            this.allFilters = res.collectionFilters;\n        });\n    }\n\n    ngOnDestroy() {\n        this.destroy();\n    }\n\n    getFilterDefinition(filter: ConfigurableOperation): ConfigurableOperationDefinition | undefined {\n        return this.allFilters.find(f => f.code === filter.code);\n    }\n\n    customFieldIsSet(name: string): boolean {\n        return !!this.detailForm.get(['customFields', name]);\n    }\n\n    assetsChanged(): boolean {\n        return !!Object.values(this.assetChanges).length;\n    }\n\n    /**\n     * If creating a new Collection, automatically generate the slug based on the collection name.\n     */\n    updateSlug(nameValue: string) {\n        combineLatest(this.entity$, this.languageCode$)\n            .pipe(take(1))\n            .subscribe(([entity, languageCode]) => {\n                const slugControl = this.detailForm.get(['slug']);\n                const currentTranslation = findTranslation(entity, languageCode);\n                const currentSlugIsEmpty = !currentTranslation || !currentTranslation.slug;\n                if (slugControl && slugControl.pristine && currentSlugIsEmpty) {\n                    slugControl.setValue(normalizeString(`${nameValue}`, '-'));\n                }\n            });\n    }\n\n    addFilter(collectionFilter: ConfigurableOperation) {\n        const filtersArray = this.detailForm.get('filters') as FormArray;\n        const index = filtersArray.value.findIndex(o => o.code === collectionFilter.code);\n        if (index === -1) {\n            const argsHash = collectionFilter.args.reduce(\n                (output, arg) => ({\n                    ...output,\n                    [arg.name]: getConfigArgValue(arg.value),\n                }),\n                {},\n            );\n            filtersArray.push(\n                this.formBuilder.control({\n                    code: collectionFilter.code,\n                    args: argsHash,\n                }),\n            );\n            this.filters.push({\n                code: collectionFilter.code,\n                args: collectionFilter.args.map(a => ({ name: a.name, value: getConfigArgValue(a.value) })),\n            });\n        }\n    }\n\n    removeFilter(collectionFilter: ConfigurableOperation) {\n        const filtersArray = this.detailForm.get('filters') as FormArray;\n        const index = filtersArray.value.findIndex(o => o.code === collectionFilter.code);\n        if (index !== -1) {\n            filtersArray.removeAt(index);\n            this.filters.splice(index, 1);\n        }\n    }\n\n    create() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        combineLatest(this.entity$, this.languageCode$)\n            .pipe(\n                take(1),\n                mergeMap(([category, languageCode]) => {\n                    const input = this.getUpdatedCollection(\n                        category,\n                        this.detailForm,\n                        languageCode,\n                    ) as CreateCollectionInput;\n                    const parentId = this.route.snapshot.paramMap.get('parentId');\n                    if (parentId) {\n                        input.parentId = parentId;\n                    }\n                    return this.dataService.collection.createCollection(input);\n                }),\n            )\n            .subscribe(\n                data => {\n                    this.notificationService.success(_('common.notify-create-success'), {\n                        entity: 'Collection',\n                    });\n                    this.assetChanges = {};\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                    this.router.navigate(['../', data.createCollection.id], { relativeTo: this.route });\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-create-error'), {\n                        entity: 'Collection',\n                    });\n                },\n            );\n    }\n\n    save() {\n        combineLatest(this.entity$, this.languageCode$)\n            .pipe(\n                take(1),\n                mergeMap(([category, languageCode]) => {\n                    const input = this.getUpdatedCollection(\n                        category,\n                        this.detailForm,\n                        languageCode,\n                    ) as UpdateCollectionInput;\n                    return this.dataService.collection.updateCollection(input);\n                }),\n            )\n            .subscribe(\n                () => {\n                    this.assetChanges = {};\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                    this.notificationService.success(_('common.notify-update-success'), {\n                        entity: 'Collection',\n                    });\n                    this.contentsComponent.refresh();\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-update-error'), {\n                        entity: 'Collection',\n                    });\n                },\n            );\n    }\n\n    canDeactivate(): boolean {\n        return super.canDeactivate() && !this.assetChanges.assets && !this.assetChanges.featuredAsset;\n    }\n\n    /**\n     * Sets the values of the form on changes to the category or current language.\n     */\n    protected setFormValues(entity: Collection.Fragment, languageCode: LanguageCode) {\n        const currentTranslation = findTranslation(entity, languageCode);\n\n        this.detailForm.patchValue({\n            name: currentTranslation ? currentTranslation.name : '',\n            slug: currentTranslation ? currentTranslation.slug : '',\n            description: currentTranslation ? currentTranslation.description : '',\n            visible: !entity.isPrivate,\n        });\n\n        entity.filters.forEach(f => this.addFilter(f));\n\n        if (this.customFields.length) {\n            const customFieldsGroup = this.detailForm.get(['customFields']) as FormGroup;\n\n            for (const fieldDef of this.customFields) {\n                const key = fieldDef.name;\n                const value =\n                    fieldDef.type === 'localeString'\n                        ? (currentTranslation as any).customFields[key]\n                        : (entity as any).customFields[key];\n                const control = customFieldsGroup.get(key);\n                if (control) {\n                    control.patchValue(value);\n                }\n            }\n        }\n    }\n\n    /**\n     * Given a category and the value of the form, this method creates an updated copy of the category which\n     * can then be persisted to the API.\n     */\n    private getUpdatedCollection(\n        category: Collection.Fragment,\n        form: FormGroup,\n        languageCode: LanguageCode,\n    ): CreateCollectionInput | UpdateCollectionInput {\n        const updatedCategory = createUpdatedTranslatable({\n            translatable: category,\n            updatedFields: form.value,\n            customFieldConfig: this.customFields,\n            languageCode,\n            defaultTranslation: {\n                languageCode,\n                name: category.name || '',\n                slug: category.slug || '',\n                description: category.description || '',\n            },\n        });\n        return {\n            ...updatedCategory,\n            assetIds: this.assetChanges.assets?.map(a => a.id),\n            featuredAssetId: this.assetChanges.featuredAsset?.id,\n            isPrivate: !form.value.visible,\n            filters: this.mapOperationsToInputs(this.filters, this.detailForm.value.filters),\n        };\n    }\n\n    /**\n     * Maps an array of conditions or actions to the input format expected by the GraphQL API.\n     */\n    private mapOperationsToInputs(\n        operations: ConfigurableOperation[],\n        formValueOperations: any,\n    ): ConfigurableOperationInput[] {\n        return operations.map((o, i) => {\n            return {\n                code: o.code,\n                arguments: Object.values(formValueOperations[i].args).map((value: any, j) => ({\n                    name: o.args[j].name,\n                    value: encodeConfigArgValue(value),\n                })),\n            };\n        });\n    }\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    DataService,\n    GetCollectionList,\n    ModalService,\n    NotificationService,\n    QueryResult,\n} from '@vendure/admin-ui/core';\nimport { combineLatest, EMPTY, Observable } from 'rxjs';\nimport { distinctUntilChanged, map, shareReplay, switchMap, take } from 'rxjs/operators';\n\nimport { RearrangeEvent } from '../collection-tree/collection-tree.component';\n\n@Component({\n    selector: 'vdr-collection-list',\n    templateUrl: './collection-list.component.html',\n    styleUrls: ['./collection-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CollectionListComponent implements OnInit, OnDestroy {\n    activeCollectionId$: Observable<string | null>;\n    activeCollectionTitle$: Observable<string>;\n    items$: Observable<GetCollectionList.Items[]>;\n    expandAll = false;\n    private queryResult: QueryResult<any>;\n\n    constructor(\n        private dataService: DataService,\n        private notificationService: NotificationService,\n        private modalService: ModalService,\n        private router: Router,\n        private route: ActivatedRoute,\n    ) {}\n\n    ngOnInit() {\n        this.queryResult = this.dataService.collection.getCollections(1000, 0).refetchOnChannelChange();\n        this.items$ = this.queryResult.mapStream(data => data.collections.items).pipe(shareReplay(1));\n        this.activeCollectionId$ = this.route.paramMap.pipe(\n            map(pm => pm.get('contents')),\n            distinctUntilChanged(),\n        );\n\n        this.activeCollectionTitle$ = combineLatest(this.activeCollectionId$, this.items$).pipe(\n            map(([id, collections]) => {\n                if (id) {\n                    const match = collections.find(c => c.id === id);\n                    return match ? match.name : '';\n                }\n                return '';\n            }),\n        );\n    }\n\n    ngOnDestroy() {\n        this.queryResult.completed$.next();\n    }\n\n    onRearrange(event: RearrangeEvent) {\n        this.dataService.collection.moveCollection([event]).subscribe({\n            next: () => {\n                this.notificationService.success(_('common.notify-saved-changes'));\n                this.refresh();\n            },\n            error: err => {\n                this.notificationService.error(_('common.notify-save-changes-error'));\n            },\n        });\n    }\n\n    deleteCollection(id: string) {\n        this.items$\n            .pipe(\n                take(1),\n                map(items => -1 < items.findIndex(i => i.parent && i.parent.id === id)),\n                switchMap(hasChildren => {\n                    return this.modalService.dialog({\n                        title: _('catalog.confirm-delete-collection'),\n                        body: hasChildren\n                            ? _('catalog.confirm-delete-collection-and-children-body')\n                            : undefined,\n                        buttons: [\n                            { type: 'secondary', label: _('common.cancel') },\n                            { type: 'danger', label: _('common.delete'), returnValue: true },\n                        ],\n                    });\n                }),\n                switchMap(response => (response ? this.dataService.collection.deleteCollection(id) : EMPTY)),\n            )\n            .subscribe(\n                () => {\n                    this.notificationService.success(_('common.notify-delete-success'), {\n                        entity: 'Collection',\n                    });\n                    this.refresh();\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-delete-error'), {\n                        entity: 'Collection',\n                    });\n                },\n            );\n    }\n\n    closeContents() {\n        const params = { ...this.route.snapshot.params };\n        delete params.contents;\n        this.router.navigate(['./', params], { relativeTo: this.route, queryParamsHandling: 'preserve' });\n    }\n\n    private refresh() {\n        this.queryResult.ref.refetch();\n    }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    BaseDetailComponent,\n    CreateFacetInput,\n    CreateFacetValueInput,\n    createUpdatedTranslatable,\n    CustomFieldConfig,\n    DataService,\n    DeletionResult,\n    FacetWithValues,\n    findTranslation,\n    LanguageCode,\n    ModalService,\n    NotificationService,\n    Permission,\n    ServerConfigService,\n    UpdateFacetInput,\n    UpdateFacetValueInput,\n} from '@vendure/admin-ui/core';\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\nimport { combineLatest, EMPTY, forkJoin, Observable } from 'rxjs';\nimport { map, mapTo, mergeMap, switchMap, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'vdr-facet-detail',\n    templateUrl: './facet-detail.component.html',\n    styleUrls: ['./facet-detail.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FacetDetailComponent\n    extends BaseDetailComponent<FacetWithValues.Fragment>\n    implements OnInit, OnDestroy {\n    customFields: CustomFieldConfig[];\n    customValueFields: CustomFieldConfig[];\n    detailForm: FormGroup;\n    values: Array<FacetWithValues.Values | { name: string; code: string }>;\n    readonly updatePermission = [Permission.UpdateCatalog, Permission.UpdateFacet];\n\n    constructor(\n        router: Router,\n        route: ActivatedRoute,\n        serverConfigService: ServerConfigService,\n        private changeDetector: ChangeDetectorRef,\n        protected dataService: DataService,\n        private formBuilder: FormBuilder,\n        private notificationService: NotificationService,\n        private modalService: ModalService,\n    ) {\n        super(route, router, serverConfigService, dataService);\n        this.customFields = this.getCustomFieldConfig('Facet');\n        this.customValueFields = this.getCustomFieldConfig('FacetValue');\n        this.detailForm = this.formBuilder.group({\n            facet: this.formBuilder.group({\n                code: ['', Validators.required],\n                name: '',\n                visible: true,\n                customFields: this.formBuilder.group(\n                    this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\n                ),\n            }),\n            values: this.formBuilder.array([]),\n        });\n    }\n\n    ngOnInit() {\n        this.init();\n    }\n\n    ngOnDestroy() {\n        this.destroy();\n    }\n\n    updateCode(currentCode: string, nameValue: string) {\n        if (!currentCode) {\n            const codeControl = this.detailForm.get(['facet', 'code']);\n            if (codeControl && codeControl.pristine) {\n                codeControl.setValue(normalizeString(nameValue, '-'));\n            }\n        }\n    }\n\n    updateValueCode(currentCode: string, nameValue: string, index: number) {\n        if (!currentCode) {\n            const codeControl = this.detailForm.get(['values', index, 'code']);\n            if (codeControl && codeControl.pristine) {\n                codeControl.setValue(normalizeString(nameValue, '-'));\n            }\n        }\n    }\n\n    customFieldIsSet(name: string): boolean {\n        return !!this.detailForm.get(['facet', 'customFields', name]);\n    }\n\n    customValueFieldIsSet(index: number, name: string): boolean {\n        return !!this.detailForm.get(['values', index, 'customFields', name]);\n    }\n\n    getValuesFormArray(): FormArray {\n        return this.detailForm.get('values') as FormArray;\n    }\n\n    addFacetValue() {\n        const valuesFormArray = this.detailForm.get('values') as FormArray | null;\n        if (valuesFormArray) {\n            valuesFormArray.insert(\n                valuesFormArray.length,\n                this.formBuilder.group({\n                    id: '',\n                    name: ['', Validators.required],\n                    code: '',\n                }),\n            );\n            this.values.push({ name: '', code: '' });\n        }\n    }\n\n    create() {\n        const facetForm = this.detailForm.get('facet');\n        if (!facetForm || !facetForm.dirty) {\n            return;\n        }\n        combineLatest(this.entity$, this.languageCode$)\n            .pipe(\n                take(1),\n                mergeMap(([facet, languageCode]) => {\n                    const newFacet = this.getUpdatedFacet(\n                        facet,\n                        facetForm as FormGroup,\n                        languageCode,\n                    ) as CreateFacetInput;\n                    return this.dataService.facet.createFacet(newFacet);\n                }),\n                switchMap(data => this.dataService.facet.getAllFacets().single$.pipe(mapTo(data))),\n            )\n            .subscribe(\n                data => {\n                    this.notificationService.success(_('common.notify-create-success'), { entity: 'Facet' });\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                    this.router.navigate(['../', data.createFacet.id], { relativeTo: this.route });\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-create-error'), {\n                        entity: 'Facet',\n                    });\n                },\n            );\n    }\n\n    save() {\n        combineLatest(this.entity$, this.languageCode$)\n            .pipe(\n                take(1),\n                mergeMap(([facet, languageCode]) => {\n                    const facetGroup = this.detailForm.get('facet');\n                    const updateOperations: Array<Observable<any>> = [];\n\n                    if (facetGroup && facetGroup.dirty) {\n                        const newFacet = this.getUpdatedFacet(\n                            facet,\n                            facetGroup as FormGroup,\n                            languageCode,\n                        ) as UpdateFacetInput;\n                        if (newFacet) {\n                            updateOperations.push(this.dataService.facet.updateFacet(newFacet));\n                        }\n                    }\n                    const valuesArray = this.detailForm.get('values');\n                    if (valuesArray && valuesArray.dirty) {\n                        const newValues: CreateFacetValueInput[] = (valuesArray as FormArray).controls\n                            .filter(c => !c.value.id)\n                            .map(c => ({\n                                facetId: facet.id,\n                                code: c.value.code,\n                                translations: [{ name: c.value.name, languageCode }],\n                            }));\n                        if (newValues.length) {\n                            updateOperations.push(\n                                this.dataService.facet\n                                    .createFacetValues(newValues)\n                                    .pipe(switchMap(() => this.dataService.facet.getFacet(this.id).single$)),\n                            );\n                        }\n                        const updatedValues = this.getUpdatedFacetValues(\n                            facet,\n                            valuesArray as FormArray,\n                            languageCode,\n                        );\n                        if (updatedValues.length) {\n                            updateOperations.push(this.dataService.facet.updateFacetValues(updatedValues));\n                        }\n                    }\n\n                    return forkJoin(updateOperations);\n                }),\n                switchMap(() => this.dataService.facet.getAllFacets().single$),\n            )\n            .subscribe(\n                () => {\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                    this.notificationService.success(_('common.notify-update-success'), { entity: 'Facet' });\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-update-error'), {\n                        entity: 'Facet',\n                    });\n                },\n            );\n    }\n\n    deleteFacetValue(facetValueId: string | undefined, index: number) {\n        if (!facetValueId) {\n            // deleting a newly-added (not persisted) FacetValue\n            const valuesFormArray = this.detailForm.get('values') as FormArray | null;\n            if (valuesFormArray) {\n                valuesFormArray.removeAt(index);\n            }\n            this.values.splice(index, 1);\n            return;\n        }\n        this.showModalAndDelete(facetValueId)\n            .pipe(\n                switchMap(response => {\n                    if (response.result === DeletionResult.DELETED) {\n                        return [true];\n                    } else {\n                        return this.showModalAndDelete(facetValueId, response.message || '').pipe(\n                            map(r => r.result === DeletionResult.DELETED),\n                        );\n                    }\n                }),\n                switchMap(deleted => (deleted ? this.dataService.facet.getFacet(this.id).single$ : [])),\n            )\n            .subscribe(\n                () => {\n                    this.notificationService.success(_('common.notify-delete-success'), {\n                        entity: 'FacetValue',\n                    });\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-delete-error'), {\n                        entity: 'FacetValue',\n                    });\n                },\n            );\n    }\n\n    private showModalAndDelete(facetValueId: string, message?: string) {\n        return this.modalService\n            .dialog({\n                title: _('catalog.confirm-delete-facet-value'),\n                body: message,\n                buttons: [\n                    { type: 'secondary', label: _('common.cancel') },\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\n                ],\n            })\n            .pipe(\n                switchMap(result =>\n                    result ? this.dataService.facet.deleteFacetValues([facetValueId], !!message) : EMPTY,\n                ),\n                map(result => result.deleteFacetValues[0]),\n            );\n    }\n\n    /**\n     * Sets the values of the form on changes to the facet or current language.\n     */\n    protected setFormValues(facet: FacetWithValues.Fragment, languageCode: LanguageCode) {\n        const currentTranslation = findTranslation(facet, languageCode);\n\n        this.detailForm.patchValue({\n            facet: {\n                code: facet.code,\n                visible: !facet.isPrivate,\n                name: currentTranslation?.name ?? '',\n            },\n        });\n\n        if (this.customFields.length) {\n            const customFieldsGroup = this.detailForm.get(['facet', 'customFields']) as FormGroup;\n\n            for (const fieldDef of this.customFields) {\n                const key = fieldDef.name;\n                const value =\n                    fieldDef.type === 'localeString'\n                        ? (currentTranslation as any).customFields[key]\n                        : (facet as any).customFields[key];\n                const control = customFieldsGroup.get(key);\n                if (control) {\n                    control.patchValue(value);\n                }\n            }\n        }\n\n        const currentValuesFormArray = this.detailForm.get('values') as FormArray;\n        this.values = [...facet.values];\n        facet.values.forEach((value, i) => {\n            const valueTranslation = findTranslation(value, languageCode);\n            const group = {\n                id: value.id,\n                code: value.code,\n                name: valueTranslation ? valueTranslation.name : '',\n            };\n            const valueControl = currentValuesFormArray.at(i);\n            if (valueControl) {\n                valueControl.setValue(group);\n            } else {\n                currentValuesFormArray.insert(i, this.formBuilder.group(group));\n            }\n            if (this.customValueFields.length) {\n                let customValueFieldsGroup = this.detailForm.get(['values', i, 'customFields']) as FormGroup;\n                if (!customValueFieldsGroup) {\n                    customValueFieldsGroup = new FormGroup({});\n                    (this.detailForm.get(['values', i]) as FormGroup).addControl(\n                        'customFields',\n                        customValueFieldsGroup,\n                    );\n                }\n\n                if (customValueFieldsGroup) {\n                    for (const fieldDef of this.customValueFields) {\n                        const key = fieldDef.name;\n                        const fieldValue =\n                            fieldDef.type === 'localeString'\n                                ? (valueTranslation as any).customFields[key]\n                                : (value as any).customFields[key];\n                        const control = customValueFieldsGroup.get(key);\n                        if (control) {\n                            control.setValue(fieldValue);\n                        } else {\n                            customValueFieldsGroup.addControl(key, new FormControl(fieldValue));\n                        }\n                    }\n                }\n            }\n        });\n    }\n\n    /**\n     * Given a facet and the value of the detailForm, this method creates an updated copy of the facet which\n     * can then be persisted to the API.\n     */\n    private getUpdatedFacet(\n        facet: FacetWithValues.Fragment,\n        facetFormGroup: FormGroup,\n        languageCode: LanguageCode,\n    ): CreateFacetInput | UpdateFacetInput {\n        const input = createUpdatedTranslatable({\n            translatable: facet,\n            updatedFields: facetFormGroup.value,\n            customFieldConfig: this.customFields,\n            languageCode,\n            defaultTranslation: {\n                languageCode,\n                name: facet.name || '',\n            },\n        });\n        input.isPrivate = !facetFormGroup.value.visible;\n        return input;\n    }\n\n    /**\n     * Given an array of facet values and the values from the detailForm, this method creates an new array\n     * which can be persisted to the API.\n     */\n    private getUpdatedFacetValues(\n        facet: FacetWithValues.Fragment,\n        valuesFormArray: FormArray,\n        languageCode: LanguageCode,\n    ): UpdateFacetValueInput[] {\n        const dirtyValues = facet.values.filter((v, i) => {\n            const formRow = valuesFormArray.get(i.toString());\n            return formRow && formRow.dirty && formRow.value.id;\n        });\n        const dirtyValueValues = valuesFormArray.controls\n            .filter(c => c.dirty && c.value.id)\n            .map(c => c.value);\n\n        if (dirtyValues.length !== dirtyValueValues.length) {\n            throw new Error(_(`error.facet-value-form-values-do-not-match`));\n        }\n        return dirtyValues\n            .map((value, i) => {\n                return createUpdatedTranslatable({\n                    translatable: value,\n                    updatedFields: dirtyValueValues[i],\n                    customFieldConfig: this.customValueFields,\n                    languageCode,\n                    defaultTranslation: {\n                        languageCode,\n                        name: '',\n                    },\n                });\n            })\n            .filter(notNullOrUndefined);\n    }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport { BaseListComponent } from '@vendure/admin-ui/core';\nimport { DeletionResult, GetFacetList } from '@vendure/admin-ui/core';\nimport { NotificationService } from '@vendure/admin-ui/core';\nimport { DataService } from '@vendure/admin-ui/core';\nimport { ModalService } from '@vendure/admin-ui/core';\nimport { EMPTY } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\n@Component({\n    selector: 'vdr-facet-list',\n    templateUrl: './facet-list.component.html',\n    styleUrls: ['./facet-list.component.scss'],\n})\nexport class FacetListComponent extends BaseListComponent<GetFacetList.Query, GetFacetList.Items> {\n    readonly initialLimit = 3;\n    displayLimit: { [id: string]: number } = {};\n    constructor(\n        private dataService: DataService,\n        private modalService: ModalService,\n        private notificationService: NotificationService,\n        router: Router,\n        route: ActivatedRoute,\n    ) {\n        super(router, route);\n        super.setQueryFn(\n            (...args: any[]) => this.dataService.facet.getFacets(...args).refetchOnChannelChange(),\n            data => data.facets,\n        );\n    }\n\n    toggleDisplayLimit(facet: GetFacetList.Items) {\n        if (this.displayLimit[facet.id] === facet.values.length) {\n            this.displayLimit[facet.id] = this.initialLimit;\n        } else {\n            this.displayLimit[facet.id] = facet.values.length;\n        }\n    }\n\n    deleteFacet(facetValueId: string) {\n        this.showModalAndDelete(facetValueId)\n            .pipe(\n                switchMap(response => {\n                    if (response.result === DeletionResult.DELETED) {\n                        return [true];\n                    } else {\n                        return this.showModalAndDelete(facetValueId, response.message || '').pipe(\n                            map(r => r.result === DeletionResult.DELETED),\n                        );\n                    }\n                }),\n                // Refresh the cached facets to reflect the changes\n                switchMap(() => this.dataService.facet.getAllFacets().single$),\n            )\n            .subscribe(\n                () => {\n                    this.notificationService.success(_('common.notify-delete-success'), {\n                        entity: 'FacetValue',\n                    });\n                    this.refresh();\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-delete-error'), {\n                        entity: 'FacetValue',\n                    });\n                },\n            );\n    }\n\n    private showModalAndDelete(facetId: string, message?: string) {\n        return this.modalService\n            .dialog({\n                title: _('catalog.confirm-delete-facet'),\n                body: message,\n                buttons: [\n                    { type: 'secondary', label: _('common.cancel') },\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\n                ],\n            })\n            .pipe(\n                switchMap(res => (res ? this.dataService.facet.deleteFacet(facetId, !!message) : EMPTY)),\n                map(res => res.deleteFacet),\n            );\n    }\n}\n","/**\n * @description\n * Like String.prototype.replace(), but replaces the last instance\n * rather than the first.\n */\nexport function replaceLast(target: string | undefined | null, search: string, replace: string): string {\n    if (!target) {\n        return '';\n    }\n    const lastIndex = target.lastIndexOf(search);\n    if (lastIndex === -1) {\n        return target;\n    }\n    const head = target.substr(0, lastIndex);\n    const tail = target.substr(lastIndex).replace(search, replace);\n    return head + tail;\n}\n","import { Injectable } from '@angular/core';\nimport {\n    CreateProductInput,\n    CreateProductVariantInput,\n    DataService,\n    DeletionResult,\n    FacetWithValues,\n    findTranslation,\n    LanguageCode,\n    ProductWithVariants,\n    UpdateProductInput,\n    UpdateProductMutation,\n    UpdateProductOptionInput,\n    UpdateProductVariantInput,\n    UpdateProductVariantsMutation,\n} from '@vendure/admin-ui/core';\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\nimport { forkJoin, Observable, of, throwError } from 'rxjs';\nimport { map, mergeMap, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { CreateProductVariantsConfig } from '../../components/generate-product-variants/generate-product-variants.component';\n\nimport { replaceLast } from './replace-last';\n\n/**\n * Handles the logic for making the API calls to perform CRUD operations on a Product and its related\n * entities. This logic was extracted out of the component because it became too large and hard to follow.\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class ProductDetailService {\n    constructor(private dataService: DataService) {}\n\n    getFacets(): Observable<FacetWithValues.Fragment[]> {\n        return this.dataService.facet.getAllFacets().mapSingle(data => data.facets.items);\n    }\n\n    getTaxCategories() {\n        return this.dataService.settings\n            .getTaxCategories()\n            .mapSingle(data => data.taxCategories)\n            .pipe(shareReplay(1));\n    }\n\n    createProductWithVariants(\n        input: CreateProductInput,\n        createVariantsConfig: CreateProductVariantsConfig,\n        languageCode: LanguageCode,\n    ) {\n        const createProduct$ = this.dataService.product.createProduct(input);\n        const nonEmptyOptionGroups = createVariantsConfig.groups.filter(g => 0 < g.values.length);\n        const createOptionGroups$ = this.createProductOptionGroups(nonEmptyOptionGroups, languageCode);\n\n        return forkJoin(createProduct$, createOptionGroups$).pipe(\n            mergeMap(([{ createProduct }, optionGroups]) => {\n                const addOptionsToProduct$ = optionGroups.length\n                    ? forkJoin(\n                          optionGroups.map(optionGroup => {\n                              return this.dataService.product.addOptionGroupToProduct({\n                                  productId: createProduct.id,\n                                  optionGroupId: optionGroup.id,\n                              });\n                          }),\n                      )\n                    : of([]);\n                return addOptionsToProduct$.pipe(\n                    map(() => {\n                        return { createProduct, optionGroups };\n                    }),\n                );\n            }),\n            mergeMap(({ createProduct, optionGroups }) => {\n                const variants = createVariantsConfig.variants.map(v => {\n                    const optionIds = optionGroups.length\n                        ? v.optionValues.map((optionName, index) => {\n                              const option = optionGroups[index].options.find(o => o.name === optionName);\n                              if (!option) {\n                                  throw new Error(\n                                      `Could not find a matching ProductOption \"${optionName}\" when creating variant`,\n                                  );\n                              }\n                              return option.id;\n                          })\n                        : [];\n                    return {\n                        ...v,\n                        optionIds,\n                    };\n                });\n                const options = optionGroups.map(og => og.options).reduce((flat, o) => [...flat, ...o], []);\n                return this.createProductVariants(createProduct, variants, options, languageCode);\n            }),\n        );\n    }\n\n    createProductOptionGroups(groups: Array<{ name: string; values: string[] }>, languageCode: LanguageCode) {\n        return groups.length\n            ? forkJoin(\n                  groups.map(c => {\n                      return this.dataService.product\n                          .createProductOptionGroups({\n                              code: normalizeString(c.name, '-'),\n                              translations: [{ languageCode, name: c.name }],\n                              options: c.values.map(v => ({\n                                  code: normalizeString(v, '-'),\n                                  translations: [{ languageCode, name: v }],\n                              })),\n                          })\n                          .pipe(map(data => data.createProductOptionGroup));\n                  }),\n              )\n            : of([]);\n    }\n\n    createProductVariants(\n        product: { name: string; id: string },\n        variantData: Array<{ price: number; sku: string; stock: number; optionIds: string[] }>,\n        options: Array<{ id: string; name: string }>,\n        languageCode: LanguageCode,\n    ) {\n        const variants: CreateProductVariantInput[] = variantData.map(v => {\n            const name = options.length\n                ? `${product.name} ${v.optionIds\n                      .map(id => options.find(o => o.id === id))\n                      .filter(notNullOrUndefined)\n                      .map(o => o.name)\n                      .join(' ')}`\n                : product.name;\n            return {\n                productId: product.id,\n                price: v.price,\n                sku: v.sku,\n                stockOnHand: v.stock,\n                translations: [\n                    {\n                        languageCode,\n                        name,\n                    },\n                ],\n                optionIds: v.optionIds,\n            };\n        });\n        return this.dataService.product.createProductVariants(variants).pipe(\n            map(({ createProductVariants }) => ({\n                createProductVariants,\n                productId: product.id,\n            })),\n        );\n    }\n\n    updateProduct(updateOptions: {\n        product: ProductWithVariants.Fragment;\n        languageCode: LanguageCode;\n        autoUpdate: boolean;\n        productInput?: UpdateProductInput;\n        variantsInput?: UpdateProductVariantInput[];\n    }) {\n        const { product, languageCode, autoUpdate, productInput, variantsInput } = updateOptions;\n        const updateOperations: Array<Observable<UpdateProductMutation | UpdateProductVariantsMutation>> = [];\n        const updateVariantsInput = variantsInput || [];\n        if (productInput) {\n            updateOperations.push(this.dataService.product.updateProduct(productInput));\n\n            const productOldName = findTranslation(product, languageCode)?.name;\n            const productNewName = findTranslation(productInput, languageCode)?.name;\n            if (productOldName && productNewName && autoUpdate) {\n                for (const variant of product.variants) {\n                    const currentVariantName = findTranslation(variant, languageCode)?.name || '';\n                    let variantInput: UpdateProductVariantInput;\n                    const existingVariantInput = updateVariantsInput.find(i => i.id === variant.id);\n                    if (existingVariantInput) {\n                        variantInput = existingVariantInput;\n                    } else {\n                        variantInput = {\n                            id: variant.id,\n                            translations: [{ languageCode, name: currentVariantName }],\n                        };\n                        updateVariantsInput.push(variantInput);\n                    }\n                    const variantTranslation = findTranslation(variantInput, languageCode);\n                    if (variantTranslation) {\n                        variantTranslation.name = replaceLast(\n                            variantTranslation.name,\n                            productOldName,\n                            productNewName,\n                        );\n                    }\n                }\n            }\n        }\n        if (updateVariantsInput.length) {\n            updateOperations.push(this.dataService.product.updateProductVariants(updateVariantsInput));\n        }\n        return forkJoin(updateOperations);\n    }\n\n    updateProductOption(\n        input: UpdateProductOptionInput & { autoUpdate: boolean },\n        product: ProductWithVariants.Fragment,\n        languageCode: LanguageCode,\n    ) {\n        let updateProductVariantNames$: Observable<any> = of([]);\n        if (input.autoUpdate) {\n            // Update any ProductVariants' names which include the option name\n            let oldOptionName: string | undefined;\n            const newOptionName = findTranslation(input, languageCode)?.name;\n            if (!newOptionName) {\n                updateProductVariantNames$ = of([]);\n            }\n            const variantsToUpdate: UpdateProductVariantInput[] = [];\n            for (const variant of product.variants) {\n                if (variant.options.map(o => o.id).includes(input.id)) {\n                    if (!oldOptionName) {\n                        oldOptionName = findTranslation(\n                            variant.options.find(o => o.id === input.id),\n                            languageCode,\n                        )?.name;\n                    }\n                    const variantName = findTranslation(variant, languageCode)?.name || '';\n                    if (oldOptionName && newOptionName && variantName.includes(oldOptionName)) {\n                        variantsToUpdate.push({\n                            id: variant.id,\n                            translations: [\n                                {\n                                    languageCode,\n                                    name: replaceLast(variantName, oldOptionName, newOptionName),\n                                },\n                            ],\n                        });\n                    }\n                }\n            }\n            if (variantsToUpdate.length) {\n                updateProductVariantNames$ = this.dataService.product.updateProductVariants(variantsToUpdate);\n            }\n        }\n        return this.dataService.product\n            .updateProductOption(input)\n            .pipe(mergeMap(() => updateProductVariantNames$));\n    }\n\n    deleteProductVariant(id: string, productId: string) {\n        return this.dataService.product.deleteProductVariant(id).pipe(\n            switchMap(result => {\n                if (result.deleteProductVariant.result === DeletionResult.DELETED) {\n                    return this.dataService.product.getProduct(productId).single$;\n                } else {\n                    return throwError(result.deleteProductVariant.message);\n                }\n            }),\n        );\n    }\n}\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ViewChild,\n} from '@angular/core';\nimport { Dialog, FacetValue, FacetValueSelectorComponent, FacetWithValues } from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-apply-facet-dialog',\n    templateUrl: './apply-facet-dialog.component.html',\n    styleUrls: ['./apply-facet-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ApplyFacetDialogComponent implements Dialog<FacetValue[]>, AfterViewInit {\n    @ViewChild(FacetValueSelectorComponent) private selector: FacetValueSelectorComponent;\n    resolveWith: (result?: FacetValue[]) => void;\n    selectedValues: FacetValue[] = [];\n    // Provided by caller\n    facets: FacetWithValues.Fragment[];\n\n    constructor(private changeDetector: ChangeDetectorRef) {}\n\n    ngAfterViewInit() {\n        setTimeout(() => this.selector.focus(), 0);\n    }\n\n    selectValues() {\n        this.resolveWith(this.selectedValues);\n    }\n\n    cancel() {\n        this.resolveWith();\n    }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport { GetChannels, ProductVariantFragment } from '@vendure/admin-ui/core';\nimport { NotificationService } from '@vendure/admin-ui/core';\nimport { DataService } from '@vendure/admin-ui/core';\nimport { Dialog } from '@vendure/admin-ui/core';\nimport { combineLatest, from, Observable } from 'rxjs';\nimport { map, startWith, switchMap } from 'rxjs/operators';\n\n@Component({\n    selector: 'vdr-assign-products-to-channel-dialog',\n    templateUrl: './assign-products-to-channel-dialog.component.html',\n    styleUrls: ['./assign-products-to-channel-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AssignProductsToChannelDialogComponent implements OnInit, Dialog<any> {\n    selectedChannel: GetChannels.Channels | null | undefined;\n    currentChannel: GetChannels.Channels;\n    availableChannels: GetChannels.Channels[];\n    resolveWith: (result?: any) => void;\n    variantsPreview$: Observable<Array<{ id: string; name: string; price: number; pricePreview: number }>>;\n    priceFactorControl = new FormControl(1);\n    selectedChannelIdControl = new FormControl();\n\n    // assigned by ModalService.fromComponent() call\n    productIds: string[];\n    productVariantIds: string[] | undefined;\n    currentChannelIds: string[];\n\n    get isProductVariantMode(): boolean {\n        return this.productVariantIds != null;\n    }\n\n    constructor(private dataService: DataService, private notificationService: NotificationService) {}\n\n    ngOnInit() {\n        const activeChannelId$ = this.dataService.client\n            .userStatus()\n            .mapSingle(({ userStatus }) => userStatus.activeChannelId);\n        const allChannels$ = this.dataService.settings.getChannels().mapSingle(data => data.channels);\n\n        combineLatest(activeChannelId$, allChannels$).subscribe(([activeChannelId, channels]) => {\n            // tslint:disable-next-line:no-non-null-assertion\n            this.currentChannel = channels.find(c => c.id === activeChannelId)!;\n            this.availableChannels = channels;\n        });\n\n        this.selectedChannelIdControl.valueChanges.subscribe(ids => {\n            this.selectChannel(ids);\n        });\n\n        this.variantsPreview$ = combineLatest(\n            from(this.getTopVariants(10)),\n            this.priceFactorControl.valueChanges.pipe(startWith(1)),\n        ).pipe(\n            map(([variants, factor]) => {\n                return variants.map(v => ({\n                    id: v.id,\n                    name: v.name,\n                    price: v.price,\n                    pricePreview: v.price * +factor,\n                }));\n            }),\n        );\n    }\n\n    selectChannel(channelIds: string[]) {\n        this.selectedChannel = this.availableChannels.find(c => c.id === channelIds[0]);\n    }\n\n    assign() {\n        const selectedChannel = this.selectedChannel;\n        if (selectedChannel) {\n            if (!this.isProductVariantMode) {\n                this.dataService.product\n                    .assignProductsToChannel({\n                        channelId: selectedChannel.id,\n                        productIds: this.productIds,\n                        priceFactor: +this.priceFactorControl.value,\n                    })\n                    .subscribe(() => {\n                        this.notificationService.success(_('catalog.assign-product-to-channel-success'), {\n                            channel: selectedChannel.code,\n                        });\n                        this.resolveWith(true);\n                    });\n            } else if (this.productVariantIds) {\n                this.dataService.product\n                    .assignVariantsToChannel({\n                        channelId: selectedChannel.id,\n                        productVariantIds: this.productVariantIds,\n                        priceFactor: +this.priceFactorControl.value,\n                    })\n                    .subscribe(() => {\n                        this.notificationService.success(_('catalog.assign-variant-to-channel-success'), {\n                            channel: selectedChannel.code,\n                        });\n                        this.resolveWith(true);\n                    });\n            }\n        }\n    }\n\n    cancel() {\n        this.resolveWith();\n    }\n\n    private async getTopVariants(take: number): Promise<ProductVariantFragment[]> {\n        const variants: ProductVariantFragment[] = [];\n\n        for (let i = 0; i < this.productIds.length && variants.length < take; i++) {\n            const productVariants = await this.dataService.product\n                .getProduct(this.productIds[i])\n                .mapSingle(({ product }) => {\n                    const _variants = product ? product.variants : [];\n                    return _variants.filter(v =>\n                        this.isProductVariantMode ? this.productVariantIds?.includes(v.id) : true,\n                    );\n                })\n                .toPromise();\n            variants.push(...(productVariants || []));\n        }\n        return variants.slice(0, take);\n    }\n}\n","import { Location } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    Asset,\n    BaseDetailComponent,\n    CreateProductInput,\n    createUpdatedTranslatable,\n    CustomFieldConfig,\n    DataService,\n    FacetWithValues,\n    findTranslation,\n    flattenFacetValues,\n    GlobalFlag,\n    LanguageCode,\n    ModalService,\n    NotificationService,\n    ProductWithVariants,\n    ServerConfigService,\n    TaxCategory,\n    UpdateProductInput,\n    UpdateProductMutation,\n    UpdateProductOptionInput,\n    UpdateProductVariantInput,\n    UpdateProductVariantsMutation,\n} from '@vendure/admin-ui/core';\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\nimport { DEFAULT_CHANNEL_CODE } from '@vendure/common/lib/shared-constants';\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\nimport { unique } from '@vendure/common/lib/unique';\nimport { combineLatest, EMPTY, merge, Observable } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    mergeMap,\n    shareReplay,\n    startWith,\n    switchMap,\n    take,\n    takeUntil,\n    withLatestFrom,\n} from 'rxjs/operators';\n\nimport { ProductDetailService } from '../../providers/product-detail/product-detail.service';\nimport { ApplyFacetDialogComponent } from '../apply-facet-dialog/apply-facet-dialog.component';\nimport { AssignProductsToChannelDialogComponent } from '../assign-products-to-channel-dialog/assign-products-to-channel-dialog.component';\nimport { CreateProductVariantsConfig } from '../generate-product-variants/generate-product-variants.component';\nimport { VariantAssetChange } from '../product-variants-list/product-variants-list.component';\n\nexport type TabName = 'details' | 'variants';\nexport interface VariantFormValue {\n    id: string;\n    enabled: boolean;\n    sku: string;\n    name: string;\n    price: number;\n    priceWithTax: number;\n    taxCategoryId: string;\n    stockOnHand: number;\n    useGlobalOutOfStockThreshold: boolean;\n    outOfStockThreshold: number;\n    trackInventory: GlobalFlag;\n    facetValueIds: string[];\n    customFields?: any;\n}\n\nexport interface SelectedAssets {\n    assets?: Asset[];\n    featuredAsset?: Asset;\n}\n\n@Component({\n    selector: 'vdr-product-detail',\n    templateUrl: './product-detail.component.html',\n    styleUrls: ['./product-detail.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductDetailComponent\n    extends BaseDetailComponent<ProductWithVariants.Fragment>\n    implements OnInit, OnDestroy {\n    activeTab$: Observable<TabName>;\n    product$: Observable<ProductWithVariants.Fragment>;\n    variants$: Observable<ProductWithVariants.Variants[]>;\n    taxCategories$: Observable<TaxCategory.Fragment[]>;\n    customFields: CustomFieldConfig[];\n    customVariantFields: CustomFieldConfig[];\n    customOptionGroupFields: CustomFieldConfig[];\n    customOptionFields: CustomFieldConfig[];\n    detailForm: FormGroup;\n    filterInput = new FormControl('');\n    assetChanges: SelectedAssets = {};\n    variantAssetChanges: { [variantId: string]: SelectedAssets } = {};\n    productChannels$: Observable<ProductWithVariants.Channels[]>;\n    facetValues$: Observable<ProductWithVariants.FacetValues[]>;\n    facets$: Observable<FacetWithValues.Fragment[]>;\n    selectedVariantIds: string[] = [];\n    variantDisplayMode: 'card' | 'table' = 'card';\n    createVariantsConfig: CreateProductVariantsConfig = { groups: [], variants: [] };\n    channelPriceIncludesTax$: Observable<boolean>;\n\n    constructor(\n        route: ActivatedRoute,\n        router: Router,\n        serverConfigService: ServerConfigService,\n        private productDetailService: ProductDetailService,\n        private formBuilder: FormBuilder,\n        private modalService: ModalService,\n        private notificationService: NotificationService,\n        protected dataService: DataService,\n        private location: Location,\n        private changeDetector: ChangeDetectorRef,\n    ) {\n        super(route, router, serverConfigService, dataService);\n        this.customFields = this.getCustomFieldConfig('Product');\n        this.customVariantFields = this.getCustomFieldConfig('ProductVariant');\n        this.customOptionGroupFields = this.getCustomFieldConfig('ProductOptionGroup');\n        this.customOptionFields = this.getCustomFieldConfig('ProductOption');\n        this.detailForm = this.formBuilder.group({\n            product: this.formBuilder.group({\n                enabled: true,\n                name: ['', Validators.required],\n                autoUpdateVariantNames: true,\n                slug: '',\n                description: '',\n                facetValueIds: [[]],\n                customFields: this.formBuilder.group(\n                    this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\n                ),\n            }),\n            variants: this.formBuilder.array([]),\n        });\n    }\n\n    ngOnInit() {\n        this.init();\n        this.product$ = this.entity$;\n        const variants$ = this.product$.pipe(map(product => product.variants));\n        const filterTerm$ = this.filterInput.valueChanges.pipe(\n            startWith(''),\n            debounceTime(50),\n            shareReplay(),\n        );\n        this.variants$ = combineLatest(variants$, filterTerm$).pipe(\n            map(([variants, term]) => {\n                return term\n                    ? variants.filter(v => {\n                          const lcTerm = term.toLocaleLowerCase();\n                          return (\n                              v.name.toLocaleLowerCase().includes(term) ||\n                              v.sku.toLocaleLowerCase().includes(term)\n                          );\n                      })\n                    : variants;\n            }),\n        );\n        this.taxCategories$ = this.productDetailService.getTaxCategories().pipe(takeUntil(this.destroy$));\n        this.activeTab$ = this.route.paramMap.pipe(map(qpm => qpm.get('tab') as any));\n\n        // FacetValues are provided initially by the nested array of the\n        // Product entity, but once a fetch to get all Facets is made (as when\n        // opening the FacetValue selector modal), then these additional values\n        // are concatenated onto the initial array.\n        this.facets$ = this.productDetailService.getFacets();\n        const productFacetValues$ = this.product$.pipe(map(product => product.facetValues));\n        const allFacetValues$ = this.facets$.pipe(map(flattenFacetValues));\n        const productGroup = this.getProductFormGroup();\n\n        const formFacetValueIdChanges$ = productGroup.valueChanges.pipe(\n            map(val => val.facetValueIds as string[]),\n            distinctUntilChanged(),\n        );\n        const formChangeFacetValues$ = combineLatest(\n            formFacetValueIdChanges$,\n            productFacetValues$,\n            allFacetValues$,\n        ).pipe(\n            map(([ids, productFacetValues, allFacetValues]) => {\n                const combined = [...productFacetValues, ...allFacetValues];\n                return ids.map(id => combined.find(fv => fv.id === id)).filter(notNullOrUndefined);\n            }),\n        );\n\n        this.facetValues$ = merge(productFacetValues$, formChangeFacetValues$);\n        this.productChannels$ = this.product$.pipe(map(p => p.channels));\n        this.channelPriceIncludesTax$ = this.dataService.settings\n            .getActiveChannel('cache-first')\n            .refetchOnChannelChange()\n            .mapStream(data => data.activeChannel.pricesIncludeTax)\n            .pipe(shareReplay(1));\n    }\n\n    ngOnDestroy() {\n        this.destroy();\n    }\n\n    navigateToTab(tabName: TabName) {\n        this.location.replaceState(\n            this.router\n                .createUrlTree(['./', { ...this.route.snapshot.params, tab: tabName }], {\n                    queryParamsHandling: 'merge',\n                    relativeTo: this.route,\n                })\n                .toString(),\n        );\n    }\n\n    isDefaultChannel(channelCode: string): boolean {\n        return channelCode === DEFAULT_CHANNEL_CODE;\n    }\n\n    assignToChannel() {\n        this.productChannels$\n            .pipe(\n                take(1),\n                switchMap(channels => {\n                    return this.modalService.fromComponent(AssignProductsToChannelDialogComponent, {\n                        size: 'lg',\n                        locals: {\n                            productIds: [this.id],\n                            currentChannelIds: channels.map(c => c.id),\n                        },\n                    });\n                }),\n            )\n            .subscribe();\n    }\n\n    removeFromChannel(channelId: string) {\n        this.modalService\n            .dialog({\n                title: _('catalog.remove-product-from-channel'),\n                buttons: [\n                    { type: 'secondary', label: _('common.cancel') },\n                    { type: 'danger', label: _('catalog.remove-from-channel'), returnValue: true },\n                ],\n            })\n            .pipe(\n                switchMap(response =>\n                    response\n                        ? this.dataService.product.removeProductsFromChannel({\n                              channelId,\n                              productIds: [this.id],\n                          })\n                        : EMPTY,\n                ),\n            )\n            .subscribe(\n                () => {\n                    this.notificationService.success(_('catalog.notify-remove-product-from-channel-success'));\n                },\n                err => {\n                    this.notificationService.error(_('catalog.notify-remove-product-from-channel-error'));\n                },\n            );\n    }\n\n    assignVariantToChannel(variant: ProductWithVariants.Variants) {\n        return this.modalService\n            .fromComponent(AssignProductsToChannelDialogComponent, {\n                size: 'lg',\n                locals: {\n                    productIds: [this.id],\n                    productVariantIds: [variant.id],\n                    currentChannelIds: variant.channels.map(c => c.id),\n                },\n            })\n            .subscribe();\n    }\n\n    removeVariantFromChannel({\n        channelId,\n        variant,\n    }: {\n        channelId: string;\n        variant: ProductWithVariants.Variants;\n    }) {\n        this.modalService\n            .dialog({\n                title: _('catalog.remove-product-variant-from-channel'),\n                buttons: [\n                    { type: 'secondary', label: _('common.cancel') },\n                    { type: 'danger', label: _('catalog.remove-from-channel'), returnValue: true },\n                ],\n            })\n            .pipe(\n                switchMap(response =>\n                    response\n                        ? this.dataService.product.removeVariantsFromChannel({\n                              channelId,\n                              productVariantIds: [variant.id],\n                          })\n                        : EMPTY,\n                ),\n            )\n            .subscribe(\n                () => {\n                    this.notificationService.success(_('catalog.notify-remove-variant-from-channel-success'));\n                },\n                err => {\n                    this.notificationService.error(_('catalog.notify-remove-variant-from-channel-error'));\n                },\n            );\n    }\n\n    customFieldIsSet(name: string): boolean {\n        return !!this.detailForm.get(['product', 'customFields', name]);\n    }\n\n    assetsChanged(): boolean {\n        return !!Object.values(this.assetChanges).length;\n    }\n\n    variantAssetsChanged(): boolean {\n        return !!Object.keys(this.variantAssetChanges).length;\n    }\n\n    variantAssetChange(event: VariantAssetChange) {\n        this.variantAssetChanges[event.variantId] = event;\n    }\n\n    /**\n     * If creating a new product, automatically generate the slug based on the product name.\n     */\n    updateSlug(nameValue: string) {\n        combineLatest(this.entity$, this.languageCode$)\n            .pipe(take(1))\n            .subscribe(([entity, languageCode]) => {\n                const slugControl = this.detailForm.get(['product', 'slug']);\n                const currentTranslation = findTranslation(entity, languageCode);\n                const currentSlugIsEmpty = !currentTranslation || !currentTranslation.slug;\n                if (slugControl && slugControl.pristine && currentSlugIsEmpty) {\n                    slugControl.setValue(normalizeString(`${nameValue}`, '-'));\n                }\n            });\n    }\n\n    selectProductFacetValue() {\n        this.displayFacetValueModal().subscribe(facetValueIds => {\n            if (facetValueIds) {\n                const productGroup = this.getProductFormGroup();\n                const currentFacetValueIds = productGroup.value.facetValueIds;\n                productGroup.patchValue({\n                    facetValueIds: unique([...currentFacetValueIds, ...facetValueIds]),\n                });\n                productGroup.markAsDirty();\n            }\n        });\n    }\n\n    updateProductOption(input: UpdateProductOptionInput & { autoUpdate: boolean }) {\n        combineLatest(this.product$, this.languageCode$)\n            .pipe(\n                take(1),\n                mergeMap(([product, languageCode]) =>\n                    this.productDetailService.updateProductOption(input, product, languageCode),\n                ),\n            )\n            .subscribe(\n                () => {\n                    this.notificationService.success(_('common.notify-update-success'), {\n                        entity: 'ProductOption',\n                    });\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-update-error'), {\n                        entity: 'ProductOption',\n                    });\n                },\n            );\n    }\n\n    removeProductFacetValue(facetValueId: string) {\n        const productGroup = this.getProductFormGroup();\n        const currentFacetValueIds = productGroup.value.facetValueIds;\n        productGroup.patchValue({\n            facetValueIds: currentFacetValueIds.filter(id => id !== facetValueId),\n        });\n        productGroup.markAsDirty();\n    }\n\n    /**\n     * Opens a dialog to select FacetValues to apply to the select ProductVariants.\n     */\n    selectVariantFacetValue(selectedVariantIds: string[]) {\n        this.displayFacetValueModal()\n            .pipe(withLatestFrom(this.variants$))\n            .subscribe(([facetValueIds, variants]) => {\n                if (facetValueIds) {\n                    for (const variantId of selectedVariantIds) {\n                        const index = variants.findIndex(v => v.id === variantId);\n                        const variant = variants[index];\n                        const existingFacetValueIds = variant ? variant.facetValues.map(fv => fv.id) : [];\n                        const variantFormGroup = this.detailForm.get(['variants', index]);\n                        if (variantFormGroup) {\n                            variantFormGroup.patchValue({\n                                facetValueIds: unique([...existingFacetValueIds, ...facetValueIds]),\n                            });\n                            variantFormGroup.markAsDirty();\n                        }\n                    }\n                    this.changeDetector.markForCheck();\n                }\n            });\n    }\n\n    variantsToCreateAreValid(): boolean {\n        return (\n            0 < this.createVariantsConfig.variants.length &&\n            this.createVariantsConfig.variants.every(v => {\n                return v.sku !== '';\n            })\n        );\n    }\n\n    private displayFacetValueModal(): Observable<string[] | undefined> {\n        return this.productDetailService.getFacets().pipe(\n            mergeMap(facets =>\n                this.modalService.fromComponent(ApplyFacetDialogComponent, {\n                    size: 'md',\n                    closable: true,\n                    locals: { facets },\n                }),\n            ),\n            map(facetValues => facetValues && facetValues.map(v => v.id)),\n        );\n    }\n\n    create() {\n        const productGroup = this.getProductFormGroup();\n        if (!productGroup.dirty) {\n            return;\n        }\n        combineLatest(this.product$, this.languageCode$)\n            .pipe(\n                take(1),\n                mergeMap(([product, languageCode]) => {\n                    const newProduct = this.getUpdatedProduct(\n                        product,\n                        productGroup as FormGroup,\n                        languageCode,\n                    ) as CreateProductInput;\n                    return this.productDetailService.createProductWithVariants(\n                        newProduct,\n                        this.createVariantsConfig,\n                        languageCode,\n                    );\n                }),\n            )\n            .subscribe(\n                ({ createProductVariants, productId }) => {\n                    this.notificationService.success(_('common.notify-create-success'), {\n                        entity: 'Product',\n                    });\n                    this.assetChanges = {};\n                    this.variantAssetChanges = {};\n                    this.detailForm.markAsPristine();\n                    this.router.navigate(['../', productId], { relativeTo: this.route });\n                },\n                err => {\n                    // tslint:disable-next-line:no-console\n                    console.error(err);\n                    this.notificationService.error(_('common.notify-create-error'), {\n                        entity: 'Product',\n                    });\n                },\n            );\n    }\n\n    save() {\n        combineLatest(this.product$, this.languageCode$, this.channelPriceIncludesTax$)\n            .pipe(\n                take(1),\n                mergeMap(([product, languageCode, priceIncludesTax]) => {\n                    const productGroup = this.getProductFormGroup();\n                    let productInput: UpdateProductInput | undefined;\n                    let variantsInput: UpdateProductVariantInput[] | undefined;\n\n                    if (productGroup.dirty || this.assetsChanged()) {\n                        productInput = this.getUpdatedProduct(\n                            product,\n                            productGroup as FormGroup,\n                            languageCode,\n                        ) as UpdateProductInput;\n                    }\n                    const variantsArray = this.detailForm.get('variants');\n                    if ((variantsArray && variantsArray.dirty) || this.variantAssetsChanged()) {\n                        variantsInput = this.getUpdatedProductVariants(\n                            product,\n                            variantsArray as FormArray,\n                            languageCode,\n                            priceIncludesTax,\n                        );\n                    }\n\n                    return this.productDetailService.updateProduct({\n                        product,\n                        languageCode,\n                        autoUpdate:\n                            this.detailForm.get(['product', 'autoUpdateVariantNames'])?.value ?? false,\n                        productInput,\n                        variantsInput,\n                    });\n                }),\n            )\n            .subscribe(\n                result => {\n                    this.updateSlugAfterSave(result);\n                    this.detailForm.markAsPristine();\n                    this.assetChanges = {};\n                    this.variantAssetChanges = {};\n                    this.notificationService.success(_('common.notify-update-success'), {\n                        entity: 'Product',\n                    });\n                    this.changeDetector.markForCheck();\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-update-error'), {\n                        entity: 'Product',\n                    });\n                },\n            );\n    }\n\n    canDeactivate(): boolean {\n        return super.canDeactivate() && !this.assetChanges.assets && !this.assetChanges.featuredAsset;\n    }\n\n    /**\n     * Sets the values of the form on changes to the product or current language.\n     */\n    protected setFormValues(product: ProductWithVariants.Fragment, languageCode: LanguageCode) {\n        const currentTranslation = findTranslation(product, languageCode);\n        this.detailForm.patchValue({\n            product: {\n                enabled: product.enabled,\n                name: currentTranslation ? currentTranslation.name : '',\n                slug: currentTranslation ? currentTranslation.slug : '',\n                description: currentTranslation ? currentTranslation.description : '',\n                facetValueIds: product.facetValues.map(fv => fv.id),\n            },\n        });\n\n        if (this.customFields.length) {\n            const customFieldsGroup = this.detailForm.get(['product', 'customFields']) as FormGroup;\n            const cfCurrentTranslation =\n                (currentTranslation && (currentTranslation as any).customFields) || {};\n            const cfProduct = (product as any).customFields || {};\n\n            for (const fieldDef of this.customFields) {\n                const key = fieldDef.name;\n                const value = fieldDef.type === 'localeString' ? cfCurrentTranslation[key] : cfProduct[key];\n                const control = customFieldsGroup.get(key);\n                if (control) {\n                    control.patchValue(value);\n                }\n            }\n        }\n\n        const variantsFormArray = this.detailForm.get('variants') as FormArray;\n        product.variants.forEach((variant, i) => {\n            const variantTranslation = findTranslation(variant, languageCode);\n            const facetValueIds = variant.facetValues.map(fv => fv.id);\n            const group: VariantFormValue = {\n                id: variant.id,\n                enabled: variant.enabled,\n                sku: variant.sku,\n                name: variantTranslation ? variantTranslation.name : '',\n                price: variant.price,\n                priceWithTax: variant.priceWithTax,\n                taxCategoryId: variant.taxCategory.id,\n                stockOnHand: variant.stockOnHand,\n                useGlobalOutOfStockThreshold: variant.useGlobalOutOfStockThreshold,\n                outOfStockThreshold: variant.outOfStockThreshold,\n                trackInventory: variant.trackInventory,\n                facetValueIds,\n            };\n\n            let variantFormGroup = variantsFormArray.at(i) as FormGroup | undefined;\n            if (variantFormGroup) {\n                variantFormGroup.patchValue(group);\n            } else {\n                variantFormGroup = this.formBuilder.group({\n                    ...group,\n                    facetValueIds: this.formBuilder.control(facetValueIds),\n                });\n                variantsFormArray.insert(i, variantFormGroup);\n            }\n            if (this.customVariantFields.length) {\n                let customFieldsGroup = variantFormGroup.get(['customFields']) as FormGroup | undefined;\n\n                if (!customFieldsGroup) {\n                    customFieldsGroup = this.formBuilder.group(\n                        this.customVariantFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\n                    );\n                    variantFormGroup.addControl('customFields', customFieldsGroup);\n                }\n\n                for (const fieldDef of this.customVariantFields) {\n                    const key = fieldDef.name;\n                    const value =\n                        fieldDef.type === 'localeString'\n                            ? (variantTranslation as any).customFields[key]\n                            : (variant as any).customFields[key];\n                    const control = customFieldsGroup.get(key);\n                    if (control) {\n                        control.patchValue(value);\n                    }\n                }\n            }\n        });\n    }\n\n    /**\n     * Given a product and the value of the detailForm, this method creates an updated copy of the product which\n     * can then be persisted to the API.\n     */\n    private getUpdatedProduct(\n        product: ProductWithVariants.Fragment,\n        productFormGroup: FormGroup,\n        languageCode: LanguageCode,\n    ): UpdateProductInput | CreateProductInput {\n        const updatedProduct = createUpdatedTranslatable({\n            translatable: product,\n            updatedFields: productFormGroup.value,\n            customFieldConfig: this.customFields,\n            languageCode,\n            defaultTranslation: {\n                languageCode,\n                name: product.name || '',\n                slug: product.slug || '',\n                description: product.description || '',\n            },\n        });\n        return {\n            ...updatedProduct,\n            assetIds: this.assetChanges.assets?.map(a => a.id),\n            featuredAssetId: this.assetChanges.featuredAsset?.id,\n            facetValueIds: productFormGroup.value.facetValueIds,\n        } as UpdateProductInput | CreateProductInput;\n    }\n\n    /**\n     * Given an array of product variants and the values from the detailForm, this method creates an new array\n     * which can be persisted to the API.\n     */\n    private getUpdatedProductVariants(\n        product: ProductWithVariants.Fragment,\n        variantsFormArray: FormArray,\n        languageCode: LanguageCode,\n        priceIncludesTax: boolean,\n    ): UpdateProductVariantInput[] {\n        const dirtyVariants = product.variants.filter((v, i) => {\n            const formRow = variantsFormArray.get(i.toString());\n            return formRow && formRow.dirty;\n        });\n        const dirtyVariantValues = variantsFormArray.controls.filter(c => c.dirty).map(c => c.value);\n\n        if (dirtyVariants.length !== dirtyVariantValues.length) {\n            throw new Error(_(`error.product-variant-form-values-do-not-match`));\n        }\n        return dirtyVariants\n            .map((variant, i) => {\n                const formValue: VariantFormValue = dirtyVariantValues[i];\n                const result: UpdateProductVariantInput = createUpdatedTranslatable({\n                    translatable: variant,\n                    updatedFields: formValue,\n                    customFieldConfig: this.customVariantFields,\n                    languageCode,\n                    defaultTranslation: {\n                        languageCode,\n                        name: '',\n                    },\n                });\n                result.taxCategoryId = formValue.taxCategoryId;\n                result.facetValueIds = formValue.facetValueIds;\n                result.price = priceIncludesTax ? formValue.priceWithTax : formValue.price;\n                const assetChanges = this.variantAssetChanges[variant.id];\n                if (assetChanges) {\n                    result.featuredAssetId = assetChanges.featuredAsset?.id;\n                    result.assetIds = assetChanges.assets?.map(a => a.id);\n                }\n                return result;\n            })\n            .filter(notNullOrUndefined);\n    }\n\n    private getProductFormGroup(): FormGroup {\n        return this.detailForm.get('product') as FormGroup;\n    }\n\n    /**\n     * The server may alter the slug value in order to normalize and ensure uniqueness upon saving.\n     */\n    private updateSlugAfterSave(results: Array<UpdateProductMutation | UpdateProductVariantsMutation>) {\n        const firstResult = results[0];\n        const slugControl = this.detailForm.get(['product', 'slug']);\n\n        function isUpdateMutation(input: any): input is UpdateProductMutation {\n            return input.hasOwnProperty('updateProduct');\n        }\n\n        if (slugControl && isUpdateMutation(firstResult)) {\n            slugControl.setValue(firstResult.updateProduct.slug, { emitEvent: false });\n        }\n    }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { NgSelectComponent, SELECTION_MODEL_FACTORY } from '@ng-select/ng-select';\nimport { SearchProducts, SingleSearchSelectionModelFactory } from '@vendure/admin-ui/core';\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\n\n@Component({\n    selector: 'vdr-product-search-input',\n    templateUrl: './product-search-input.component.html',\n    styleUrls: ['./product-search-input.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: SELECTION_MODEL_FACTORY, useValue: SingleSearchSelectionModelFactory }],\n})\nexport class ProductSearchInputComponent {\n    @Input() facetValueResults: SearchProducts.FacetValues[];\n    @Output() searchTermChange = new EventEmitter<string>();\n    @Output() facetValueChange = new EventEmitter<string[]>();\n    @ViewChild('selectComponent', { static: true }) private selectComponent: NgSelectComponent;\n    private lastTerm = '';\n    private lastFacetValueIds: string[] = [];\n\n    setSearchTerm(term: string | null) {\n        if (term) {\n            this.selectComponent.select({ label: term, value: { label: term } });\n        } else {\n            const currentTerm = this.selectComponent.selectedItems.find(i => !this.isFacetValueItem(i.value));\n            if (currentTerm) {\n                this.selectComponent.unselect(currentTerm);\n            }\n        }\n    }\n\n    setFacetValues(ids: string[]) {\n        const items = this.selectComponent.items;\n\n        this.selectComponent.selectedItems.forEach(item => {\n            if (this.isFacetValueItem(item.value) && !ids.includes(item.value.facetValue.id)) {\n                this.selectComponent.unselect(item);\n            }\n        });\n\n        ids.map(id => {\n            return items.find(item => this.isFacetValueItem(item) && item.facetValue.id === id);\n        })\n            .filter(notNullOrUndefined)\n            .forEach(item => {\n                const isSelected = this.selectComponent.selectedItems.find(i => {\n                    const val = i.value;\n                    if (this.isFacetValueItem(val)) {\n                        return val.facetValue.id === item.facetValue.id;\n                    }\n                    return false;\n                });\n                if (!isSelected) {\n                    this.selectComponent.select({ label: '', value: item });\n                }\n            });\n    }\n\n    filterFacetResults = (term: string, item: SearchProducts.FacetValues | { label: string }) => {\n        if (!this.isFacetValueItem(item)) {\n            return false;\n        }\n        return (\n            item.facetValue.name.toLowerCase().startsWith(term.toLowerCase()) ||\n            item.facetValue.facet.name.toLowerCase().startsWith(term.toLowerCase())\n        );\n    };\n\n    onSelectChange(selectedItems: Array<SearchProducts.FacetValues | { label: string }>) {\n        if (!Array.isArray(selectedItems)) {\n            selectedItems = [selectedItems];\n        }\n        const searchTermItem = selectedItems.find(item => !this.isFacetValueItem(item)) as\n            | { label: string }\n            | undefined;\n        const searchTerm = searchTermItem ? searchTermItem.label : '';\n\n        const facetValueIds = selectedItems.filter(this.isFacetValueItem).map(i => i.facetValue.id);\n\n        if (searchTerm !== this.lastTerm) {\n            this.searchTermChange.emit(searchTerm);\n            this.lastTerm = searchTerm;\n        }\n        if (this.lastFacetValueIds.join(',') !== facetValueIds.join(',')) {\n            this.facetValueChange.emit(facetValueIds);\n            this.lastFacetValueIds = facetValueIds;\n        }\n    }\n\n    addTagFn(item: any) {\n        return { label: item };\n    }\n\n    isSearchHeaderSelected(): boolean {\n        return this.selectComponent.itemsList.markedIndex === -1;\n    }\n\n    private isFacetValueItem = (input: unknown): input is SearchProducts.FacetValues => {\n        return typeof input === 'object' && !!input && input.hasOwnProperty('facetValue');\n    };\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    BaseListComponent,\n    DataService,\n    JobQueueService,\n    JobState,\n    LogicalOperator,\n    ModalService,\n    NotificationService,\n    SearchInput,\n    SearchProducts,\n} from '@vendure/admin-ui/core';\nimport { EMPTY, Observable } from 'rxjs';\nimport { delay, map, switchMap, take, takeUntil, withLatestFrom } from 'rxjs/operators';\n\nimport { ProductSearchInputComponent } from '../product-search-input/product-search-input.component';\n\n@Component({\n    selector: 'vdr-products-list',\n    templateUrl: './product-list.component.html',\n    styleUrls: ['./product-list.component.scss'],\n})\nexport class ProductListComponent\n    extends BaseListComponent<SearchProducts.Query, SearchProducts.Items, SearchProducts.Variables>\n    implements OnInit {\n    searchTerm = '';\n    facetValueIds: string[] = [];\n    groupByProduct = true;\n    facetValues$: Observable<SearchProducts.FacetValues[]>;\n    @ViewChild('productSearchInputComponent', { static: true })\n    private productSearchInput: ProductSearchInputComponent;\n    constructor(\n        private dataService: DataService,\n        private modalService: ModalService,\n        private notificationService: NotificationService,\n        private jobQueueService: JobQueueService,\n        router: Router,\n        route: ActivatedRoute,\n    ) {\n        super(router, route);\n        super.setQueryFn(\n            (...args: any[]) =>\n                this.dataService.product.searchProducts(this.searchTerm, ...args).refetchOnChannelChange(),\n            data => data.search,\n            // tslint:disable-next-line:no-shadowed-variable\n            (skip, take) => ({\n                input: {\n                    skip,\n                    take,\n                    term: this.searchTerm,\n                    facetValueIds: this.facetValueIds,\n                    facetValueOperator: LogicalOperator.AND,\n                    groupByProduct: this.groupByProduct,\n                } as SearchInput,\n            }),\n        );\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n        this.facetValues$ = this.result$.pipe(map(data => data.search.facetValues));\n        // this.facetValues$ = of([]);\n        this.route.queryParamMap\n            .pipe(\n                map(qpm => qpm.get('q')),\n                takeUntil(this.destroy$),\n            )\n            .subscribe(term => {\n                this.productSearchInput.setSearchTerm(term);\n            });\n\n        const fvids$ = this.route.queryParamMap.pipe(map(qpm => qpm.getAll('fvids')));\n\n        fvids$.pipe(takeUntil(this.destroy$)).subscribe(ids => {\n            this.productSearchInput.setFacetValues(ids);\n        });\n\n        this.facetValues$.pipe(take(1), delay(100), withLatestFrom(fvids$)).subscribe(([__, ids]) => {\n            this.productSearchInput.setFacetValues(ids);\n        });\n    }\n\n    setSearchTerm(term: string) {\n        this.searchTerm = term;\n        this.setQueryParam({ q: term || null, page: 1 });\n        this.refresh();\n    }\n\n    setFacetValueIds(ids: string[]) {\n        this.facetValueIds = ids;\n        this.setQueryParam({ fvids: ids, page: 1 });\n        this.refresh();\n    }\n\n    rebuildSearchIndex() {\n        this.dataService.product.reindex().subscribe(({ reindex }) => {\n            this.notificationService.info(_('catalog.reindexing'));\n            this.jobQueueService.addJob(reindex.id, job => {\n                if (job.state === JobState.COMPLETED) {\n                    const time = new Intl.NumberFormat().format(job.duration || 0);\n                    this.notificationService.success(_('catalog.reindex-successful'), {\n                        count: job.result.indexedItemCount,\n                        time,\n                    });\n                    this.refresh();\n                } else {\n                    this.notificationService.error(_('catalog.reindex-error'));\n                }\n            });\n        });\n    }\n\n    deleteProduct(productId: string) {\n        this.modalService\n            .dialog({\n                title: _('catalog.confirm-delete-product'),\n                buttons: [\n                    { type: 'secondary', label: _('common.cancel') },\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\n                ],\n            })\n            .pipe(\n                switchMap(response => (response ? this.dataService.product.deleteProduct(productId) : EMPTY)),\n                // Short delay to allow the product to be removed from the search index before\n                // refreshing.\n                delay(500),\n            )\n            .subscribe(\n                () => {\n                    this.notificationService.success(_('common.notify-delete-success'), {\n                        entity: 'Product',\n                    });\n                    this.refresh();\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-delete-error'), {\n                        entity: 'Product',\n                    });\n                },\n            );\n    }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    CreateProductOptionGroup,\n    CreateProductOptionInput,\n    CurrencyCode,\n    DataService,\n    DeactivateAware,\n    getDefaultUiLanguage,\n    GetProductVariantOptions,\n    LanguageCode,\n    ModalService,\n    NotificationService,\n    ProductOptionGroupWithOptionsFragment,\n} from '@vendure/admin-ui/core';\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\nimport { pick } from '@vendure/common/lib/pick';\nimport { generateAllCombinations, notNullOrUndefined } from '@vendure/common/lib/shared-utils';\nimport { EMPTY, forkJoin, Observable, of } from 'rxjs';\nimport { filter, map, mergeMap, switchMap } from 'rxjs/operators';\n\nimport { ProductDetailService } from '../../providers/product-detail/product-detail.service';\n\nexport class GeneratedVariant {\n    isDefault: boolean;\n    options: Array<{ name: string; id?: string }>;\n    productVariantId?: string;\n    enabled: boolean;\n    existing: boolean;\n    sku: string;\n    price: number;\n    stock: number;\n\n    constructor(config: Partial<GeneratedVariant>) {\n        for (const key of Object.keys(config)) {\n            this[key] = config[key];\n        }\n    }\n}\n\n@Component({\n    selector: 'vdr-product-variants-editor',\n    templateUrl: './product-variants-editor.component.html',\n    styleUrls: ['./product-variants-editor.component.scss'],\n    changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class ProductVariantsEditorComponent implements OnInit, DeactivateAware {\n    formValueChanged = false;\n    generatedVariants: GeneratedVariant[] = [];\n    optionGroups: Array<{\n        id?: string;\n        isNew: boolean;\n        name: string;\n        values: Array<{\n            id?: string;\n            name: string;\n            locked: boolean;\n        }>;\n    }>;\n    product: GetProductVariantOptions.Product;\n    currencyCode: CurrencyCode;\n    private languageCode: LanguageCode;\n\n    constructor(\n        private route: ActivatedRoute,\n        private dataService: DataService,\n        private productDetailService: ProductDetailService,\n        private notificationService: NotificationService,\n        private modalService: ModalService,\n    ) {}\n\n    ngOnInit() {\n        this.initOptionsAndVariants();\n        this.languageCode =\n            (this.route.snapshot.paramMap.get('lang') as LanguageCode) || getDefaultUiLanguage();\n        this.dataService.settings.getActiveChannel().single$.subscribe(data => {\n            this.currencyCode = data.activeChannel.currencyCode;\n        });\n    }\n\n    onFormChanged(variantInfo: GeneratedVariant) {\n        this.formValueChanged = true;\n        variantInfo.enabled = true;\n    }\n\n    canDeactivate(): boolean {\n        return !this.formValueChanged;\n    }\n\n    getVariantsToAdd() {\n        return this.generatedVariants.filter(v => !v.existing && v.enabled);\n    }\n\n    getVariantName(variant: GeneratedVariant) {\n        return variant.options.length === 0\n            ? _('catalog.default-variant')\n            : variant.options.map(o => o.name).join(' ');\n    }\n\n    addOption() {\n        this.optionGroups.push({\n            isNew: true,\n            name: '',\n            values: [],\n        });\n    }\n\n    generateVariants() {\n        const groups = this.optionGroups.map(g => g.values);\n        const previousVariants = this.generatedVariants;\n        const generatedVariantFactory = (\n            isDefault: boolean,\n            options: GeneratedVariant['options'],\n            existingVariant?: GetProductVariantOptions.Variants,\n        ): GeneratedVariant => {\n            const prototype = this.getVariantPrototype(options, previousVariants);\n            return new GeneratedVariant({\n                enabled: false,\n                existing: !!existingVariant,\n                productVariantId: existingVariant?.id,\n                isDefault,\n                options,\n                price: existingVariant?.price ?? prototype.price,\n                sku: existingVariant?.sku ?? prototype.sku,\n                stock: existingVariant?.stockOnHand ?? prototype.stock,\n            });\n        };\n        this.generatedVariants = groups.length\n            ? generateAllCombinations(groups).map(options => {\n                  const existingVariant = this.product.variants.find(v =>\n                      this.optionsAreEqual(v.options, options),\n                  );\n                  return generatedVariantFactory(false, options, existingVariant);\n              })\n            : [generatedVariantFactory(true, [], this.product.variants[0])];\n    }\n\n    /**\n     * Returns one of the existing variants to base the newly-generated variant's\n     * details off.\n     */\n    private getVariantPrototype(\n        options: GeneratedVariant['options'],\n        previousVariants: GeneratedVariant[],\n    ): Pick<GeneratedVariant, 'sku' | 'price' | 'stock'> {\n        const variantsWithSimilarOptions = previousVariants.filter(v =>\n            options.map(o => o.name).filter(name => v.options.map(o => o.name).includes(name)),\n        );\n        if (variantsWithSimilarOptions.length) {\n            return pick(previousVariants[0], ['sku', 'price', 'stock']);\n        }\n        return {\n            sku: '',\n            price: 0,\n            stock: 0,\n        };\n    }\n\n    deleteVariant(id: string) {\n        this.modalService\n            .dialog({\n                title: _('catalog.confirm-delete-product-variant'),\n                buttons: [\n                    { type: 'secondary', label: _('common.cancel') },\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\n                ],\n            })\n            .pipe(\n                switchMap(response =>\n                    response ? this.productDetailService.deleteProductVariant(id, this.product.id) : EMPTY,\n                ),\n                switchMap(() => this.reFetchProduct(null)),\n            )\n            .subscribe(\n                () => {\n                    this.notificationService.success(_('common.notify-delete-success'), {\n                        entity: 'ProductVariant',\n                    });\n                    this.initOptionsAndVariants();\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-delete-error'), {\n                        entity: 'ProductVariant',\n                    });\n                },\n            );\n    }\n\n    save() {\n        const newOptionGroups = this.optionGroups\n            .filter(og => og.isNew)\n            .map(og => ({\n                name: og.name,\n                values: [],\n            }));\n\n        this.confirmDeletionOfDefault()\n            .pipe(\n                mergeMap(() =>\n                    this.productDetailService.createProductOptionGroups(newOptionGroups, this.languageCode),\n                ),\n                mergeMap(createdOptionGroups => this.addOptionGroupsToProduct(createdOptionGroups)),\n                mergeMap(createdOptionGroups => this.addNewOptionsToGroups(createdOptionGroups)),\n                mergeMap(groupsIds => this.fetchOptionGroups(groupsIds)),\n                mergeMap(groups => this.createNewProductVariants(groups)),\n                mergeMap(res => this.deleteDefaultVariant(res.createProductVariants)),\n                mergeMap(variants => this.reFetchProduct(variants)),\n            )\n            .subscribe({\n                next: variants => {\n                    this.formValueChanged = false;\n                    this.notificationService.success(_('catalog.created-new-variants-success'), {\n                        count: variants.length,\n                    });\n                    this.initOptionsAndVariants();\n                },\n            });\n    }\n\n    private confirmDeletionOfDefault(): Observable<boolean> {\n        if (this.hasOnlyDefaultVariant(this.product)) {\n            return this.modalService\n                .dialog({\n                    title: _('catalog.confirm-adding-options-delete-default-title'),\n                    body: _('catalog.confirm-adding-options-delete-default-body'),\n                    buttons: [\n                        { type: 'secondary', label: _('common.cancel') },\n                        { type: 'danger', label: _('catalog.delete-default-variant'), returnValue: true },\n                    ],\n                })\n                .pipe(\n                    mergeMap(res => {\n                        return res === true ? of(true) : EMPTY;\n                    }),\n                );\n        } else {\n            return of(true);\n        }\n    }\n\n    private hasOnlyDefaultVariant(product: GetProductVariantOptions.Product): boolean {\n        return product.variants.length === 1 && product.optionGroups.length === 0;\n    }\n\n    private addOptionGroupsToProduct(\n        createdOptionGroups: CreateProductOptionGroup.CreateProductOptionGroup[],\n    ): Observable<CreateProductOptionGroup.CreateProductOptionGroup[]> {\n        if (createdOptionGroups.length) {\n            return forkJoin(\n                createdOptionGroups.map(optionGroup => {\n                    return this.dataService.product.addOptionGroupToProduct({\n                        productId: this.product.id,\n                        optionGroupId: optionGroup.id,\n                    });\n                }),\n            ).pipe(map(() => createdOptionGroups));\n        } else {\n            return of([]);\n        }\n    }\n\n    private addNewOptionsToGroups(\n        createdOptionGroups: CreateProductOptionGroup.CreateProductOptionGroup[],\n    ): Observable<string[]> {\n        const newOptions: CreateProductOptionInput[] = this.optionGroups\n            .map(og => {\n                const createdGroup = createdOptionGroups.find(cog => cog.name === og.name);\n                const productOptionGroupId = createdGroup ? createdGroup.id : og.id;\n                if (!productOptionGroupId) {\n                    throw new Error('Could not get a productOptionGroupId');\n                }\n                return og.values\n                    .filter(v => !v.locked)\n                    .map(v => ({\n                        productOptionGroupId,\n                        code: normalizeString(v.name, '-'),\n                        translations: [{ name: v.name, languageCode: this.languageCode }],\n                    }));\n            })\n            .reduce((flat, options) => [...flat, ...options], []);\n\n        const allGroupIds = [\n            ...createdOptionGroups.map(g => g.id),\n            ...this.optionGroups.map(g => g.id).filter(notNullOrUndefined),\n        ];\n\n        if (newOptions.length) {\n            return forkJoin(newOptions.map(input => this.dataService.product.addOptionToGroup(input))).pipe(\n                map(() => allGroupIds),\n            );\n        } else {\n            return of(allGroupIds);\n        }\n    }\n\n    private fetchOptionGroups(groupsIds: string[]): Observable<ProductOptionGroupWithOptionsFragment[]> {\n        return forkJoin(\n            groupsIds.map(id =>\n                this.dataService.product\n                    .getProductOptionGroup(id)\n                    .mapSingle(data => data.productOptionGroup)\n                    .pipe(filter(notNullOrUndefined)),\n            ),\n        );\n    }\n\n    private createNewProductVariants(groups: ProductOptionGroupWithOptionsFragment[]) {\n        const options = groups\n            .filter(notNullOrUndefined)\n            .map(og => og.options)\n            .reduce((flat, o) => [...flat, ...o], []);\n        const variants = this.generatedVariants\n            .filter(v => v.enabled && !v.existing)\n            .map(v => ({\n                price: v.price,\n                sku: v.sku,\n                stock: v.stock,\n                optionIds: v.options\n                    .map(name => options.find(o => o.name === name.name))\n                    .filter(notNullOrUndefined)\n                    .map(o => o.id),\n            }));\n        return this.productDetailService.createProductVariants(\n            this.product,\n            variants,\n            options,\n            this.languageCode,\n        );\n    }\n\n    private deleteDefaultVariant<T>(input: T): Observable<T> {\n        if (this.hasOnlyDefaultVariant(this.product)) {\n            // If the default single product variant has been replaced by multiple variants,\n            // delete the original default variant.\n            return this.dataService.product\n                .deleteProductVariant(this.product.variants[0].id)\n                .pipe(map(() => input));\n        } else {\n            return of(input);\n        }\n    }\n\n    private reFetchProduct<T>(input: T): Observable<T> {\n        // Re-fetch the Product to force an update to the view.\n        const id = this.route.snapshot.paramMap.get('id');\n        if (id) {\n            return this.dataService.product.getProduct(id).single$.pipe(map(() => input));\n        } else {\n            return of(input);\n        }\n    }\n\n    initOptionsAndVariants() {\n        this.dataService.product\n            // tslint:disable-next-line:no-non-null-assertion\n            .getProductVariantsOptions(this.route.snapshot.paramMap.get('id')!)\n            // tslint:disable-next-line:no-non-null-assertion\n            .mapSingle(({ product }) => product!)\n            .subscribe(p => {\n                this.product = p;\n                this.optionGroups = p.optionGroups.map(og => {\n                    return {\n                        id: og.id,\n                        isNew: false,\n                        name: og.name,\n                        values: og.options.map(o => ({\n                            id: o.id,\n                            name: o.name,\n                            locked: true,\n                        })),\n                    };\n                });\n                this.generateVariants();\n            });\n    }\n\n    private optionsAreEqual(a: Array<{ name: string }>, b: Array<{ name: string }>): boolean {\n        function toOptionString(o: Array<{ name: string }>) {\n            return o\n                .map(x => x.name)\n                .sort()\n                .join('|');\n        }\n\n        return toOptionString(a) === toOptionString(b);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Asset, AssetType, BaseEntityResolver } from '@vendure/admin-ui/core';\nimport { DataService } from '@vendure/admin-ui/core';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetResolver extends BaseEntityResolver<Asset.Fragment> {\n    constructor(router: Router, dataService: DataService) {\n        super(\n            router,\n            {\n                __typename: 'Asset' as const,\n                id: '',\n                createdAt: '',\n                updatedAt: '',\n                name: '',\n                type: AssetType.IMAGE,\n                fileSize: 0,\n                mimeType: '',\n                width: 0,\n                height: 0,\n                source: '',\n                preview: '',\n                focalPoint: null,\n            },\n            id => dataService.product.getAsset(id).mapStream(data => data.asset),\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BaseEntityResolver } from '@vendure/admin-ui/core';\nimport { Collection, ProductWithVariants } from '@vendure/admin-ui/core';\nimport { getDefaultUiLanguage } from '@vendure/admin-ui/core';\nimport { DataService } from '@vendure/admin-ui/core';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CollectionResolver extends BaseEntityResolver<Collection.Fragment> {\n    constructor(router: Router, dataService: DataService) {\n        super(\n            router,\n            {\n                __typename: 'Collection' as 'Collection',\n                id: '',\n                createdAt: '',\n                updatedAt: '',\n                languageCode: getDefaultUiLanguage(),\n                name: '',\n                slug: '',\n                isPrivate: false,\n                description: '',\n                featuredAsset: null,\n                assets: [],\n                translations: [],\n                filters: [],\n                parent: {} as any,\n                children: null,\n            },\n            id => dataService.collection.getCollection(id).mapStream(data => data.collection),\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BaseEntityResolver } from '@vendure/admin-ui/core';\nimport { FacetWithValues } from '@vendure/admin-ui/core';\nimport { getDefaultUiLanguage } from '@vendure/admin-ui/core';\nimport { DataService } from '@vendure/admin-ui/core';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FacetResolver extends BaseEntityResolver<FacetWithValues.Fragment> {\n    constructor(router: Router, dataService: DataService) {\n        super(\n            router,\n            {\n                __typename: 'Facet' as 'Facet',\n                id: '',\n                createdAt: '',\n                updatedAt: '',\n                isPrivate: false,\n                languageCode: getDefaultUiLanguage(),\n                name: '',\n                code: '',\n                translations: [],\n                values: [],\n            },\n            (id) => dataService.facet.getFacet(id).mapStream((data) => data.facet),\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BaseEntityResolver } from '@vendure/admin-ui/core';\nimport { ProductWithVariants } from '@vendure/admin-ui/core';\nimport { getDefaultUiLanguage } from '@vendure/admin-ui/core';\nimport { DataService } from '@vendure/admin-ui/core';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ProductResolver extends BaseEntityResolver<ProductWithVariants.Fragment> {\n    constructor(dataService: DataService, router: Router) {\n        super(\n            router,\n            {\n                __typename: 'Product' as 'Product',\n                id: '',\n                createdAt: '',\n                updatedAt: '',\n                enabled: true,\n                languageCode: getDefaultUiLanguage(),\n                name: '',\n                slug: '',\n                featuredAsset: null,\n                assets: [],\n                description: '',\n                translations: [],\n                optionGroups: [],\n                facetValues: [],\n                variants: [],\n                channels: [],\n            },\n            (id) =>\n                dataService.product\n                    .getProduct(id)\n                    .refetchOnChannelChange()\n                    .mapStream((data) => data.product),\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BaseEntityResolver } from '@vendure/admin-ui/core';\nimport { GetProductVariantOptions } from '@vendure/admin-ui/core';\nimport { DataService } from '@vendure/admin-ui/core';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ProductVariantsResolver extends BaseEntityResolver<GetProductVariantOptions.Product> {\n    constructor(router: Router, dataService: DataService) {\n        super(\n            router,\n            {\n                __typename: 'Product' as 'Product',\n                id: '',\n                createdAt: '',\n                updatedAt: '',\n                name: '',\n                optionGroups: [],\n                variants: [],\n            },\n            id => dataService.product.getProductVariantsOptions(id).mapStream(data => data.product),\n        );\n    }\n}\n","import { Route } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    Asset,\n    CanDeactivateDetailGuard,\n    Collection,\n    createResolveData,\n    detailBreadcrumb,\n    FacetWithValues,\n    ProductWithVariants,\n} from '@vendure/admin-ui/core';\nimport { map } from 'rxjs/operators';\n\nimport { AssetDetailComponent } from './components/asset-detail/asset-detail.component';\nimport { AssetListComponent } from './components/asset-list/asset-list.component';\nimport { CollectionDetailComponent } from './components/collection-detail/collection-detail.component';\nimport { CollectionListComponent } from './components/collection-list/collection-list.component';\nimport { FacetDetailComponent } from './components/facet-detail/facet-detail.component';\nimport { FacetListComponent } from './components/facet-list/facet-list.component';\nimport { ProductDetailComponent } from './components/product-detail/product-detail.component';\nimport { ProductListComponent } from './components/product-list/product-list.component';\nimport { ProductVariantsEditorComponent } from './components/product-variants-editor/product-variants-editor.component';\nimport { AssetResolver } from './providers/routing/asset-resolver';\nimport { CollectionResolver } from './providers/routing/collection-resolver';\nimport { FacetResolver } from './providers/routing/facet-resolver';\nimport { ProductResolver } from './providers/routing/product-resolver';\nimport { ProductVariantsResolver } from './providers/routing/product-variants-resolver';\n\nexport const catalogRoutes: Route[] = [\n    {\n        path: 'products',\n        component: ProductListComponent,\n        data: {\n            breadcrumb: _('breadcrumb.products'),\n        },\n    },\n    {\n        path: 'products/:id',\n        component: ProductDetailComponent,\n        resolve: createResolveData(ProductResolver),\n        canDeactivate: [CanDeactivateDetailGuard],\n        data: {\n            breadcrumb: productBreadcrumb,\n        },\n    },\n    {\n        path: 'products/:id/manage-variants',\n        component: ProductVariantsEditorComponent,\n        resolve: createResolveData(ProductVariantsResolver),\n        canDeactivate: [CanDeactivateDetailGuard],\n        data: {\n            breadcrumb: productVariantEditorBreadcrumb,\n        },\n    },\n    {\n        path: 'facets',\n        component: FacetListComponent,\n        data: {\n            breadcrumb: _('breadcrumb.facets'),\n        },\n    },\n    {\n        path: 'facets/:id',\n        component: FacetDetailComponent,\n        resolve: createResolveData(FacetResolver),\n        canDeactivate: [CanDeactivateDetailGuard],\n        data: {\n            breadcrumb: facetBreadcrumb,\n        },\n    },\n    {\n        path: 'collections',\n        component: CollectionListComponent,\n        data: {\n            breadcrumb: _('breadcrumb.collections'),\n        },\n    },\n    {\n        path: 'collections/:id',\n        component: CollectionDetailComponent,\n        resolve: createResolveData(CollectionResolver),\n        canDeactivate: [CanDeactivateDetailGuard],\n        data: {\n            breadcrumb: collectionBreadcrumb,\n        },\n    },\n    {\n        path: 'assets',\n        component: AssetListComponent,\n        data: {\n            breadcrumb: _('breadcrumb.assets'),\n        },\n    },\n    {\n        path: 'assets/:id',\n        component: AssetDetailComponent,\n        resolve: createResolveData(AssetResolver),\n        data: {\n            breadcrumb: assetBreadcrumb,\n        },\n    },\n];\n\nexport function productBreadcrumb(data: any, params: any) {\n    return detailBreadcrumb<ProductWithVariants.Fragment>({\n        entity: data.entity,\n        id: params.id,\n        breadcrumbKey: 'breadcrumb.products',\n        getName: product => product.name,\n        route: 'products',\n    });\n}\n\nexport function productVariantEditorBreadcrumb(data: any, params: any) {\n    return data.entity.pipe(\n        map((entity: any) => {\n            return [\n                {\n                    label: _('breadcrumb.products'),\n                    link: ['../', 'products'],\n                },\n                {\n                    label: `${entity.name}`,\n                    link: ['../', 'products', params.id, { tab: 'variants' }],\n                },\n                {\n                    label: _('breadcrumb.manage-variants'),\n                    link: ['manage-variants'],\n                },\n            ];\n        }),\n    );\n}\n\nexport function facetBreadcrumb(data: any, params: any) {\n    return detailBreadcrumb<FacetWithValues.Fragment>({\n        entity: data.entity,\n        id: params.id,\n        breadcrumbKey: 'breadcrumb.facets',\n        getName: facet => facet.name,\n        route: 'facets',\n    });\n}\n\nexport function collectionBreadcrumb(data: any, params: any) {\n    return detailBreadcrumb<Collection.Fragment>({\n        entity: data.entity,\n        id: params.id,\n        breadcrumbKey: 'breadcrumb.collections',\n        getName: collection => collection.name,\n        route: 'collections',\n    });\n}\n\nexport function assetBreadcrumb(data: any, params: any) {\n    return detailBreadcrumb<Asset.Fragment>({\n        entity: data.entity,\n        id: params.id,\n        breadcrumbKey: 'breadcrumb.assets',\n        getName: asset => asset.name,\n        route: 'assets',\n    });\n}\n","export type HasParent = { id: string; parent?: { id: string } | null };\nexport type TreeNode<T extends HasParent> = T & { children: Array<TreeNode<T>>; expanded: boolean };\nexport type RootNode<T extends HasParent> = { id?: string; children: Array<TreeNode<T>> };\n\n/**\n * Builds a tree from an array of nodes which have a parent.\n * Based on https://stackoverflow.com/a/31247960/772859, modified to preserve ordering.\n */\nexport function arrayToTree<T extends HasParent>(nodes: T[], currentState?: RootNode<T>): RootNode<T> {\n    const topLevelNodes: Array<TreeNode<T>> = [];\n    const mappedArr: { [id: string]: TreeNode<T> } = {};\n    const currentStateMap = treeToMap(currentState);\n\n    // First map the nodes of the array to an object -> create a hash table.\n    for (const node of nodes) {\n        mappedArr[node.id] = { ...(node as any), children: [] };\n    }\n\n    for (const id of nodes.map(n => n.id)) {\n        if (mappedArr.hasOwnProperty(id)) {\n            const mappedElem = mappedArr[id];\n            mappedElem.expanded = currentStateMap.get(id)?.expanded ?? false;\n            const parent = mappedElem.parent;\n            if (!parent) {\n                continue;\n            }\n            // If the element is not at the root level, add it to its parent array of children.\n            const parentIsRoot = !mappedArr[parent.id];\n            if (!parentIsRoot) {\n                if (mappedArr[parent.id]) {\n                    mappedArr[parent.id].children.push(mappedElem);\n                } else {\n                    mappedArr[parent.id] = { children: [mappedElem] } as any;\n                }\n            } else {\n                topLevelNodes.push(mappedElem);\n            }\n        }\n    }\n    // tslint:disable-next-line:no-non-null-assertion\n    const rootId = topLevelNodes.length ? topLevelNodes[0].parent!.id : undefined;\n    return { id: rootId, children: topLevelNodes };\n}\n\n/**\n * Converts an existing tree (as generated by the arrayToTree function) into a flat\n * Map. This is used to persist certain states (e.g. `expanded`) when re-building the\n * tree.\n */\nfunction treeToMap<T extends HasParent>(tree?: RootNode<T>): Map<string, TreeNode<T>> {\n    const nodeMap = new Map<string, TreeNode<T>>();\n    function visit(node: TreeNode<T>) {\n        nodeMap.set(node.id, node);\n        node.children.forEach(visit);\n    }\n    if (tree) {\n        visit(tree as TreeNode<T>);\n    }\n    return nodeMap;\n}\n","import { CdkDragDrop } from '@angular/cdk/drag-drop';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { Collection } from '@vendure/admin-ui/core';\n\nimport { arrayToTree, HasParent, RootNode } from './array-to-tree';\n\nexport type RearrangeEvent = { collectionId: string; parentId: string; index: number };\nexport type CollectionPartial = Pick<Collection.Fragment, 'id' | 'parent' | 'name'>;\n\n@Component({\n    selector: 'vdr-collection-tree',\n    templateUrl: 'collection-tree.component.html',\n    styleUrls: ['./collection-tree.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CollectionTreeComponent implements OnChanges {\n    @Input() collections: CollectionPartial[];\n    @Input() activeCollectionId: string;\n    @Input() expandAll = false;\n    @Output() rearrange = new EventEmitter<RearrangeEvent>();\n    @Output() deleteCollection = new EventEmitter<string>();\n    collectionTree: RootNode<CollectionPartial>;\n\n    ngOnChanges(changes: SimpleChanges) {\n        if ('collections' in changes && this.collections) {\n            this.collectionTree = arrayToTree(this.collections, this.collectionTree);\n        }\n    }\n\n    onDrop(event: CdkDragDrop<CollectionPartial | RootNode<CollectionPartial>>) {\n        const item = event.item.data as CollectionPartial;\n        const newParent = event.container.data;\n        const newParentId = newParent.id;\n        if (newParentId == null) {\n            throw new Error(`Could not determine the ID of the root Collection`);\n        }\n        this.rearrange.emit({\n            collectionId: item.id,\n            parentId: newParentId,\n            index: event.currentIndex,\n        });\n    }\n\n    onMove(event: RearrangeEvent) {\n        this.rearrange.emit(event);\n    }\n\n    onDelete(id: string) {\n        this.deleteCollection.emit(id);\n    }\n\n    private isRootNode<T extends HasParent>(node: T | RootNode<T>): node is RootNode<T> {\n        return !node.hasOwnProperty('parent');\n    }\n}\n","import { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    Input,\n    OnChanges,\n    OnInit,\n    Optional,\n    SimpleChanges,\n    SkipSelf,\n} from '@angular/core';\nimport { DataService, Permission } from '@vendure/admin-ui/core';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\nimport { RootNode, TreeNode } from './array-to-tree';\nimport { CollectionPartial, CollectionTreeComponent } from './collection-tree.component';\n\n@Component({\n    selector: 'vdr-collection-tree-node',\n    templateUrl: './collection-tree-node.component.html',\n    styleUrls: ['./collection-tree-node.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CollectionTreeNodeComponent implements OnInit, OnChanges {\n    depth = 0;\n    parentName: string;\n    @Input() collectionTree: TreeNode<CollectionPartial>;\n    @Input() activeCollectionId: string;\n    @Input() expandAll = false;\n    hasUpdatePermission$: Observable<boolean>;\n    hasDeletePermission$: Observable<boolean>;\n\n    constructor(\n        @SkipSelf() @Optional() private parent: CollectionTreeNodeComponent,\n        private root: CollectionTreeComponent,\n        private dataService: DataService,\n    ) {\n        if (parent) {\n            this.depth = parent.depth + 1;\n        }\n    }\n\n    ngOnInit() {\n        this.parentName = this.collectionTree.name || '<root>';\n        const permissions$ = this.dataService.client\n            .userStatus()\n            .mapStream(data => data.userStatus.permissions)\n            .pipe(shareReplay(1));\n        this.hasUpdatePermission$ = permissions$.pipe(\n            map(\n                perms =>\n                    perms.includes(Permission.UpdateCatalog) || perms.includes(Permission.UpdateCollection),\n            ),\n        );\n        this.hasDeletePermission$ = permissions$.pipe(\n            map(\n                perms =>\n                    perms.includes(Permission.DeleteCatalog) || perms.includes(Permission.DeleteCollection),\n            ),\n        );\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const expandAllChange = changes['expandAll'];\n        if (expandAllChange) {\n            if (expandAllChange.previousValue === true && expandAllChange.currentValue === false) {\n                this.collectionTree.children.forEach(c => (c.expanded = false));\n            }\n        }\n    }\n\n    trackByFn(index: number, item: CollectionPartial) {\n        return item.id;\n    }\n\n    getMoveListItems(collection: CollectionPartial): Array<{ path: string; id: string }> {\n        const visit = (\n            node: TreeNode<any>,\n            parentPath: string[],\n            output: Array<{ path: string; id: string }>,\n        ) => {\n            if (node.id !== collection.id) {\n                const path = parentPath.concat(node.name);\n                const parentId = collection.parent && collection.parent.id;\n                if (node.id !== parentId) {\n                    output.push({ path: path.slice(1).join(' / ') || 'root', id: node.id });\n                }\n                node.children.forEach(child => visit(child, path, output));\n            }\n            return output;\n        };\n        return visit(this.root.collectionTree, [], []);\n    }\n\n    move(collection: CollectionPartial, parentId: string) {\n        this.root.onMove({\n            index: 0,\n            parentId,\n            collectionId: collection.id,\n        });\n    }\n\n    moveUp(collection: CollectionPartial, currentIndex: number) {\n        if (!collection.parent) {\n            return;\n        }\n        this.root.onMove({\n            index: currentIndex - 1,\n            parentId: collection.parent.id,\n            collectionId: collection.id,\n        });\n    }\n\n    moveDown(collection: CollectionPartial, currentIndex: number) {\n        if (!collection.parent) {\n            return;\n        }\n        this.root.onMove({\n            index: currentIndex + 1,\n            parentId: collection.parent.id,\n            collectionId: collection.id,\n        });\n    }\n\n    drop(event: CdkDragDrop<CollectionPartial | RootNode<CollectionPartial>>) {\n        moveItemInArray(this.collectionTree.children, event.previousIndex, event.currentIndex);\n        this.root.onDrop(event);\n    }\n\n    delete(id: string) {\n        this.root.onDelete(id);\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { generateAllCombinations } from '@vendure/common/lib/shared-utils';\n\nimport { CurrencyCode } from '@vendure/admin-ui/core';\nimport { DataService } from '@vendure/admin-ui/core';\nimport { OptionValueInputComponent } from '../option-value-input/option-value-input.component';\n\nconst DEFAULT_VARIANT_CODE = '__DEFAULT_VARIANT__';\nexport type CreateVariantValues = {\n    optionValues: string[];\n    enabled: boolean;\n    sku: string;\n    price: number;\n    stock: number;\n};\nexport type CreateProductVariantsConfig = {\n    groups: Array<{ name: string; values: string[] }>;\n    variants: CreateVariantValues[];\n};\n\n@Component({\n    selector: 'vdr-generate-product-variants',\n    templateUrl: './generate-product-variants.component.html',\n    styleUrls: ['./generate-product-variants.component.scss'],\n})\nexport class GenerateProductVariantsComponent implements OnInit {\n    @Output() variantsChange = new EventEmitter<CreateProductVariantsConfig>();\n    optionGroups: Array<{ name: string; values: Array<{ name: string; locked: boolean }> }> = [];\n    currencyCode: CurrencyCode;\n    variants: Array<{ id: string; values: string[] }>;\n    variantFormValues: { [id: string]: CreateVariantValues } = {};\n    constructor(private dataService: DataService) {}\n\n    ngOnInit() {\n        this.dataService.settings.getActiveChannel().single$.subscribe(data => {\n            this.currencyCode = data.activeChannel.currencyCode;\n        });\n\n        this.generateVariants();\n    }\n\n    addOption() {\n        this.optionGroups.push({ name: '', values: [] });\n    }\n\n    removeOption(name: string) {\n        this.optionGroups = this.optionGroups.filter(g => g.name !== name);\n        this.generateVariants();\n    }\n\n    generateVariants() {\n        const totalValuesCount = this.optionGroups.reduce((sum, group) => sum + group.values.length, 0);\n        const groups = totalValuesCount\n            ? this.optionGroups.map(g => g.values.map(v => v.name))\n            : [[DEFAULT_VARIANT_CODE]];\n        this.variants = generateAllCombinations(groups).map(values => ({ id: values.join('|'), values }));\n\n        this.variants.forEach(variant => {\n            if (!this.variantFormValues[variant.id]) {\n                this.variantFormValues[variant.id] = {\n                    optionValues: variant.values,\n                    enabled: true,\n                    price: this.copyFromDefault(variant.id, 'price', 0),\n                    sku: this.copyFromDefault(variant.id, 'sku', ''),\n                    stock: this.copyFromDefault(variant.id, 'stock', 0),\n                };\n            }\n        });\n        this.onFormChange();\n    }\n\n    trackByFn(index: number, variant: { name: string; values: string[] }) {\n        return variant.values.join('|');\n    }\n\n    handleEnter(event: KeyboardEvent, optionValueInputComponent: OptionValueInputComponent) {\n        event.preventDefault();\n        event.stopPropagation();\n        optionValueInputComponent.focus();\n    }\n\n    onFormChange() {\n        const variantsToCreate = this.variants.map(v => this.variantFormValues[v.id]).filter(v => v.enabled);\n        this.variantsChange.emit({\n            groups: this.optionGroups.map(og => ({ name: og.name, values: og.values.map(v => v.name) })),\n            variants: variantsToCreate,\n        });\n    }\n\n    private copyFromDefault<T extends keyof CreateVariantValues>(\n        variantId: string,\n        prop: T,\n        value: CreateVariantValues[T],\n    ): CreateVariantValues[T] {\n        return variantId !== DEFAULT_VARIANT_CODE\n            ? this.variantFormValues[DEFAULT_VARIANT_CODE][prop]\n            : value;\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    forwardRef,\n    Input,\n    Provider,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { unique } from '@vendure/common/lib/unique';\n\nexport const OPTION_VALUE_INPUT_VALUE_ACCESSOR: Provider = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => OptionValueInputComponent),\n    multi: true,\n};\n\n@Component({\n    selector: 'vdr-option-value-input',\n    templateUrl: './option-value-input.component.html',\n    styleUrls: ['./option-value-input.component.scss'],\n    changeDetection: ChangeDetectionStrategy.Default,\n    providers: [OPTION_VALUE_INPUT_VALUE_ACCESSOR],\n})\nexport class OptionValueInputComponent implements ControlValueAccessor {\n    @Input() groupName = '';\n    @ViewChild('textArea', { static: true }) textArea: ElementRef<HTMLTextAreaElement>;\n    options: Array<{ name: string; locked: boolean }>;\n    disabled = false;\n    input = '';\n    isFocussed = false;\n    lastSelected = false;\n    onChangeFn: (value: any) => void;\n    onTouchFn: (value: any) => void;\n\n    constructor(private changeDetector: ChangeDetectorRef) {}\n\n    registerOnChange(fn: any): void {\n        this.onChangeFn = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onTouchFn = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this.changeDetector.markForCheck();\n    }\n\n    writeValue(obj: any): void {\n        this.options = obj || [];\n    }\n\n    focus() {\n        this.textArea.nativeElement.focus();\n    }\n\n    removeOption(option: { name: string; locked: boolean }) {\n        if (!option.locked) {\n            this.options = this.options.filter(o => o.name !== option.name);\n            this.onChangeFn(this.options);\n        }\n    }\n\n    handleKey(event: KeyboardEvent) {\n        switch (event.key) {\n            case ',':\n            case 'Enter':\n                this.addOptionValue();\n                event.preventDefault();\n                break;\n            case 'Backspace':\n                if (this.lastSelected) {\n                    this.removeLastOption();\n                    this.lastSelected = false;\n                } else if (this.input === '') {\n                    this.lastSelected = true;\n                }\n                break;\n            default:\n                this.lastSelected = false;\n        }\n    }\n\n    handleBlur() {\n        this.isFocussed = false;\n        this.addOptionValue();\n    }\n\n    private addOptionValue() {\n        this.options = unique([...this.options, ...this.parseInputIntoOptions(this.input)]);\n        this.input = '';\n        this.onChangeFn(this.options);\n    }\n\n    private parseInputIntoOptions(input: string): Array<{ name: string; locked: boolean }> {\n        return input\n            .split(/[,\\n]/)\n            .map(s => s.trim())\n            .filter(s => s !== '')\n            .map(s => ({ name: s, locked: false }));\n    }\n\n    private removeLastOption() {\n        if (!this.options[this.options.length - 1].locked) {\n            this.options = this.options.slice(0, this.options.length - 1);\n        }\n    }\n}\n","import { CdkDrag, CdkDragMove, CdkDropList, CdkDropListGroup, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { ViewportRuler } from '@angular/cdk/overlay';\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    HostBinding,\n    Input,\n    Optional,\n    Output,\n    ViewChild,\n} from '@angular/core';\nimport {\n    Asset,\n    AssetPickerDialogComponent,\n    AssetPreviewDialogComponent,\n    ModalService,\n    Permission,\n} from '@vendure/admin-ui/core';\nimport { unique } from '@vendure/common/lib/unique';\n\nimport { CollectionDetailComponent } from '../collection-detail/collection-detail.component';\n\nexport interface AssetChange {\n    assets: Asset[];\n    featuredAsset: Asset | undefined;\n}\n\n/**\n * A component which displays the Assets associated with a product, and allows assets to be removed and\n * added, and for the featured asset to be set.\n *\n * Note: rather complex code for drag drop is due to a limitation of the default CDK implementation\n * which is addressed by a work-around from here: https://github.com/angular/components/issues/13372#issuecomment-483998378\n */\n@Component({\n    selector: 'vdr-product-assets',\n    templateUrl: './product-assets.component.html',\n    styleUrls: ['./product-assets.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductAssetsComponent implements AfterViewInit {\n    @Input('assets') set assetsSetter(val: Asset[]) {\n        // create a new non-readonly array of assets\n        this.assets = val.slice();\n    }\n    @Input() featuredAsset: Asset | undefined;\n    @HostBinding('class.compact')\n    @Input()\n    compact = false;\n    @Output() change = new EventEmitter<AssetChange>();\n    @ViewChild('dlg', { static: false, read: CdkDropListGroup }) listGroup: CdkDropListGroup<CdkDropList>;\n    @ViewChild('dl', { static: false, read: CdkDropList }) placeholder: CdkDropList;\n\n    public target: CdkDropList | null;\n    public targetIndex: number;\n    public source: CdkDropList | null;\n    public sourceIndex: number;\n    public dragIndex: number;\n    public activeContainer;\n    public assets: Asset[] = [];\n\n    private readonly updateCollectionPermissions = [Permission.UpdateCatalog, Permission.UpdateCollection];\n    private readonly updateProductPermissions = [Permission.UpdateCatalog, Permission.UpdateProduct];\n\n    get updatePermissions(): Permission[] {\n        if (this.collectionDetailComponent) {\n            return this.updateCollectionPermissions;\n        } else {\n            return this.updateProductPermissions;\n        }\n    }\n\n    constructor(\n        private modalService: ModalService,\n        private changeDetector: ChangeDetectorRef,\n        private viewportRuler: ViewportRuler,\n        @Optional() private collectionDetailComponent?: CollectionDetailComponent,\n    ) {}\n\n    ngAfterViewInit() {\n        const phElement = this.placeholder.element.nativeElement;\n\n        phElement.style.display = 'none';\n        if (phElement.parentElement) {\n            phElement.parentElement.removeChild(phElement);\n        }\n    }\n\n    selectAssets() {\n        this.modalService\n            .fromComponent(AssetPickerDialogComponent, {\n                size: 'xl',\n            })\n            .subscribe(result => {\n                if (result && result.length) {\n                    this.assets = unique(this.assets.concat(result), 'id');\n                    if (!this.featuredAsset) {\n                        this.featuredAsset = result[0];\n                    }\n                    this.emitChangeEvent(this.assets, this.featuredAsset);\n                    this.changeDetector.markForCheck();\n                }\n            });\n    }\n\n    setAsFeatured(asset: Asset) {\n        this.featuredAsset = asset;\n        this.emitChangeEvent(this.assets, asset);\n    }\n\n    isFeatured(asset: Asset): boolean {\n        return !!this.featuredAsset && this.featuredAsset.id === asset.id;\n    }\n\n    previewAsset(asset: Asset) {\n        this.modalService\n            .fromComponent(AssetPreviewDialogComponent, {\n                size: 'xl',\n                closable: true,\n                locals: { asset },\n            })\n            .subscribe();\n    }\n\n    removeAsset(asset: Asset) {\n        this.assets = this.assets.filter(a => a.id !== asset.id);\n        if (this.featuredAsset && this.featuredAsset.id === asset.id) {\n            this.featuredAsset = this.assets.length > 0 ? this.assets[0] : undefined;\n        }\n        this.emitChangeEvent(this.assets, this.featuredAsset);\n    }\n\n    private emitChangeEvent(assets: Asset[], featuredAsset: Asset | undefined) {\n        this.change.emit({\n            assets,\n            featuredAsset,\n        });\n    }\n\n    dragMoved(e: CdkDragMove) {\n        const point = this.getPointerPositionOnPage(e.event);\n\n        this.listGroup._items.forEach(dropList => {\n            if (__isInsideDropListClientRect(dropList, point.x, point.y)) {\n                this.activeContainer = dropList;\n                return;\n            }\n        });\n    }\n\n    dropListDropped() {\n        if (!this.target || !this.source) {\n            return;\n        }\n\n        const phElement = this.placeholder.element.nativeElement;\n        // tslint:disable-next-line:no-non-null-assertion\n        const parent = phElement.parentElement!;\n\n        phElement.style.display = 'none';\n\n        parent.removeChild(phElement);\n        parent.appendChild(phElement);\n        parent.insertBefore(this.source.element.nativeElement, parent.children[this.sourceIndex]);\n\n        this.target = null;\n        this.source = null;\n\n        if (this.sourceIndex !== this.targetIndex) {\n            moveItemInArray(this.assets, this.sourceIndex, this.targetIndex);\n            this.emitChangeEvent(this.assets, this.featuredAsset);\n        }\n    }\n\n    dropListEnterPredicate = (drag: CdkDrag, drop: CdkDropList) => {\n        if (drop === this.placeholder) {\n            return true;\n        }\n        if (drop !== this.activeContainer) {\n            return false;\n        }\n\n        const phElement = this.placeholder.element.nativeElement;\n        const sourceElement = drag.dropContainer.element.nativeElement;\n        const dropElement = drop.element.nativeElement;\n        const children = dropElement.parentElement && dropElement.parentElement.children;\n\n        const dragIndex = __indexOf(children, this.source ? phElement : sourceElement);\n        const dropIndex = __indexOf(children, dropElement);\n\n        if (!this.source) {\n            this.sourceIndex = dragIndex;\n            this.source = drag.dropContainer;\n\n            phElement.style.width = sourceElement.clientWidth + 'px';\n            phElement.style.height = sourceElement.clientHeight + 'px';\n\n            if (sourceElement.parentElement) {\n                sourceElement.parentElement.removeChild(sourceElement);\n            }\n        }\n\n        this.targetIndex = dropIndex;\n        this.target = drop;\n\n        phElement.style.display = '';\n        if (dropElement.parentElement) {\n            dropElement.parentElement.insertBefore(\n                phElement,\n                dropIndex > dragIndex ? dropElement.nextSibling : dropElement,\n            );\n        }\n\n        this.placeholder._dropListRef.enter(\n            drag._dragRef,\n            drag.element.nativeElement.offsetLeft,\n            drag.element.nativeElement.offsetTop,\n        );\n        return false;\n    };\n\n    /** Determines the point of the page that was touched by the user. */\n    getPointerPositionOnPage(event: MouseEvent | TouchEvent) {\n        // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n        const point = __isTouchEvent(event) ? event.touches[0] || event.changedTouches[0] : event;\n        const scrollPosition = this.viewportRuler.getViewportScrollPosition();\n\n        return {\n            x: point.pageX - scrollPosition.left,\n            y: point.pageY - scrollPosition.top,\n        };\n    }\n}\n\nfunction __indexOf(collection: HTMLCollection | null, node: HTMLElement) {\n    if (!collection) {\n        return -1;\n    }\n    return Array.prototype.indexOf.call(collection, node);\n}\n\n/** Determines whether an event is a touch event. */\nfunction __isTouchEvent(event: MouseEvent | TouchEvent): event is TouchEvent {\n    return event.type.startsWith('touch');\n}\n\nfunction __isInsideDropListClientRect(dropList: CdkDropList, x: number, y: number) {\n    const { top, bottom, left, right } = dropList.element.nativeElement.getBoundingClientRect();\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport {\n    CustomFieldConfig,\n    LanguageCode,\n    ProductVariant,\n    UpdateProductOptionInput,\n} from '@vendure/admin-ui/core';\nimport { createUpdatedTranslatable } from '@vendure/admin-ui/core';\nimport { Dialog } from '@vendure/admin-ui/core';\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\n\n@Component({\n    selector: 'vdr-update-product-option-dialog',\n    templateUrl: './update-product-option-dialog.component.html',\n    styleUrls: ['./update-product-option-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UpdateProductOptionDialogComponent\n    implements Dialog<UpdateProductOptionInput & { autoUpdate: boolean }>, OnInit {\n    resolveWith: (result?: UpdateProductOptionInput & { autoUpdate: boolean }) => void;\n    updateVariantName = true;\n    // Provided by caller\n    productOption: ProductVariant.Options;\n    activeLanguage: LanguageCode;\n    name: string;\n    code: string;\n    customFields: CustomFieldConfig[];\n    codeInputTouched = false;\n    customFieldsForm: FormGroup;\n\n    ngOnInit(): void {\n        const currentTranslation = this.productOption.translations.find(\n            t => t.languageCode === this.activeLanguage,\n        );\n        this.name = currentTranslation?.name ?? '';\n        this.code = this.productOption.code;\n        this.customFieldsForm = new FormGroup({});\n        if (this.customFields) {\n            const cfCurrentTranslation =\n                (currentTranslation && (currentTranslation as any).customFields) || {};\n\n            for (const fieldDef of this.customFields) {\n                const key = fieldDef.name;\n                const value =\n                    fieldDef.type === 'localeString'\n                        ? cfCurrentTranslation[key]\n                        : (this.productOption as any).customFields[key];\n                this.customFieldsForm.addControl(fieldDef.name, new FormControl(value));\n            }\n        }\n    }\n\n    update() {\n        const result = createUpdatedTranslatable({\n            translatable: this.productOption,\n            languageCode: this.activeLanguage,\n            updatedFields: {\n                code: this.code,\n                name: this.name,\n                customFields: this.customFieldsForm.value,\n            },\n            customFieldConfig: this.customFields,\n            defaultTranslation: {\n                languageCode: this.activeLanguage,\n                name: '',\n            },\n        });\n        this.resolveWith({ ...result, autoUpdate: this.updateVariantName });\n    }\n\n    cancel() {\n        this.resolveWith();\n    }\n\n    updateCode(nameValue: string) {\n        if (!this.codeInputTouched && !this.productOption.code) {\n            this.code = normalizeString(nameValue, '-');\n        }\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { FormArray, FormGroup } from '@angular/forms';\nimport {\n    CustomFieldConfig,\n    DataService,\n    FacetValue,\n    FacetWithValues,\n    flattenFacetValues,\n    GlobalFlag,\n    LanguageCode,\n    ModalService,\n    Permission,\n    ProductOptionFragment,\n    ProductVariant,\n    ProductWithVariants,\n    TaxCategory,\n    UpdateProductOptionInput,\n} from '@vendure/admin-ui/core';\nimport { DEFAULT_CHANNEL_CODE } from '@vendure/common/lib/shared-constants';\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\nimport { PaginationInstance } from 'ngx-pagination';\nimport { Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { AssetChange } from '../product-assets/product-assets.component';\nimport { SelectedAssets, VariantFormValue } from '../product-detail/product-detail.component';\nimport { UpdateProductOptionDialogComponent } from '../update-product-option-dialog/update-product-option-dialog.component';\n\nexport interface VariantAssetChange extends AssetChange {\n    variantId: string;\n}\n\n@Component({\n    selector: 'vdr-product-variants-list',\n    templateUrl: './product-variants-list.component.html',\n    styleUrls: ['./product-variants-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductVariantsListComponent implements OnChanges, OnInit, OnDestroy {\n    @Input('productVariantsFormArray') formArray: FormArray;\n    @Input() variants: ProductWithVariants.Variants[];\n    @Input() channelPriceIncludesTax: boolean;\n    @Input() taxCategories: TaxCategory[];\n    @Input() facets: FacetWithValues.Fragment[];\n    @Input() optionGroups: ProductWithVariants.OptionGroups[];\n    @Input() customFields: CustomFieldConfig[];\n    @Input() customOptionFields: CustomFieldConfig[];\n    @Input() activeLanguage: LanguageCode;\n    @Input() pendingAssetChanges: { [variantId: string]: SelectedAssets };\n    @Output() assignToChannel = new EventEmitter<ProductWithVariants.Variants>();\n    @Output() removeFromChannel = new EventEmitter<{\n        channelId: string;\n        variant: ProductWithVariants.Variants;\n    }>();\n    @Output() assetChange = new EventEmitter<VariantAssetChange>();\n    @Output() selectionChange = new EventEmitter<string[]>();\n    @Output() selectFacetValueClick = new EventEmitter<string[]>();\n    @Output() updateProductOption = new EventEmitter<UpdateProductOptionInput & { autoUpdate: boolean }>();\n    selectedVariantIds: string[] = [];\n    pagination: PaginationInstance = {\n        currentPage: 1,\n        itemsPerPage: 10,\n    };\n    formGroupMap = new Map<string, FormGroup>();\n    GlobalFlag = GlobalFlag;\n    globalTrackInventory: boolean;\n    globalOutOfStockThreshold: number;\n    readonly updatePermission = [Permission.UpdateCatalog, Permission.UpdateProduct];\n    private facetValues: FacetValue.Fragment[];\n    private subscription: Subscription;\n\n    constructor(\n        private changeDetector: ChangeDetectorRef,\n        private modalService: ModalService,\n        private dataService: DataService,\n    ) {}\n\n    ngOnInit() {\n        this.dataService.settings.getGlobalSettings('cache-first').single$.subscribe(({ globalSettings }) => {\n            this.globalTrackInventory = globalSettings.trackInventory;\n            this.globalOutOfStockThreshold = globalSettings.outOfStockThreshold;\n            this.changeDetector.markForCheck();\n        });\n        this.subscription = this.formArray.valueChanges.subscribe(() => this.changeDetector.markForCheck());\n\n        this.subscription.add(\n            this.formArray.valueChanges\n                .pipe(\n                    map(value => value.length),\n                    debounceTime(1),\n                    distinctUntilChanged(),\n                )\n                .subscribe(() => {\n                    this.buildFormGroupMap();\n                }),\n        );\n\n        this.buildFormGroupMap();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if ('facets' in changes && !!changes['facets'].currentValue) {\n            this.facetValues = flattenFacetValues(this.facets);\n        }\n        if ('variants' in changes) {\n            if (changes['variants'].currentValue?.length !== changes['variants'].previousValue?.length) {\n                this.pagination.currentPage = 1;\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n    isDefaultChannel(channelCode: string): boolean {\n        return channelCode === DEFAULT_CHANNEL_CODE;\n    }\n\n    trackById(index: number, item: ProductWithVariants.Variants) {\n        return item.id;\n    }\n\n    inventoryIsNotTracked(formGroup: FormGroup): boolean {\n        const trackInventory = formGroup.get('trackInventory')?.value;\n        return (\n            trackInventory === GlobalFlag.FALSE ||\n            (trackInventory === GlobalFlag.INHERIT && this.globalTrackInventory === false)\n        );\n    }\n\n    getTaxCategoryName(group: FormGroup): string {\n        const control = group.get(['taxCategoryId']);\n        if (control && this.taxCategories) {\n            const match = this.taxCategories.find(t => t.id === control.value);\n            return match ? match.name : '';\n        }\n        return '';\n    }\n\n    getSaleableStockLevel(variant: ProductWithVariants.Variants) {\n        const effectiveOutOfStockThreshold = variant.useGlobalOutOfStockThreshold\n            ? this.globalOutOfStockThreshold\n            : variant.outOfStockThreshold;\n        return variant.stockOnHand - variant.stockAllocated - effectiveOutOfStockThreshold;\n    }\n\n    areAllSelected(): boolean {\n        return !!this.variants && this.selectedVariantIds.length === this.variants.length;\n    }\n\n    onAssetChange(variantId: string, event: AssetChange) {\n        this.assetChange.emit({\n            variantId,\n            ...event,\n        });\n        const index = this.variants.findIndex(v => v.id === variantId);\n        this.formArray.at(index).markAsDirty();\n    }\n\n    toggleSelectAll() {\n        if (this.areAllSelected()) {\n            this.selectedVariantIds = [];\n        } else {\n            this.selectedVariantIds = this.variants.map(v => v.id);\n        }\n        this.selectionChange.emit(this.selectedVariantIds);\n    }\n\n    toggleSelectVariant(variantId: string) {\n        const index = this.selectedVariantIds.indexOf(variantId);\n        if (-1 < index) {\n            this.selectedVariantIds.splice(index, 1);\n        } else {\n            this.selectedVariantIds.push(variantId);\n        }\n        this.selectionChange.emit(this.selectedVariantIds);\n    }\n\n    optionGroupName(optionGroupId: string): string | undefined {\n        const group = this.optionGroups.find(g => g.id === optionGroupId);\n        if (group) {\n            const translation =\n                group?.translations.find(t => t.languageCode === this.activeLanguage) ??\n                group.translations[0];\n            return translation.name;\n        }\n    }\n\n    optionName(option: ProductOptionFragment) {\n        const translation =\n            option.translations.find(t => t.languageCode === this.activeLanguage) ?? option.translations[0];\n        return translation.name;\n    }\n\n    pendingFacetValues(variant: ProductWithVariants.Variants) {\n        if (this.facets) {\n            const formFacetValueIds = this.getFacetValueIds(variant.id);\n            const variantFacetValueIds = variant.facetValues.map(fv => fv.id);\n            return formFacetValueIds\n                .filter(x => !variantFacetValueIds.includes(x))\n                .map(id => this.facetValues.find(fv => fv.id === id))\n                .filter(notNullOrUndefined);\n        } else {\n            return [];\n        }\n    }\n\n    existingFacetValues(variant: ProductWithVariants.Variants) {\n        const formFacetValueIds = this.getFacetValueIds(variant.id);\n        const intersection = [...formFacetValueIds].filter(x =>\n            variant.facetValues.map(fv => fv.id).includes(x),\n        );\n        return intersection\n            .map(id => variant.facetValues.find(fv => fv.id === id))\n            .filter(notNullOrUndefined);\n    }\n\n    removeFacetValue(variant: ProductWithVariants.Variants, facetValueId: string) {\n        const formGroup = this.formGroupMap.get(variant.id);\n        if (formGroup) {\n            const newValue = (formGroup.value as VariantFormValue).facetValueIds.filter(\n                id => id !== facetValueId,\n            );\n            formGroup.patchValue({\n                facetValueIds: newValue,\n            });\n            formGroup.markAsDirty();\n        }\n    }\n\n    isVariantSelected(variantId: string): boolean {\n        return -1 < this.selectedVariantIds.indexOf(variantId);\n    }\n\n    editOption(option: ProductVariant.Options) {\n        this.modalService\n            .fromComponent(UpdateProductOptionDialogComponent, {\n                size: 'md',\n                locals: {\n                    productOption: option,\n                    activeLanguage: this.activeLanguage,\n                    customFields: this.customOptionFields,\n                },\n            })\n            .subscribe(result => {\n                if (result) {\n                    this.updateProductOption.emit(result);\n                }\n            });\n    }\n\n    private buildFormGroupMap() {\n        this.formGroupMap.clear();\n        for (const controlGroup of this.formArray.controls) {\n            this.formGroupMap.set(controlGroup.value.id, controlGroup as FormGroup);\n        }\n        this.changeDetector.markForCheck();\n    }\n\n    private getFacetValueIds(id: string): string[] {\n        const formValue: VariantFormValue = this.formGroupMap.get(id)?.value;\n        return formValue.facetValueIds;\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\nimport { FormArray, FormGroup } from '@angular/forms';\nimport { Permission, ProductWithVariants } from '@vendure/admin-ui/core';\nimport { Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { SelectedAssets } from '../product-detail/product-detail.component';\n\n@Component({\n    selector: 'vdr-product-variants-table',\n    templateUrl: './product-variants-table.component.html',\n    styleUrls: ['./product-variants-table.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductVariantsTableComponent implements OnInit, OnDestroy {\n    @Input('productVariantsFormArray') formArray: FormArray;\n    @Input() variants: ProductWithVariants.Variants[];\n    @Input() channelPriceIncludesTax: boolean;\n    @Input() optionGroups: ProductWithVariants.OptionGroups[];\n    @Input() pendingAssetChanges: { [variantId: string]: SelectedAssets };\n    formGroupMap = new Map<string, FormGroup>();\n    readonly updatePermission = [Permission.UpdateCatalog, Permission.UpdateProduct];\n    private subscription: Subscription;\n\n    constructor(private changeDetector: ChangeDetectorRef) {}\n\n    ngOnInit() {\n        this.subscription = this.formArray.valueChanges\n            .pipe(\n                map(value => value.length),\n                debounceTime(1),\n                distinctUntilChanged(),\n            )\n            .subscribe(() => {\n                this.buildFormGroupMap();\n            });\n\n        this.buildFormGroupMap();\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n    getFeaturedAsset(variant: ProductWithVariants.Variants) {\n        return this.pendingAssetChanges[variant.id]?.featuredAsset || variant.featuredAsset;\n    }\n\n    optionGroupName(optionGroupId: string): string | undefined {\n        const group = this.optionGroups.find(g => g.id === optionGroupId);\n        return group && group.name;\n    }\n\n    private buildFormGroupMap() {\n        this.formGroupMap.clear();\n        for (const controlGroup of this.formArray.controls) {\n            this.formGroupMap.set(controlGroup.value.id, controlGroup as FormGroup);\n        }\n        this.changeDetector.markForCheck();\n    }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { DataService } from '@vendure/admin-ui/core';\nimport { BehaviorSubject, combineLatest, Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'vdr-variant-price-detail',\n    templateUrl: './variant-price-detail.component.html',\n    styleUrls: ['./variant-price-detail.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VariantPriceDetailComponent implements OnInit, OnChanges {\n    @Input() priceIncludesTax: boolean;\n    @Input() price: number;\n    @Input() currencyCode: string;\n    @Input() taxCategoryId: string;\n\n    grossPrice$: Observable<number>;\n    taxRate$: Observable<number>;\n\n    private priceChange$ = new BehaviorSubject<number>(0);\n    private taxCategoryIdChange$ = new BehaviorSubject<string>('');\n\n    constructor(private dataService: DataService) {}\n\n    ngOnInit() {\n        const taxRates$ = this.dataService.settings\n            .getTaxRates(999, 0, 'cache-first')\n            .mapStream(data => data.taxRates.items);\n        const activeChannel$ = this.dataService.settings\n            .getActiveChannel('cache-first')\n            .refetchOnChannelChange()\n            .mapStream(data => data.activeChannel);\n\n        this.taxRate$ = combineLatest(activeChannel$, taxRates$, this.taxCategoryIdChange$).pipe(\n            map(([channel, taxRates, taxCategoryId]) => {\n                const defaultTaxZone = channel.defaultTaxZone;\n                if (!defaultTaxZone) {\n                    return 0;\n                }\n                const applicableRate = taxRates.find(\n                    taxRate => taxRate.zone.id === defaultTaxZone.id && taxRate.category.id === taxCategoryId,\n                );\n\n                if (!applicableRate) {\n                    return 0;\n                }\n                return applicableRate.value;\n            }),\n        );\n\n        this.grossPrice$ = combineLatest(this.taxRate$, this.priceChange$).pipe(\n            map(([taxRate, price]) => {\n                return Math.round(price * ((100 + taxRate) / 100));\n            }),\n        );\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('price' in changes) {\n            this.priceChange$.next(changes.price.currentValue);\n        }\n        if ('taxCategoryId' in changes) {\n            this.taxCategoryIdChange$.next(changes.taxCategoryId.currentValue);\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '@vendure/admin-ui/core';\n\nimport { catalogRoutes } from './catalog.routes';\nimport { ApplyFacetDialogComponent } from './components/apply-facet-dialog/apply-facet-dialog.component';\nimport { AssetDetailComponent } from './components/asset-detail/asset-detail.component';\nimport { AssetListComponent } from './components/asset-list/asset-list.component';\nimport { AssignProductsToChannelDialogComponent } from './components/assign-products-to-channel-dialog/assign-products-to-channel-dialog.component';\nimport { CollectionContentsComponent } from './components/collection-contents/collection-contents.component';\nimport { CollectionDetailComponent } from './components/collection-detail/collection-detail.component';\nimport { CollectionListComponent } from './components/collection-list/collection-list.component';\nimport { CollectionTreeNodeComponent } from './components/collection-tree/collection-tree-node.component';\nimport { CollectionTreeComponent } from './components/collection-tree/collection-tree.component';\nimport { FacetDetailComponent } from './components/facet-detail/facet-detail.component';\nimport { FacetListComponent } from './components/facet-list/facet-list.component';\nimport { GenerateProductVariantsComponent } from './components/generate-product-variants/generate-product-variants.component';\nimport { OptionValueInputComponent } from './components/option-value-input/option-value-input.component';\nimport { ProductAssetsComponent } from './components/product-assets/product-assets.component';\nimport { ProductDetailComponent } from './components/product-detail/product-detail.component';\nimport { ProductListComponent } from './components/product-list/product-list.component';\nimport { ProductSearchInputComponent } from './components/product-search-input/product-search-input.component';\nimport { ProductVariantsEditorComponent } from './components/product-variants-editor/product-variants-editor.component';\nimport { ProductVariantsListComponent } from './components/product-variants-list/product-variants-list.component';\nimport { ProductVariantsTableComponent } from './components/product-variants-table/product-variants-table.component';\nimport { UpdateProductOptionDialogComponent } from './components/update-product-option-dialog/update-product-option-dialog.component';\nimport { VariantPriceDetailComponent } from './components/variant-price-detail/variant-price-detail.component';\n\n@NgModule({\n    imports: [SharedModule, RouterModule.forChild(catalogRoutes)],\n    exports: [],\n    declarations: [\n        ProductListComponent,\n        ProductDetailComponent,\n        FacetListComponent,\n        FacetDetailComponent,\n        GenerateProductVariantsComponent,\n        ProductVariantsListComponent,\n        ApplyFacetDialogComponent,\n        AssetListComponent,\n        ProductAssetsComponent,\n        VariantPriceDetailComponent,\n        CollectionListComponent,\n        CollectionDetailComponent,\n        CollectionTreeComponent,\n        CollectionTreeNodeComponent,\n        CollectionContentsComponent,\n        ProductVariantsTableComponent,\n        ProductSearchInputComponent,\n        OptionValueInputComponent,\n        UpdateProductOptionDialogComponent,\n        ProductVariantsEditorComponent,\n        AssignProductsToChannelDialogComponent,\n        AssetDetailComponent,\n    ],\n})\nexport class CatalogModule {}\n","// This file was generated by the build-public-api.ts script\nexport * from './catalog.module';\nexport * from './catalog.routes';\nexport * from './components/apply-facet-dialog/apply-facet-dialog.component';\nexport * from './components/asset-detail/asset-detail.component';\nexport * from './components/asset-list/asset-list.component';\nexport * from './components/assign-products-to-channel-dialog/assign-products-to-channel-dialog.component';\nexport * from './components/collection-contents/collection-contents.component';\nexport * from './components/collection-detail/collection-detail.component';\nexport * from './components/collection-list/collection-list.component';\nexport * from './components/collection-tree/array-to-tree';\nexport * from './components/collection-tree/collection-tree-node.component';\nexport * from './components/collection-tree/collection-tree.component';\nexport * from './components/facet-detail/facet-detail.component';\nexport * from './components/facet-list/facet-list.component';\nexport * from './components/generate-product-variants/generate-product-variants.component';\nexport * from './components/option-value-input/option-value-input.component';\nexport * from './components/product-assets/product-assets.component';\nexport * from './components/product-detail/product-detail.component';\nexport * from './components/product-list/product-list.component';\nexport * from './components/product-search-input/product-search-input.component';\nexport * from './components/product-variants-editor/product-variants-editor.component';\nexport * from './components/product-variants-list/product-variants-list.component';\nexport * from './components/product-variants-table/product-variants-table.component';\nexport * from './components/update-product-option-dialog/update-product-option-dialog.component';\nexport * from './components/variant-price-detail/variant-price-detail.component';\nexport * from './providers/product-detail/product-detail.service';\nexport * from './providers/product-detail/replace-last';\nexport * from './providers/routing/asset-resolver';\nexport * from './providers/routing/collection-resolver';\nexport * from './providers/routing/facet-resolver';\nexport * from './providers/routing/product-resolver';\nexport * from './providers/routing/product-variants-resolver';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["_"],"mappings":";;;;;;;;;;;;;;;;;;MAmBa,oBAAqB,SAAQ,mBAAmC;IAIzE,YACI,MAAc,EACd,KAAqB,EACrB,mBAAwC,EAChC,mBAAwC,EACtC,WAAwB,EAC1B,WAAwB;QAEhC,KAAK,CAAC,KAAK,EAAE,MAAM,EAAE,mBAAmB,EAAE,WAAW,CAAC,CAAC;QAJ/C,wBAAmB,GAAnB,mBAAmB,CAAqB;QACtC,gBAAW,GAAX,WAAW,CAAa;QAC1B,gBAAW,GAAX,WAAW,CAAa;QATpC,eAAU,GAAG,IAAI,SAAS,CAAC,EAAE,CAAC,CAAC;QAY3B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;KAC1D;IAED,QAAQ;QACJ,IAAI,CAAC,UAAU,GAAG,IAAI,SAAS,CAAC;YAC5B,IAAI,EAAE,IAAI,WAAW,CAAC,EAAE,CAAC;YACzB,IAAI,EAAE,IAAI,WAAW,CAAC,EAAE,CAAC;YACzB,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAChC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,KAAK,sCAAW,IAAI,KAAE,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE,IAAG,EAAE,EAAE,CAAC,CACjF;SACJ,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,EAAE,CAAC;KACf;IAED,WAAW;QACP,IAAI,CAAC,OAAO,EAAE,CAAC;KAClB;IAED,aAAa,CAAC,KAAmD;;QAC7D,MAAA,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,0CAAE,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE;QAClD,MAAA,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,0CAAE,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE;QAClD,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;KACjC;IAED,IAAI;QACA,IAAI,CAAC,WAAW,CAAC,OAAO;aACnB,WAAW,CAAC;YACT,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI;YAChC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI;YAChC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,YAAY;SACnD,CAAC;aACD,SAAS,CACN;YACI,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAACA,MAAC,CAAC,8BAA8B,CAAC,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;SAC5F,EACD,GAAG;YACC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAACA,MAAC,CAAC,4BAA4B,CAAC,EAAE;gBAC5D,MAAM,EAAE,OAAO;aAClB,CAAC,CAAC;SACN,CACJ,CAAC;KACT;IAES,aAAa,CAAC,MAAsB,EAAE,YAA0B;;QACtE,MAAA,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,0CAAE,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE;QACnD,MAAA,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,0CAAE,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE;QACnD,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;YAC1B,MAAM,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,cAAc,CAAc,CAAC;YAE3E,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,YAAY,EAAE;gBACtC,MAAM,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC;gBAC1B,MAAM,KAAK,GAAI,MAAc,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;gBAChD,MAAM,OAAO,GAAG,iBAAiB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBAC3C,IAAI,OAAO,EAAE;oBACT,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;iBAC7B;aACJ;SACJ;KACJ;;;YA9EJ,SAAS,SAAC;gBACP,QAAQ,EAAE,kBAAkB;gBAC5B,i0BAA4C;gBAE5C,eAAe,EAAE,uBAAuB,CAAC,MAAM;;aAClD;;;YAhBwB,MAAM;YAAtB,cAAc;YASoB,mBAAmB;YAAxC,mBAAmB;YAAhC,WAAW;YAVX,WAAW;;;MCwBP,kBACT,SAAQ,iBAAiF;IAQzF,YACY,mBAAwC,EACxC,YAA0B,EAC1B,WAAwB,EAChC,MAAc,EACd,KAAqB;QAErB,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QANb,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QATpC,gBAAW,GAAG,IAAI,eAAe,CAAqB,SAAS,CAAC,CAAC;QACjE,kBAAa,GAAG,IAAI,eAAe,CAA4B,SAAS,CAAC,CAAC;QAC1E,cAAS,GAAG,KAAK,CAAC;QAYd,KAAK,CAAC,UAAU,CACZ,CAAC,GAAG,IAAW,KAAK,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,EAClE,IAAI,IAAI,IAAI,CAAC,MAAM,EACnB,CAAC,IAAI,EAAE,IAAI;;YACP,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC1C,MAAM,IAAI,SAAG,IAAI,CAAC,aAAa,CAAC,KAAK,0CAAE,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC;YACzD,OAAO;gBACH,OAAO,gCACH,IAAI;oBACJ,IAAI,KACA,UAAU;sBACR;wBACI,MAAM,EAAE;4BACJ,IAAI,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAE;yBACjC;qBACJ;sBACD,EAAE,MACR,IAAI,EAAE;wBACF,SAAS,EAAE,SAAS,CAAC,IAAI;qBAC5B,EACD,IAAI,EACJ,YAAY,EAAE,eAAe,CAAC,GAAG,GACpC;aACJ,CAAC;SACL,EACD,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,CACxB,CAAC;KACL;IAED,QAAQ;QACJ,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,iBAAiB,GAAG,aAAa,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAChG,GAAG,CAAC,CAAC,CAAC,YAAY,EAAE,WAAW,EAAE,UAAU,CAAC,MAAM,EAAE,YAAY,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC,CAAC,CAChG,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAEnG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAClF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC5F;IAED,aAAa,CAAC,KAAa;QACvB,IAAI,KAAK,CAAC,MAAM,EAAE;YACd,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,WAAW,CAAC,OAAO;iBACnB,YAAY,CAAC,KAAK,CAAC;iBACnB,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC;iBAC9C,SAAS,CAAC,CAAC,EAAE,YAAY,EAAE;gBACxB,IAAI,YAAY,GAAG,CAAC,CAAC;gBACrB,KAAK,MAAM,MAAM,IAAI,YAAY,EAAE;oBAC/B,QAAQ,MAAM,CAAC,UAAU;wBACrB,KAAK,OAAO;4BACR,YAAY,EAAE,CAAC;4BACf,MAAM;wBACV,KAAK,eAAe;4BAChB,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;4BAC/C,MAAM;qBACb;iBACJ;gBACD,IAAI,CAAC,GAAG,YAAY,EAAE;oBAClB,KAAK,CAAC,OAAO,EAAE,CAAC;oBAChB,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAACA,MAAC,CAAC,oCAAoC,CAAC,EAAE;wBACtE,KAAK,EAAE,YAAY;qBACtB,CAAC,CAAC;iBACN;aACJ,CAAC,CAAC;SACV;KACJ;IAED,YAAY,CAAC,MAAe;QACxB,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;aACzC,IAAI,CACD,SAAS,CAAC,QAAQ;YACd,IAAI,QAAQ,CAAC,MAAM,KAAK,cAAc,CAAC,OAAO,EAAE;gBAC5C,OAAO,CAAC,IAAI,CAAC,CAAC;aACjB;iBAAM;gBACH,OAAO,IAAI,CAAC,kBAAkB,CAC1B,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EACrB,QAAQ,CAAC,OAAO,IAAI,EAAE,CACzB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;aACzD;SACJ,CAAC,CACL;aACA,SAAS,CACN;YACI,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAACA,MAAC,CAAC,8BAA8B,CAAC,EAAE;gBAChE,MAAM,EAAE,QAAQ;aACnB,CAAC,CAAC;YACH,IAAI,CAAC,OAAO,EAAE,CAAC;SAClB,EACD,GAAG;YACC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAACA,MAAC,CAAC,4BAA4B,CAAC,EAAE;gBAC5D,MAAM,EAAE,QAAQ;aACnB,CAAC,CAAC;SACN,CACJ,CAAC;KACT;IAEO,kBAAkB,CAAC,QAAkB,EAAE,OAAgB;QAC3D,OAAO,IAAI,CAAC,YAAY;aACnB,MAAM,CAAC;YACJ,KAAK,EAAEA,MAAC,CAAC,+BAA+B,CAAC;YACzC,eAAe,EAAE;gBACb,KAAK,EAAE,QAAQ,CAAC,MAAM;aACzB;YACD,IAAI,EAAE,OAAO;YACb,OAAO,EAAE;gBACL,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAEA,MAAC,CAAC,eAAe,CAAC,EAAE;gBAChD,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAEA,MAAC,CAAC,eAAe,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE;aACnE;SACJ,CAAC;aACD,IAAI,CACD,SAAS,CAAC,GAAG,KAAK,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,CAAC,EAC5F,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,YAAY,CAAC,CAC/B,CAAC;KACT;;;YAxIJ,SAAS,SAAC;gBACP,QAAQ,EAAE,gBAAgB;gBAC1B,65CAA0C;;aAE7C;;;YAZG,mBAAmB;YADnB,YAAY;YAJZ,WAAW;YALU,MAAM;YAAtB,cAAc;;;MC+BV,2BAA2B;IAapC,YAAoB,KAAqB,EAAU,MAAc,EAAU,WAAwB;QAA/E,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QALnG,sBAAiB,GAAG,IAAI,WAAW,CAAC,EAAE,CAAC,CAAC;QAChC,wBAAmB,GAAG,IAAI,eAAe,CAAS,EAAE,CAAC,CAAC;QACtD,aAAQ,GAAG,IAAI,eAAe,CAAU,IAAI,CAAC,CAAC;QAC9C,aAAQ,GAAG,IAAI,OAAO,EAAQ,CAAC;KAEgE;IAEvG,QAAQ;QACJ,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAChD,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,EACnC,GAAG,CAAC,IAAI,KAAK,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAChC,SAAS,CAAC,CAAC,CAAC,EACZ,oBAAoB,EAAE,CACzB,CAAC;QAEF,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CACjD,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,EACtC,GAAG,CAAC,OAAO,KAAK,CAAC,OAAO,GAAG,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,EAC1C,SAAS,CAAC,EAAE,CAAC,EACb,oBAAoB,EAAE,CACzB,CAAC;QAEF,MAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,IAAI,CACxD,YAAY,CAAC,GAAG,CAAC,EACjB,GAAG,CAAC,MAAM,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,EACxC,SAAS,CAAC,EAAE,CAAC,CAChB,CAAC;QAEF,MAAM,WAAW,GAAG,aAAa,CAC7B,IAAI,CAAC,mBAAmB,EACxB,IAAI,CAAC,oBAAoB,EACzB,IAAI,CAAC,qBAAqB,EAC1B,WAAW,EACX,IAAI,CAAC,QAAQ,CAChB,CAAC,IAAI,CACF,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EACxB,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,WAAW,EAAE,YAAY,EAAE,UAAU,CAAC;YAClD,MAAM,IAAI,GAAG,YAAY,CAAC;YAC1B,MAAM,IAAI,GAAG,CAAC,WAAW,GAAG,CAAC,IAAI,YAAY,CAAC;YAC9C,IAAI,EAAE,EAAE;gBACJ,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU;qBAC7B,qBAAqB,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,CAAC;qBACjD,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC;aAC3C;iBAAM;gBACH,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;aACnB;SACJ,CAAC,CACL,CAAC;QAEF,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,KAAK,MAAM,GAAG,MAAM,CAAC,eAAe,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;QAC/F,IAAI,CAAC,mBAAmB,GAAG,WAAW,CAAC,IAAI,CACvC,GAAG,CAAC,MAAM,KAAK,MAAM,GAAG,MAAM,CAAC,eAAe,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAClE,CAAC;KACL;IAED,WAAW,CAAC,OAAsB;QAC9B,IAAI,cAAc,IAAI,OAAO,EAAE;YAC3B,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;SACpE;KACJ;IAED,WAAW;QACP,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;KAC5B;IAED,qBAAqB,CAAC,IAAY;QAC9B,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;KACvC;IAED,uBAAuB,CAAC,OAAe;QACnC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;KAC7C;IAED,OAAO;QACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC5B;IAEO,QAAQ,CAAC,GAAW,EAAE,KAAU;QACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,kCAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,KAAE,CAAC,GAAG,GAAG,KAAK,IAAG,EAAE;YAC1E,UAAU,EAAE,IAAI,CAAC,KAAK;YACtB,mBAAmB,EAAE,OAAO;SAC/B,CAAC,CAAC;KACN;;;YAjGJ,SAAS,SAAC;gBACP,QAAQ,EAAE,yBAAyB;gBACnC,sqCAAmD;gBAEnD,eAAe,EAAE,uBAAuB,CAAC,MAAM;;aAClD;;;YApBQ,cAAc;YAAE,MAAM;YAatB,WAAW;;;2BASf,KAAK;6BACL,YAAY,SAAC,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;;MCSlC,yBACT,SAAQ,mBAAwC;IAUhD,YACI,MAAc,EACd,KAAqB,EACrB,mBAAwC,EAChC,cAAiC,EAC/B,WAAwB,EAC1B,WAAwB,EACxB,mBAAwC,EACxC,YAA0B;QAElC,KAAK,CAAC,KAAK,EAAE,MAAM,EAAE,mBAAmB,EAAE,WAAW,CAAC,CAAC;QAN/C,mBAAc,GAAd,cAAc,CAAmB;QAC/B,gBAAW,GAAX,WAAW,CAAa;QAC1B,gBAAW,GAAX,WAAW,CAAa;QACxB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,iBAAY,GAAZ,YAAY,CAAc;QAdtC,iBAAY,GAAgD,EAAE,CAAC;QAC/D,YAAO,GAA4B,EAAE,CAAC;QACtC,eAAU,GAAsC,EAAE,CAAC;QAC1C,qBAAgB,GAAG,CAAC,UAAU,CAAC,aAAa,EAAE,UAAU,CAAC,gBAAgB,CAAC,CAAC;QAchF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC;QAC5D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,IAAI,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YAC/B,IAAI,EAAE,EAAE;YACR,WAAW,EAAE,EAAE;YACf,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;YACnC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAChC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,KAAK,sCAAW,IAAI,KAAE,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE,IAAG,EAAE,EAAE,CAAC,CACjF;SACJ,CAAC,CAAC;KACN;IAED,QAAQ;QACJ,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,oBAAoB,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG;YACpE,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,iBAAiB,CAAC;SAC3C,CAAC,CAAC;KACN;IAED,WAAW;QACP,IAAI,CAAC,OAAO,EAAE,CAAC;KAClB;IAED,mBAAmB,CAAC,MAA6B;QAC7C,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC;KAC5D;IAED,gBAAgB,CAAC,IAAY;QACzB,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC,CAAC;KACxD;IAED,aAAa;QACT,OAAO,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC;KACpD;;;;IAKD,UAAU,CAAC,SAAiB;QACxB,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC;aAC1C,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CAAC,CAAC,CAAC,MAAM,EAAE,YAAY,CAAC;YAC9B,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YAClD,MAAM,kBAAkB,GAAG,eAAe,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;YACjE,MAAM,kBAAkB,GAAG,CAAC,kBAAkB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC;YAC3E,IAAI,WAAW,IAAI,WAAW,CAAC,QAAQ,IAAI,kBAAkB,EAAE;gBAC3D,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC,GAAG,SAAS,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;aAC9D;SACJ,CAAC,CAAC;KACV;IAED,SAAS,CAAC,gBAAuC;QAC7C,MAAM,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAc,CAAC;QACjE,MAAM,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAClF,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YACd,MAAM,QAAQ,GAAG,gBAAgB,CAAC,IAAI,CAAC,MAAM,CACzC,CAAC,MAAM,EAAE,GAAG,sCACL,MAAM,KACT,CAAC,GAAG,CAAC,IAAI,GAAG,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,IAC1C,EACF,EAAE,CACL,CAAC;YACF,YAAY,CAAC,IAAI,CACb,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;gBACrB,IAAI,EAAE,gBAAgB,CAAC,IAAI;gBAC3B,IAAI,EAAE,QAAQ;aACjB,CAAC,CACL,CAAC;YACF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;gBACd,IAAI,EAAE,gBAAgB,CAAC,IAAI;gBAC3B,IAAI,EAAE,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,iBAAiB,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;aAC9F,CAAC,CAAC;SACN;KACJ;IAED,YAAY,CAAC,gBAAuC;QAChD,MAAM,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAc,CAAC;QACjE,MAAM,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAClF,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YACd,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAC7B,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SACjC;KACJ;IAED,MAAM;QACF,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE;YACxB,OAAO;SACV;QACD,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC;aAC1C,IAAI,CACD,IAAI,CAAC,CAAC,CAAC,EACP,QAAQ,CAAC,CAAC,CAAC,QAAQ,EAAE,YAAY,CAAC;YAC9B,MAAM,KAAK,GAAG,IAAI,CAAC,oBAAoB,CACnC,QAAQ,EACR,IAAI,CAAC,UAAU,EACf,YAAY,CACU,CAAC;YAC3B,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAC9D,IAAI,QAAQ,EAAE;gBACV,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;aAC7B;YACD,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;SAC9D,CAAC,CACL;aACA,SAAS,CACN,IAAI;YACA,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAACA,MAAC,CAAC,8BAA8B,CAAC,EAAE;gBAChE,MAAM,EAAE,YAAY;aACvB,CAAC,CAAC;YACH,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC;YACjC,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;YACnC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;SACvF,EACD,GAAG;YACC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAACA,MAAC,CAAC,4BAA4B,CAAC,EAAE;gBAC5D,MAAM,EAAE,YAAY;aACvB,CAAC,CAAC;SACN,CACJ,CAAC;KACT;IAED,IAAI;QACA,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC;aAC1C,IAAI,CACD,IAAI,CAAC,CAAC,CAAC,EACP,QAAQ,CAAC,CAAC,CAAC,QAAQ,EAAE,YAAY,CAAC;YAC9B,MAAM,KAAK,GAAG,IAAI,CAAC,oBAAoB,CACnC,QAAQ,EACR,IAAI,CAAC,UAAU,EACf,YAAY,CACU,CAAC;YAC3B,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;SAC9D,CAAC,CACL;aACA,SAAS,CACN;YACI,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC;YACjC,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;YACnC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAACA,MAAC,CAAC,8BAA8B,CAAC,EAAE;gBAChE,MAAM,EAAE,YAAY;aACvB,CAAC,CAAC;YACH,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;SACpC,EACD,GAAG;YACC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAACA,MAAC,CAAC,4BAA4B,CAAC,EAAE;gBAC5D,MAAM,EAAE,YAAY;aACvB,CAAC,CAAC;SACN,CACJ,CAAC;KACT;IAED,aAAa;QACT,OAAO,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC;KACjG;;;;IAKS,aAAa,CAAC,MAA2B,EAAE,YAA0B;QAC3E,MAAM,kBAAkB,GAAG,eAAe,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;QAEjE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;YACvB,IAAI,EAAE,kBAAkB,GAAG,kBAAkB,CAAC,IAAI,GAAG,EAAE;YACvD,IAAI,EAAE,kBAAkB,GAAG,kBAAkB,CAAC,IAAI,GAAG,EAAE;YACvD,WAAW,EAAE,kBAAkB,GAAG,kBAAkB,CAAC,WAAW,GAAG,EAAE;YACrE,OAAO,EAAE,CAAC,MAAM,CAAC,SAAS;SAC7B,CAAC,CAAC;QAEH,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;QAE/C,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;YAC1B,MAAM,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,cAAc,CAAC,CAAc,CAAC;YAE7E,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,YAAY,EAAE;gBACtC,MAAM,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC;gBAC1B,MAAM,KAAK,GACP,QAAQ,CAAC,IAAI,KAAK,cAAc;sBACzB,kBAA0B,CAAC,YAAY,CAAC,GAAG,CAAC;sBAC5C,MAAc,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;gBAC5C,MAAM,OAAO,GAAG,iBAAiB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBAC3C,IAAI,OAAO,EAAE;oBACT,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;iBAC7B;aACJ;SACJ;KACJ;;;;;IAMO,oBAAoB,CACxB,QAA6B,EAC7B,IAAe,EACf,YAA0B;;QAE1B,MAAM,eAAe,GAAG,yBAAyB,CAAC;YAC9C,YAAY,EAAE,QAAQ;YACtB,aAAa,EAAE,IAAI,CAAC,KAAK;YACzB,iBAAiB,EAAE,IAAI,CAAC,YAAY;YACpC,YAAY;YACZ,kBAAkB,EAAE;gBAChB,YAAY;gBACZ,IAAI,EAAE,QAAQ,CAAC,IAAI,IAAI,EAAE;gBACzB,IAAI,EAAE,QAAQ,CAAC,IAAI,IAAI,EAAE;gBACzB,WAAW,EAAE,QAAQ,CAAC,WAAW,IAAI,EAAE;aAC1C;SACJ,CAAC,CAAC;QACH,uCACO,eAAe,KAClB,QAAQ,QAAE,IAAI,CAAC,YAAY,CAAC,MAAM,0CAAE,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,GACjD,eAAe,QAAE,IAAI,CAAC,YAAY,CAAC,aAAa,0CAAE,EAAE,EACpD,SAAS,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAC9B,OAAO,EAAE,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,IAClF;KACL;;;;IAKO,qBAAqB,CACzB,UAAmC,EACnC,mBAAwB;QAExB,OAAO,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;YACvB,OAAO;gBACH,IAAI,EAAE,CAAC,CAAC,IAAI;gBACZ,SAAS,EAAE,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,KAAU,EAAE,CAAC,MAAM;oBAC1E,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI;oBACpB,KAAK,EAAE,oBAAoB,CAAC,KAAK,CAAC;iBACrC,CAAC,CAAC;aACN,CAAC;SACL,CAAC,CAAC;KACN;;;YAxQJ,SAAS,SAAC;gBACP,QAAQ,EAAE,uBAAuB;gBACjC,2yMAAiD;gBAEjD,eAAe,EAAE,uBAAuB,CAAC,MAAM;;aAClD;;;YAlCwB,MAAM;YAAtB,cAAc;YAoBnB,mBAAmB;YA3BnB,iBAAiB;YAmBjB,WAAW;YAbK,WAAW;YAmB3B,mBAAmB;YADnB,YAAY;;;gCA2BX,SAAS,SAAC,oBAAoB;;;MChCtB,uBAAuB;IAOhC,YACY,WAAwB,EACxB,mBAAwC,EACxC,YAA0B,EAC1B,MAAc,EACd,KAAqB;QAJrB,gBAAW,GAAX,WAAW,CAAa;QACxB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QARjC,cAAS,GAAG,KAAK,CAAC;KASd;IAEJ,QAAQ;QACJ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,sBAAsB,EAAE,CAAC;QAChG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9F,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAC/C,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,EAC7B,oBAAoB,EAAE,CACzB,CAAC;QAEF,IAAI,CAAC,sBAAsB,GAAG,aAAa,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CACnF,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,WAAW,CAAC;YAClB,IAAI,EAAE,EAAE;gBACJ,MAAM,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;gBACjD,OAAO,KAAK,GAAG,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC;aAClC;YACD,OAAO,EAAE,CAAC;SACb,CAAC,CACL,CAAC;KACL;IAED,WAAW;QACP,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KACtC;IAED,WAAW,CAAC,KAAqB;QAC7B,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC;YAC1D,IAAI,EAAE;gBACF,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAACA,MAAC,CAAC,6BAA6B,CAAC,CAAC,CAAC;gBACnE,IAAI,CAAC,OAAO,EAAE,CAAC;aAClB;YACD,KAAK,EAAE,GAAG;gBACN,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAACA,MAAC,CAAC,kCAAkC,CAAC,CAAC,CAAC;aACzE;SACJ,CAAC,CAAC;KACN;IAED,gBAAgB,CAAC,EAAU;QACvB,IAAI,CAAC,MAAM;aACN,IAAI,CACD,IAAI,CAAC,CAAC,CAAC,EACP,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EACvE,SAAS,CAAC,WAAW;YACjB,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;gBAC5B,KAAK,EAAEA,MAAC,CAAC,mCAAmC,CAAC;gBAC7C,IAAI,EAAE,WAAW;sBACXA,MAAC,CAAC,qDAAqD,CAAC;sBACxD,SAAS;gBACf,OAAO,EAAE;oBACL,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAEA,MAAC,CAAC,eAAe,CAAC,EAAE;oBAChD,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAEA,MAAC,CAAC,eAAe,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE;iBACnE;aACJ,CAAC,CAAC;SACN,CAAC,EACF,SAAS,CAAC,QAAQ,KAAK,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,gBAAgB,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC,CAC/F;aACA,SAAS,CACN;YACI,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAACA,MAAC,CAAC,8BAA8B,CAAC,EAAE;gBAChE,MAAM,EAAE,YAAY;aACvB,CAAC,CAAC;YACH,IAAI,CAAC,OAAO,EAAE,CAAC;SAClB,EACD,GAAG;YACC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAACA,MAAC,CAAC,4BAA4B,CAAC,EAAE;gBAC5D,MAAM,EAAE,YAAY;aACvB,CAAC,CAAC;SACN,CACJ,CAAC;KACT;IAED,aAAa;QACT,MAAM,MAAM,qBAAQ,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAE,CAAC;QACjD,OAAO,MAAM,CAAC,QAAQ,CAAC;QACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,mBAAmB,EAAE,UAAU,EAAE,CAAC,CAAC;KACrG;IAEO,OAAO;QACX,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;KAClC;;;YAlGJ,SAAS,SAAC;gBACP,QAAQ,EAAE,qBAAqB;gBAC/B,2uDAA+C;gBAE/C,eAAe,EAAE,uBAAuB,CAAC,MAAM;;aAClD;;;YAhBG,WAAW;YAGX,mBAAmB;YADnB,YAAY;YALS,MAAM;YAAtB,cAAc;;;MCgCV,oBACT,SAAQ,mBAA6C;IAQrD,YACI,MAAc,EACd,KAAqB,EACrB,mBAAwC,EAChC,cAAiC,EAC/B,WAAwB,EAC1B,WAAwB,EACxB,mBAAwC,EACxC,YAA0B;QAElC,KAAK,CAAC,KAAK,EAAE,MAAM,EAAE,mBAAmB,EAAE,WAAW,CAAC,CAAC;QAN/C,mBAAc,GAAd,cAAc,CAAmB;QAC/B,gBAAW,GAAX,WAAW,CAAa;QAC1B,gBAAW,GAAX,WAAW,CAAa;QACxB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,iBAAY,GAAZ,YAAY,CAAc;QAV7B,qBAAgB,GAAG,CAAC,UAAU,CAAC,aAAa,EAAE,UAAU,CAAC,WAAW,CAAC,CAAC;QAa3E,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;QACvD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC;QACjE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBAC1B,IAAI,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;gBAC/B,IAAI,EAAE,EAAE;gBACR,OAAO,EAAE,IAAI;gBACb,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAChC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,KAAK,sCAAW,IAAI,KAAE,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE,IAAG,EAAE,EAAE,CAAC,CACjF;aACJ,CAAC;YACF,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;SACrC,CAAC,CAAC;KACN;IAED,QAAQ;QACJ,IAAI,CAAC,IAAI,EAAE,CAAC;KACf;IAED,WAAW;QACP,IAAI,CAAC,OAAO,EAAE,CAAC;KAClB;IAED,UAAU,CAAC,WAAmB,EAAE,SAAiB;QAC7C,IAAI,CAAC,WAAW,EAAE;YACd,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;YAC3D,IAAI,WAAW,IAAI,WAAW,CAAC,QAAQ,EAAE;gBACrC,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC;aACzD;SACJ;KACJ;IAED,eAAe,CAAC,WAAmB,EAAE,SAAiB,EAAE,KAAa;QACjE,IAAI,CAAC,WAAW,EAAE;YACd,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;YACnE,IAAI,WAAW,IAAI,WAAW,CAAC,QAAQ,EAAE;gBACrC,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC;aACzD;SACJ;KACJ;IAED,gBAAgB,CAAC,IAAY;QACzB,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,cAAc,EAAE,IAAI,CAAC,CAAC,CAAC;KACjE;IAED,qBAAqB,CAAC,KAAa,EAAE,IAAY;QAC7C,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,IAAI,CAAC,CAAC,CAAC;KACzE;IAED,kBAAkB;QACd,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAc,CAAC;KACrD;IAED,aAAa;QACT,MAAM,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAqB,CAAC;QAC1E,IAAI,eAAe,EAAE;YACjB,eAAe,CAAC,MAAM,CAClB,eAAe,CAAC,MAAM,EACtB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACnB,EAAE,EAAE,EAAE;gBACN,IAAI,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;gBAC/B,IAAI,EAAE,EAAE;aACX,CAAC,CACL,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC;SAC5C;KACJ;IAED,MAAM;QACF,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAC/C,IAAI,CAAC,SAAS,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YAChC,OAAO;SACV;QACD,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC;aAC1C,IAAI,CACD,IAAI,CAAC,CAAC,CAAC,EACP,QAAQ,CAAC,CAAC,CAAC,KAAK,EAAE,YAAY,CAAC;YAC3B,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CACjC,KAAK,EACL,SAAsB,EACtB,YAAY,CACK,CAAC;YACtB,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;SACvD,CAAC,EACF,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CACrF;aACA,SAAS,CACN,IAAI;YACA,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAACA,MAAC,CAAC,8BAA8B,CAAC,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;YACzF,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC;YACjC,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;YACnC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;SAClF,EACD,GAAG;YACC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAACA,MAAC,CAAC,4BAA4B,CAAC,EAAE;gBAC5D,MAAM,EAAE,OAAO;aAClB,CAAC,CAAC;SACN,CACJ,CAAC;KACT;IAED,IAAI;QACA,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC;aAC1C,IAAI,CACD,IAAI,CAAC,CAAC,CAAC,EACP,QAAQ,CAAC,CAAC,CAAC,KAAK,EAAE,YAAY,CAAC;YAC3B,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YAChD,MAAM,gBAAgB,GAA2B,EAAE,CAAC;YAEpD,IAAI,UAAU,IAAI,UAAU,CAAC,KAAK,EAAE;gBAChC,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CACjC,KAAK,EACL,UAAuB,EACvB,YAAY,CACK,CAAC;gBACtB,IAAI,QAAQ,EAAE;oBACV,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;iBACvE;aACJ;YACD,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAClD,IAAI,WAAW,IAAI,WAAW,CAAC,KAAK,EAAE;gBAClC,MAAM,SAAS,GAA6B,WAAyB,CAAC,QAAQ;qBACzE,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC;qBACxB,GAAG,CAAC,CAAC,KAAK;oBACP,OAAO,EAAE,KAAK,CAAC,EAAE;oBACjB,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI;oBAClB,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,YAAY,EAAE,CAAC;iBACvD,CAAC,CAAC,CAAC;gBACR,IAAI,SAAS,CAAC,MAAM,EAAE;oBAClB,gBAAgB,CAAC,IAAI,CACjB,IAAI,CAAC,WAAW,CAAC,KAAK;yBACjB,iBAAiB,CAAC,SAAS,CAAC;yBAC5B,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAC/E,CAAC;iBACL;gBACD,MAAM,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAC5C,KAAK,EACL,WAAwB,EACxB,YAAY,CACf,CAAC;gBACF,IAAI,aAAa,CAAC,MAAM,EAAE;oBACtB,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC,CAAC;iBAClF;aACJ;YAED,OAAO,QAAQ,CAAC,gBAAgB,CAAC,CAAC;SACrC,CAAC,EACF,SAAS,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,CACjE;aACA,SAAS,CACN;YACI,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC;YACjC,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;YACnC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAACA,MAAC,CAAC,8BAA8B,CAAC,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;SAC5F,EACD,GAAG;YACC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAACA,MAAC,CAAC,4BAA4B,CAAC,EAAE;gBAC5D,MAAM,EAAE,OAAO;aAClB,CAAC,CAAC;SACN,CACJ,CAAC;KACT;IAED,gBAAgB,CAAC,YAAgC,EAAE,KAAa;QAC5D,IAAI,CAAC,YAAY,EAAE;;YAEf,MAAM,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAqB,CAAC;YAC1E,IAAI,eAAe,EAAE;gBACjB,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aACnC;YACD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC7B,OAAO;SACV;QACD,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC;aAChC,IAAI,CACD,SAAS,CAAC,QAAQ;YACd,IAAI,QAAQ,CAAC,MAAM,KAAK,cAAc,CAAC,OAAO,EAAE;gBAC5C,OAAO,CAAC,IAAI,CAAC,CAAC;aACjB;iBAAM;gBACH,OAAO,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,QAAQ,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,IAAI,CACrE,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,cAAc,CAAC,OAAO,CAAC,CAChD,CAAC;aACL;SACJ,CAAC,EACF,SAAS,CAAC,OAAO,KAAK,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC,CAC1F;aACA,SAAS,CACN;YACI,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAACA,MAAC,CAAC,8BAA8B,CAAC,EAAE;gBAChE,MAAM,EAAE,YAAY;aACvB,CAAC,CAAC;SACN,EACD,GAAG;YACC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAACA,MAAC,CAAC,4BAA4B,CAAC,EAAE;gBAC5D,MAAM,EAAE,YAAY;aACvB,CAAC,CAAC;SACN,CACJ,CAAC;KACT;IAEO,kBAAkB,CAAC,YAAoB,EAAE,OAAgB;QAC7D,OAAO,IAAI,CAAC,YAAY;aACnB,MAAM,CAAC;YACJ,KAAK,EAAEA,MAAC,CAAC,oCAAoC,CAAC;YAC9C,IAAI,EAAE,OAAO;YACb,OAAO,EAAE;gBACL,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAEA,MAAC,CAAC,eAAe,CAAC,EAAE;gBAChD,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAEA,MAAC,CAAC,eAAe,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE;aACnE;SACJ,CAAC;aACD,IAAI,CACD,SAAS,CAAC,MAAM,IACZ,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,KAAK,CACvF,EACD,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAC7C,CAAC;KACT;;;;IAKS,aAAa,CAAC,KAA+B,EAAE,YAA0B;;QAC/E,MAAM,kBAAkB,GAAG,eAAe,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;QAEhE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;YACvB,KAAK,EAAE;gBACH,IAAI,EAAE,KAAK,CAAC,IAAI;gBAChB,OAAO,EAAE,CAAC,KAAK,CAAC,SAAS;gBACzB,IAAI,QAAE,kBAAkB,aAAlB,kBAAkB,uBAAlB,kBAAkB,CAAE,IAAI,mCAAI,EAAE;aACvC;SACJ,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;YAC1B,MAAM,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,cAAc,CAAC,CAAc,CAAC;YAEtF,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,YAAY,EAAE;gBACtC,MAAM,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC;gBAC1B,MAAM,KAAK,GACP,QAAQ,CAAC,IAAI,KAAK,cAAc;sBACzB,kBAA0B,CAAC,YAAY,CAAC,GAAG,CAAC;sBAC5C,KAAa,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;gBAC3C,MAAM,OAAO,GAAG,iBAAiB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBAC3C,IAAI,OAAO,EAAE;oBACT,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;iBAC7B;aACJ;SACJ;QAED,MAAM,sBAAsB,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAc,CAAC;QAC1E,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;QAChC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC;YAC1B,MAAM,gBAAgB,GAAG,eAAe,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;YAC9D,MAAM,KAAK,GAAG;gBACV,EAAE,EAAE,KAAK,CAAC,EAAE;gBACZ,IAAI,EAAE,KAAK,CAAC,IAAI;gBAChB,IAAI,EAAE,gBAAgB,GAAG,gBAAgB,CAAC,IAAI,GAAG,EAAE;aACtD,CAAC;YACF,MAAM,YAAY,GAAG,sBAAsB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAClD,IAAI,YAAY,EAAE;gBACd,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aAChC;iBAAM;gBACH,sBAAsB,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;aACnE;YACD,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE;gBAC/B,IAAI,sBAAsB,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,EAAE,cAAc,CAAC,CAAc,CAAC;gBAC7F,IAAI,CAAC,sBAAsB,EAAE;oBACzB,sBAAsB,GAAG,IAAI,SAAS,CAAC,EAAE,CAAC,CAAC;oBAC1C,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAe,CAAC,UAAU,CACxD,cAAc,EACd,sBAAsB,CACzB,CAAC;iBACL;gBAED,IAAI,sBAAsB,EAAE;oBACxB,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,iBAAiB,EAAE;wBAC3C,MAAM,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC;wBAC1B,MAAM,UAAU,GACZ,QAAQ,CAAC,IAAI,KAAK,cAAc;8BACzB,gBAAwB,CAAC,YAAY,CAAC,GAAG,CAAC;8BAC1C,KAAa,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;wBAC3C,MAAM,OAAO,GAAG,sBAAsB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBAChD,IAAI,OAAO,EAAE;4BACT,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;yBAChC;6BAAM;4BACH,sBAAsB,CAAC,UAAU,CAAC,GAAG,EAAE,IAAI,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC;yBACvE;qBACJ;iBACJ;aACJ;SACJ,CAAC,CAAC;KACN;;;;;IAMO,eAAe,CACnB,KAA+B,EAC/B,cAAyB,EACzB,YAA0B;QAE1B,MAAM,KAAK,GAAG,yBAAyB,CAAC;YACpC,YAAY,EAAE,KAAK;YACnB,aAAa,EAAE,cAAc,CAAC,KAAK;YACnC,iBAAiB,EAAE,IAAI,CAAC,YAAY;YACpC,YAAY;YACZ,kBAAkB,EAAE;gBAChB,YAAY;gBACZ,IAAI,EAAE,KAAK,CAAC,IAAI,IAAI,EAAE;aACzB;SACJ,CAAC,CAAC;QACH,KAAK,CAAC,SAAS,GAAG,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,CAAC;QAChD,OAAO,KAAK,CAAC;KAChB;;;;;IAMO,qBAAqB,CACzB,KAA+B,EAC/B,eAA0B,EAC1B,YAA0B;QAE1B,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;YACzC,MAAM,OAAO,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;YAClD,OAAO,OAAO,IAAI,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;SACvD,CAAC,CAAC;QACH,MAAM,gBAAgB,GAAG,eAAe,CAAC,QAAQ;aAC5C,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC;aAClC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC;QAEvB,IAAI,WAAW,CAAC,MAAM,KAAK,gBAAgB,CAAC,MAAM,EAAE;YAChD,MAAM,IAAI,KAAK,CAACA,MAAC,CAAC,4CAA4C,CAAC,CAAC,CAAC;SACpE;QACD,OAAO,WAAW;aACb,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;YACV,OAAO,yBAAyB,CAAC;gBAC7B,YAAY,EAAE,KAAK;gBACnB,aAAa,EAAE,gBAAgB,CAAC,CAAC,CAAC;gBAClC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;gBACzC,YAAY;gBACZ,kBAAkB,EAAE;oBAChB,YAAY;oBACZ,IAAI,EAAE,EAAE;iBACX;aACJ,CAAC,CAAC;SACN,CAAC;aACD,MAAM,CAAC,kBAAkB,CAAC,CAAC;KACnC;;;YAvXJ,SAAS,SAAC;gBACP,QAAQ,EAAE,kBAAkB;gBAC5B,65OAA4C;gBAE5C,eAAe,EAAE,uBAAuB,CAAC,MAAM;;aAClD;;;YA9BwB,MAAM;YAAtB,cAAc;YAgBnB,mBAAmB;YAlBW,iBAAiB;YAU/C,WAAW;YATK,WAAW;YAe3B,mBAAmB;YADnB,YAAY;;;MCCH,kBAAmB,SAAQ,iBAAyD;IAG7F,YACY,WAAwB,EACxB,YAA0B,EAC1B,mBAAwC,EAChD,MAAc,EACd,KAAqB;QAErB,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QANb,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,wBAAmB,GAAnB,mBAAmB,CAAqB;QAL3C,iBAAY,GAAG,CAAC,CAAC;QAC1B,iBAAY,GAA6B,EAAE,CAAC;QASxC,KAAK,CAAC,UAAU,CACZ,CAAC,GAAG,IAAW,KAAK,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,CAAC,sBAAsB,EAAE,EACtF,IAAI,IAAI,IAAI,CAAC,MAAM,CACtB,CAAC;KACL;IAED,kBAAkB,CAAC,KAAyB;QACxC,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE;YACrD,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;SACnD;aAAM;YACH,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;SACrD;KACJ;IAED,WAAW,CAAC,YAAoB;QAC5B,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC;aAChC,IAAI,CACD,SAAS,CAAC,QAAQ;YACd,IAAI,QAAQ,CAAC,MAAM,KAAK,cAAc,CAAC,OAAO,EAAE;gBAC5C,OAAO,CAAC,IAAI,CAAC,CAAC;aACjB;iBAAM;gBACH,OAAO,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,QAAQ,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,IAAI,CACrE,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,cAAc,CAAC,OAAO,CAAC,CAChD,CAAC;aACL;SACJ,CAAC;;QAEF,SAAS,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,CACjE;aACA,SAAS,CACN;YACI,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAACA,MAAC,CAAC,8BAA8B,CAAC,EAAE;gBAChE,MAAM,EAAE,YAAY;aACvB,CAAC,CAAC;YACH,IAAI,CAAC,OAAO,EAAE,CAAC;SAClB,EACD,GAAG;YACC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAACA,MAAC,CAAC,4BAA4B,CAAC,EAAE;gBAC5D,MAAM,EAAE,YAAY;aACvB,CAAC,CAAC;SACN,CACJ,CAAC;KACT;IAEO,kBAAkB,CAAC,OAAe,EAAE,OAAgB;QACxD,OAAO,IAAI,CAAC,YAAY;aACnB,MAAM,CAAC;YACJ,KAAK,EAAEA,MAAC,CAAC,8BAA8B,CAAC;YACxC,IAAI,EAAE,OAAO;YACb,OAAO,EAAE;gBACL,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAEA,MAAC,CAAC,eAAe,CAAC,EAAE;gBAChD,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAEA,MAAC,CAAC,eAAe,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE;aACnE;SACJ,CAAC;aACD,IAAI,CACD,SAAS,CAAC,GAAG,KAAK,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,CAAC,EACxF,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,WAAW,CAAC,CAC9B,CAAC;KACT;;;YA1EJ,SAAS,SAAC;gBACP,QAAQ,EAAE,gBAAgB;gBAC1B,+8HAA0C;;aAE7C;;;YATQ,WAAW;YACX,YAAY;YAFZ,mBAAmB;YAJH,MAAM;YAAtB,cAAc;;;ACDvB;;;;;SAKgB,WAAW,CAAC,MAAiC,EAAE,MAAc,EAAE,OAAe;IAC1F,IAAI,CAAC,MAAM,EAAE;QACT,OAAO,EAAE,CAAC;KACb;IACD,MAAM,SAAS,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAC7C,IAAI,SAAS,KAAK,CAAC,CAAC,EAAE;QAClB,OAAO,MAAM,CAAC;KACjB;IACD,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;IACzC,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IAC/D,OAAO,IAAI,GAAG,IAAI,CAAC;AACvB;;ACSA;;;;MAOa,oBAAoB;IAC7B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;KAAI;IAEhD,SAAS;QACL,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KACrF;IAED,gBAAgB;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ;aAC3B,gBAAgB,EAAE;aAClB,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,aAAa,CAAC;aACrC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;KAC7B;IAED,yBAAyB,CACrB,KAAyB,EACzB,oBAAiD,EACjD,YAA0B;QAE1B,MAAM,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACrE,MAAM,oBAAoB,GAAG,oBAAoB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC1F,MAAM,mBAAmB,GAAG,IAAI,CAAC,yBAAyB,CAAC,oBAAoB,EAAE,YAAY,CAAC,CAAC;QAE/F,OAAO,QAAQ,CAAC,cAAc,EAAE,mBAAmB,CAAC,CAAC,IAAI,CACrD,QAAQ,CAAC,CAAC,CAAC,EAAE,aAAa,EAAE,EAAE,YAAY,CAAC;YACvC,MAAM,oBAAoB,GAAG,YAAY,CAAC,MAAM;kBAC1C,QAAQ,CACJ,YAAY,CAAC,GAAG,CAAC,WAAW;oBACxB,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,uBAAuB,CAAC;wBACpD,SAAS,EAAE,aAAa,CAAC,EAAE;wBAC3B,aAAa,EAAE,WAAW,CAAC,EAAE;qBAChC,CAAC,CAAC;iBACN,CAAC,CACL;kBACD,EAAE,CAAC,EAAE,CAAC,CAAC;YACb,OAAO,oBAAoB,CAAC,IAAI,CAC5B,GAAG,CAAC;gBACA,OAAO,EAAE,aAAa,EAAE,YAAY,EAAE,CAAC;aAC1C,CAAC,CACL,CAAC;SACL,CAAC,EACF,QAAQ,CAAC,CAAC,EAAE,aAAa,EAAE,YAAY,EAAE;YACrC,MAAM,QAAQ,GAAG,oBAAoB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;gBAChD,MAAM,SAAS,GAAG,YAAY,CAAC,MAAM;sBAC/B,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,KAAK;wBACjC,MAAM,MAAM,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC;wBAC5E,IAAI,CAAC,MAAM,EAAE;4BACT,MAAM,IAAI,KAAK,CACX,4CAA4C,UAAU,yBAAyB,CAClF,CAAC;yBACL;wBACD,OAAO,MAAM,CAAC,EAAE,CAAC;qBACpB,CAAC;sBACF,EAAE,CAAC;gBACT,uCACO,CAAC,KACJ,SAAS,IACX;aACL,CAAC,CAAC;YACH,MAAM,OAAO,GAAG,YAAY,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAC5F,OAAO,IAAI,CAAC,qBAAqB,CAAC,aAAa,EAAE,QAAQ,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC;SACrF,CAAC,CACL,CAAC;KACL;IAED,yBAAyB,CAAC,MAAiD,EAAE,YAA0B;QACnG,OAAO,MAAM,CAAC,MAAM;cACd,QAAQ,CACJ,MAAM,CAAC,GAAG,CAAC,CAAC;gBACR,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO;qBAC1B,yBAAyB,CAAC;oBACvB,IAAI,EAAE,eAAe,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;oBAClC,YAAY,EAAE,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;oBAC9C,OAAO,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK;wBACxB,IAAI,EAAE,eAAe,CAAC,CAAC,EAAE,GAAG,CAAC;wBAC7B,YAAY,EAAE,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;qBAC5C,CAAC,CAAC;iBACN,CAAC;qBACD,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC;aACzD,CAAC,CACL;cACD,EAAE,CAAC,EAAE,CAAC,CAAC;KAChB;IAED,qBAAqB,CACjB,OAAqC,EACrC,WAAsF,EACtF,OAA4C,EAC5C,YAA0B;QAE1B,MAAM,QAAQ,GAAgC,WAAW,CAAC,GAAG,CAAC,CAAC;YAC3D,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM;kBACrB,GAAG,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC,SAAS;qBACzB,GAAG,CAAC,EAAE,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;qBACzC,MAAM,CAAC,kBAAkB,CAAC;qBAC1B,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;qBAChB,IAAI,CAAC,GAAG,CAAC,EAAE;kBAChB,OAAO,CAAC,IAAI,CAAC;YACnB,OAAO;gBACH,SAAS,EAAE,OAAO,CAAC,EAAE;gBACrB,KAAK,EAAE,CAAC,CAAC,KAAK;gBACd,GAAG,EAAE,CAAC,CAAC,GAAG;gBACV,WAAW,EAAE,CAAC,CAAC,KAAK;gBACpB,YAAY,EAAE;oBACV;wBACI,YAAY;wBACZ,IAAI;qBACP;iBACJ;gBACD,SAAS,EAAE,CAAC,CAAC,SAAS;aACzB,CAAC;SACL,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC,IAAI,CAChE,GAAG,CAAC,CAAC,EAAE,qBAAqB,EAAE,MAAM;YAChC,qBAAqB;YACrB,SAAS,EAAE,OAAO,CAAC,EAAE;SACxB,CAAC,CAAC,CACN,CAAC;KACL;IAED,aAAa,CAAC,aAMb;;QACG,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAE,aAAa,EAAE,GAAG,aAAa,CAAC;QACzF,MAAM,gBAAgB,GAA6E,EAAE,CAAC;QACtG,MAAM,mBAAmB,GAAG,aAAa,IAAI,EAAE,CAAC;QAChD,IAAI,YAAY,EAAE;YACd,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,CAAC;YAE5E,MAAM,cAAc,SAAG,eAAe,CAAC,OAAO,EAAE,YAAY,CAAC,0CAAE,IAAI,CAAC;YACpE,MAAM,cAAc,SAAG,eAAe,CAAC,YAAY,EAAE,YAAY,CAAC,0CAAE,IAAI,CAAC;YACzE,IAAI,cAAc,IAAI,cAAc,IAAI,UAAU,EAAE;gBAChD,KAAK,MAAM,OAAO,IAAI,OAAO,CAAC,QAAQ,EAAE;oBACpC,MAAM,kBAAkB,GAAG,OAAA,eAAe,CAAC,OAAO,EAAE,YAAY,CAAC,0CAAE,IAAI,KAAI,EAAE,CAAC;oBAC9E,IAAI,YAAuC,CAAC;oBAC5C,MAAM,oBAAoB,GAAG,mBAAmB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,OAAO,CAAC,EAAE,CAAC,CAAC;oBAChF,IAAI,oBAAoB,EAAE;wBACtB,YAAY,GAAG,oBAAoB,CAAC;qBACvC;yBAAM;wBACH,YAAY,GAAG;4BACX,EAAE,EAAE,OAAO,CAAC,EAAE;4BACd,YAAY,EAAE,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,kBAAkB,EAAE,CAAC;yBAC7D,CAAC;wBACF,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;qBAC1C;oBACD,MAAM,kBAAkB,GAAG,eAAe,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;oBACvE,IAAI,kBAAkB,EAAE;wBACpB,kBAAkB,CAAC,IAAI,GAAG,WAAW,CACjC,kBAAkB,CAAC,IAAI,EACvB,cAAc,EACd,cAAc,CACjB,CAAC;qBACL;iBACJ;aACJ;SACJ;QACD,IAAI,mBAAmB,CAAC,MAAM,EAAE;YAC5B,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,qBAAqB,CAAC,mBAAmB,CAAC,CAAC,CAAC;SAC9F;QACD,OAAO,QAAQ,CAAC,gBAAgB,CAAC,CAAC;KACrC;IAED,mBAAmB,CACf,KAAyD,EACzD,OAAqC,EACrC,YAA0B;;QAE1B,IAAI,0BAA0B,GAAoB,EAAE,CAAC,EAAE,CAAC,CAAC;QACzD,IAAI,KAAK,CAAC,UAAU,EAAE;;YAElB,IAAI,aAAiC,CAAC;YACtC,MAAM,aAAa,SAAG,eAAe,CAAC,KAAK,EAAE,YAAY,CAAC,0CAAE,IAAI,CAAC;YACjE,IAAI,CAAC,aAAa,EAAE;gBAChB,0BAA0B,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;aACvC;YACD,MAAM,gBAAgB,GAAgC,EAAE,CAAC;YACzD,KAAK,MAAM,OAAO,IAAI,OAAO,CAAC,QAAQ,EAAE;gBACpC,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE;oBACnD,IAAI,CAAC,aAAa,EAAE;wBAChB,aAAa,SAAG,eAAe,CAC3B,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,CAAC,EAC5C,YAAY,CACf,0CAAE,IAAI,CAAC;qBACX;oBACD,MAAM,WAAW,GAAG,OAAA,eAAe,CAAC,OAAO,EAAE,YAAY,CAAC,0CAAE,IAAI,KAAI,EAAE,CAAC;oBACvE,IAAI,aAAa,IAAI,aAAa,IAAI,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;wBACvE,gBAAgB,CAAC,IAAI,CAAC;4BAClB,EAAE,EAAE,OAAO,CAAC,EAAE;4BACd,YAAY,EAAE;gCACV;oCACI,YAAY;oCACZ,IAAI,EAAE,WAAW,CAAC,WAAW,EAAE,aAAa,EAAE,aAAa,CAAC;iCAC/D;6BACJ;yBACJ,CAAC,CAAC;qBACN;iBACJ;aACJ;YACD,IAAI,gBAAgB,CAAC,MAAM,EAAE;gBACzB,0BAA0B,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,CAAC;aACjG;SACJ;QACD,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO;aAC1B,mBAAmB,CAAC,KAAK,CAAC;aAC1B,IAAI,CAAC,QAAQ,CAAC,MAAM,0BAA0B,CAAC,CAAC,CAAC;KACzD;IAED,oBAAoB,CAAC,EAAU,EAAE,SAAiB;QAC9C,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC,IAAI,CACzD,SAAS,CAAC,MAAM;YACZ,IAAI,MAAM,CAAC,oBAAoB,CAAC,MAAM,KAAK,cAAc,CAAC,OAAO,EAAE;gBAC/D,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC;aACjE;iBAAM;gBACH,OAAO,UAAU,CAAC,MAAM,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;aAC1D;SACJ,CAAC,CACL,CAAC;KACL;;;;YAhOJ,UAAU,SAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;YA3BG,WAAW;;;MCWF,yBAAyB;IAOlC,YAAoB,cAAiC;QAAjC,mBAAc,GAAd,cAAc,CAAmB;QAJrD,mBAAc,GAAiB,EAAE,CAAC;KAIuB;IAEzD,eAAe;QACX,UAAU,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;KAC9C;IAED,YAAY;QACR,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KACzC;IAED,MAAM;QACF,IAAI,CAAC,WAAW,EAAE,CAAC;KACtB;;;YAzBJ,SAAS,SAAC;gBACP,QAAQ,EAAE,wBAAwB;gBAClC,8mBAAkD;gBAElD,eAAe,EAAE,uBAAuB,CAAC,MAAM;;aAClD;;;YAXG,iBAAiB;;;uBAahB,SAAS,SAAC,2BAA2B;;;MCA7B,sCAAsC;IAkB/C,YAAoB,WAAwB,EAAU,mBAAwC;QAA1E,gBAAW,GAAX,WAAW,CAAa;QAAU,wBAAmB,GAAnB,mBAAmB,CAAqB;QAZ9F,uBAAkB,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC;QACxC,6BAAwB,GAAG,IAAI,WAAW,EAAE,CAAC;KAWqD;IAJlG,IAAI,oBAAoB;QACpB,OAAO,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC;KACzC;IAID,QAAQ;QACJ,MAAM,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM;aAC3C,UAAU,EAAE;aACZ,SAAS,CAAC,CAAC,EAAE,UAAU,EAAE,KAAK,UAAU,CAAC,eAAe,CAAC,CAAC;QAC/D,MAAM,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE9F,aAAa,CAAC,gBAAgB,EAAE,YAAY,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,eAAe,EAAE,QAAQ,CAAC;;YAEhF,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,eAAe,CAAE,CAAC;YACpE,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;SACrC,CAAC,CAAC;QAEH,IAAI,CAAC,wBAAwB,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG;YACpD,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;SAC3B,CAAC,CAAC;QAEH,IAAI,CAAC,gBAAgB,GAAG,aAAa,CACjC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,EAC7B,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAC1D,CAAC,IAAI,CACF,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,MAAM,CAAC;YACnB,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK;gBACtB,EAAE,EAAE,CAAC,CAAC,EAAE;gBACR,IAAI,EAAE,CAAC,CAAC,IAAI;gBACZ,KAAK,EAAE,CAAC,CAAC,KAAK;gBACd,YAAY,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,MAAM;aAClC,CAAC,CAAC,CAAC;SACP,CAAC,CACL,CAAC;KACL;IAED,aAAa,CAAC,UAAoB;QAC9B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;KACnF;IAED,MAAM;QACF,MAAM,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QAC7C,IAAI,eAAe,EAAE;YACjB,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE;gBAC5B,IAAI,CAAC,WAAW,CAAC,OAAO;qBACnB,uBAAuB,CAAC;oBACrB,SAAS,EAAE,eAAe,CAAC,EAAE;oBAC7B,UAAU,EAAE,IAAI,CAAC,UAAU;oBAC3B,WAAW,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK;iBAC9C,CAAC;qBACD,SAAS,CAAC;oBACP,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAACA,MAAC,CAAC,2CAA2C,CAAC,EAAE;wBAC7E,OAAO,EAAE,eAAe,CAAC,IAAI;qBAChC,CAAC,CAAC;oBACH,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;iBAC1B,CAAC,CAAC;aACV;iBAAM,IAAI,IAAI,CAAC,iBAAiB,EAAE;gBAC/B,IAAI,CAAC,WAAW,CAAC,OAAO;qBACnB,uBAAuB,CAAC;oBACrB,SAAS,EAAE,eAAe,CAAC,EAAE;oBAC7B,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;oBACzC,WAAW,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK;iBAC9C,CAAC;qBACD,SAAS,CAAC;oBACP,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAACA,MAAC,CAAC,2CAA2C,CAAC,EAAE;wBAC7E,OAAO,EAAE,eAAe,CAAC,IAAI;qBAChC,CAAC,CAAC;oBACH,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;iBAC1B,CAAC,CAAC;aACV;SACJ;KACJ;IAED,MAAM;QACF,IAAI,CAAC,WAAW,EAAE,CAAC;KACtB;IAEa,cAAc,CAAC,IAAY;;YACrC,MAAM,QAAQ,GAA6B,EAAE,CAAC;YAE9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;gBACvE,MAAM,eAAe,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO;qBACjD,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;qBAC9B,SAAS,CAAC,CAAC,EAAE,OAAO,EAAE;oBACnB,MAAM,SAAS,GAAG,OAAO,GAAG,OAAO,CAAC,QAAQ,GAAG,EAAE,CAAC;oBAClD,OAAO,SAAS,CAAC,MAAM,CAAC,CAAC,cACrB,OAAA,IAAI,CAAC,oBAAoB,SAAG,IAAI,CAAC,iBAAiB,0CAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAA,EAAA,CAC5E,CAAC;iBACL,CAAC;qBACD,SAAS,EAAE,CAAC;gBACjB,QAAQ,CAAC,IAAI,CAAC,IAAI,eAAe,IAAI,EAAE,CAAC,CAAC,CAAC;aAC7C;YACD,OAAO,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;SAClC;KAAA;;;YAlHJ,SAAS,SAAC;gBACP,QAAQ,EAAE,uCAAuC;gBACjD,+qGAAiE;gBAEjE,eAAe,EAAE,uBAAuB,CAAC,MAAM;;aAClD;;;YAVQ,WAAW;YADX,mBAAmB;;;MC4Ef,sBACT,SAAQ,mBAAiD;IAsBzD,YACI,KAAqB,EACrB,MAAc,EACd,mBAAwC,EAChC,oBAA0C,EAC1C,WAAwB,EACxB,YAA0B,EAC1B,mBAAwC,EACtC,WAAwB,EAC1B,QAAkB,EAClB,cAAiC;QAEzC,KAAK,CAAC,KAAK,EAAE,MAAM,EAAE,mBAAmB,EAAE,WAAW,CAAC,CAAC;QAR/C,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACtC,gBAAW,GAAX,WAAW,CAAa;QAC1B,aAAQ,GAAR,QAAQ,CAAU;QAClB,mBAAc,GAAd,cAAc,CAAmB;QArB7C,gBAAW,GAAG,IAAI,WAAW,CAAC,EAAE,CAAC,CAAC;QAClC,iBAAY,GAAmB,EAAE,CAAC;QAClC,wBAAmB,GAA4C,EAAE,CAAC;QAIlE,uBAAkB,GAAa,EAAE,CAAC;QAClC,uBAAkB,GAAqB,MAAM,CAAC;QAC9C,yBAAoB,GAAgC,EAAE,MAAM,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;QAgB7E,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;QACzD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,CAAC;QACvE,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,CAAC;QAC/E,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,oBAAoB,CAAC,eAAe,CAAC,CAAC;QACrE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBAC5B,OAAO,EAAE,IAAI;gBACb,IAAI,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;gBAC/B,sBAAsB,EAAE,IAAI;gBAC5B,IAAI,EAAE,EAAE;gBACR,WAAW,EAAE,EAAE;gBACf,aAAa,EAAE,CAAC,EAAE,CAAC;gBACnB,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAChC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,KAAK,sCAAW,IAAI,KAAE,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE,IAAG,EAAE,EAAE,CAAC,CACjF;aACJ,CAAC;YACF,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;SACvC,CAAC,CAAC;KACN;IAED,QAAQ;QACJ,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,IAAI,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvE,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAClD,SAAS,CAAC,EAAE,CAAC,EACb,YAAY,CAAC,EAAE,CAAC,EAChB,WAAW,EAAE,CAChB,CAAC;QACF,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC,IAAI,CACvD,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC;YACjB,OAAO,IAAI;kBACL,QAAQ,CAAC,MAAM,CAAC,CAAC;oBACb,MAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;oBACxC,QACI,CAAC,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC;wBACzC,CAAC,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,EAC1C;iBACL,CAAC;kBACF,QAAQ,CAAC;SAClB,CAAC,CACL,CAAC;QACF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;QAClG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,KAAK,CAAQ,CAAC,CAAC,CAAC;;;;;QAM9E,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,SAAS,EAAE,CAAC;QACrD,MAAM,mBAAmB,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,IAAI,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;QACpF,MAAM,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC;QACnE,MAAM,YAAY,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAEhD,MAAM,wBAAwB,GAAG,YAAY,CAAC,YAAY,CAAC,IAAI,CAC3D,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,aAAyB,CAAC,EACzC,oBAAoB,EAAE,CACzB,CAAC;QACF,MAAM,sBAAsB,GAAG,aAAa,CACxC,wBAAwB,EACxB,mBAAmB,EACnB,eAAe,CAClB,CAAC,IAAI,CACF,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,kBAAkB,EAAE,cAAc,CAAC;YAC1C,MAAM,QAAQ,GAAG,CAAC,GAAG,kBAAkB,EAAE,GAAG,cAAc,CAAC,CAAC;YAC5D,OAAO,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;SACtF,CAAC,CACL,CAAC;QAEF,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,mBAAmB,EAAE,sBAAsB,CAAC,CAAC;QACvE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACjE,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ;aACpD,gBAAgB,CAAC,aAAa,CAAC;aAC/B,sBAAsB,EAAE;aACxB,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC;aACtD,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;KAC7B;IAED,WAAW;QACP,IAAI,CAAC,OAAO,EAAE,CAAC;KAClB;IAED,aAAa,CAAC,OAAgB;QAC1B,IAAI,CAAC,QAAQ,CAAC,YAAY,CACtB,IAAI,CAAC,MAAM;aACN,aAAa,CAAC,CAAC,IAAI,kCAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,KAAE,GAAG,EAAE,OAAO,IAAG,EAAE;YACpE,mBAAmB,EAAE,OAAO;YAC5B,UAAU,EAAE,IAAI,CAAC,KAAK;SACzB,CAAC;aACD,QAAQ,EAAE,CAClB,CAAC;KACL;IAED,gBAAgB,CAAC,WAAmB;QAChC,OAAO,WAAW,KAAK,oBAAoB,CAAC;KAC/C;IAED,eAAe;QACX,IAAI,CAAC,gBAAgB;aAChB,IAAI,CACD,IAAI,CAAC,CAAC,CAAC,EACP,SAAS,CAAC,QAAQ;YACd,OAAO,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,sCAAsC,EAAE;gBAC3E,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE;oBACJ,UAAU,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;oBACrB,iBAAiB,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC;iBAC7C;aACJ,CAAC,CAAC;SACN,CAAC,CACL;aACA,SAAS,EAAE,CAAC;KACpB;IAED,iBAAiB,CAAC,SAAiB;QAC/B,IAAI,CAAC,YAAY;aACZ,MAAM,CAAC;YACJ,KAAK,EAAEA,MAAC,CAAC,qCAAqC,CAAC;YAC/C,OAAO,EAAE;gBACL,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAEA,MAAC,CAAC,eAAe,CAAC,EAAE;gBAChD,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAEA,MAAC,CAAC,6BAA6B,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE;aACjF;SACJ,CAAC;aACD,IAAI,CACD,SAAS,CAAC,QAAQ,IACd,QAAQ;cACF,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,yBAAyB,CAAC;gBAC/C,SAAS;gBACT,UAAU,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;aACxB,CAAC;cACF,KAAK,CACd,CACJ;aACA,SAAS,CACN;YACI,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAACA,MAAC,CAAC,oDAAoD,CAAC,CAAC,CAAC;SAC7F,EACD,GAAG;YACC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAACA,MAAC,CAAC,kDAAkD,CAAC,CAAC,CAAC;SACzF,CACJ,CAAC;KACT;IAED,sBAAsB,CAAC,OAAqC;QACxD,OAAO,IAAI,CAAC,YAAY;aACnB,aAAa,CAAC,sCAAsC,EAAE;YACnD,IAAI,EAAE,IAAI;YACV,MAAM,EAAE;gBACJ,UAAU,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;gBACrB,iBAAiB,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC;gBAC/B,iBAAiB,EAAE,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC;aACrD;SACJ,CAAC;aACD,SAAS,EAAE,CAAC;KACpB;IAED,wBAAwB,CAAC,EACrB,SAAS,EACT,OAAO,GAIV;QACG,IAAI,CAAC,YAAY;aACZ,MAAM,CAAC;YACJ,KAAK,EAAEA,MAAC,CAAC,6CAA6C,CAAC;YACvD,OAAO,EAAE;gBACL,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAEA,MAAC,CAAC,eAAe,CAAC,EAAE;gBAChD,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAEA,MAAC,CAAC,6BAA6B,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE;aACjF;SACJ,CAAC;aACD,IAAI,CACD,SAAS,CAAC,QAAQ,IACd,QAAQ;cACF,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,yBAAyB,CAAC;gBAC/C,SAAS;gBACT,iBAAiB,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC;aAClC,CAAC;cACF,KAAK,CACd,CACJ;aACA,SAAS,CACN;YACI,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAACA,MAAC,CAAC,oDAAoD,CAAC,CAAC,CAAC;SAC7F,EACD,GAAG;YACC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAACA,MAAC,CAAC,kDAAkD,CAAC,CAAC,CAAC;SACzF,CACJ,CAAC;KACT;IAED,gBAAgB,CAAC,IAAY;QACzB,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,cAAc,EAAE,IAAI,CAAC,CAAC,CAAC;KACnE;IAED,aAAa;QACT,OAAO,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC;KACpD;IAED,oBAAoB;QAChB,OAAO,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,MAAM,CAAC;KACzD;IAED,kBAAkB,CAAC,KAAyB;QACxC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;KACrD;;;;IAKD,UAAU,CAAC,SAAiB;QACxB,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC;aAC1C,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CAAC,CAAC,CAAC,MAAM,EAAE,YAAY,CAAC;YAC9B,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC;YAC7D,MAAM,kBAAkB,GAAG,eAAe,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;YACjE,MAAM,kBAAkB,GAAG,CAAC,kBAAkB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC;YAC3E,IAAI,WAAW,IAAI,WAAW,CAAC,QAAQ,IAAI,kBAAkB,EAAE;gBAC3D,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC,GAAG,SAAS,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;aAC9D;SACJ,CAAC,CAAC;KACV;IAED,uBAAuB;QACnB,IAAI,CAAC,sBAAsB,EAAE,CAAC,SAAS,CAAC,aAAa;YACjD,IAAI,aAAa,EAAE;gBACf,MAAM,YAAY,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBAChD,MAAM,oBAAoB,GAAG,YAAY,CAAC,KAAK,CAAC,aAAa,CAAC;gBAC9D,YAAY,CAAC,UAAU,CAAC;oBACpB,aAAa,EAAE,MAAM,CAAC,CAAC,GAAG,oBAAoB,EAAE,GAAG,aAAa,CAAC,CAAC;iBACrE,CAAC,CAAC;gBACH,YAAY,CAAC,WAAW,EAAE,CAAC;aAC9B;SACJ,CAAC,CAAC;KACN;IAED,mBAAmB,CAAC,KAAyD;QACzE,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC;aAC3C,IAAI,CACD,IAAI,CAAC,CAAC,CAAC,EACP,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,YAAY,CAAC,KAC7B,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,KAAK,EAAE,OAAO,EAAE,YAAY,CAAC,CAC9E,CACJ;aACA,SAAS,CACN;YACI,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAACA,MAAC,CAAC,8BAA8B,CAAC,EAAE;gBAChE,MAAM,EAAE,eAAe;aAC1B,CAAC,CAAC;SACN,EACD,GAAG;YACC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAACA,MAAC,CAAC,4BAA4B,CAAC,EAAE;gBAC5D,MAAM,EAAE,eAAe;aAC1B,CAAC,CAAC;SACN,CACJ,CAAC;KACT;IAED,uBAAuB,CAAC,YAAoB;QACxC,MAAM,YAAY,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAChD,MAAM,oBAAoB,GAAG,YAAY,CAAC,KAAK,CAAC,aAAa,CAAC;QAC9D,YAAY,CAAC,UAAU,CAAC;YACpB,aAAa,EAAE,oBAAoB,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,KAAK,YAAY,CAAC;SACxE,CAAC,CAAC;QACH,YAAY,CAAC,WAAW,EAAE,CAAC;KAC9B;;;;IAKD,uBAAuB,CAAC,kBAA4B;QAChD,IAAI,CAAC,sBAAsB,EAAE;aACxB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aACpC,SAAS,CAAC,CAAC,CAAC,aAAa,EAAE,QAAQ,CAAC;YACjC,IAAI,aAAa,EAAE;gBACf,KAAK,MAAM,SAAS,IAAI,kBAAkB,EAAE;oBACxC,MAAM,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC;oBAC1D,MAAM,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAChC,MAAM,qBAAqB,GAAG,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;oBAClF,MAAM,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC;oBAClE,IAAI,gBAAgB,EAAE;wBAClB,gBAAgB,CAAC,UAAU,CAAC;4BACxB,aAAa,EAAE,MAAM,CAAC,CAAC,GAAG,qBAAqB,EAAE,GAAG,aAAa,CAAC,CAAC;yBACtE,CAAC,CAAC;wBACH,gBAAgB,CAAC,WAAW,EAAE,CAAC;qBAClC;iBACJ;gBACD,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;aACtC;SACJ,CAAC,CAAC;KACV;IAED,wBAAwB;QACpB,QACI,CAAC,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,MAAM;YAC7C,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACtC,OAAO,CAAC,CAAC,GAAG,KAAK,EAAE,CAAC;aACvB,CAAC,EACJ;KACL;IAEO,sBAAsB;QAC1B,OAAO,IAAI,CAAC,oBAAoB,CAAC,SAAS,EAAE,CAAC,IAAI,CAC7C,QAAQ,CAAC,MAAM,IACX,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,yBAAyB,EAAE;YACvD,IAAI,EAAE,IAAI;YACV,QAAQ,EAAE,IAAI;YACd,MAAM,EAAE,EAAE,MAAM,EAAE;SACrB,CAAC,CACL,EACD,GAAG,CAAC,WAAW,IAAI,WAAW,IAAI,WAAW,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAChE,CAAC;KACL;IAED,MAAM;QACF,MAAM,YAAY,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAChD,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;YACrB,OAAO;SACV;QACD,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC;aAC3C,IAAI,CACD,IAAI,CAAC,CAAC,CAAC,EACP,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,YAAY,CAAC;YAC7B,MAAM,UAAU,GAAG,IAAI,CAAC,iBAAiB,CACrC,OAAO,EACP,YAAyB,EACzB,YAAY,CACO,CAAC;YACxB,OAAO,IAAI,CAAC,oBAAoB,CAAC,yBAAyB,CACtD,UAAU,EACV,IAAI,CAAC,oBAAoB,EACzB,YAAY,CACf,CAAC;SACL,CAAC,CACL;aACA,SAAS,CACN,CAAC,EAAE,qBAAqB,EAAE,SAAS,EAAE;YACjC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAACA,MAAC,CAAC,8BAA8B,CAAC,EAAE;gBAChE,MAAM,EAAE,SAAS;aACpB,CAAC,CAAC;YACH,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;YAC9B,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC;YACjC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;SACxE,EACD,GAAG;;YAEC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACnB,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAACA,MAAC,CAAC,4BAA4B,CAAC,EAAE;gBAC5D,MAAM,EAAE,SAAS;aACpB,CAAC,CAAC;SACN,CACJ,CAAC;KACT;IAED,IAAI;QACA,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,wBAAwB,CAAC;aAC1E,IAAI,CACD,IAAI,CAAC,CAAC,CAAC,EACP,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,YAAY,EAAE,gBAAgB,CAAC;;YAC/C,MAAM,YAAY,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAChD,IAAI,YAA4C,CAAC;YACjD,IAAI,aAAsD,CAAC;YAE3D,IAAI,YAAY,CAAC,KAAK,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE;gBAC5C,YAAY,GAAG,IAAI,CAAC,iBAAiB,CACjC,OAAO,EACP,YAAyB,EACzB,YAAY,CACO,CAAC;aAC3B;YACD,MAAM,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACtD,IAAI,CAAC,aAAa,IAAI,aAAa,CAAC,KAAK,KAAK,IAAI,CAAC,oBAAoB,EAAE,EAAE;gBACvE,aAAa,GAAG,IAAI,CAAC,yBAAyB,CAC1C,OAAO,EACP,aAA0B,EAC1B,YAAY,EACZ,gBAAgB,CACnB,CAAC;aACL;YAED,OAAO,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC;gBAC3C,OAAO;gBACP,YAAY;gBACZ,UAAU,cACN,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,wBAAwB,CAAC,CAAC,0CAAE,KAAK,mCAAI,KAAK;gBAC9E,YAAY;gBACZ,aAAa;aAChB,CAAC,CAAC;SACN,CAAC,CACL;aACA,SAAS,CACN,MAAM;YACF,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;YACjC,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC;YACjC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;YAC9B,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAACA,MAAC,CAAC,8BAA8B,CAAC,EAAE;gBAChE,MAAM,EAAE,SAAS;aACpB,CAAC,CAAC;YACH,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;SACtC,EACD,GAAG;YACC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAACA,MAAC,CAAC,4BAA4B,CAAC,EAAE;gBAC5D,MAAM,EAAE,SAAS;aACpB,CAAC,CAAC;SACN,CACJ,CAAC;KACT;IAED,aAAa;QACT,OAAO,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC;KACjG;;;;IAKS,aAAa,CAAC,OAAqC,EAAE,YAA0B;QACrF,MAAM,kBAAkB,GAAG,eAAe,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;QAClE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;YACvB,OAAO,EAAE;gBACL,OAAO,EAAE,OAAO,CAAC,OAAO;gBACxB,IAAI,EAAE,kBAAkB,GAAG,kBAAkB,CAAC,IAAI,GAAG,EAAE;gBACvD,IAAI,EAAE,kBAAkB,GAAG,kBAAkB,CAAC,IAAI,GAAG,EAAE;gBACvD,WAAW,EAAE,kBAAkB,GAAG,kBAAkB,CAAC,WAAW,GAAG,EAAE;gBACrE,aAAa,EAAE,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;aACtD;SACJ,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;YAC1B,MAAM,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,cAAc,CAAC,CAAc,CAAC;YACxF,MAAM,oBAAoB,GACtB,CAAC,kBAAkB,IAAK,kBAA0B,CAAC,YAAY,KAAK,EAAE,CAAC;YAC3E,MAAM,SAAS,GAAI,OAAe,CAAC,YAAY,IAAI,EAAE,CAAC;YAEtD,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,YAAY,EAAE;gBACtC,MAAM,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC;gBAC1B,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,KAAK,cAAc,GAAG,oBAAoB,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;gBAC5F,MAAM,OAAO,GAAG,iBAAiB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBAC3C,IAAI,OAAO,EAAE;oBACT,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;iBAC7B;aACJ;SACJ;QAED,MAAM,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAc,CAAC;QACvE,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;YAChC,MAAM,kBAAkB,GAAG,eAAe,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;YAClE,MAAM,aAAa,GAAG,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;YAC3D,MAAM,KAAK,GAAqB;gBAC5B,EAAE,EAAE,OAAO,CAAC,EAAE;gBACd,OAAO,EAAE,OAAO,CAAC,OAAO;gBACxB,GAAG,EAAE,OAAO,CAAC,GAAG;gBAChB,IAAI,EAAE,kBAAkB,GAAG,kBAAkB,CAAC,IAAI,GAAG,EAAE;gBACvD,KAAK,EAAE,OAAO,CAAC,KAAK;gBACpB,YAAY,EAAE,OAAO,CAAC,YAAY;gBAClC,aAAa,EAAE,OAAO,CAAC,WAAW,CAAC,EAAE;gBACrC,WAAW,EAAE,OAAO,CAAC,WAAW;gBAChC,4BAA4B,EAAE,OAAO,CAAC,4BAA4B;gBAClE,mBAAmB,EAAE,OAAO,CAAC,mBAAmB;gBAChD,cAAc,EAAE,OAAO,CAAC,cAAc;gBACtC,aAAa;aAChB,CAAC;YAEF,IAAI,gBAAgB,GAAG,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAA0B,CAAC;YACxE,IAAI,gBAAgB,EAAE;gBAClB,gBAAgB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;aACtC;iBAAM;gBACH,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,iCAClC,KAAK,KACR,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,aAAa,CAAC,IACxD,CAAC;gBACH,iBAAiB,CAAC,MAAM,CAAC,CAAC,EAAE,gBAAgB,CAAC,CAAC;aACjD;YACD,IAAI,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE;gBACjC,IAAI,iBAAiB,GAAG,gBAAgB,CAAC,GAAG,CAAC,CAAC,cAAc,CAAC,CAA0B,CAAC;gBAExF,IAAI,CAAC,iBAAiB,EAAE;oBACpB,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CACtC,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,KAAK,sCAAW,IAAI,KAAE,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE,IAAG,EAAE,EAAE,CAAC,CACxF,CAAC;oBACF,gBAAgB,CAAC,UAAU,CAAC,cAAc,EAAE,iBAAiB,CAAC,CAAC;iBAClE;gBAED,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,mBAAmB,EAAE;oBAC7C,MAAM,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC;oBAC1B,MAAM,KAAK,GACP,QAAQ,CAAC,IAAI,KAAK,cAAc;0BACzB,kBAA0B,CAAC,YAAY,CAAC,GAAG,CAAC;0BAC5C,OAAe,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;oBAC7C,MAAM,OAAO,GAAG,iBAAiB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBAC3C,IAAI,OAAO,EAAE;wBACT,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;qBAC7B;iBACJ;aACJ;SACJ,CAAC,CAAC;KACN;;;;;IAMO,iBAAiB,CACrB,OAAqC,EACrC,gBAA2B,EAC3B,YAA0B;;QAE1B,MAAM,cAAc,GAAG,yBAAyB,CAAC;YAC7C,YAAY,EAAE,OAAO;YACrB,aAAa,EAAE,gBAAgB,CAAC,KAAK;YACrC,iBAAiB,EAAE,IAAI,CAAC,YAAY;YACpC,YAAY;YACZ,kBAAkB,EAAE;gBAChB,YAAY;gBACZ,IAAI,EAAE,OAAO,CAAC,IAAI,IAAI,EAAE;gBACxB,IAAI,EAAE,OAAO,CAAC,IAAI,IAAI,EAAE;gBACxB,WAAW,EAAE,OAAO,CAAC,WAAW,IAAI,EAAE;aACzC;SACJ,CAAC,CAAC;QACH,OAAO,gCACA,cAAc,KACjB,QAAQ,QAAE,IAAI,CAAC,YAAY,CAAC,MAAM,0CAAE,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,GACjD,eAAe,QAAE,IAAI,CAAC,YAAY,CAAC,aAAa,0CAAE,EAAE,EACpD,aAAa,EAAE,gBAAgB,CAAC,KAAK,CAAC,aAAa,GACX,CAAC;KAChD;;;;;IAMO,yBAAyB,CAC7B,OAAqC,EACrC,iBAA4B,EAC5B,YAA0B,EAC1B,gBAAyB;QAEzB,MAAM,aAAa,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;YAC/C,MAAM,OAAO,GAAG,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;YACpD,OAAO,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC;SACnC,CAAC,CAAC;QACH,MAAM,kBAAkB,GAAG,iBAAiB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC;QAE7F,IAAI,aAAa,CAAC,MAAM,KAAK,kBAAkB,CAAC,MAAM,EAAE;YACpD,MAAM,IAAI,KAAK,CAACA,MAAC,CAAC,gDAAgD,CAAC,CAAC,CAAC;SACxE;QACD,OAAO,aAAa;aACf,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC;;YACZ,MAAM,SAAS,GAAqB,kBAAkB,CAAC,CAAC,CAAC,CAAC;YAC1D,MAAM,MAAM,GAA8B,yBAAyB,CAAC;gBAChE,YAAY,EAAE,OAAO;gBACrB,aAAa,EAAE,SAAS;gBACxB,iBAAiB,EAAE,IAAI,CAAC,mBAAmB;gBAC3C,YAAY;gBACZ,kBAAkB,EAAE;oBAChB,YAAY;oBACZ,IAAI,EAAE,EAAE;iBACX;aACJ,CAAC,CAAC;YACH,MAAM,CAAC,aAAa,GAAG,SAAS,CAAC,aAAa,CAAC;YAC/C,MAAM,CAAC,aAAa,GAAG,SAAS,CAAC,aAAa,CAAC;YAC/C,MAAM,CAAC,KAAK,GAAG,gBAAgB,GAAG,SAAS,CAAC,YAAY,GAAG,SAAS,CAAC,KAAK,CAAC;YAC3E,MAAM,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YAC1D,IAAI,YAAY,EAAE;gBACd,MAAM,CAAC,eAAe,SAAG,YAAY,CAAC,aAAa,0CAAE,EAAE,CAAC;gBACxD,MAAM,CAAC,QAAQ,SAAG,YAAY,CAAC,MAAM,0CAAE,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;aACzD;YACD,OAAO,MAAM,CAAC;SACjB,CAAC;aACD,MAAM,CAAC,kBAAkB,CAAC,CAAC;KACnC;IAEO,mBAAmB;QACvB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAc,CAAC;KACtD;;;;IAKO,mBAAmB,CAAC,OAAqE;QAC7F,MAAM,WAAW,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QAC/B,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC;QAE7D,SAAS,gBAAgB,CAAC,KAAU;YAChC,OAAO,KAAK,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;SAChD;QAED,IAAI,WAAW,IAAI,gBAAgB,CAAC,WAAW,CAAC,EAAE;YAC9C,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;SAC9E;KACJ;;;YAznBJ,SAAS,SAAC;gBACP,QAAQ,EAAE,oBAAoB;gBAC9B,05bAA8C;gBAE9C,eAAe,EAAE,uBAAuB,CAAC,MAAM;;aAClD;;;YA5EQ,cAAc;YAAE,MAAM;YAiB3B,mBAAmB;YA0Bd,oBAAoB;YA5CT,WAAW;YAe3B,YAAY;YACZ,mBAAmB;YAPnB,WAAW;YAXN,QAAQ;YACiB,iBAAiB;;;aCSW,iCAAiC;MAElF,2BAA2B;IAPxC;QASc,qBAAgB,GAAG,IAAI,YAAY,EAAU,CAAC;QAC9C,qBAAgB,GAAG,IAAI,YAAY,EAAY,CAAC;QAElD,aAAQ,GAAG,EAAE,CAAC;QACd,sBAAiB,GAAa,EAAE,CAAC;QAwCzC,uBAAkB,GAAG,CAAC,IAAY,EAAE,IAAoD;YACpF,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE;gBAC9B,OAAO,KAAK,CAAC;aAChB;YACD,QACI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;gBACjE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,EACzE;SACL,CAAC;QA+BM,qBAAgB,GAAG,CAAC,KAAc;YACtC,OAAO,OAAO,KAAK,KAAK,QAAQ,IAAI,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;SACrF,CAAC;KACL;IAhFG,aAAa,CAAC,IAAmB;QAC7B,IAAI,IAAI,EAAE;YACN,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;SACxE;aAAM;YACH,MAAM,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YAClG,IAAI,WAAW,EAAE;gBACb,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;aAC9C;SACJ;KACJ;IAED,cAAc,CAAC,GAAa;QACxB,MAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;QAEzC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI;YAC3C,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;gBAC9E,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aACvC;SACJ,CAAC,CAAC;QAEH,GAAG,CAAC,GAAG,CAAC,EAAE;YACN,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;SACvF,CAAC;aACG,MAAM,CAAC,kBAAkB,CAAC;aAC1B,OAAO,CAAC,IAAI;YACT,MAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;gBACxD,MAAM,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC;gBACpB,IAAI,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAE;oBAC5B,OAAO,GAAG,CAAC,UAAU,CAAC,EAAE,KAAK,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;iBACnD;gBACD,OAAO,KAAK,CAAC;aAChB,CAAC,CAAC;YACH,IAAI,CAAC,UAAU,EAAE;gBACb,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;aAC3D;SACJ,CAAC,CAAC;KACV;IAYD,cAAc,CAAC,aAAoE;QAC/E,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;YAC/B,aAAa,GAAG,CAAC,aAAa,CAAC,CAAC;SACnC;QACD,MAAM,cAAc,GAAG,aAAa,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAE/D,CAAC;QAChB,MAAM,UAAU,GAAG,cAAc,GAAG,cAAc,CAAC,KAAK,GAAG,EAAE,CAAC;QAE9D,MAAM,aAAa,GAAG,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAE5F,IAAI,UAAU,KAAK,IAAI,CAAC,QAAQ,EAAE;YAC9B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACvC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;SAC9B;QACD,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YAC9D,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAC1C,IAAI,CAAC,iBAAiB,GAAG,aAAa,CAAC;SAC1C;KACJ;IAED,QAAQ,CAAC,IAAS;QACd,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;KAC1B;IAED,sBAAsB;QAClB,OAAO,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,WAAW,KAAK,CAAC,CAAC,CAAC;KAC5D;;;YA1FJ,SAAS,SAAC;gBACP,QAAQ,EAAE,0BAA0B;gBACpC,2jDAAoD;gBAEpD,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,uBAAuB,EAAE,QAAQ,MAAmC,EAAE,CAAC;;aACjG;;;gCAEI,KAAK;+BACL,MAAM;+BACN,MAAM;8BACN,SAAS,SAAC,iBAAiB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;;MCQrC,oBACT,SAAQ,iBAAuF;IAQ/F,YACY,WAAwB,EACxB,YAA0B,EAC1B,mBAAwC,EACxC,eAAgC,EACxC,MAAc,EACd,KAAqB;QAErB,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAPb,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,oBAAe,GAAf,eAAe,CAAiB;QAV5C,eAAU,GAAG,EAAE,CAAC;QAChB,kBAAa,GAAa,EAAE,CAAC;QAC7B,mBAAc,GAAG,IAAI,CAAC;QAalB,KAAK,CAAC,UAAU,CACZ,CAAC,GAAG,IAAW,KACX,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,IAAI,CAAC,CAAC,sBAAsB,EAAE,EAC9F,IAAI,IAAI,IAAI,CAAC,MAAM;;QAEnB,CAAC,IAAI,EAAE,IAAI,MAAM;YACb,KAAK,EAAE;gBACH,IAAI;gBACJ,IAAI;gBACJ,IAAI,EAAE,IAAI,CAAC,UAAU;gBACrB,aAAa,EAAE,IAAI,CAAC,aAAa;gBACjC,kBAAkB,EAAE,eAAe,CAAC,GAAG;gBACvC,cAAc,EAAE,IAAI,CAAC,cAAc;aACvB;SACnB,CAAC,CACL,CAAC;KACL;IAED,QAAQ;QACJ,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;;QAE5E,IAAI,CAAC,KAAK,CAAC,aAAa;aACnB,IAAI,CACD,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EACxB,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAC3B;aACA,SAAS,CAAC,IAAI;YACX,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SAC/C,CAAC,CAAC;QAEP,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAE9E,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG;YAC/C,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;SAC/C,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC;YACpF,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;SAC/C,CAAC,CAAC;KACN;IAED,aAAa,CAAC,IAAY;QACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACjD,IAAI,CAAC,OAAO,EAAE,CAAC;KAClB;IAED,gBAAgB,CAAC,GAAa;QAC1B,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;QACzB,IAAI,CAAC,aAAa,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QAC5C,IAAI,CAAC,OAAO,EAAE,CAAC;KAClB;IAED,kBAAkB;QACd,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,OAAO,EAAE;YACrD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAACA,MAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;YACvD,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG;gBACvC,IAAI,GAAG,CAAC,KAAK,KAAK,QAAQ,CAAC,SAAS,EAAE;oBAClC,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC;oBAC/D,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAACA,MAAC,CAAC,4BAA4B,CAAC,EAAE;wBAC9D,KAAK,EAAE,GAAG,CAAC,MAAM,CAAC,gBAAgB;wBAClC,IAAI;qBACP,CAAC,CAAC;oBACH,IAAI,CAAC,OAAO,EAAE,CAAC;iBAClB;qBAAM;oBACH,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAACA,MAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC;iBAC9D;aACJ,CAAC,CAAC;SACN,CAAC,CAAC;KACN;IAED,aAAa,CAAC,SAAiB;QAC3B,IAAI,CAAC,YAAY;aACZ,MAAM,CAAC;YACJ,KAAK,EAAEA,MAAC,CAAC,gCAAgC,CAAC;YAC1C,OAAO,EAAE;gBACL,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAEA,MAAC,CAAC,eAAe,CAAC,EAAE;gBAChD,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAEA,MAAC,CAAC,eAAe,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE;aACnE;SACJ,CAAC;aACD,IAAI,CACD,SAAS,CAAC,QAAQ,KAAK,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC,CAAC;;;QAG7F,KAAK,CAAC,GAAG,CAAC,CACb;aACA,SAAS,CACN;YACI,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAACA,MAAC,CAAC,8BAA8B,CAAC,EAAE;gBAChE,MAAM,EAAE,SAAS;aACpB,CAAC,CAAC;YACH,IAAI,CAAC,OAAO,EAAE,CAAC;SAClB,EACD,GAAG;YACC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAACA,MAAC,CAAC,4BAA4B,CAAC,EAAE;gBAC5D,MAAM,EAAE,SAAS;aACpB,CAAC,CAAC;SACN,CACJ,CAAC;KACT;;;YA3HJ,SAAS,SAAC;gBACP,QAAQ,EAAE,mBAAmB;gBAC7B,8hJAA4C;;aAE/C;;;YAlBG,WAAW;YAIX,YAAY;YACZ,mBAAmB;YAJnB,eAAe;YALM,MAAM;YAAtB,cAAc;;;iCA8BlB,SAAS,SAAC,6BAA6B,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;;MCPjD,gBAAgB;IAUzB,YAAY,MAAiC;QACzC,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YACnC,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;SAC3B;KACJ;CACJ;MAQY,8BAA8B;IAiBvC,YACY,KAAqB,EACrB,WAAwB,EACxB,oBAA0C,EAC1C,mBAAwC,EACxC,YAA0B;QAJ1B,UAAK,GAAL,KAAK,CAAgB;QACrB,gBAAW,GAAX,WAAW,CAAa;QACxB,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,iBAAY,GAAZ,YAAY,CAAc;QArBtC,qBAAgB,GAAG,KAAK,CAAC;QACzB,sBAAiB,GAAuB,EAAE,CAAC;KAqBvC;IAEJ,QAAQ;QACJ,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,YAAY;YACZ,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAkB,IAAI,oBAAoB,EAAE,CAAC;QACzF,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI;YAC/D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;SACvD,CAAC,CAAC;KACN;IAED,aAAa,CAAC,WAA6B;QACvC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC;KAC9B;IAED,aAAa;QACT,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC;KACjC;IAED,gBAAgB;QACZ,OAAO,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC;KACvE;IAED,cAAc,CAAC,OAAyB;QACpC,OAAO,OAAO,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC;cAC7BA,MAAC,CAAC,yBAAyB,CAAC;cAC5B,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACpD;IAED,SAAS;QACL,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YACnB,KAAK,EAAE,IAAI;YACX,IAAI,EAAE,EAAE;YACR,MAAM,EAAE,EAAE;SACb,CAAC,CAAC;KACN;IAED,gBAAgB;QACZ,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;QACpD,MAAM,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAChD,MAAM,uBAAuB,GAAG,CAC5B,SAAkB,EAClB,OAAoC,EACpC,eAAmD;;YAEnD,MAAM,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;YACtE,OAAO,IAAI,gBAAgB,CAAC;gBACxB,OAAO,EAAE,KAAK;gBACd,QAAQ,EAAE,CAAC,CAAC,eAAe;gBAC3B,gBAAgB,EAAE,eAAe,aAAf,eAAe,uBAAf,eAAe,CAAE,EAAE;gBACrC,SAAS;gBACT,OAAO;gBACP,KAAK,QAAE,eAAe,aAAf,eAAe,uBAAf,eAAe,CAAE,KAAK,mCAAI,SAAS,CAAC,KAAK;gBAChD,GAAG,QAAE,eAAe,aAAf,eAAe,uBAAf,eAAe,CAAE,GAAG,mCAAI,SAAS,CAAC,GAAG;gBAC1C,KAAK,QAAE,eAAe,aAAf,eAAe,uBAAf,eAAe,CAAE,WAAW,mCAAI,SAAS,CAAC,KAAK;aACzD,CAAC,CAAC;SACN,CAAC;QACF,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,MAAM;cAChC,uBAAuB,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,OAAO;gBACvC,MAAM,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAChD,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,CAC3C,CAAC;gBACF,OAAO,uBAAuB,CAAC,KAAK,EAAE,OAAO,EAAE,eAAe,CAAC,CAAC;aACnE,CAAC;cACF,CAAC,uBAAuB,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KACvE;;;;;IAMO,mBAAmB,CACvB,OAAoC,EACpC,gBAAoC;QAEpC,MAAM,0BAA0B,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC,IACxD,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CACrF,CAAC;QACF,IAAI,0BAA0B,CAAC,MAAM,EAAE;YACnC,OAAO,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;SAC/D;QACD,OAAO;YACH,GAAG,EAAE,EAAE;YACP,KAAK,EAAE,CAAC;YACR,KAAK,EAAE,CAAC;SACX,CAAC;KACL;IAED,aAAa,CAAC,EAAU;QACpB,IAAI,CAAC,YAAY;aACZ,MAAM,CAAC;YACJ,KAAK,EAAEA,MAAC,CAAC,wCAAwC,CAAC;YAClD,OAAO,EAAE;gBACL,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAEA,MAAC,CAAC,eAAe,CAAC,EAAE;gBAChD,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAEA,MAAC,CAAC,eAAe,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE;aACnE;SACJ,CAAC;aACD,IAAI,CACD,SAAS,CAAC,QAAQ,IACd,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,KAAK,CACzF,EACD,SAAS,CAAC,MAAM,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAC7C;aACA,SAAS,CACN;YACI,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAACA,MAAC,CAAC,8BAA8B,CAAC,EAAE;gBAChE,MAAM,EAAE,gBAAgB;aAC3B,CAAC,CAAC;YACH,IAAI,CAAC,sBAAsB,EAAE,CAAC;SACjC,EACD,GAAG;YACC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAACA,MAAC,CAAC,4BAA4B,CAAC,EAAE;gBAC5D,MAAM,EAAE,gBAAgB;aAC3B,CAAC,CAAC;SACN,CACJ,CAAC;KACT;IAED,IAAI;QACA,MAAM,eAAe,GAAG,IAAI,CAAC,YAAY;aACpC,MAAM,CAAC,EAAE,IAAI,EAAE,CAAC,KAAK,CAAC;aACtB,GAAG,CAAC,EAAE,KAAK;YACR,IAAI,EAAE,EAAE,CAAC,IAAI;YACb,MAAM,EAAE,EAAE;SACb,CAAC,CAAC,CAAC;QAER,IAAI,CAAC,wBAAwB,EAAE;aAC1B,IAAI,CACD,QAAQ,CAAC,MACL,IAAI,CAAC,oBAAoB,CAAC,yBAAyB,CAAC,eAAe,EAAE,IAAI,CAAC,YAAY,CAAC,CAC1F,EACD,QAAQ,CAAC,mBAAmB,IAAI,IAAI,CAAC,wBAAwB,CAAC,mBAAmB,CAAC,CAAC,EACnF,QAAQ,CAAC,mBAAmB,IAAI,IAAI,CAAC,qBAAqB,CAAC,mBAAmB,CAAC,CAAC,EAChF,QAAQ,CAAC,SAAS,IAAI,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,EACxD,QAAQ,CAAC,MAAM,IAAI,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC,EACzD,QAAQ,CAAC,GAAG,IAAI,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,EACrE,QAAQ,CAAC,QAAQ,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CACtD;aACA,SAAS,CAAC;YACP,IAAI,EAAE,QAAQ;gBACV,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;gBAC9B,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAACA,MAAC,CAAC,sCAAsC,CAAC,EAAE;oBACxE,KAAK,EAAE,QAAQ,CAAC,MAAM;iBACzB,CAAC,CAAC;gBACH,IAAI,CAAC,sBAAsB,EAAE,CAAC;aACjC;SACJ,CAAC,CAAC;KACV;IAEO,wBAAwB;QAC5B,IAAI,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YAC1C,OAAO,IAAI,CAAC,YAAY;iBACnB,MAAM,CAAC;gBACJ,KAAK,EAAEA,MAAC,CAAC,qDAAqD,CAAC;gBAC/D,IAAI,EAAEA,MAAC,CAAC,oDAAoD,CAAC;gBAC7D,OAAO,EAAE;oBACL,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAEA,MAAC,CAAC,eAAe,CAAC,EAAE;oBAChD,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAEA,MAAC,CAAC,gCAAgC,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE;iBACpF;aACJ,CAAC;iBACD,IAAI,CACD,QAAQ,CAAC,GAAG;gBACR,OAAO,GAAG,KAAK,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;aAC1C,CAAC,CACL,CAAC;SACT;aAAM;YACH,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;SACnB;KACJ;IAEO,qBAAqB,CAAC,OAAyC;QACnE,OAAO,OAAO,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,IAAI,OAAO,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,CAAC;KAC7E;IAEO,wBAAwB,CAC5B,mBAAwE;QAExE,IAAI,mBAAmB,CAAC,MAAM,EAAE;YAC5B,OAAO,QAAQ,CACX,mBAAmB,CAAC,GAAG,CAAC,WAAW;gBAC/B,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,uBAAuB,CAAC;oBACpD,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE;oBAC1B,aAAa,EAAE,WAAW,CAAC,EAAE;iBAChC,CAAC,CAAC;aACN,CAAC,CACL,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,mBAAmB,CAAC,CAAC,CAAC;SAC1C;aAAM;YACH,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;SACjB;KACJ;IAEO,qBAAqB,CACzB,mBAAwE;QAExE,MAAM,UAAU,GAA+B,IAAI,CAAC,YAAY;aAC3D,GAAG,CAAC,EAAE;YACH,MAAM,YAAY,GAAG,mBAAmB,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;YAC3E,MAAM,oBAAoB,GAAG,YAAY,GAAG,YAAY,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;YACpE,IAAI,CAAC,oBAAoB,EAAE;gBACvB,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;aAC3D;YACD,OAAO,EAAE,CAAC,MAAM;iBACX,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC;iBACtB,GAAG,CAAC,CAAC,KAAK;gBACP,oBAAoB;gBACpB,IAAI,EAAE,eAAe,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;gBAClC,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,YAAY,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC;aACpE,CAAC,CAAC,CAAC;SACX,CAAC;aACD,MAAM,CAAC,CAAC,IAAI,EAAE,OAAO,KAAK,CAAC,GAAG,IAAI,EAAE,GAAG,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC;QAE1D,MAAM,WAAW,GAAG;YAChB,GAAG,mBAAmB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC;YACrC,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,kBAAkB,CAAC;SACjE,CAAC;QAEF,IAAI,UAAU,CAAC,MAAM,EAAE;YACnB,OAAO,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAC3F,GAAG,CAAC,MAAM,WAAW,CAAC,CACzB,CAAC;SACL;aAAM;YACH,OAAO,EAAE,CAAC,WAAW,CAAC,CAAC;SAC1B;KACJ;IAEO,iBAAiB,CAAC,SAAmB;QACzC,OAAO,QAAQ,CACX,SAAS,CAAC,GAAG,CAAC,EAAE,IACZ,IAAI,CAAC,WAAW,CAAC,OAAO;aACnB,qBAAqB,CAAC,EAAE,CAAC;aACzB,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,kBAAkB,CAAC;aAC1C,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,CACxC,CACJ,CAAC;KACL;IAEO,wBAAwB,CAAC,MAA+C;QAC5E,MAAM,OAAO,GAAG,MAAM;aACjB,MAAM,CAAC,kBAAkB,CAAC;aAC1B,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,OAAO,CAAC;aACrB,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAC9C,MAAM,QAAQ,GAAG,IAAI,CAAC,iBAAiB;aAClC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC;aACrC,GAAG,CAAC,CAAC,KAAK;YACP,KAAK,EAAE,CAAC,CAAC,KAAK;YACd,GAAG,EAAE,CAAC,CAAC,GAAG;YACV,KAAK,EAAE,CAAC,CAAC,KAAK;YACd,SAAS,EAAE,CAAC,CAAC,OAAO;iBACf,GAAG,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC;iBACpD,MAAM,CAAC,kBAAkB,CAAC;iBAC1B,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC;SACtB,CAAC,CAAC,CAAC;QACR,OAAO,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAClD,IAAI,CAAC,OAAO,EACZ,QAAQ,EACR,OAAO,EACP,IAAI,CAAC,YAAY,CACpB,CAAC;KACL;IAEO,oBAAoB,CAAI,KAAQ;QACpC,IAAI,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;;;YAG1C,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO;iBAC1B,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;iBACjD,IAAI,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;SAC/B;aAAM;YACH,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC;SACpB;KACJ;IAEO,cAAc,CAAI,KAAQ;;QAE9B,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClD,IAAI,EAAE,EAAE;YACJ,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;SACjF;aAAM;YACH,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC;SACpB;KACJ;IAED,sBAAsB;QAClB,IAAI,CAAC,WAAW,CAAC,OAAO;;aAEnB,yBAAyB,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAE,CAAC;;aAElE,SAAS,CAAC,CAAC,EAAE,OAAO,EAAE,KAAK,OAAQ,CAAC;aACpC,SAAS,CAAC,CAAC;YACR,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE;gBACrC,OAAO;oBACH,EAAE,EAAE,EAAE,CAAC,EAAE;oBACT,KAAK,EAAE,KAAK;oBACZ,IAAI,EAAE,EAAE,CAAC,IAAI;oBACb,MAAM,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK;wBACzB,EAAE,EAAE,CAAC,CAAC,EAAE;wBACR,IAAI,EAAE,CAAC,CAAC,IAAI;wBACZ,MAAM,EAAE,IAAI;qBACf,CAAC,CAAC;iBACN,CAAC;aACL,CAAC,CAAC;YACH,IAAI,CAAC,gBAAgB,EAAE,CAAC;SAC3B,CAAC,CAAC;KACV;IAEO,eAAe,CAAC,CAA0B,EAAE,CAA0B;QAC1E,SAAS,cAAc,CAAC,CAA0B;YAC9C,OAAO,CAAC;iBACH,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;iBAChB,IAAI,EAAE;iBACN,IAAI,CAAC,GAAG,CAAC,CAAC;SAClB;QAED,OAAO,cAAc,CAAC,CAAC,CAAC,KAAK,cAAc,CAAC,CAAC,CAAC,CAAC;KAClD;;;YAzVJ,SAAS,SAAC;gBACP,QAAQ,EAAE,6BAA6B;gBACvC,49JAAuD;gBAEvD,eAAe,EAAE,uBAAuB,CAAC,OAAO;;aACnD;;;YA7CQ,cAAc;YAMnB,WAAW;YAeN,oBAAoB;YATzB,mBAAmB;YADnB,YAAY;;;MCJH,aAAc,SAAQ,kBAAkC;IACjE,YAAY,MAAc,EAAE,WAAwB;QAChD,KAAK,CACD,MAAM,EACN;YACI,UAAU,EAAE,OAAgB;YAC5B,EAAE,EAAE,EAAE;YACN,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,EAAE;YACb,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,SAAS,CAAC,KAAK;YACrB,QAAQ,EAAE,CAAC;YACX,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,CAAC;YACR,MAAM,EAAE,CAAC;YACT,MAAM,EAAE,EAAE;YACV,OAAO,EAAE,EAAE;YACX,UAAU,EAAE,IAAI;SACnB,EACD,EAAE,IAAI,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,CACvE,CAAC;KACL;;;;YAxBJ,UAAU,SAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;YANQ,MAAM;YAEN,WAAW;;;MCOP,kBAAmB,SAAQ,kBAAuC;IAC3E,YAAY,MAAc,EAAE,WAAwB;QAChD,KAAK,CACD,MAAM,EACN;YACI,UAAU,EAAE,YAA4B;YACxC,EAAE,EAAE,EAAE;YACN,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,EAAE;YACb,YAAY,EAAE,oBAAoB,EAAE;YACpC,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,EAAE;YACR,SAAS,EAAE,KAAK;YAChB,WAAW,EAAE,EAAE;YACf,aAAa,EAAE,IAAI;YACnB,MAAM,EAAE,EAAE;YACV,YAAY,EAAE,EAAE;YAChB,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,EAAS;YACjB,QAAQ,EAAE,IAAI;SACjB,EACD,EAAE,IAAI,WAAW,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,CACpF,CAAC;KACL;;;;YA1BJ,UAAU,SAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;YARQ,MAAM;YAIN,WAAW;;;MCKP,aAAc,SAAQ,kBAA4C;IAC3E,YAAY,MAAc,EAAE,WAAwB;QAChD,KAAK,CACD,MAAM,EACN;YACI,UAAU,EAAE,OAAkB;YAC9B,EAAE,EAAE,EAAE;YACN,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,KAAK;YAChB,YAAY,EAAE,oBAAoB,EAAE;YACpC,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,EAAE;YACR,YAAY,EAAE,EAAE;YAChB,MAAM,EAAE,EAAE;SACb,EACD,CAAC,EAAE,KAAK,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,KAAK,CAAC,CACzE,CAAC;KACL;;;;YArBJ,UAAU,SAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;YARQ,MAAM;YAIN,WAAW;;;MCKP,eAAgB,SAAQ,kBAAgD;IACjF,YAAY,WAAwB,EAAE,MAAc;QAChD,KAAK,CACD,MAAM,EACN;YACI,UAAU,EAAE,SAAsB;YAClC,EAAE,EAAE,EAAE;YACN,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,EAAE;YACb,OAAO,EAAE,IAAI;YACb,YAAY,EAAE,oBAAoB,EAAE;YACpC,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,EAAE;YACR,aAAa,EAAE,IAAI;YACnB,MAAM,EAAE,EAAE;YACV,WAAW,EAAE,EAAE;YACf,YAAY,EAAE,EAAE;YAChB,YAAY,EAAE,EAAE;YAChB,WAAW,EAAE,EAAE;YACf,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,EAAE;SACf,EACD,CAAC,EAAE,KACC,WAAW,CAAC,OAAO;aACd,UAAU,CAAC,EAAE,CAAC;aACd,sBAAsB,EAAE;aACxB,SAAS,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,OAAO,CAAC,CAC7C,CAAC;KACL;;;;YA/BJ,UAAU,SAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;YAJQ,WAAW;YAJX,MAAM;;;MCQF,uBAAwB,SAAQ,kBAAoD;IAC7F,YAAY,MAAc,EAAE,WAAwB;QAChD,KAAK,CACD,MAAM,EACN;YACI,UAAU,EAAE,SAAsB;YAClC,EAAE,EAAE,EAAE;YACN,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,EAAE;YACb,IAAI,EAAE,EAAE;YACR,YAAY,EAAE,EAAE;YAChB,QAAQ,EAAE,EAAE;SACf,EACD,EAAE,IAAI,WAAW,CAAC,OAAO,CAAC,yBAAyB,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,CAC1F,CAAC;KACL;;;;YAlBJ,UAAU,SAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;YAPQ,MAAM;YAGN,WAAW;;;WC4BN;IACF,UAAU,EAAEA,MAAC,CAAC,qBAAqB,CAAC;CACvC,OAOK;IACF,UAAU,EAAE,iBAAiB;CAChC,OAOK;IACF,UAAU,EAAE,8BAA8B;CAC7C,OAKK;IACF,UAAU,EAAEA,MAAC,CAAC,mBAAmB,CAAC;CACrC,OAOK;IACF,UAAU,EAAE,eAAe;CAC9B,OAKK;IACF,UAAU,EAAEA,MAAC,CAAC,wBAAwB,CAAC;CAC1C,OAOK;IACF,UAAU,EAAE,oBAAoB;CACnC,OAKK;IACF,UAAU,EAAEA,MAAC,CAAC,mBAAmB,CAAC;CACrC,OAMK;IACF,UAAU,EAAE,eAAe;;MAtE1B,aAAa,GAAY;IAClC;QACI,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,oBAAoB;QAC/B,IAAI,IAEH;KACJ;IACD;QACI,IAAI,EAAE,cAAc;QACpB,SAAS,EAAE,sBAAsB;QACjC,OAAO,EAAE,iBAAiB,CAAC,eAAe,CAAC;QAC3C,aAAa,EAAE,CAAC,wBAAwB,CAAC;QACzC,IAAI,IAEH;KACJ;IACD;QACI,IAAI,EAAE,8BAA8B;QACpC,SAAS,EAAE,8BAA8B;QACzC,OAAO,EAAE,iBAAiB,CAAC,uBAAuB,CAAC;QACnD,aAAa,EAAE,CAAC,wBAAwB,CAAC;QACzC,IAAI,IAEH;KACJ;IACD;QACI,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,kBAAkB;QAC7B,IAAI,IAEH;KACJ;IACD;QACI,IAAI,EAAE,YAAY;QAClB,SAAS,EAAE,oBAAoB;QAC/B,OAAO,EAAE,iBAAiB,CAAC,aAAa,CAAC;QACzC,aAAa,EAAE,CAAC,wBAAwB,CAAC;QACzC,IAAI,IAEH;KACJ;IACD;QACI,IAAI,EAAE,aAAa;QACnB,SAAS,EAAE,uBAAuB;QAClC,IAAI,IAEH;KACJ;IACD;QACI,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,yBAAyB;QACpC,OAAO,EAAE,iBAAiB,CAAC,kBAAkB,CAAC;QAC9C,aAAa,EAAE,CAAC,wBAAwB,CAAC;QACzC,IAAI,IAEH;KACJ;IACD;QACI,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,kBAAkB;QAC7B,IAAI,IAEH;KACJ;IACD;QACI,IAAI,EAAE,YAAY;QAClB,SAAS,EAAE,oBAAoB;QAC/B,OAAO,EAAE,iBAAiB,CAAC,aAAa,CAAC;QACzC,IAAI,IAEH;KACJ;EACH;SAEc,iBAAiB,CAAC,IAAS,EAAE,MAAW;IACpD,OAAO,gBAAgB,CAA+B;QAClD,MAAM,EAAE,IAAI,CAAC,MAAM;QACnB,EAAE,EAAE,MAAM,CAAC,EAAE;QACb,aAAa,EAAE,qBAAqB;QACpC,OAAO,EAAE,OAAO,IAAI,OAAO,CAAC,IAAI;QAChC,KAAK,EAAE,UAAU;KACpB,CAAC,CAAC;AACP,CAAC;SAEe,8BAA8B,CAAC,IAAS,EAAE,MAAW;IACjE,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CACnB,GAAG,CAAC,CAAC,MAAW;QACZ,OAAO;YACH;gBACI,KAAK,EAAEA,MAAC,CAAC,qBAAqB,CAAC;gBAC/B,IAAI,EAAE,CAAC,KAAK,EAAE,UAAU,CAAC;aAC5B;YACD;gBACI,KAAK,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE;gBACvB,IAAI,EAAE,CAAC,KAAK,EAAE,UAAU,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,UAAU,EAAE,CAAC;aAC5D;YACD;gBACI,KAAK,EAAEA,MAAC,CAAC,4BAA4B,CAAC;gBACtC,IAAI,EAAE,CAAC,iBAAiB,CAAC;aAC5B;SACJ,CAAC;KACL,CAAC,CACL,CAAC;AACN,CAAC;SAEe,eAAe,CAAC,IAAS,EAAE,MAAW;IAClD,OAAO,gBAAgB,CAA2B;QAC9C,MAAM,EAAE,IAAI,CAAC,MAAM;QACnB,EAAE,EAAE,MAAM,CAAC,EAAE;QACb,aAAa,EAAE,mBAAmB;QAClC,OAAO,EAAE,KAAK,IAAI,KAAK,CAAC,IAAI;QAC5B,KAAK,EAAE,QAAQ;KAClB,CAAC,CAAC;AACP,CAAC;SAEe,oBAAoB,CAAC,IAAS,EAAE,MAAW;IACvD,OAAO,gBAAgB,CAAsB;QACzC,MAAM,EAAE,IAAI,CAAC,MAAM;QACnB,EAAE,EAAE,MAAM,CAAC,EAAE;QACb,aAAa,EAAE,wBAAwB;QACvC,OAAO,EAAE,UAAU,IAAI,UAAU,CAAC,IAAI;QACtC,KAAK,EAAE,aAAa;KACvB,CAAC,CAAC;AACP,CAAC;SAEe,eAAe,CAAC,IAAS,EAAE,MAAW;IAClD,OAAO,gBAAgB,CAAiB;QACpC,MAAM,EAAE,IAAI,CAAC,MAAM;QACnB,EAAE,EAAE,MAAM,CAAC,EAAE;QACb,aAAa,EAAE,mBAAmB;QAClC,OAAO,EAAE,KAAK,IAAI,KAAK,CAAC,IAAI;QAC5B,KAAK,EAAE,QAAQ;KAClB,CAAC,CAAC;AACP;;AC9JA;;;;SAIgB,WAAW,CAAsB,KAAU,EAAE,YAA0B;;IACnF,MAAM,aAAa,GAAuB,EAAE,CAAC;IAC7C,MAAM,SAAS,GAAkC,EAAE,CAAC;IACpD,MAAM,eAAe,GAAG,SAAS,CAAC,YAAY,CAAC,CAAC;;IAGhD,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;QACtB,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,mCAAS,IAAY,KAAE,QAAQ,EAAE,EAAE,GAAE,CAAC;KAC3D;IAED,KAAK,MAAM,EAAE,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE;QACnC,IAAI,SAAS,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE;YAC9B,MAAM,UAAU,GAAG,SAAS,CAAC,EAAE,CAAC,CAAC;YACjC,UAAU,CAAC,QAAQ,eAAG,eAAe,CAAC,GAAG,CAAC,EAAE,CAAC,0CAAE,QAAQ,mCAAI,KAAK,CAAC;YACjE,MAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;YACjC,IAAI,CAAC,MAAM,EAAE;gBACT,SAAS;aACZ;;YAED,MAAM,YAAY,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAC3C,IAAI,CAAC,YAAY,EAAE;gBACf,IAAI,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE;oBACtB,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;iBAClD;qBAAM;oBACH,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,EAAE,QAAQ,EAAE,CAAC,UAAU,CAAC,EAAS,CAAC;iBAC5D;aACJ;iBAAM;gBACH,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAClC;SACJ;KACJ;;IAED,MAAM,MAAM,GAAG,aAAa,CAAC,MAAM,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,MAAO,CAAC,EAAE,GAAG,SAAS,CAAC;IAC9E,OAAO,EAAE,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,aAAa,EAAE,CAAC;AACnD,CAAC;AAED;;;;;AAKA,SAAS,SAAS,CAAsB,IAAkB;IACtD,MAAM,OAAO,GAAG,IAAI,GAAG,EAAuB,CAAC;IAC/C,SAAS,KAAK,CAAC,IAAiB;QAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC3B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;KAChC;IACD,IAAI,IAAI,EAAE;QACN,KAAK,CAAC,IAAmB,CAAC,CAAC;KAC9B;IACD,OAAO,OAAO,CAAC;AACnB;;MCpCa,uBAAuB;IANpC;QASa,cAAS,GAAG,KAAK,CAAC;QACjB,cAAS,GAAG,IAAI,YAAY,EAAkB,CAAC;QAC/C,qBAAgB,GAAG,IAAI,YAAY,EAAU,CAAC;KAkC3D;IA/BG,WAAW,CAAC,OAAsB;QAC9B,IAAI,aAAa,IAAI,OAAO,IAAI,IAAI,CAAC,WAAW,EAAE;YAC9C,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;SAC5E;KACJ;IAED,MAAM,CAAC,KAAmE;QACtE,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,IAAyB,CAAC;QAClD,MAAM,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC;QACvC,MAAM,WAAW,GAAG,SAAS,CAAC,EAAE,CAAC;QACjC,IAAI,WAAW,IAAI,IAAI,EAAE;YACrB,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;SACxE;QACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;YAChB,YAAY,EAAE,IAAI,CAAC,EAAE;YACrB,QAAQ,EAAE,WAAW;YACrB,KAAK,EAAE,KAAK,CAAC,YAAY;SAC5B,CAAC,CAAC;KACN;IAED,MAAM,CAAC,KAAqB;QACxB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC9B;IAED,QAAQ,CAAC,EAAU;QACf,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAClC;IAEO,UAAU,CAAsB,IAAqB;QACzD,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;KACzC;;;YA5CJ,SAAS,SAAC;gBACP,QAAQ,EAAE,qBAAqB;gBAC/B,kPAA6C;gBAE7C,eAAe,EAAE,uBAAuB,CAAC,MAAM;;aAClD;;;0BAEI,KAAK;iCACL,KAAK;wBACL,KAAK;wBACL,MAAM;+BACN,MAAM;;;MCJE,2BAA2B;IASpC,YACoC,MAAmC,EAC3D,IAA6B,EAC7B,WAAwB;QAFA,WAAM,GAAN,MAAM,CAA6B;QAC3D,SAAI,GAAJ,IAAI,CAAyB;QAC7B,gBAAW,GAAX,WAAW,CAAa;QAXpC,UAAK,GAAG,CAAC,CAAC;QAID,cAAS,GAAG,KAAK,CAAC;QASvB,IAAI,MAAM,EAAE;YACR,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;SACjC;KACJ;IAED,QAAQ;QACJ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,IAAI,QAAQ,CAAC;QACvD,MAAM,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM;aACvC,UAAU,EAAE;aACZ,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC;aAC9C,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1B,IAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC,IAAI,CACzC,GAAG,CACC,KAAK,IACD,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAC9F,CACJ,CAAC;QACF,IAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC,IAAI,CACzC,GAAG,CACC,KAAK,IACD,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAC9F,CACJ,CAAC;KACL;IAED,WAAW,CAAC,OAAsB;QAC9B,MAAM,eAAe,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;QAC7C,IAAI,eAAe,EAAE;YACjB,IAAI,eAAe,CAAC,aAAa,KAAK,IAAI,IAAI,eAAe,CAAC,YAAY,KAAK,KAAK,EAAE;gBAClF,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC;aACnE;SACJ;KACJ;IAED,SAAS,CAAC,KAAa,EAAE,IAAuB;QAC5C,OAAO,IAAI,CAAC,EAAE,CAAC;KAClB;IAED,gBAAgB,CAAC,UAA6B;QAC1C,MAAM,KAAK,GAAG,CACV,IAAmB,EACnB,UAAoB,EACpB,MAA2C;YAE3C,IAAI,IAAI,CAAC,EAAE,KAAK,UAAU,CAAC,EAAE,EAAE;gBAC3B,MAAM,IAAI,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC1C,MAAM,QAAQ,GAAG,UAAU,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC;gBAC3D,IAAI,IAAI,CAAC,EAAE,KAAK,QAAQ,EAAE;oBACtB,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;iBAC3E;gBACD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;aAC9D;YACD,OAAO,MAAM,CAAC;SACjB,CAAC;QACF,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;KAClD;IAED,IAAI,CAAC,UAA6B,EAAE,QAAgB;QAChD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;YACb,KAAK,EAAE,CAAC;YACR,QAAQ;YACR,YAAY,EAAE,UAAU,CAAC,EAAE;SAC9B,CAAC,CAAC;KACN;IAED,MAAM,CAAC,UAA6B,EAAE,YAAoB;QACtD,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;YACpB,OAAO;SACV;QACD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;YACb,KAAK,EAAE,YAAY,GAAG,CAAC;YACvB,QAAQ,EAAE,UAAU,CAAC,MAAM,CAAC,EAAE;YAC9B,YAAY,EAAE,UAAU,CAAC,EAAE;SAC9B,CAAC,CAAC;KACN;IAED,QAAQ,CAAC,UAA6B,EAAE,YAAoB;QACxD,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;YACpB,OAAO;SACV;QACD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;YACb,KAAK,EAAE,YAAY,GAAG,CAAC;YACvB,QAAQ,EAAE,UAAU,CAAC,MAAM,CAAC,EAAE;YAC9B,YAAY,EAAE,UAAU,CAAC,EAAE;SAC9B,CAAC,CAAC;KACN;IAED,IAAI,CAAC,KAAmE;QACpE,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;QACvF,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KAC3B;IAED,MAAM,CAAC,EAAU;QACb,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;KAC1B;;;YAlHJ,SAAS,SAAC;gBACP,QAAQ,EAAE,0BAA0B;gBACpC,m4KAAoD;gBAEpD,eAAe,EAAE,uBAAuB,CAAC,MAAM;;aAClD;;;YAW+C,2BAA2B,uBAAlE,QAAQ,YAAI,QAAQ;YAlBD,uBAAuB;YAL1C,WAAW;;;6BAgBf,KAAK;iCACL,KAAK;wBACL,KAAK;;;ACtBV,MAAM,oBAAoB,GAAG,qBAAqB,CAAC;MAkBtC,gCAAgC;IAMzC,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QALlC,mBAAc,GAAG,IAAI,YAAY,EAA+B,CAAC;QAC3E,iBAAY,GAA8E,EAAE,CAAC;QAG7F,sBAAiB,GAA0C,EAAE,CAAC;KACd;IAEhD,QAAQ;QACJ,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI;YAC/D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;SACvD,CAAC,CAAC;QAEH,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC3B;IAED,SAAS;QACL,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;KACpD;IAED,YAAY,CAAC,IAAY;QACrB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;QACnE,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC3B;IAED,gBAAgB;QACZ,MAAM,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,KAAK,KAAK,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QAChG,MAAM,MAAM,GAAG,gBAAgB;cACzB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;cACrD,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;QAC/B,IAAI,CAAC,QAAQ,GAAG,uBAAuB,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,KAAK,EAAE,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;QAElG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO;YACzB,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;gBACrC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG;oBACjC,YAAY,EAAE,OAAO,CAAC,MAAM;oBAC5B,OAAO,EAAE,IAAI;oBACb,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC;oBACnD,GAAG,EAAE,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC;oBAChD,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC;iBACtD,CAAC;aACL;SACJ,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,EAAE,CAAC;KACvB;IAED,SAAS,CAAC,KAAa,EAAE,OAA2C;QAChE,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACnC;IAED,WAAW,CAAC,KAAoB,EAAE,yBAAoD;QAClF,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,yBAAyB,CAAC,KAAK,EAAE,CAAC;KACrC;IAED,YAAY;QACR,MAAM,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC;QACrG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;YACrB,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC5F,QAAQ,EAAE,gBAAgB;SAC7B,CAAC,CAAC;KACN;IAEO,eAAe,CACnB,SAAiB,EACjB,IAAO,EACP,KAA6B;QAE7B,OAAO,SAAS,KAAK,oBAAoB;cACnC,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC;cAClD,KAAK,CAAC;KACf;;;YA7EJ,SAAS,SAAC;gBACP,QAAQ,EAAE,+BAA+B;gBACzC,irHAAyD;;aAE5D;;;YApBQ,WAAW;;;6BAsBf,MAAM;;;MCbE,iCAAiC,GAAa;IACvD,OAAO,EAAE,iBAAiB;IAC1B,WAAW,EAAE,UAAU,CAAC,MAAM,yBAAyB,CAAC;IACxD,KAAK,EAAE,IAAI;EACb;MASW,yBAAyB;IAWlC,YAAoB,cAAiC;QAAjC,mBAAc,GAAd,cAAc,CAAmB;QAV5C,cAAS,GAAG,EAAE,CAAC;QAGxB,aAAQ,GAAG,KAAK,CAAC;QACjB,UAAK,GAAG,EAAE,CAAC;QACX,eAAU,GAAG,KAAK,CAAC;QACnB,iBAAY,GAAG,KAAK,CAAC;KAIoC;IAEzD,gBAAgB,CAAC,EAAO;QACpB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;KACxB;IAED,iBAAiB,CAAC,EAAO;QACrB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACvB;IAED,gBAAgB,CAAC,UAAmB;QAChC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;QAC3B,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;KACtC;IAED,UAAU,CAAC,GAAQ;QACf,IAAI,CAAC,OAAO,GAAG,GAAG,IAAI,EAAE,CAAC;KAC5B;IAED,KAAK;QACD,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;KACvC;IAED,YAAY,CAAC,MAAyC;QAClD,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;YAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC;YAChE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACjC;KACJ;IAED,SAAS,CAAC,KAAoB;QAC1B,QAAQ,KAAK,CAAC,GAAG;YACb,KAAK,GAAG,CAAC;YACT,KAAK,OAAO;gBACR,IAAI,CAAC,cAAc,EAAE,CAAC;gBACtB,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,MAAM;YACV,KAAK,WAAW;gBACZ,IAAI,IAAI,CAAC,YAAY,EAAE;oBACnB,IAAI,CAAC,gBAAgB,EAAE,CAAC;oBACxB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;iBAC7B;qBAAM,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,EAAE;oBAC1B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;iBAC5B;gBACD,MAAM;YACV;gBACI,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SACjC;KACJ;IAED,UAAU;QACN,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,cAAc,EAAE,CAAC;KACzB;IAEO,cAAc;QAClB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACpF,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACjC;IAEO,qBAAqB,CAAC,KAAa;QACvC,OAAO,KAAK;aACP,KAAK,CAAC,OAAO,CAAC;aACd,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;aAClB,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;aACrB,GAAG,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;KAC/C;IAEO,gBAAgB;QACpB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE;YAC/C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;SACjE;KACJ;;;YA3FJ,SAAS,SAAC;gBACP,QAAQ,EAAE,wBAAwB;gBAClC,6xBAAkD;gBAElD,eAAe,EAAE,uBAAuB,CAAC,OAAO;gBAChD,SAAS,EAAE,CAAC,iCAAiC,CAAC;;aACjD;;;YAvBG,iBAAiB;;;wBAyBhB,KAAK;uBACL,SAAS,SAAC,UAAU,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;;ACE3C;;;;;;;MAaa,sBAAsB;IAgC/B,YACY,YAA0B,EAC1B,cAAiC,EACjC,aAA4B,EAChB,yBAAqD;QAHjE,iBAAY,GAAZ,YAAY,CAAc;QAC1B,mBAAc,GAAd,cAAc,CAAmB;QACjC,kBAAa,GAAb,aAAa,CAAe;QAChB,8BAAyB,GAAzB,yBAAyB,CAA4B;QA5B7E,YAAO,GAAG,KAAK,CAAC;QACN,WAAM,GAAG,IAAI,YAAY,EAAe,CAAC;QAU5C,WAAM,GAAY,EAAE,CAAC;QAEX,gCAA2B,GAAG,CAAC,UAAU,CAAC,aAAa,EAAE,UAAU,CAAC,gBAAgB,CAAC,CAAC;QACtF,6BAAwB,GAAG,CAAC,UAAU,CAAC,aAAa,EAAE,UAAU,CAAC,aAAa,CAAC,CAAC;QAgHjG,2BAAsB,GAAG,CAAC,IAAa,EAAE,IAAiB;YACtD,IAAI,IAAI,KAAK,IAAI,CAAC,WAAW,EAAE;gBAC3B,OAAO,IAAI,CAAC;aACf;YACD,IAAI,IAAI,KAAK,IAAI,CAAC,eAAe,EAAE;gBAC/B,OAAO,KAAK,CAAC;aAChB;YAED,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,aAAa,CAAC;YACzD,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,aAAa,CAAC;YAC/D,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;YAC/C,MAAM,QAAQ,GAAG,WAAW,CAAC,aAAa,IAAI,WAAW,CAAC,aAAa,CAAC,QAAQ,CAAC;YAEjF,MAAM,SAAS,GAAG,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,GAAG,SAAS,GAAG,aAAa,CAAC,CAAC;YAC/E,MAAM,SAAS,GAAG,SAAS,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;YAEnD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBACd,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;gBAC7B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC;gBAEjC,SAAS,CAAC,KAAK,CAAC,KAAK,GAAG,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC;gBACzD,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,aAAa,CAAC,YAAY,GAAG,IAAI,CAAC;gBAE3D,IAAI,aAAa,CAAC,aAAa,EAAE;oBAC7B,aAAa,CAAC,aAAa,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;iBAC1D;aACJ;YAED,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;YAC7B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YAEnB,SAAS,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;YAC7B,IAAI,WAAW,CAAC,aAAa,EAAE;gBAC3B,WAAW,CAAC,aAAa,CAAC,YAAY,CAClC,SAAS,EACT,SAAS,GAAG,SAAS,GAAG,WAAW,CAAC,WAAW,GAAG,WAAW,CAChE,CAAC;aACL;YAED,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,KAAK,CAC/B,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,EACrC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,CACvC,CAAC;YACF,OAAO,KAAK,CAAC;SAChB,CAAC;KA9IE;IApCJ,IAAqB,YAAY,CAAC,GAAY;;QAE1C,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC;KAC7B;IAoBD,IAAI,iBAAiB;QACjB,IAAI,IAAI,CAAC,yBAAyB,EAAE;YAChC,OAAO,IAAI,CAAC,2BAA2B,CAAC;SAC3C;aAAM;YACH,OAAO,IAAI,CAAC,wBAAwB,CAAC;SACxC;KACJ;IASD,eAAe;QACX,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,aAAa,CAAC;QAEzD,SAAS,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QACjC,IAAI,SAAS,CAAC,aAAa,EAAE;YACzB,SAAS,CAAC,aAAa,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;SAClD;KACJ;IAED,YAAY;QACR,IAAI,CAAC,YAAY;aACZ,aAAa,CAAC,0BAA0B,EAAE;YACvC,IAAI,EAAE,IAAI;SACb,CAAC;aACD,SAAS,CAAC,MAAM;YACb,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE;gBACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC;gBACvD,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;oBACrB,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;iBAClC;gBACD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;gBACtD,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;aACtC;SACJ,CAAC,CAAC;KACV;IAED,aAAa,CAAC,KAAY;QACtB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;KAC5C;IAED,UAAU,CAAC,KAAY;QACnB,OAAO,CAAC,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,CAAC;KACrE;IAED,YAAY,CAAC,KAAY;QACrB,IAAI,CAAC,YAAY;aACZ,aAAa,CAAC,2BAA2B,EAAE;YACxC,IAAI,EAAE,IAAI;YACV,QAAQ,EAAE,IAAI;YACd,MAAM,EAAE,EAAE,KAAK,EAAE;SACpB,CAAC;aACD,SAAS,EAAE,CAAC;KACpB;IAED,WAAW,CAAC,KAAY;QACpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,CAAC,CAAC;QACzD,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,EAAE;YAC1D,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;SAC5E;QACD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;KACzD;IAEO,eAAe,CAAC,MAAe,EAAE,aAAgC;QACrE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YACb,MAAM;YACN,aAAa;SAChB,CAAC,CAAC;KACN;IAED,SAAS,CAAC,CAAc;QACpB,MAAM,KAAK,GAAG,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QAErD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ;YAClC,IAAI,4BAA4B,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE;gBAC1D,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;gBAChC,OAAO;aACV;SACJ,CAAC,CAAC;KACN;IAED,eAAe;QACX,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAC9B,OAAO;SACV;QAED,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,aAAa,CAAC;;QAEzD,MAAM,MAAM,GAAG,SAAS,CAAC,aAAc,CAAC;QAExC,SAAS,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QAEjC,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QAC9B,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QAC9B,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;QAE1F,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAEnB,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,CAAC,WAAW,EAAE;YACvC,eAAe,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;YACjE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;SACzD;KACJ;;IAkDD,wBAAwB,CAAC,KAA8B;;QAEnD,MAAM,KAAK,GAAG,cAAc,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;QAC1F,MAAM,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,yBAAyB,EAAE,CAAC;QAEtE,OAAO;YACH,CAAC,EAAE,KAAK,CAAC,KAAK,GAAG,cAAc,CAAC,IAAI;YACpC,CAAC,EAAE,KAAK,CAAC,KAAK,GAAG,cAAc,CAAC,GAAG;SACtC,CAAC;KACL;;;YArMJ,SAAS,SAAC;gBACP,QAAQ,EAAE,oBAAoB;gBAC9B,2iIAA8C;gBAE9C,eAAe,EAAE,uBAAuB,CAAC,MAAM;;aAClD;;;YAxBG,YAAY;YAbZ,iBAAiB;YAJZ,aAAa;YAsBb,yBAAyB,uBAwDzB,QAAQ;;;2BAnCZ,KAAK,SAAC,QAAQ;4BAId,KAAK;sBACL,WAAW,SAAC,eAAe,cAC3B,KAAK;qBAEL,MAAM;wBACN,SAAS,SAAC,KAAK,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,gBAAgB,EAAE;0BAC1D,SAAS,SAAC,IAAI,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,EAAE;;AAuLzD,SAAS,SAAS,CAAC,UAAiC,EAAE,IAAiB;IACnE,IAAI,CAAC,UAAU,EAAE;QACb,OAAO,CAAC,CAAC,CAAC;KACb;IACD,OAAO,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;AAC1D,CAAC;AAED;AACA,SAAS,cAAc,CAAC,KAA8B;IAClD,OAAO,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AAC1C,CAAC;AAED,SAAS,4BAA4B,CAAC,QAAqB,EAAE,CAAS,EAAE,CAAS;IAC7E,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,QAAQ,CAAC,OAAO,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC;IAC5F,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC;AAC9D;;MC1Oa,kCAAkC;IAN/C;QASI,sBAAiB,GAAG,IAAI,CAAC;QAOzB,qBAAgB,GAAG,KAAK,CAAC;KAoD5B;IAjDG,QAAQ;;QACJ,MAAM,kBAAkB,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAC3D,CAAC,IAAI,CAAC,CAAC,YAAY,KAAK,IAAI,CAAC,cAAc,CAC9C,CAAC;QACF,IAAI,CAAC,IAAI,SAAG,kBAAkB,aAAlB,kBAAkB,uBAAlB,kBAAkB,CAAE,IAAI,mCAAI,EAAE,CAAC;QAC3C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;QACpC,IAAI,CAAC,gBAAgB,GAAG,IAAI,SAAS,CAAC,EAAE,CAAC,CAAC;QAC1C,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,MAAM,oBAAoB,GACtB,CAAC,kBAAkB,IAAK,kBAA0B,CAAC,YAAY,KAAK,EAAE,CAAC;YAE3E,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,YAAY,EAAE;gBACtC,MAAM,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC;gBAC1B,MAAM,KAAK,GACP,QAAQ,CAAC,IAAI,KAAK,cAAc;sBAC1B,oBAAoB,CAAC,GAAG,CAAC;sBACxB,IAAI,CAAC,aAAqB,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;gBACxD,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;aAC3E;SACJ;KACJ;IAED,MAAM;QACF,MAAM,MAAM,GAAG,yBAAyB,CAAC;YACrC,YAAY,EAAE,IAAI,CAAC,aAAa;YAChC,YAAY,EAAE,IAAI,CAAC,cAAc;YACjC,aAAa,EAAE;gBACX,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,YAAY,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK;aAC5C;YACD,iBAAiB,EAAE,IAAI,CAAC,YAAY;YACpC,kBAAkB,EAAE;gBAChB,YAAY,EAAE,IAAI,CAAC,cAAc;gBACjC,IAAI,EAAE,EAAE;aACX;SACJ,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,iCAAM,MAAM,KAAE,UAAU,EAAE,IAAI,CAAC,iBAAiB,IAAG,CAAC;KACvE;IAED,MAAM;QACF,IAAI,CAAC,WAAW,EAAE,CAAC;KACtB;IAED,UAAU,CAAC,SAAiB;QACxB,IAAI,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE;YACpD,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;SAC/C;KACJ;;;YAnEJ,SAAS,SAAC;gBACP,QAAQ,EAAE,kCAAkC;gBAC5C,22DAA4D;gBAE5D,eAAe,EAAE,uBAAuB,CAAC,MAAM;;aAClD;;;MCgCY,4BAA4B;IAiCrC,YACY,cAAiC,EACjC,YAA0B,EAC1B,WAAwB;QAFxB,mBAAc,GAAd,cAAc,CAAmB;QACjC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QAzB1B,oBAAe,GAAG,IAAI,YAAY,EAAgC,CAAC;QACnE,sBAAiB,GAAG,IAAI,YAAY,EAG1C,CAAC;QACK,gBAAW,GAAG,IAAI,YAAY,EAAsB,CAAC;QACrD,oBAAe,GAAG,IAAI,YAAY,EAAY,CAAC;QAC/C,0BAAqB,GAAG,IAAI,YAAY,EAAY,CAAC;QACrD,wBAAmB,GAAG,IAAI,YAAY,EAAsD,CAAC;QACvG,uBAAkB,GAAa,EAAE,CAAC;QAClC,eAAU,GAAuB;YAC7B,WAAW,EAAE,CAAC;YACd,YAAY,EAAE,EAAE;SACnB,CAAC;QACF,iBAAY,GAAG,IAAI,GAAG,EAAqB,CAAC;QAC5C,eAAU,GAAG,UAAU,CAAC;QAGf,qBAAgB,GAAG,CAAC,UAAU,CAAC,aAAa,EAAE,UAAU,CAAC,aAAa,CAAC,CAAC;KAQ7E;IAEJ,QAAQ;QACJ,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,cAAc,EAAE;YAC5F,IAAI,CAAC,oBAAoB,GAAG,cAAc,CAAC,cAAc,CAAC;YAC1D,IAAI,CAAC,yBAAyB,GAAG,cAAc,CAAC,mBAAmB,CAAC;YACpE,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;SACtC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,CAAC;QAEpG,IAAI,CAAC,YAAY,CAAC,GAAG,CACjB,IAAI,CAAC,SAAS,CAAC,YAAY;aACtB,IAAI,CACD,GAAG,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,EAC1B,YAAY,CAAC,CAAC,CAAC,EACf,oBAAoB,EAAE,CACzB;aACA,SAAS,CAAC;YACP,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC5B,CAAC,CACT,CAAC;QAEF,IAAI,CAAC,iBAAiB,EAAE,CAAC;KAC5B;IAED,WAAW,CAAC,OAAsB;;QAC9B,IAAI,QAAQ,IAAI,OAAO,IAAI,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,EAAE;YACzD,IAAI,CAAC,WAAW,GAAG,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACtD;QACD,IAAI,UAAU,IAAI,OAAO,EAAE;YACvB,IAAI,OAAA,OAAO,CAAC,UAAU,CAAC,CAAC,YAAY,0CAAE,MAAM,aAAK,OAAO,CAAC,UAAU,CAAC,CAAC,aAAa,0CAAE,MAAM,CAAA,EAAE;gBACxF,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,CAAC,CAAC;aACnC;SACJ;KACJ;IAED,WAAW;QACP,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SACnC;KACJ;IAED,gBAAgB,CAAC,WAAmB;QAChC,OAAO,WAAW,KAAK,oBAAoB,CAAC;KAC/C;IAED,SAAS,CAAC,KAAa,EAAE,IAAkC;QACvD,OAAO,IAAI,CAAC,EAAE,CAAC;KAClB;IAED,qBAAqB,CAAC,SAAoB;;QACtC,MAAM,cAAc,SAAG,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC,0CAAE,KAAK,CAAC;QAC9D,QACI,cAAc,KAAK,UAAU,CAAC,KAAK;aAClC,cAAc,KAAK,UAAU,CAAC,OAAO,IAAI,IAAI,CAAC,oBAAoB,KAAK,KAAK,CAAC,EAChF;KACL;IAED,kBAAkB,CAAC,KAAgB;QAC/B,MAAM,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;QAC7C,IAAI,OAAO,IAAI,IAAI,CAAC,aAAa,EAAE;YAC/B,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,OAAO,CAAC,KAAK,CAAC,CAAC;YACnE,OAAO,KAAK,GAAG,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC;SAClC;QACD,OAAO,EAAE,CAAC;KACb;IAED,qBAAqB,CAAC,OAAqC;QACvD,MAAM,4BAA4B,GAAG,OAAO,CAAC,4BAA4B;cACnE,IAAI,CAAC,yBAAyB;cAC9B,OAAO,CAAC,mBAAmB,CAAC;QAClC,OAAO,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC,cAAc,GAAG,4BAA4B,CAAC;KACtF;IAED,cAAc;QACV,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,KAAK,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;KACrF;IAED,aAAa,CAAC,SAAiB,EAAE,KAAkB;QAC/C,IAAI,CAAC,WAAW,CAAC,IAAI,iBACjB,SAAS,IACN,KAAK,EACV,CAAC;QACH,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC;QAC/D,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;KAC1C;IAED,eAAe;QACX,IAAI,IAAI,CAAC,cAAc,EAAE,EAAE;YACvB,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;SAChC;aAAM;YACH,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;SAC1D;QACD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;KACtD;IAED,mBAAmB,CAAC,SAAiB;QACjC,MAAM,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QACzD,IAAI,CAAC,CAAC,GAAG,KAAK,EAAE;YACZ,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SAC5C;aAAM;YACH,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAC3C;QACD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;KACtD;IAED,eAAe,CAAC,aAAqB;;QACjC,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,aAAa,CAAC,CAAC;QAClE,IAAI,KAAK,EAAE;YACP,MAAM,WAAW,SACb,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,YAAY,KAAK,IAAI,CAAC,cAAc,oCACpE,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAC1B,OAAO,WAAW,CAAC,IAAI,CAAC;SAC3B;KACJ;IAED,UAAU,CAAC,MAA6B;;QACpC,MAAM,WAAW,SACb,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,YAAY,KAAK,IAAI,CAAC,cAAc,CAAC,mCAAI,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACpG,OAAO,WAAW,CAAC,IAAI,CAAC;KAC3B;IAED,kBAAkB,CAAC,OAAqC;QACpD,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,MAAM,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YAC5D,MAAM,oBAAoB,GAAG,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;YAClE,OAAO,iBAAiB;iBACnB,MAAM,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;iBAC9C,GAAG,CAAC,EAAE,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;iBACpD,MAAM,CAAC,kBAAkB,CAAC,CAAC;SACnC;aAAM;YACH,OAAO,EAAE,CAAC;SACb;KACJ;IAED,mBAAmB,CAAC,OAAqC;QACrD,MAAM,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC5D,MAAM,YAAY,GAAG,CAAC,GAAG,iBAAiB,CAAC,CAAC,MAAM,CAAC,CAAC,IAChD,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CACnD,CAAC;QACF,OAAO,YAAY;aACd,GAAG,CAAC,EAAE,IAAI,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;aACvD,MAAM,CAAC,kBAAkB,CAAC,CAAC;KACnC;IAED,gBAAgB,CAAC,OAAqC,EAAE,YAAoB;QACxE,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACpD,IAAI,SAAS,EAAE;YACX,MAAM,QAAQ,GAAI,SAAS,CAAC,KAA0B,CAAC,aAAa,CAAC,MAAM,CACvE,EAAE,IAAI,EAAE,KAAK,YAAY,CAC5B,CAAC;YACF,SAAS,CAAC,UAAU,CAAC;gBACjB,aAAa,EAAE,QAAQ;aAC1B,CAAC,CAAC;YACH,SAAS,CAAC,WAAW,EAAE,CAAC;SAC3B;KACJ;IAED,iBAAiB,CAAC,SAAiB;QAC/B,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;KAC1D;IAED,UAAU,CAAC,MAA8B;QACrC,IAAI,CAAC,YAAY;aACZ,aAAa,CAAC,kCAAkC,EAAE;YAC/C,IAAI,EAAE,IAAI;YACV,MAAM,EAAE;gBACJ,aAAa,EAAE,MAAM;gBACrB,cAAc,EAAE,IAAI,CAAC,cAAc;gBACnC,YAAY,EAAE,IAAI,CAAC,kBAAkB;aACxC;SACJ,CAAC;aACD,SAAS,CAAC,MAAM;YACb,IAAI,MAAM,EAAE;gBACR,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACzC;SACJ,CAAC,CAAC;KACV;IAEO,iBAAiB;QACrB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAC1B,KAAK,MAAM,YAAY,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE;YAChD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,EAAE,YAAyB,CAAC,CAAC;SAC3E;QACD,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;KACtC;IAEO,gBAAgB,CAAC,EAAU;;QAC/B,MAAM,SAAS,SAAqB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,CAAC,0CAAE,KAAK,CAAC;QACrE,OAAO,SAAS,CAAC,aAAa,CAAC;KAClC;;;YAzOJ,SAAS,SAAC;gBACP,QAAQ,EAAE,2BAA2B;gBACrC,+jlBAAqD;gBAErD,eAAe,EAAE,uBAAuB,CAAC,MAAM;;aAClD;;;YA9CG,iBAAiB;YAmBjB,YAAY;YANZ,WAAW;;;wBAmCV,KAAK,SAAC,0BAA0B;uBAChC,KAAK;sCACL,KAAK;4BACL,KAAK;qBACL,KAAK;2BACL,KAAK;2BACL,KAAK;iCACL,KAAK;6BACL,KAAK;kCACL,KAAK;8BACL,MAAM;gCACN,MAAM;0BAIN,MAAM;8BACN,MAAM;oCACN,MAAM;kCACN,MAAM;;;MC/CE,6BAA6B;IAUtC,YAAoB,cAAiC;QAAjC,mBAAc,GAAd,cAAc,CAAmB;QAJrD,iBAAY,GAAG,IAAI,GAAG,EAAqB,CAAC;QACnC,qBAAgB,GAAG,CAAC,UAAU,CAAC,aAAa,EAAE,UAAU,CAAC,aAAa,CAAC,CAAC;KAGxB;IAEzD,QAAQ;QACJ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY;aAC1C,IAAI,CACD,GAAG,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,EAC1B,YAAY,CAAC,CAAC,CAAC,EACf,oBAAoB,EAAE,CACzB;aACA,SAAS,CAAC;YACP,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC5B,CAAC,CAAC;QAEP,IAAI,CAAC,iBAAiB,EAAE,CAAC;KAC5B;IAED,WAAW;QACP,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SACnC;KACJ;IAED,gBAAgB,CAAC,OAAqC;;QAClD,OAAO,OAAA,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,EAAE,CAAC,0CAAE,aAAa,KAAI,OAAO,CAAC,aAAa,CAAC;KACvF;IAED,eAAe,CAAC,aAAqB;QACjC,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,aAAa,CAAC,CAAC;QAClE,OAAO,KAAK,IAAI,KAAK,CAAC,IAAI,CAAC;KAC9B;IAEO,iBAAiB;QACrB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAC1B,KAAK,MAAM,YAAY,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE;YAChD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,EAAE,YAAyB,CAAC,CAAC;SAC3E;QACD,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;KACtC;;;YArDJ,SAAS,SAAC;gBACP,QAAQ,EAAE,4BAA4B;gBACtC,y7JAAsD;gBAEtD,eAAe,EAAE,uBAAuB,CAAC,MAAM;;aAClD;;;YAlBG,iBAAiB;;;wBAoBhB,KAAK,SAAC,0BAA0B;uBAChC,KAAK;sCACL,KAAK;2BACL,KAAK;kCACL,KAAK;;;MCfG,2BAA2B;IAYpC,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAHpC,iBAAY,GAAG,IAAI,eAAe,CAAS,CAAC,CAAC,CAAC;QAC9C,yBAAoB,GAAG,IAAI,eAAe,CAAS,EAAE,CAAC,CAAC;KAEf;IAEhD,QAAQ;QACJ,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ;aACtC,WAAW,CAAC,GAAG,EAAE,CAAC,EAAE,aAAa,CAAC;aAClC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC5C,MAAM,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ;aAC3C,gBAAgB,CAAC,aAAa,CAAC;aAC/B,sBAAsB,EAAE;aACxB,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC;QAE3C,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC,cAAc,EAAE,SAAS,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC,IAAI,CACpF,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,QAAQ,EAAE,aAAa,CAAC;YACnC,MAAM,cAAc,GAAG,OAAO,CAAC,cAAc,CAAC;YAC9C,IAAI,CAAC,cAAc,EAAE;gBACjB,OAAO,CAAC,CAAC;aACZ;YACD,MAAM,cAAc,GAAG,QAAQ,CAAC,IAAI,CAChC,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,cAAc,CAAC,EAAE,IAAI,OAAO,CAAC,QAAQ,CAAC,EAAE,KAAK,aAAa,CAC5F,CAAC;YAEF,IAAI,CAAC,cAAc,EAAE;gBACjB,OAAO,CAAC,CAAC;aACZ;YACD,OAAO,cAAc,CAAC,KAAK,CAAC;SAC/B,CAAC,CACL,CAAC;QAEF,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,CACnE,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC;YACjB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,GAAG,GAAG,OAAO,IAAI,GAAG,CAAC,CAAC,CAAC;SACtD,CAAC,CACL,CAAC;KACL;IAED,WAAW,CAAC,OAAsB;QAC9B,IAAI,OAAO,IAAI,OAAO,EAAE;YACpB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;SACtD;QACD,IAAI,eAAe,IAAI,OAAO,EAAE;YAC5B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;SACtE;KACJ;;;YA5DJ,SAAS,SAAC;gBACP,QAAQ,EAAE,0BAA0B;gBACpC,odAAoD;gBAEpD,eAAe,EAAE,uBAAuB,CAAC,MAAM;;aAClD;;;YATQ,WAAW;;;+BAWf,KAAK;oBACL,KAAK;2BACL,KAAK;4BACL,KAAK;;;MCyCG,aAAa;;;YA5BzB,QAAQ,SAAC;gBACN,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;gBAC7D,OAAO,EAAE,EAAE;gBACX,YAAY,EAAE;oBACV,oBAAoB;oBACpB,sBAAsB;oBACtB,kBAAkB;oBAClB,oBAAoB;oBACpB,gCAAgC;oBAChC,4BAA4B;oBAC5B,yBAAyB;oBACzB,kBAAkB;oBAClB,sBAAsB;oBACtB,2BAA2B;oBAC3B,uBAAuB;oBACvB,yBAAyB;oBACzB,uBAAuB;oBACvB,2BAA2B;oBAC3B,2BAA2B;oBAC3B,6BAA6B;oBAC7B,2BAA2B;oBAC3B,yBAAyB;oBACzB,kCAAkC;oBAClC,8BAA8B;oBAC9B,sCAAsC;oBACtC,oBAAoB;iBACvB;aACJ;;;ACvDD;;ACAA;;;;;;"}
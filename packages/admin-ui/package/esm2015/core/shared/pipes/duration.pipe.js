import { Pipe } from '@angular/core';
import { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';
import { I18nService } from '../../providers/i18n/i18n.service';
/**
 * Displays a number of milliseconds in a more human-readable format,
 * e.g. "12ms", "33s", "2:03m"
 */
export class DurationPipe {
    constructor(i18nService) {
        this.i18nService = i18nService;
    }
    transform(value) {
        if (value < 1000) {
            return this.i18nService.translate(_('datetime.duration-milliseconds'), { ms: value });
        }
        else if (value < 1000 * 60) {
            const seconds1dp = +(value / 1000).toFixed(1);
            return this.i18nService.translate(_('datetime.duration-seconds'), { s: seconds1dp });
        }
        else {
            const minutes = Math.floor(value / (1000 * 60));
            const seconds = Math.round((value % (1000 * 60)) / 1000)
                .toString()
                .padStart(2, '0');
            return this.i18nService.translate(_('datetime.duration-minutes:seconds'), {
                m: minutes,
                s: seconds,
            });
        }
    }
}
DurationPipe.decorators = [
    { type: Pipe, args: [{
                name: 'duration',
            },] }
];
DurationPipe.ctorParameters = () => [
    { type: I18nService }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHVyYXRpb24ucGlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29yZS9zcmMvc2hhcmVkL3BpcGVzL2R1cmF0aW9uLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFDcEQsT0FBTyxFQUFFLE1BQU0sSUFBSSxDQUFDLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUV0RSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFFaEU7OztHQUdHO0FBSUgsTUFBTSxPQUFPLFlBQVk7SUFDckIsWUFBb0IsV0FBd0I7UUFBeEIsZ0JBQVcsR0FBWCxXQUFXLENBQWE7SUFBRyxDQUFDO0lBRWhELFNBQVMsQ0FBQyxLQUFhO1FBQ25CLElBQUksS0FBSyxHQUFHLElBQUksRUFBRTtZQUNkLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLGdDQUFnQyxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQztTQUN6RjthQUFNLElBQUksS0FBSyxHQUFHLElBQUksR0FBRyxFQUFFLEVBQUU7WUFDMUIsTUFBTSxVQUFVLEdBQUcsQ0FBQyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDOUMsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsMkJBQTJCLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxDQUFDO1NBQ3hGO2FBQU07WUFDSCxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxDQUFDLElBQUksR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQ2hELE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxJQUFJLEdBQUcsRUFBRSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUM7aUJBQ25ELFFBQVEsRUFBRTtpQkFDVixRQUFRLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1lBQ3RCLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLG1DQUFtQyxDQUFDLEVBQUU7Z0JBQ3RFLENBQUMsRUFBRSxPQUFPO2dCQUNWLENBQUMsRUFBRSxPQUFPO2FBQ2IsQ0FBQyxDQUFDO1NBQ047SUFDTCxDQUFDOzs7WUF0QkosSUFBSSxTQUFDO2dCQUNGLElBQUksRUFBRSxVQUFVO2FBQ25COzs7WUFSUSxXQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgbWFya2VyIGFzIF8gfSBmcm9tICdAYmllc2JqZXJnL25neC10cmFuc2xhdGUtZXh0cmFjdC1tYXJrZXInO1xuXG5pbXBvcnQgeyBJMThuU2VydmljZSB9IGZyb20gJy4uLy4uL3Byb3ZpZGVycy9pMThuL2kxOG4uc2VydmljZSc7XG5cbi8qKlxuICogRGlzcGxheXMgYSBudW1iZXIgb2YgbWlsbGlzZWNvbmRzIGluIGEgbW9yZSBodW1hbi1yZWFkYWJsZSBmb3JtYXQsXG4gKiBlLmcuIFwiMTJtc1wiLCBcIjMzc1wiLCBcIjI6MDNtXCJcbiAqL1xuQFBpcGUoe1xuICAgIG5hbWU6ICdkdXJhdGlvbicsXG59KVxuZXhwb3J0IGNsYXNzIER1cmF0aW9uUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgaTE4blNlcnZpY2U6IEkxOG5TZXJ2aWNlKSB7fVxuXG4gICAgdHJhbnNmb3JtKHZhbHVlOiBudW1iZXIpOiBzdHJpbmcge1xuICAgICAgICBpZiAodmFsdWUgPCAxMDAwKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5pMThuU2VydmljZS50cmFuc2xhdGUoXygnZGF0ZXRpbWUuZHVyYXRpb24tbWlsbGlzZWNvbmRzJyksIHsgbXM6IHZhbHVlIH0pO1xuICAgICAgICB9IGVsc2UgaWYgKHZhbHVlIDwgMTAwMCAqIDYwKSB7XG4gICAgICAgICAgICBjb25zdCBzZWNvbmRzMWRwID0gKyh2YWx1ZSAvIDEwMDApLnRvRml4ZWQoMSk7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5pMThuU2VydmljZS50cmFuc2xhdGUoXygnZGF0ZXRpbWUuZHVyYXRpb24tc2Vjb25kcycpLCB7IHM6IHNlY29uZHMxZHAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBtaW51dGVzID0gTWF0aC5mbG9vcih2YWx1ZSAvICgxMDAwICogNjApKTtcbiAgICAgICAgICAgIGNvbnN0IHNlY29uZHMgPSBNYXRoLnJvdW5kKCh2YWx1ZSAlICgxMDAwICogNjApKSAvIDEwMDApXG4gICAgICAgICAgICAgICAgLnRvU3RyaW5nKClcbiAgICAgICAgICAgICAgICAucGFkU3RhcnQoMiwgJzAnKTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmkxOG5TZXJ2aWNlLnRyYW5zbGF0ZShfKCdkYXRldGltZS5kdXJhdGlvbi1taW51dGVzOnNlY29uZHMnKSwge1xuICAgICAgICAgICAgICAgIG06IG1pbnV0ZXMsXG4gICAgICAgICAgICAgICAgczogc2Vjb25kcyxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxufVxuIl19
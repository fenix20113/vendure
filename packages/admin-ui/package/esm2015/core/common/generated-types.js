/**
 * @description
 * The state of a Job in the JobQueue
 *
 * @docsCategory common
 */
export var JobState;
(function (JobState) {
    JobState["PENDING"] = "PENDING";
    JobState["RUNNING"] = "RUNNING";
    JobState["COMPLETED"] = "COMPLETED";
    JobState["RETRYING"] = "RETRYING";
    JobState["FAILED"] = "FAILED";
    JobState["CANCELLED"] = "CANCELLED";
})(JobState || (JobState = {}));
export var StockMovementType;
(function (StockMovementType) {
    StockMovementType["ADJUSTMENT"] = "ADJUSTMENT";
    StockMovementType["ALLOCATION"] = "ALLOCATION";
    StockMovementType["RELEASE"] = "RELEASE";
    StockMovementType["SALE"] = "SALE";
    StockMovementType["CANCELLATION"] = "CANCELLATION";
    StockMovementType["RETURN"] = "RETURN";
})(StockMovementType || (StockMovementType = {}));
export var AssetType;
(function (AssetType) {
    AssetType["IMAGE"] = "IMAGE";
    AssetType["VIDEO"] = "VIDEO";
    AssetType["BINARY"] = "BINARY";
})(AssetType || (AssetType = {}));
export var GlobalFlag;
(function (GlobalFlag) {
    GlobalFlag["TRUE"] = "TRUE";
    GlobalFlag["FALSE"] = "FALSE";
    GlobalFlag["INHERIT"] = "INHERIT";
})(GlobalFlag || (GlobalFlag = {}));
export var AdjustmentType;
(function (AdjustmentType) {
    AdjustmentType["PROMOTION"] = "PROMOTION";
    AdjustmentType["DISTRIBUTED_ORDER_PROMOTION"] = "DISTRIBUTED_ORDER_PROMOTION";
})(AdjustmentType || (AdjustmentType = {}));
export var DeletionResult;
(function (DeletionResult) {
    /** The entity was successfully deleted */
    DeletionResult["DELETED"] = "DELETED";
    /** Deletion did not take place, reason given in message */
    DeletionResult["NOT_DELETED"] = "NOT_DELETED";
})(DeletionResult || (DeletionResult = {}));
/**
 * @description
 * Permissions for administrators and customers. Used to control access to
 * GraphQL resolvers via the {@link Allow} decorator.
 *
 * @docsCategory common
 */
export var Permission;
(function (Permission) {
    /** Authenticated means simply that the user is logged in */
    Permission["Authenticated"] = "Authenticated";
    /** Grants permission to create Administrator */
    Permission["CreateAdministrator"] = "CreateAdministrator";
    /** Grants permission to create Asset */
    Permission["CreateAsset"] = "CreateAsset";
    /** Grants permission to create Products, Facets, Assets, Collections */
    Permission["CreateCatalog"] = "CreateCatalog";
    /** Grants permission to create Channel */
    Permission["CreateChannel"] = "CreateChannel";
    /** Grants permission to create Collection */
    Permission["CreateCollection"] = "CreateCollection";
    /** Grants permission to create Country */
    Permission["CreateCountry"] = "CreateCountry";
    /** Grants permission to create Customer */
    Permission["CreateCustomer"] = "CreateCustomer";
    /** Grants permission to create CustomerGroup */
    Permission["CreateCustomerGroup"] = "CreateCustomerGroup";
    /** Grants permission to create Facet */
    Permission["CreateFacet"] = "CreateFacet";
    /** Grants permission to create Order */
    Permission["CreateOrder"] = "CreateOrder";
    /** Grants permission to create PaymentMethod */
    Permission["CreatePaymentMethod"] = "CreatePaymentMethod";
    /** Grants permission to create Product */
    Permission["CreateProduct"] = "CreateProduct";
    /** Grants permission to create Promotion */
    Permission["CreatePromotion"] = "CreatePromotion";
    /** Grants permission to create PaymentMethods, ShippingMethods, TaxCategories, TaxRates, Zones, Countries, System & GlobalSettings */
    Permission["CreateSettings"] = "CreateSettings";
    /** Grants permission to create ShippingMethod */
    Permission["CreateShippingMethod"] = "CreateShippingMethod";
    /** Grants permission to create System */
    Permission["CreateSystem"] = "CreateSystem";
    /** Grants permission to create Tag */
    Permission["CreateTag"] = "CreateTag";
    /** Grants permission to create TaxCategory */
    Permission["CreateTaxCategory"] = "CreateTaxCategory";
    /** Grants permission to create TaxRate */
    Permission["CreateTaxRate"] = "CreateTaxRate";
    /** Grants permission to create Zone */
    Permission["CreateZone"] = "CreateZone";
    /** Grants permission to delete Administrator */
    Permission["DeleteAdministrator"] = "DeleteAdministrator";
    /** Grants permission to delete Asset */
    Permission["DeleteAsset"] = "DeleteAsset";
    /** Grants permission to delete Products, Facets, Assets, Collections */
    Permission["DeleteCatalog"] = "DeleteCatalog";
    /** Grants permission to delete Channel */
    Permission["DeleteChannel"] = "DeleteChannel";
    /** Grants permission to delete Collection */
    Permission["DeleteCollection"] = "DeleteCollection";
    /** Grants permission to delete Country */
    Permission["DeleteCountry"] = "DeleteCountry";
    /** Grants permission to delete Customer */
    Permission["DeleteCustomer"] = "DeleteCustomer";
    /** Grants permission to delete CustomerGroup */
    Permission["DeleteCustomerGroup"] = "DeleteCustomerGroup";
    /** Grants permission to delete Facet */
    Permission["DeleteFacet"] = "DeleteFacet";
    /** Grants permission to delete Order */
    Permission["DeleteOrder"] = "DeleteOrder";
    /** Grants permission to delete PaymentMethod */
    Permission["DeletePaymentMethod"] = "DeletePaymentMethod";
    /** Grants permission to delete Product */
    Permission["DeleteProduct"] = "DeleteProduct";
    /** Grants permission to delete Promotion */
    Permission["DeletePromotion"] = "DeletePromotion";
    /** Grants permission to delete PaymentMethods, ShippingMethods, TaxCategories, TaxRates, Zones, Countries, System & GlobalSettings */
    Permission["DeleteSettings"] = "DeleteSettings";
    /** Grants permission to delete ShippingMethod */
    Permission["DeleteShippingMethod"] = "DeleteShippingMethod";
    /** Grants permission to delete System */
    Permission["DeleteSystem"] = "DeleteSystem";
    /** Grants permission to delete Tag */
    Permission["DeleteTag"] = "DeleteTag";
    /** Grants permission to delete TaxCategory */
    Permission["DeleteTaxCategory"] = "DeleteTaxCategory";
    /** Grants permission to delete TaxRate */
    Permission["DeleteTaxRate"] = "DeleteTaxRate";
    /** Grants permission to delete Zone */
    Permission["DeleteZone"] = "DeleteZone";
    /** Owner means the user owns this entity, e.g. a Customer's own Order */
    Permission["Owner"] = "Owner";
    Permission["Placeholder"] = "Placeholder";
    /** Public means any unauthenticated user may perform the operation */
    Permission["Public"] = "Public";
    /** Grants permission to read Administrator */
    Permission["ReadAdministrator"] = "ReadAdministrator";
    /** Grants permission to read Asset */
    Permission["ReadAsset"] = "ReadAsset";
    /** Grants permission to read Products, Facets, Assets, Collections */
    Permission["ReadCatalog"] = "ReadCatalog";
    /** Grants permission to read Channel */
    Permission["ReadChannel"] = "ReadChannel";
    /** Grants permission to read Collection */
    Permission["ReadCollection"] = "ReadCollection";
    /** Grants permission to read Country */
    Permission["ReadCountry"] = "ReadCountry";
    /** Grants permission to read Customer */
    Permission["ReadCustomer"] = "ReadCustomer";
    /** Grants permission to read CustomerGroup */
    Permission["ReadCustomerGroup"] = "ReadCustomerGroup";
    /** Grants permission to read Facet */
    Permission["ReadFacet"] = "ReadFacet";
    /** Grants permission to read Order */
    Permission["ReadOrder"] = "ReadOrder";
    /** Grants permission to read PaymentMethod */
    Permission["ReadPaymentMethod"] = "ReadPaymentMethod";
    /** Grants permission to read Product */
    Permission["ReadProduct"] = "ReadProduct";
    /** Grants permission to read Promotion */
    Permission["ReadPromotion"] = "ReadPromotion";
    /** Grants permission to read PaymentMethods, ShippingMethods, TaxCategories, TaxRates, Zones, Countries, System & GlobalSettings */
    Permission["ReadSettings"] = "ReadSettings";
    /** Grants permission to read ShippingMethod */
    Permission["ReadShippingMethod"] = "ReadShippingMethod";
    /** Grants permission to read System */
    Permission["ReadSystem"] = "ReadSystem";
    /** Grants permission to read Tag */
    Permission["ReadTag"] = "ReadTag";
    /** Grants permission to read TaxCategory */
    Permission["ReadTaxCategory"] = "ReadTaxCategory";
    /** Grants permission to read TaxRate */
    Permission["ReadTaxRate"] = "ReadTaxRate";
    /** Grants permission to read Zone */
    Permission["ReadZone"] = "ReadZone";
    /** SuperAdmin has unrestricted access to all operations */
    Permission["SuperAdmin"] = "SuperAdmin";
    /** Grants permission to update Administrator */
    Permission["UpdateAdministrator"] = "UpdateAdministrator";
    /** Grants permission to update Asset */
    Permission["UpdateAsset"] = "UpdateAsset";
    /** Grants permission to update Products, Facets, Assets, Collections */
    Permission["UpdateCatalog"] = "UpdateCatalog";
    /** Grants permission to update Channel */
    Permission["UpdateChannel"] = "UpdateChannel";
    /** Grants permission to update Collection */
    Permission["UpdateCollection"] = "UpdateCollection";
    /** Grants permission to update Country */
    Permission["UpdateCountry"] = "UpdateCountry";
    /** Grants permission to update Customer */
    Permission["UpdateCustomer"] = "UpdateCustomer";
    /** Grants permission to update CustomerGroup */
    Permission["UpdateCustomerGroup"] = "UpdateCustomerGroup";
    /** Grants permission to update Facet */
    Permission["UpdateFacet"] = "UpdateFacet";
    /** Grants permission to update GlobalSettings */
    Permission["UpdateGlobalSettings"] = "UpdateGlobalSettings";
    /** Grants permission to update Order */
    Permission["UpdateOrder"] = "UpdateOrder";
    /** Grants permission to update PaymentMethod */
    Permission["UpdatePaymentMethod"] = "UpdatePaymentMethod";
    /** Grants permission to update Product */
    Permission["UpdateProduct"] = "UpdateProduct";
    /** Grants permission to update Promotion */
    Permission["UpdatePromotion"] = "UpdatePromotion";
    /** Grants permission to update PaymentMethods, ShippingMethods, TaxCategories, TaxRates, Zones, Countries, System & GlobalSettings */
    Permission["UpdateSettings"] = "UpdateSettings";
    /** Grants permission to update ShippingMethod */
    Permission["UpdateShippingMethod"] = "UpdateShippingMethod";
    /** Grants permission to update System */
    Permission["UpdateSystem"] = "UpdateSystem";
    /** Grants permission to update Tag */
    Permission["UpdateTag"] = "UpdateTag";
    /** Grants permission to update TaxCategory */
    Permission["UpdateTaxCategory"] = "UpdateTaxCategory";
    /** Grants permission to update TaxRate */
    Permission["UpdateTaxRate"] = "UpdateTaxRate";
    /** Grants permission to update Zone */
    Permission["UpdateZone"] = "UpdateZone";
})(Permission || (Permission = {}));
export var SortOrder;
(function (SortOrder) {
    SortOrder["ASC"] = "ASC";
    SortOrder["DESC"] = "DESC";
})(SortOrder || (SortOrder = {}));
export var ErrorCode;
(function (ErrorCode) {
    ErrorCode["UNKNOWN_ERROR"] = "UNKNOWN_ERROR";
    ErrorCode["MIME_TYPE_ERROR"] = "MIME_TYPE_ERROR";
    ErrorCode["LANGUAGE_NOT_AVAILABLE_ERROR"] = "LANGUAGE_NOT_AVAILABLE_ERROR";
    ErrorCode["CHANNEL_DEFAULT_LANGUAGE_ERROR"] = "CHANNEL_DEFAULT_LANGUAGE_ERROR";
    ErrorCode["SETTLE_PAYMENT_ERROR"] = "SETTLE_PAYMENT_ERROR";
    ErrorCode["EMPTY_ORDER_LINE_SELECTION_ERROR"] = "EMPTY_ORDER_LINE_SELECTION_ERROR";
    ErrorCode["ITEMS_ALREADY_FULFILLED_ERROR"] = "ITEMS_ALREADY_FULFILLED_ERROR";
    ErrorCode["INVALID_FULFILLMENT_HANDLER_ERROR"] = "INVALID_FULFILLMENT_HANDLER_ERROR";
    ErrorCode["CREATE_FULFILLMENT_ERROR"] = "CREATE_FULFILLMENT_ERROR";
    ErrorCode["INSUFFICIENT_STOCK_ON_HAND_ERROR"] = "INSUFFICIENT_STOCK_ON_HAND_ERROR";
    ErrorCode["MULTIPLE_ORDER_ERROR"] = "MULTIPLE_ORDER_ERROR";
    ErrorCode["CANCEL_ACTIVE_ORDER_ERROR"] = "CANCEL_ACTIVE_ORDER_ERROR";
    ErrorCode["PAYMENT_ORDER_MISMATCH_ERROR"] = "PAYMENT_ORDER_MISMATCH_ERROR";
    ErrorCode["REFUND_ORDER_STATE_ERROR"] = "REFUND_ORDER_STATE_ERROR";
    ErrorCode["NOTHING_TO_REFUND_ERROR"] = "NOTHING_TO_REFUND_ERROR";
    ErrorCode["ALREADY_REFUNDED_ERROR"] = "ALREADY_REFUNDED_ERROR";
    ErrorCode["QUANTITY_TOO_GREAT_ERROR"] = "QUANTITY_TOO_GREAT_ERROR";
    ErrorCode["REFUND_STATE_TRANSITION_ERROR"] = "REFUND_STATE_TRANSITION_ERROR";
    ErrorCode["PAYMENT_STATE_TRANSITION_ERROR"] = "PAYMENT_STATE_TRANSITION_ERROR";
    ErrorCode["FULFILLMENT_STATE_TRANSITION_ERROR"] = "FULFILLMENT_STATE_TRANSITION_ERROR";
    ErrorCode["ORDER_MODIFICATION_STATE_ERROR"] = "ORDER_MODIFICATION_STATE_ERROR";
    ErrorCode["NO_CHANGES_SPECIFIED_ERROR"] = "NO_CHANGES_SPECIFIED_ERROR";
    ErrorCode["PAYMENT_METHOD_MISSING_ERROR"] = "PAYMENT_METHOD_MISSING_ERROR";
    ErrorCode["REFUND_PAYMENT_ID_MISSING_ERROR"] = "REFUND_PAYMENT_ID_MISSING_ERROR";
    ErrorCode["MANUAL_PAYMENT_STATE_ERROR"] = "MANUAL_PAYMENT_STATE_ERROR";
    ErrorCode["PRODUCT_OPTION_IN_USE_ERROR"] = "PRODUCT_OPTION_IN_USE_ERROR";
    ErrorCode["MISSING_CONDITIONS_ERROR"] = "MISSING_CONDITIONS_ERROR";
    ErrorCode["NATIVE_AUTH_STRATEGY_ERROR"] = "NATIVE_AUTH_STRATEGY_ERROR";
    ErrorCode["INVALID_CREDENTIALS_ERROR"] = "INVALID_CREDENTIALS_ERROR";
    ErrorCode["ORDER_STATE_TRANSITION_ERROR"] = "ORDER_STATE_TRANSITION_ERROR";
    ErrorCode["EMAIL_ADDRESS_CONFLICT_ERROR"] = "EMAIL_ADDRESS_CONFLICT_ERROR";
    ErrorCode["ORDER_LIMIT_ERROR"] = "ORDER_LIMIT_ERROR";
    ErrorCode["NEGATIVE_QUANTITY_ERROR"] = "NEGATIVE_QUANTITY_ERROR";
    ErrorCode["INSUFFICIENT_STOCK_ERROR"] = "INSUFFICIENT_STOCK_ERROR";
})(ErrorCode || (ErrorCode = {}));
export var LogicalOperator;
(function (LogicalOperator) {
    LogicalOperator["AND"] = "AND";
    LogicalOperator["OR"] = "OR";
})(LogicalOperator || (LogicalOperator = {}));
/**
 * @description
 * ISO 4217 currency code
 *
 * @docsCategory common
 */
export var CurrencyCode;
(function (CurrencyCode) {
    /** United Arab Emirates dirham */
    CurrencyCode["AED"] = "AED";
    /** Afghan afghani */
    CurrencyCode["AFN"] = "AFN";
    /** Albanian lek */
    CurrencyCode["ALL"] = "ALL";
    /** Armenian dram */
    CurrencyCode["AMD"] = "AMD";
    /** Netherlands Antillean guilder */
    CurrencyCode["ANG"] = "ANG";
    /** Angolan kwanza */
    CurrencyCode["AOA"] = "AOA";
    /** Argentine peso */
    CurrencyCode["ARS"] = "ARS";
    /** Australian dollar */
    CurrencyCode["AUD"] = "AUD";
    /** Aruban florin */
    CurrencyCode["AWG"] = "AWG";
    /** Azerbaijani manat */
    CurrencyCode["AZN"] = "AZN";
    /** Bosnia and Herzegovina convertible mark */
    CurrencyCode["BAM"] = "BAM";
    /** Barbados dollar */
    CurrencyCode["BBD"] = "BBD";
    /** Bangladeshi taka */
    CurrencyCode["BDT"] = "BDT";
    /** Bulgarian lev */
    CurrencyCode["BGN"] = "BGN";
    /** Bahraini dinar */
    CurrencyCode["BHD"] = "BHD";
    /** Burundian franc */
    CurrencyCode["BIF"] = "BIF";
    /** Bermudian dollar */
    CurrencyCode["BMD"] = "BMD";
    /** Brunei dollar */
    CurrencyCode["BND"] = "BND";
    /** Boliviano */
    CurrencyCode["BOB"] = "BOB";
    /** Brazilian real */
    CurrencyCode["BRL"] = "BRL";
    /** Bahamian dollar */
    CurrencyCode["BSD"] = "BSD";
    /** Bhutanese ngultrum */
    CurrencyCode["BTN"] = "BTN";
    /** Botswana pula */
    CurrencyCode["BWP"] = "BWP";
    /** Belarusian ruble */
    CurrencyCode["BYN"] = "BYN";
    /** Belize dollar */
    CurrencyCode["BZD"] = "BZD";
    /** Canadian dollar */
    CurrencyCode["CAD"] = "CAD";
    /** Congolese franc */
    CurrencyCode["CDF"] = "CDF";
    /** Swiss franc */
    CurrencyCode["CHF"] = "CHF";
    /** Chilean peso */
    CurrencyCode["CLP"] = "CLP";
    /** Renminbi (Chinese) yuan */
    CurrencyCode["CNY"] = "CNY";
    /** Colombian peso */
    CurrencyCode["COP"] = "COP";
    /** Costa Rican colon */
    CurrencyCode["CRC"] = "CRC";
    /** Cuban convertible peso */
    CurrencyCode["CUC"] = "CUC";
    /** Cuban peso */
    CurrencyCode["CUP"] = "CUP";
    /** Cape Verde escudo */
    CurrencyCode["CVE"] = "CVE";
    /** Czech koruna */
    CurrencyCode["CZK"] = "CZK";
    /** Djiboutian franc */
    CurrencyCode["DJF"] = "DJF";
    /** Danish krone */
    CurrencyCode["DKK"] = "DKK";
    /** Dominican peso */
    CurrencyCode["DOP"] = "DOP";
    /** Algerian dinar */
    CurrencyCode["DZD"] = "DZD";
    /** Egyptian pound */
    CurrencyCode["EGP"] = "EGP";
    /** Eritrean nakfa */
    CurrencyCode["ERN"] = "ERN";
    /** Ethiopian birr */
    CurrencyCode["ETB"] = "ETB";
    /** Euro */
    CurrencyCode["EUR"] = "EUR";
    /** Fiji dollar */
    CurrencyCode["FJD"] = "FJD";
    /** Falkland Islands pound */
    CurrencyCode["FKP"] = "FKP";
    /** Pound sterling */
    CurrencyCode["GBP"] = "GBP";
    /** Georgian lari */
    CurrencyCode["GEL"] = "GEL";
    /** Ghanaian cedi */
    CurrencyCode["GHS"] = "GHS";
    /** Gibraltar pound */
    CurrencyCode["GIP"] = "GIP";
    /** Gambian dalasi */
    CurrencyCode["GMD"] = "GMD";
    /** Guinean franc */
    CurrencyCode["GNF"] = "GNF";
    /** Guatemalan quetzal */
    CurrencyCode["GTQ"] = "GTQ";
    /** Guyanese dollar */
    CurrencyCode["GYD"] = "GYD";
    /** Hong Kong dollar */
    CurrencyCode["HKD"] = "HKD";
    /** Honduran lempira */
    CurrencyCode["HNL"] = "HNL";
    /** Croatian kuna */
    CurrencyCode["HRK"] = "HRK";
    /** Haitian gourde */
    CurrencyCode["HTG"] = "HTG";
    /** Hungarian forint */
    CurrencyCode["HUF"] = "HUF";
    /** Indonesian rupiah */
    CurrencyCode["IDR"] = "IDR";
    /** Israeli new shekel */
    CurrencyCode["ILS"] = "ILS";
    /** Indian rupee */
    CurrencyCode["INR"] = "INR";
    /** Iraqi dinar */
    CurrencyCode["IQD"] = "IQD";
    /** Iranian rial */
    CurrencyCode["IRR"] = "IRR";
    /** Icelandic króna */
    CurrencyCode["ISK"] = "ISK";
    /** Jamaican dollar */
    CurrencyCode["JMD"] = "JMD";
    /** Jordanian dinar */
    CurrencyCode["JOD"] = "JOD";
    /** Japanese yen */
    CurrencyCode["JPY"] = "JPY";
    /** Kenyan shilling */
    CurrencyCode["KES"] = "KES";
    /** Kyrgyzstani som */
    CurrencyCode["KGS"] = "KGS";
    /** Cambodian riel */
    CurrencyCode["KHR"] = "KHR";
    /** Comoro franc */
    CurrencyCode["KMF"] = "KMF";
    /** North Korean won */
    CurrencyCode["KPW"] = "KPW";
    /** South Korean won */
    CurrencyCode["KRW"] = "KRW";
    /** Kuwaiti dinar */
    CurrencyCode["KWD"] = "KWD";
    /** Cayman Islands dollar */
    CurrencyCode["KYD"] = "KYD";
    /** Kazakhstani tenge */
    CurrencyCode["KZT"] = "KZT";
    /** Lao kip */
    CurrencyCode["LAK"] = "LAK";
    /** Lebanese pound */
    CurrencyCode["LBP"] = "LBP";
    /** Sri Lankan rupee */
    CurrencyCode["LKR"] = "LKR";
    /** Liberian dollar */
    CurrencyCode["LRD"] = "LRD";
    /** Lesotho loti */
    CurrencyCode["LSL"] = "LSL";
    /** Libyan dinar */
    CurrencyCode["LYD"] = "LYD";
    /** Moroccan dirham */
    CurrencyCode["MAD"] = "MAD";
    /** Moldovan leu */
    CurrencyCode["MDL"] = "MDL";
    /** Malagasy ariary */
    CurrencyCode["MGA"] = "MGA";
    /** Macedonian denar */
    CurrencyCode["MKD"] = "MKD";
    /** Myanmar kyat */
    CurrencyCode["MMK"] = "MMK";
    /** Mongolian tögrög */
    CurrencyCode["MNT"] = "MNT";
    /** Macanese pataca */
    CurrencyCode["MOP"] = "MOP";
    /** Mauritanian ouguiya */
    CurrencyCode["MRU"] = "MRU";
    /** Mauritian rupee */
    CurrencyCode["MUR"] = "MUR";
    /** Maldivian rufiyaa */
    CurrencyCode["MVR"] = "MVR";
    /** Malawian kwacha */
    CurrencyCode["MWK"] = "MWK";
    /** Mexican peso */
    CurrencyCode["MXN"] = "MXN";
    /** Malaysian ringgit */
    CurrencyCode["MYR"] = "MYR";
    /** Mozambican metical */
    CurrencyCode["MZN"] = "MZN";
    /** Namibian dollar */
    CurrencyCode["NAD"] = "NAD";
    /** Nigerian naira */
    CurrencyCode["NGN"] = "NGN";
    /** Nicaraguan córdoba */
    CurrencyCode["NIO"] = "NIO";
    /** Norwegian krone */
    CurrencyCode["NOK"] = "NOK";
    /** Nepalese rupee */
    CurrencyCode["NPR"] = "NPR";
    /** New Zealand dollar */
    CurrencyCode["NZD"] = "NZD";
    /** Omani rial */
    CurrencyCode["OMR"] = "OMR";
    /** Panamanian balboa */
    CurrencyCode["PAB"] = "PAB";
    /** Peruvian sol */
    CurrencyCode["PEN"] = "PEN";
    /** Papua New Guinean kina */
    CurrencyCode["PGK"] = "PGK";
    /** Philippine peso */
    CurrencyCode["PHP"] = "PHP";
    /** Pakistani rupee */
    CurrencyCode["PKR"] = "PKR";
    /** Polish złoty */
    CurrencyCode["PLN"] = "PLN";
    /** Paraguayan guaraní */
    CurrencyCode["PYG"] = "PYG";
    /** Qatari riyal */
    CurrencyCode["QAR"] = "QAR";
    /** Romanian leu */
    CurrencyCode["RON"] = "RON";
    /** Serbian dinar */
    CurrencyCode["RSD"] = "RSD";
    /** Russian ruble */
    CurrencyCode["RUB"] = "RUB";
    /** Rwandan franc */
    CurrencyCode["RWF"] = "RWF";
    /** Saudi riyal */
    CurrencyCode["SAR"] = "SAR";
    /** Solomon Islands dollar */
    CurrencyCode["SBD"] = "SBD";
    /** Seychelles rupee */
    CurrencyCode["SCR"] = "SCR";
    /** Sudanese pound */
    CurrencyCode["SDG"] = "SDG";
    /** Swedish krona/kronor */
    CurrencyCode["SEK"] = "SEK";
    /** Singapore dollar */
    CurrencyCode["SGD"] = "SGD";
    /** Saint Helena pound */
    CurrencyCode["SHP"] = "SHP";
    /** Sierra Leonean leone */
    CurrencyCode["SLL"] = "SLL";
    /** Somali shilling */
    CurrencyCode["SOS"] = "SOS";
    /** Surinamese dollar */
    CurrencyCode["SRD"] = "SRD";
    /** South Sudanese pound */
    CurrencyCode["SSP"] = "SSP";
    /** São Tomé and Príncipe dobra */
    CurrencyCode["STN"] = "STN";
    /** Salvadoran colón */
    CurrencyCode["SVC"] = "SVC";
    /** Syrian pound */
    CurrencyCode["SYP"] = "SYP";
    /** Swazi lilangeni */
    CurrencyCode["SZL"] = "SZL";
    /** Thai baht */
    CurrencyCode["THB"] = "THB";
    /** Tajikistani somoni */
    CurrencyCode["TJS"] = "TJS";
    /** Turkmenistan manat */
    CurrencyCode["TMT"] = "TMT";
    /** Tunisian dinar */
    CurrencyCode["TND"] = "TND";
    /** Tongan paʻanga */
    CurrencyCode["TOP"] = "TOP";
    /** Turkish lira */
    CurrencyCode["TRY"] = "TRY";
    /** Trinidad and Tobago dollar */
    CurrencyCode["TTD"] = "TTD";
    /** New Taiwan dollar */
    CurrencyCode["TWD"] = "TWD";
    /** Tanzanian shilling */
    CurrencyCode["TZS"] = "TZS";
    /** Ukrainian hryvnia */
    CurrencyCode["UAH"] = "UAH";
    /** Ugandan shilling */
    CurrencyCode["UGX"] = "UGX";
    /** United States dollar */
    CurrencyCode["USD"] = "USD";
    /** Uruguayan peso */
    CurrencyCode["UYU"] = "UYU";
    /** Uzbekistan som */
    CurrencyCode["UZS"] = "UZS";
    /** Venezuelan bolívar soberano */
    CurrencyCode["VES"] = "VES";
    /** Vietnamese đồng */
    CurrencyCode["VND"] = "VND";
    /** Vanuatu vatu */
    CurrencyCode["VUV"] = "VUV";
    /** Samoan tala */
    CurrencyCode["WST"] = "WST";
    /** CFA franc BEAC */
    CurrencyCode["XAF"] = "XAF";
    /** East Caribbean dollar */
    CurrencyCode["XCD"] = "XCD";
    /** CFA franc BCEAO */
    CurrencyCode["XOF"] = "XOF";
    /** CFP franc (franc Pacifique) */
    CurrencyCode["XPF"] = "XPF";
    /** Yemeni rial */
    CurrencyCode["YER"] = "YER";
    /** South African rand */
    CurrencyCode["ZAR"] = "ZAR";
    /** Zambian kwacha */
    CurrencyCode["ZMW"] = "ZMW";
    /** Zimbabwean dollar */
    CurrencyCode["ZWL"] = "ZWL";
})(CurrencyCode || (CurrencyCode = {}));
export var HistoryEntryType;
(function (HistoryEntryType) {
    HistoryEntryType["CUSTOMER_REGISTERED"] = "CUSTOMER_REGISTERED";
    HistoryEntryType["CUSTOMER_VERIFIED"] = "CUSTOMER_VERIFIED";
    HistoryEntryType["CUSTOMER_DETAIL_UPDATED"] = "CUSTOMER_DETAIL_UPDATED";
    HistoryEntryType["CUSTOMER_ADDED_TO_GROUP"] = "CUSTOMER_ADDED_TO_GROUP";
    HistoryEntryType["CUSTOMER_REMOVED_FROM_GROUP"] = "CUSTOMER_REMOVED_FROM_GROUP";
    HistoryEntryType["CUSTOMER_ADDRESS_CREATED"] = "CUSTOMER_ADDRESS_CREATED";
    HistoryEntryType["CUSTOMER_ADDRESS_UPDATED"] = "CUSTOMER_ADDRESS_UPDATED";
    HistoryEntryType["CUSTOMER_ADDRESS_DELETED"] = "CUSTOMER_ADDRESS_DELETED";
    HistoryEntryType["CUSTOMER_PASSWORD_UPDATED"] = "CUSTOMER_PASSWORD_UPDATED";
    HistoryEntryType["CUSTOMER_PASSWORD_RESET_REQUESTED"] = "CUSTOMER_PASSWORD_RESET_REQUESTED";
    HistoryEntryType["CUSTOMER_PASSWORD_RESET_VERIFIED"] = "CUSTOMER_PASSWORD_RESET_VERIFIED";
    HistoryEntryType["CUSTOMER_EMAIL_UPDATE_REQUESTED"] = "CUSTOMER_EMAIL_UPDATE_REQUESTED";
    HistoryEntryType["CUSTOMER_EMAIL_UPDATE_VERIFIED"] = "CUSTOMER_EMAIL_UPDATE_VERIFIED";
    HistoryEntryType["CUSTOMER_NOTE"] = "CUSTOMER_NOTE";
    HistoryEntryType["ORDER_STATE_TRANSITION"] = "ORDER_STATE_TRANSITION";
    HistoryEntryType["ORDER_PAYMENT_TRANSITION"] = "ORDER_PAYMENT_TRANSITION";
    HistoryEntryType["ORDER_FULFILLMENT"] = "ORDER_FULFILLMENT";
    HistoryEntryType["ORDER_CANCELLATION"] = "ORDER_CANCELLATION";
    HistoryEntryType["ORDER_REFUND_TRANSITION"] = "ORDER_REFUND_TRANSITION";
    HistoryEntryType["ORDER_FULFILLMENT_TRANSITION"] = "ORDER_FULFILLMENT_TRANSITION";
    HistoryEntryType["ORDER_NOTE"] = "ORDER_NOTE";
    HistoryEntryType["ORDER_COUPON_APPLIED"] = "ORDER_COUPON_APPLIED";
    HistoryEntryType["ORDER_COUPON_REMOVED"] = "ORDER_COUPON_REMOVED";
    HistoryEntryType["ORDER_MODIFIED"] = "ORDER_MODIFIED";
})(HistoryEntryType || (HistoryEntryType = {}));
/**
 * @description
 * Languages in the form of a ISO 639-1 language code with optional
 * region or script modifier (e.g. de_AT). The selection available is based
 * on the [Unicode CLDR summary list](https://unicode-org.github.io/cldr-staging/charts/37/summary/root.html)
 * and includes the major spoken languages of the world and any widely-used variants.
 *
 * @docsCategory common
 */
export var LanguageCode;
(function (LanguageCode) {
    /** Afrikaans */
    LanguageCode["af"] = "af";
    /** Akan */
    LanguageCode["ak"] = "ak";
    /** Amharic */
    LanguageCode["am"] = "am";
    /** Arabic */
    LanguageCode["ar"] = "ar";
    /** Assamese */
    LanguageCode["as"] = "as";
    /** Azerbaijani */
    LanguageCode["az"] = "az";
    /** Belarusian */
    LanguageCode["be"] = "be";
    /** Bulgarian */
    LanguageCode["bg"] = "bg";
    /** Bambara */
    LanguageCode["bm"] = "bm";
    /** Bangla */
    LanguageCode["bn"] = "bn";
    /** Tibetan */
    LanguageCode["bo"] = "bo";
    /** Breton */
    LanguageCode["br"] = "br";
    /** Bosnian */
    LanguageCode["bs"] = "bs";
    /** Catalan */
    LanguageCode["ca"] = "ca";
    /** Chechen */
    LanguageCode["ce"] = "ce";
    /** Corsican */
    LanguageCode["co"] = "co";
    /** Czech */
    LanguageCode["cs"] = "cs";
    /** Church Slavic */
    LanguageCode["cu"] = "cu";
    /** Welsh */
    LanguageCode["cy"] = "cy";
    /** Danish */
    LanguageCode["da"] = "da";
    /** German */
    LanguageCode["de"] = "de";
    /** Austrian German */
    LanguageCode["de_AT"] = "de_AT";
    /** Swiss High German */
    LanguageCode["de_CH"] = "de_CH";
    /** Dzongkha */
    LanguageCode["dz"] = "dz";
    /** Ewe */
    LanguageCode["ee"] = "ee";
    /** Greek */
    LanguageCode["el"] = "el";
    /** English */
    LanguageCode["en"] = "en";
    /** Australian English */
    LanguageCode["en_AU"] = "en_AU";
    /** Canadian English */
    LanguageCode["en_CA"] = "en_CA";
    /** British English */
    LanguageCode["en_GB"] = "en_GB";
    /** American English */
    LanguageCode["en_US"] = "en_US";
    /** Esperanto */
    LanguageCode["eo"] = "eo";
    /** Spanish */
    LanguageCode["es"] = "es";
    /** European Spanish */
    LanguageCode["es_ES"] = "es_ES";
    /** Mexican Spanish */
    LanguageCode["es_MX"] = "es_MX";
    /** Estonian */
    LanguageCode["et"] = "et";
    /** Basque */
    LanguageCode["eu"] = "eu";
    /** Persian */
    LanguageCode["fa"] = "fa";
    /** Dari */
    LanguageCode["fa_AF"] = "fa_AF";
    /** Fulah */
    LanguageCode["ff"] = "ff";
    /** Finnish */
    LanguageCode["fi"] = "fi";
    /** Faroese */
    LanguageCode["fo"] = "fo";
    /** French */
    LanguageCode["fr"] = "fr";
    /** Canadian French */
    LanguageCode["fr_CA"] = "fr_CA";
    /** Swiss French */
    LanguageCode["fr_CH"] = "fr_CH";
    /** Western Frisian */
    LanguageCode["fy"] = "fy";
    /** Irish */
    LanguageCode["ga"] = "ga";
    /** Scottish Gaelic */
    LanguageCode["gd"] = "gd";
    /** Galician */
    LanguageCode["gl"] = "gl";
    /** Gujarati */
    LanguageCode["gu"] = "gu";
    /** Manx */
    LanguageCode["gv"] = "gv";
    /** Hausa */
    LanguageCode["ha"] = "ha";
    /** Hebrew */
    LanguageCode["he"] = "he";
    /** Hindi */
    LanguageCode["hi"] = "hi";
    /** Croatian */
    LanguageCode["hr"] = "hr";
    /** Haitian Creole */
    LanguageCode["ht"] = "ht";
    /** Hungarian */
    LanguageCode["hu"] = "hu";
    /** Armenian */
    LanguageCode["hy"] = "hy";
    /** Interlingua */
    LanguageCode["ia"] = "ia";
    /** Indonesian */
    LanguageCode["id"] = "id";
    /** Igbo */
    LanguageCode["ig"] = "ig";
    /** Sichuan Yi */
    LanguageCode["ii"] = "ii";
    /** Icelandic */
    LanguageCode["is"] = "is";
    /** Italian */
    LanguageCode["it"] = "it";
    /** Japanese */
    LanguageCode["ja"] = "ja";
    /** Javanese */
    LanguageCode["jv"] = "jv";
    /** Georgian */
    LanguageCode["ka"] = "ka";
    /** Kikuyu */
    LanguageCode["ki"] = "ki";
    /** Kazakh */
    LanguageCode["kk"] = "kk";
    /** Kalaallisut */
    LanguageCode["kl"] = "kl";
    /** Khmer */
    LanguageCode["km"] = "km";
    /** Kannada */
    LanguageCode["kn"] = "kn";
    /** Korean */
    LanguageCode["ko"] = "ko";
    /** Kashmiri */
    LanguageCode["ks"] = "ks";
    /** Kurdish */
    LanguageCode["ku"] = "ku";
    /** Cornish */
    LanguageCode["kw"] = "kw";
    /** Kyrgyz */
    LanguageCode["ky"] = "ky";
    /** Latin */
    LanguageCode["la"] = "la";
    /** Luxembourgish */
    LanguageCode["lb"] = "lb";
    /** Ganda */
    LanguageCode["lg"] = "lg";
    /** Lingala */
    LanguageCode["ln"] = "ln";
    /** Lao */
    LanguageCode["lo"] = "lo";
    /** Lithuanian */
    LanguageCode["lt"] = "lt";
    /** Luba-Katanga */
    LanguageCode["lu"] = "lu";
    /** Latvian */
    LanguageCode["lv"] = "lv";
    /** Malagasy */
    LanguageCode["mg"] = "mg";
    /** Maori */
    LanguageCode["mi"] = "mi";
    /** Macedonian */
    LanguageCode["mk"] = "mk";
    /** Malayalam */
    LanguageCode["ml"] = "ml";
    /** Mongolian */
    LanguageCode["mn"] = "mn";
    /** Marathi */
    LanguageCode["mr"] = "mr";
    /** Malay */
    LanguageCode["ms"] = "ms";
    /** Maltese */
    LanguageCode["mt"] = "mt";
    /** Burmese */
    LanguageCode["my"] = "my";
    /** Norwegian Bokmål */
    LanguageCode["nb"] = "nb";
    /** North Ndebele */
    LanguageCode["nd"] = "nd";
    /** Nepali */
    LanguageCode["ne"] = "ne";
    /** Dutch */
    LanguageCode["nl"] = "nl";
    /** Flemish */
    LanguageCode["nl_BE"] = "nl_BE";
    /** Norwegian Nynorsk */
    LanguageCode["nn"] = "nn";
    /** Nyanja */
    LanguageCode["ny"] = "ny";
    /** Oromo */
    LanguageCode["om"] = "om";
    /** Odia */
    LanguageCode["or"] = "or";
    /** Ossetic */
    LanguageCode["os"] = "os";
    /** Punjabi */
    LanguageCode["pa"] = "pa";
    /** Polish */
    LanguageCode["pl"] = "pl";
    /** Pashto */
    LanguageCode["ps"] = "ps";
    /** Portuguese */
    LanguageCode["pt"] = "pt";
    /** Brazilian Portuguese */
    LanguageCode["pt_BR"] = "pt_BR";
    /** European Portuguese */
    LanguageCode["pt_PT"] = "pt_PT";
    /** Quechua */
    LanguageCode["qu"] = "qu";
    /** Romansh */
    LanguageCode["rm"] = "rm";
    /** Rundi */
    LanguageCode["rn"] = "rn";
    /** Romanian */
    LanguageCode["ro"] = "ro";
    /** Moldavian */
    LanguageCode["ro_MD"] = "ro_MD";
    /** Russian */
    LanguageCode["ru"] = "ru";
    /** Kinyarwanda */
    LanguageCode["rw"] = "rw";
    /** Sanskrit */
    LanguageCode["sa"] = "sa";
    /** Sindhi */
    LanguageCode["sd"] = "sd";
    /** Northern Sami */
    LanguageCode["se"] = "se";
    /** Sango */
    LanguageCode["sg"] = "sg";
    /** Sinhala */
    LanguageCode["si"] = "si";
    /** Slovak */
    LanguageCode["sk"] = "sk";
    /** Slovenian */
    LanguageCode["sl"] = "sl";
    /** Samoan */
    LanguageCode["sm"] = "sm";
    /** Shona */
    LanguageCode["sn"] = "sn";
    /** Somali */
    LanguageCode["so"] = "so";
    /** Albanian */
    LanguageCode["sq"] = "sq";
    /** Serbian */
    LanguageCode["sr"] = "sr";
    /** Southern Sotho */
    LanguageCode["st"] = "st";
    /** Sundanese */
    LanguageCode["su"] = "su";
    /** Swedish */
    LanguageCode["sv"] = "sv";
    /** Swahili */
    LanguageCode["sw"] = "sw";
    /** Congo Swahili */
    LanguageCode["sw_CD"] = "sw_CD";
    /** Tamil */
    LanguageCode["ta"] = "ta";
    /** Telugu */
    LanguageCode["te"] = "te";
    /** Tajik */
    LanguageCode["tg"] = "tg";
    /** Thai */
    LanguageCode["th"] = "th";
    /** Tigrinya */
    LanguageCode["ti"] = "ti";
    /** Turkmen */
    LanguageCode["tk"] = "tk";
    /** Tongan */
    LanguageCode["to"] = "to";
    /** Turkish */
    LanguageCode["tr"] = "tr";
    /** Tatar */
    LanguageCode["tt"] = "tt";
    /** Uyghur */
    LanguageCode["ug"] = "ug";
    /** Ukrainian */
    LanguageCode["uk"] = "uk";
    /** Urdu */
    LanguageCode["ur"] = "ur";
    /** Uzbek */
    LanguageCode["uz"] = "uz";
    /** Vietnamese */
    LanguageCode["vi"] = "vi";
    /** Volapük */
    LanguageCode["vo"] = "vo";
    /** Wolof */
    LanguageCode["wo"] = "wo";
    /** Xhosa */
    LanguageCode["xh"] = "xh";
    /** Yiddish */
    LanguageCode["yi"] = "yi";
    /** Yoruba */
    LanguageCode["yo"] = "yo";
    /** Chinese */
    LanguageCode["zh"] = "zh";
    /** Simplified Chinese */
    LanguageCode["zh_Hans"] = "zh_Hans";
    /** Traditional Chinese */
    LanguageCode["zh_Hant"] = "zh_Hant";
    /** Zulu */
    LanguageCode["zu"] = "zu";
})(LanguageCode || (LanguageCode = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VuZXJhdGVkLXR5cGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi9jb3JlL3NyYy9jb21tb24vZ2VuZXJhdGVkLXR5cGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdnREE7Ozs7O0dBS0c7QUFDSCxNQUFNLENBQU4sSUFBWSxRQU9YO0FBUEQsV0FBWSxRQUFRO0lBQ2xCLCtCQUFtQixDQUFBO0lBQ25CLCtCQUFtQixDQUFBO0lBQ25CLG1DQUF1QixDQUFBO0lBQ3ZCLGlDQUFxQixDQUFBO0lBQ3JCLDZCQUFpQixDQUFBO0lBQ2pCLG1DQUF1QixDQUFBO0FBQ3pCLENBQUMsRUFQVyxRQUFRLEtBQVIsUUFBUSxRQU9uQjtBQTgyQkQsTUFBTSxDQUFOLElBQVksaUJBT1g7QUFQRCxXQUFZLGlCQUFpQjtJQUMzQiw4Q0FBeUIsQ0FBQTtJQUN6Qiw4Q0FBeUIsQ0FBQTtJQUN6Qix3Q0FBbUIsQ0FBQTtJQUNuQixrQ0FBYSxDQUFBO0lBQ2Isa0RBQTZCLENBQUE7SUFDN0Isc0NBQWlCLENBQUE7QUFDbkIsQ0FBQyxFQVBXLGlCQUFpQixLQUFqQixpQkFBaUIsUUFPNUI7QUFvS0QsTUFBTSxDQUFOLElBQVksU0FJWDtBQUpELFdBQVksU0FBUztJQUNuQiw0QkFBZSxDQUFBO0lBQ2YsNEJBQWUsQ0FBQTtJQUNmLDhCQUFpQixDQUFBO0FBQ25CLENBQUMsRUFKVyxTQUFTLEtBQVQsU0FBUyxRQUlwQjtBQThERCxNQUFNLENBQU4sSUFBWSxVQUlYO0FBSkQsV0FBWSxVQUFVO0lBQ3BCLDJCQUFhLENBQUE7SUFDYiw2QkFBZSxDQUFBO0lBQ2YsaUNBQW1CLENBQUE7QUFDckIsQ0FBQyxFQUpXLFVBQVUsS0FBVixVQUFVLFFBSXJCO0FBRUQsTUFBTSxDQUFOLElBQVksY0FHWDtBQUhELFdBQVksY0FBYztJQUN4Qix5Q0FBdUIsQ0FBQTtJQUN2Qiw2RUFBMkQsQ0FBQTtBQUM3RCxDQUFDLEVBSFcsY0FBYyxLQUFkLGNBQWMsUUFHekI7QUFFRCxNQUFNLENBQU4sSUFBWSxjQUtYO0FBTEQsV0FBWSxjQUFjO0lBQ3hCLDBDQUEwQztJQUMxQyxxQ0FBbUIsQ0FBQTtJQUNuQiwyREFBMkQ7SUFDM0QsNkNBQTJCLENBQUE7QUFDN0IsQ0FBQyxFQUxXLGNBQWMsS0FBZCxjQUFjLFFBS3pCO0FBRUQ7Ozs7OztHQU1HO0FBQ0gsTUFBTSxDQUFOLElBQVksVUE0S1g7QUE1S0QsV0FBWSxVQUFVO0lBQ3BCLDREQUE0RDtJQUM1RCw2Q0FBK0IsQ0FBQTtJQUMvQixnREFBZ0Q7SUFDaEQseURBQTJDLENBQUE7SUFDM0Msd0NBQXdDO0lBQ3hDLHlDQUEyQixDQUFBO0lBQzNCLHdFQUF3RTtJQUN4RSw2Q0FBK0IsQ0FBQTtJQUMvQiwwQ0FBMEM7SUFDMUMsNkNBQStCLENBQUE7SUFDL0IsNkNBQTZDO0lBQzdDLG1EQUFxQyxDQUFBO0lBQ3JDLDBDQUEwQztJQUMxQyw2Q0FBK0IsQ0FBQTtJQUMvQiwyQ0FBMkM7SUFDM0MsK0NBQWlDLENBQUE7SUFDakMsZ0RBQWdEO0lBQ2hELHlEQUEyQyxDQUFBO0lBQzNDLHdDQUF3QztJQUN4Qyx5Q0FBMkIsQ0FBQTtJQUMzQix3Q0FBd0M7SUFDeEMseUNBQTJCLENBQUE7SUFDM0IsZ0RBQWdEO0lBQ2hELHlEQUEyQyxDQUFBO0lBQzNDLDBDQUEwQztJQUMxQyw2Q0FBK0IsQ0FBQTtJQUMvQiw0Q0FBNEM7SUFDNUMsaURBQW1DLENBQUE7SUFDbkMsc0lBQXNJO0lBQ3RJLCtDQUFpQyxDQUFBO0lBQ2pDLGlEQUFpRDtJQUNqRCwyREFBNkMsQ0FBQTtJQUM3Qyx5Q0FBeUM7SUFDekMsMkNBQTZCLENBQUE7SUFDN0Isc0NBQXNDO0lBQ3RDLHFDQUF1QixDQUFBO0lBQ3ZCLDhDQUE4QztJQUM5QyxxREFBdUMsQ0FBQTtJQUN2QywwQ0FBMEM7SUFDMUMsNkNBQStCLENBQUE7SUFDL0IsdUNBQXVDO0lBQ3ZDLHVDQUF5QixDQUFBO0lBQ3pCLGdEQUFnRDtJQUNoRCx5REFBMkMsQ0FBQTtJQUMzQyx3Q0FBd0M7SUFDeEMseUNBQTJCLENBQUE7SUFDM0Isd0VBQXdFO0lBQ3hFLDZDQUErQixDQUFBO0lBQy9CLDBDQUEwQztJQUMxQyw2Q0FBK0IsQ0FBQTtJQUMvQiw2Q0FBNkM7SUFDN0MsbURBQXFDLENBQUE7SUFDckMsMENBQTBDO0lBQzFDLDZDQUErQixDQUFBO0lBQy9CLDJDQUEyQztJQUMzQywrQ0FBaUMsQ0FBQTtJQUNqQyxnREFBZ0Q7SUFDaEQseURBQTJDLENBQUE7SUFDM0Msd0NBQXdDO0lBQ3hDLHlDQUEyQixDQUFBO0lBQzNCLHdDQUF3QztJQUN4Qyx5Q0FBMkIsQ0FBQTtJQUMzQixnREFBZ0Q7SUFDaEQseURBQTJDLENBQUE7SUFDM0MsMENBQTBDO0lBQzFDLDZDQUErQixDQUFBO0lBQy9CLDRDQUE0QztJQUM1QyxpREFBbUMsQ0FBQTtJQUNuQyxzSUFBc0k7SUFDdEksK0NBQWlDLENBQUE7SUFDakMsaURBQWlEO0lBQ2pELDJEQUE2QyxDQUFBO0lBQzdDLHlDQUF5QztJQUN6QywyQ0FBNkIsQ0FBQTtJQUM3QixzQ0FBc0M7SUFDdEMscUNBQXVCLENBQUE7SUFDdkIsOENBQThDO0lBQzlDLHFEQUF1QyxDQUFBO0lBQ3ZDLDBDQUEwQztJQUMxQyw2Q0FBK0IsQ0FBQTtJQUMvQix1Q0FBdUM7SUFDdkMsdUNBQXlCLENBQUE7SUFDekIseUVBQXlFO0lBQ3pFLDZCQUFlLENBQUE7SUFDZix5Q0FBMkIsQ0FBQTtJQUMzQixzRUFBc0U7SUFDdEUsK0JBQWlCLENBQUE7SUFDakIsOENBQThDO0lBQzlDLHFEQUF1QyxDQUFBO0lBQ3ZDLHNDQUFzQztJQUN0QyxxQ0FBdUIsQ0FBQTtJQUN2QixzRUFBc0U7SUFDdEUseUNBQTJCLENBQUE7SUFDM0Isd0NBQXdDO0lBQ3hDLHlDQUEyQixDQUFBO0lBQzNCLDJDQUEyQztJQUMzQywrQ0FBaUMsQ0FBQTtJQUNqQyx3Q0FBd0M7SUFDeEMseUNBQTJCLENBQUE7SUFDM0IseUNBQXlDO0lBQ3pDLDJDQUE2QixDQUFBO0lBQzdCLDhDQUE4QztJQUM5QyxxREFBdUMsQ0FBQTtJQUN2QyxzQ0FBc0M7SUFDdEMscUNBQXVCLENBQUE7SUFDdkIsc0NBQXNDO0lBQ3RDLHFDQUF1QixDQUFBO0lBQ3ZCLDhDQUE4QztJQUM5QyxxREFBdUMsQ0FBQTtJQUN2Qyx3Q0FBd0M7SUFDeEMseUNBQTJCLENBQUE7SUFDM0IsMENBQTBDO0lBQzFDLDZDQUErQixDQUFBO0lBQy9CLG9JQUFvSTtJQUNwSSwyQ0FBNkIsQ0FBQTtJQUM3QiwrQ0FBK0M7SUFDL0MsdURBQXlDLENBQUE7SUFDekMsdUNBQXVDO0lBQ3ZDLHVDQUF5QixDQUFBO0lBQ3pCLG9DQUFvQztJQUNwQyxpQ0FBbUIsQ0FBQTtJQUNuQiw0Q0FBNEM7SUFDNUMsaURBQW1DLENBQUE7SUFDbkMsd0NBQXdDO0lBQ3hDLHlDQUEyQixDQUFBO0lBQzNCLHFDQUFxQztJQUNyQyxtQ0FBcUIsQ0FBQTtJQUNyQiwyREFBMkQ7SUFDM0QsdUNBQXlCLENBQUE7SUFDekIsZ0RBQWdEO0lBQ2hELHlEQUEyQyxDQUFBO0lBQzNDLHdDQUF3QztJQUN4Qyx5Q0FBMkIsQ0FBQTtJQUMzQix3RUFBd0U7SUFDeEUsNkNBQStCLENBQUE7SUFDL0IsMENBQTBDO0lBQzFDLDZDQUErQixDQUFBO0lBQy9CLDZDQUE2QztJQUM3QyxtREFBcUMsQ0FBQTtJQUNyQywwQ0FBMEM7SUFDMUMsNkNBQStCLENBQUE7SUFDL0IsMkNBQTJDO0lBQzNDLCtDQUFpQyxDQUFBO0lBQ2pDLGdEQUFnRDtJQUNoRCx5REFBMkMsQ0FBQTtJQUMzQyx3Q0FBd0M7SUFDeEMseUNBQTJCLENBQUE7SUFDM0IsaURBQWlEO0lBQ2pELDJEQUE2QyxDQUFBO0lBQzdDLHdDQUF3QztJQUN4Qyx5Q0FBMkIsQ0FBQTtJQUMzQixnREFBZ0Q7SUFDaEQseURBQTJDLENBQUE7SUFDM0MsMENBQTBDO0lBQzFDLDZDQUErQixDQUFBO0lBQy9CLDRDQUE0QztJQUM1QyxpREFBbUMsQ0FBQTtJQUNuQyxzSUFBc0k7SUFDdEksK0NBQWlDLENBQUE7SUFDakMsaURBQWlEO0lBQ2pELDJEQUE2QyxDQUFBO0lBQzdDLHlDQUF5QztJQUN6QywyQ0FBNkIsQ0FBQTtJQUM3QixzQ0FBc0M7SUFDdEMscUNBQXVCLENBQUE7SUFDdkIsOENBQThDO0lBQzlDLHFEQUF1QyxDQUFBO0lBQ3ZDLDBDQUEwQztJQUMxQyw2Q0FBK0IsQ0FBQTtJQUMvQix1Q0FBdUM7SUFDdkMsdUNBQXlCLENBQUE7QUFDM0IsQ0FBQyxFQTVLVyxVQUFVLEtBQVYsVUFBVSxRQTRLckI7QUFFRCxNQUFNLENBQU4sSUFBWSxTQUdYO0FBSEQsV0FBWSxTQUFTO0lBQ25CLHdCQUFXLENBQUE7SUFDWCwwQkFBYSxDQUFBO0FBQ2YsQ0FBQyxFQUhXLFNBQVMsS0FBVCxTQUFTLFFBR3BCO0FBRUQsTUFBTSxDQUFOLElBQVksU0FtQ1g7QUFuQ0QsV0FBWSxTQUFTO0lBQ25CLDRDQUErQixDQUFBO0lBQy9CLGdEQUFtQyxDQUFBO0lBQ25DLDBFQUE2RCxDQUFBO0lBQzdELDhFQUFpRSxDQUFBO0lBQ2pFLDBEQUE2QyxDQUFBO0lBQzdDLGtGQUFxRSxDQUFBO0lBQ3JFLDRFQUErRCxDQUFBO0lBQy9ELG9GQUF1RSxDQUFBO0lBQ3ZFLGtFQUFxRCxDQUFBO0lBQ3JELGtGQUFxRSxDQUFBO0lBQ3JFLDBEQUE2QyxDQUFBO0lBQzdDLG9FQUF1RCxDQUFBO0lBQ3ZELDBFQUE2RCxDQUFBO0lBQzdELGtFQUFxRCxDQUFBO0lBQ3JELGdFQUFtRCxDQUFBO0lBQ25ELDhEQUFpRCxDQUFBO0lBQ2pELGtFQUFxRCxDQUFBO0lBQ3JELDRFQUErRCxDQUFBO0lBQy9ELDhFQUFpRSxDQUFBO0lBQ2pFLHNGQUF5RSxDQUFBO0lBQ3pFLDhFQUFpRSxDQUFBO0lBQ2pFLHNFQUF5RCxDQUFBO0lBQ3pELDBFQUE2RCxDQUFBO0lBQzdELGdGQUFtRSxDQUFBO0lBQ25FLHNFQUF5RCxDQUFBO0lBQ3pELHdFQUEyRCxDQUFBO0lBQzNELGtFQUFxRCxDQUFBO0lBQ3JELHNFQUF5RCxDQUFBO0lBQ3pELG9FQUF1RCxDQUFBO0lBQ3ZELDBFQUE2RCxDQUFBO0lBQzdELDBFQUE2RCxDQUFBO0lBQzdELG9EQUF1QyxDQUFBO0lBQ3ZDLGdFQUFtRCxDQUFBO0lBQ25ELGtFQUFxRCxDQUFBO0FBQ3ZELENBQUMsRUFuQ1csU0FBUyxLQUFULFNBQVMsUUFtQ3BCO0FBRUQsTUFBTSxDQUFOLElBQVksZUFHWDtBQUhELFdBQVksZUFBZTtJQUN6Qiw4QkFBVyxDQUFBO0lBQ1gsNEJBQVMsQ0FBQTtBQUNYLENBQUMsRUFIVyxlQUFlLEtBQWYsZUFBZSxRQUcxQjtBQStTRDs7Ozs7R0FLRztBQUNILE1BQU0sQ0FBTixJQUFZLFlBMlRYO0FBM1RELFdBQVksWUFBWTtJQUN0QixrQ0FBa0M7SUFDbEMsMkJBQVcsQ0FBQTtJQUNYLHFCQUFxQjtJQUNyQiwyQkFBVyxDQUFBO0lBQ1gsbUJBQW1CO0lBQ25CLDJCQUFXLENBQUE7SUFDWCxvQkFBb0I7SUFDcEIsMkJBQVcsQ0FBQTtJQUNYLG9DQUFvQztJQUNwQywyQkFBVyxDQUFBO0lBQ1gscUJBQXFCO0lBQ3JCLDJCQUFXLENBQUE7SUFDWCxxQkFBcUI7SUFDckIsMkJBQVcsQ0FBQTtJQUNYLHdCQUF3QjtJQUN4QiwyQkFBVyxDQUFBO0lBQ1gsb0JBQW9CO0lBQ3BCLDJCQUFXLENBQUE7SUFDWCx3QkFBd0I7SUFDeEIsMkJBQVcsQ0FBQTtJQUNYLDhDQUE4QztJQUM5QywyQkFBVyxDQUFBO0lBQ1gsc0JBQXNCO0lBQ3RCLDJCQUFXLENBQUE7SUFDWCx1QkFBdUI7SUFDdkIsMkJBQVcsQ0FBQTtJQUNYLG9CQUFvQjtJQUNwQiwyQkFBVyxDQUFBO0lBQ1gscUJBQXFCO0lBQ3JCLDJCQUFXLENBQUE7SUFDWCxzQkFBc0I7SUFDdEIsMkJBQVcsQ0FBQTtJQUNYLHVCQUF1QjtJQUN2QiwyQkFBVyxDQUFBO0lBQ1gsb0JBQW9CO0lBQ3BCLDJCQUFXLENBQUE7SUFDWCxnQkFBZ0I7SUFDaEIsMkJBQVcsQ0FBQTtJQUNYLHFCQUFxQjtJQUNyQiwyQkFBVyxDQUFBO0lBQ1gsc0JBQXNCO0lBQ3RCLDJCQUFXLENBQUE7SUFDWCx5QkFBeUI7SUFDekIsMkJBQVcsQ0FBQTtJQUNYLG9CQUFvQjtJQUNwQiwyQkFBVyxDQUFBO0lBQ1gsdUJBQXVCO0lBQ3ZCLDJCQUFXLENBQUE7SUFDWCxvQkFBb0I7SUFDcEIsMkJBQVcsQ0FBQTtJQUNYLHNCQUFzQjtJQUN0QiwyQkFBVyxDQUFBO0lBQ1gsc0JBQXNCO0lBQ3RCLDJCQUFXLENBQUE7SUFDWCxrQkFBa0I7SUFDbEIsMkJBQVcsQ0FBQTtJQUNYLG1CQUFtQjtJQUNuQiwyQkFBVyxDQUFBO0lBQ1gsOEJBQThCO0lBQzlCLDJCQUFXLENBQUE7SUFDWCxxQkFBcUI7SUFDckIsMkJBQVcsQ0FBQTtJQUNYLHdCQUF3QjtJQUN4QiwyQkFBVyxDQUFBO0lBQ1gsNkJBQTZCO0lBQzdCLDJCQUFXLENBQUE7SUFDWCxpQkFBaUI7SUFDakIsMkJBQVcsQ0FBQTtJQUNYLHdCQUF3QjtJQUN4QiwyQkFBVyxDQUFBO0lBQ1gsbUJBQW1CO0lBQ25CLDJCQUFXLENBQUE7SUFDWCx1QkFBdUI7SUFDdkIsMkJBQVcsQ0FBQTtJQUNYLG1CQUFtQjtJQUNuQiwyQkFBVyxDQUFBO0lBQ1gscUJBQXFCO0lBQ3JCLDJCQUFXLENBQUE7SUFDWCxxQkFBcUI7SUFDckIsMkJBQVcsQ0FBQTtJQUNYLHFCQUFxQjtJQUNyQiwyQkFBVyxDQUFBO0lBQ1gscUJBQXFCO0lBQ3JCLDJCQUFXLENBQUE7SUFDWCxxQkFBcUI7SUFDckIsMkJBQVcsQ0FBQTtJQUNYLFdBQVc7SUFDWCwyQkFBVyxDQUFBO0lBQ1gsa0JBQWtCO0lBQ2xCLDJCQUFXLENBQUE7SUFDWCw2QkFBNkI7SUFDN0IsMkJBQVcsQ0FBQTtJQUNYLHFCQUFxQjtJQUNyQiwyQkFBVyxDQUFBO0lBQ1gsb0JBQW9CO0lBQ3BCLDJCQUFXLENBQUE7SUFDWCxvQkFBb0I7SUFDcEIsMkJBQVcsQ0FBQTtJQUNYLHNCQUFzQjtJQUN0QiwyQkFBVyxDQUFBO0lBQ1gscUJBQXFCO0lBQ3JCLDJCQUFXLENBQUE7SUFDWCxvQkFBb0I7SUFDcEIsMkJBQVcsQ0FBQTtJQUNYLHlCQUF5QjtJQUN6QiwyQkFBVyxDQUFBO0lBQ1gsc0JBQXNCO0lBQ3RCLDJCQUFXLENBQUE7SUFDWCx1QkFBdUI7SUFDdkIsMkJBQVcsQ0FBQTtJQUNYLHVCQUF1QjtJQUN2QiwyQkFBVyxDQUFBO0lBQ1gsb0JBQW9CO0lBQ3BCLDJCQUFXLENBQUE7SUFDWCxxQkFBcUI7SUFDckIsMkJBQVcsQ0FBQTtJQUNYLHVCQUF1QjtJQUN2QiwyQkFBVyxDQUFBO0lBQ1gsd0JBQXdCO0lBQ3hCLDJCQUFXLENBQUE7SUFDWCx5QkFBeUI7SUFDekIsMkJBQVcsQ0FBQTtJQUNYLG1CQUFtQjtJQUNuQiwyQkFBVyxDQUFBO0lBQ1gsa0JBQWtCO0lBQ2xCLDJCQUFXLENBQUE7SUFDWCxtQkFBbUI7SUFDbkIsMkJBQVcsQ0FBQTtJQUNYLHNCQUFzQjtJQUN0QiwyQkFBVyxDQUFBO0lBQ1gsc0JBQXNCO0lBQ3RCLDJCQUFXLENBQUE7SUFDWCxzQkFBc0I7SUFDdEIsMkJBQVcsQ0FBQTtJQUNYLG1CQUFtQjtJQUNuQiwyQkFBVyxDQUFBO0lBQ1gsc0JBQXNCO0lBQ3RCLDJCQUFXLENBQUE7SUFDWCxzQkFBc0I7SUFDdEIsMkJBQVcsQ0FBQTtJQUNYLHFCQUFxQjtJQUNyQiwyQkFBVyxDQUFBO0lBQ1gsbUJBQW1CO0lBQ25CLDJCQUFXLENBQUE7SUFDWCx1QkFBdUI7SUFDdkIsMkJBQVcsQ0FBQTtJQUNYLHVCQUF1QjtJQUN2QiwyQkFBVyxDQUFBO0lBQ1gsb0JBQW9CO0lBQ3BCLDJCQUFXLENBQUE7SUFDWCw0QkFBNEI7SUFDNUIsMkJBQVcsQ0FBQTtJQUNYLHdCQUF3QjtJQUN4QiwyQkFBVyxDQUFBO0lBQ1gsY0FBYztJQUNkLDJCQUFXLENBQUE7SUFDWCxxQkFBcUI7SUFDckIsMkJBQVcsQ0FBQTtJQUNYLHVCQUF1QjtJQUN2QiwyQkFBVyxDQUFBO0lBQ1gsc0JBQXNCO0lBQ3RCLDJCQUFXLENBQUE7SUFDWCxtQkFBbUI7SUFDbkIsMkJBQVcsQ0FBQTtJQUNYLG1CQUFtQjtJQUNuQiwyQkFBVyxDQUFBO0lBQ1gsc0JBQXNCO0lBQ3RCLDJCQUFXLENBQUE7SUFDWCxtQkFBbUI7SUFDbkIsMkJBQVcsQ0FBQTtJQUNYLHNCQUFzQjtJQUN0QiwyQkFBVyxDQUFBO0lBQ1gsdUJBQXVCO0lBQ3ZCLDJCQUFXLENBQUE7SUFDWCxtQkFBbUI7SUFDbkIsMkJBQVcsQ0FBQTtJQUNYLHVCQUF1QjtJQUN2QiwyQkFBVyxDQUFBO0lBQ1gsc0JBQXNCO0lBQ3RCLDJCQUFXLENBQUE7SUFDWCwwQkFBMEI7SUFDMUIsMkJBQVcsQ0FBQTtJQUNYLHNCQUFzQjtJQUN0QiwyQkFBVyxDQUFBO0lBQ1gsd0JBQXdCO0lBQ3hCLDJCQUFXLENBQUE7SUFDWCxzQkFBc0I7SUFDdEIsMkJBQVcsQ0FBQTtJQUNYLG1CQUFtQjtJQUNuQiwyQkFBVyxDQUFBO0lBQ1gsd0JBQXdCO0lBQ3hCLDJCQUFXLENBQUE7SUFDWCx5QkFBeUI7SUFDekIsMkJBQVcsQ0FBQTtJQUNYLHNCQUFzQjtJQUN0QiwyQkFBVyxDQUFBO0lBQ1gscUJBQXFCO0lBQ3JCLDJCQUFXLENBQUE7SUFDWCx5QkFBeUI7SUFDekIsMkJBQVcsQ0FBQTtJQUNYLHNCQUFzQjtJQUN0QiwyQkFBVyxDQUFBO0lBQ1gscUJBQXFCO0lBQ3JCLDJCQUFXLENBQUE7SUFDWCx5QkFBeUI7SUFDekIsMkJBQVcsQ0FBQTtJQUNYLGlCQUFpQjtJQUNqQiwyQkFBVyxDQUFBO0lBQ1gsd0JBQXdCO0lBQ3hCLDJCQUFXLENBQUE7SUFDWCxtQkFBbUI7SUFDbkIsMkJBQVcsQ0FBQTtJQUNYLDZCQUE2QjtJQUM3QiwyQkFBVyxDQUFBO0lBQ1gsc0JBQXNCO0lBQ3RCLDJCQUFXLENBQUE7SUFDWCxzQkFBc0I7SUFDdEIsMkJBQVcsQ0FBQTtJQUNYLG1CQUFtQjtJQUNuQiwyQkFBVyxDQUFBO0lBQ1gseUJBQXlCO0lBQ3pCLDJCQUFXLENBQUE7SUFDWCxtQkFBbUI7SUFDbkIsMkJBQVcsQ0FBQTtJQUNYLG1CQUFtQjtJQUNuQiwyQkFBVyxDQUFBO0lBQ1gsb0JBQW9CO0lBQ3BCLDJCQUFXLENBQUE7SUFDWCxvQkFBb0I7SUFDcEIsMkJBQVcsQ0FBQTtJQUNYLG9CQUFvQjtJQUNwQiwyQkFBVyxDQUFBO0lBQ1gsa0JBQWtCO0lBQ2xCLDJCQUFXLENBQUE7SUFDWCw2QkFBNkI7SUFDN0IsMkJBQVcsQ0FBQTtJQUNYLHVCQUF1QjtJQUN2QiwyQkFBVyxDQUFBO0lBQ1gscUJBQXFCO0lBQ3JCLDJCQUFXLENBQUE7SUFDWCwyQkFBMkI7SUFDM0IsMkJBQVcsQ0FBQTtJQUNYLHVCQUF1QjtJQUN2QiwyQkFBVyxDQUFBO0lBQ1gseUJBQXlCO0lBQ3pCLDJCQUFXLENBQUE7SUFDWCwyQkFBMkI7SUFDM0IsMkJBQVcsQ0FBQTtJQUNYLHNCQUFzQjtJQUN0QiwyQkFBVyxDQUFBO0lBQ1gsd0JBQXdCO0lBQ3hCLDJCQUFXLENBQUE7SUFDWCwyQkFBMkI7SUFDM0IsMkJBQVcsQ0FBQTtJQUNYLGtDQUFrQztJQUNsQywyQkFBVyxDQUFBO0lBQ1gsdUJBQXVCO0lBQ3ZCLDJCQUFXLENBQUE7SUFDWCxtQkFBbUI7SUFDbkIsMkJBQVcsQ0FBQTtJQUNYLHNCQUFzQjtJQUN0QiwyQkFBVyxDQUFBO0lBQ1gsZ0JBQWdCO0lBQ2hCLDJCQUFXLENBQUE7SUFDWCx5QkFBeUI7SUFDekIsMkJBQVcsQ0FBQTtJQUNYLHlCQUF5QjtJQUN6QiwyQkFBVyxDQUFBO0lBQ1gscUJBQXFCO0lBQ3JCLDJCQUFXLENBQUE7SUFDWCxxQkFBcUI7SUFDckIsMkJBQVcsQ0FBQTtJQUNYLG1CQUFtQjtJQUNuQiwyQkFBVyxDQUFBO0lBQ1gsaUNBQWlDO0lBQ2pDLDJCQUFXLENBQUE7SUFDWCx3QkFBd0I7SUFDeEIsMkJBQVcsQ0FBQTtJQUNYLHlCQUF5QjtJQUN6QiwyQkFBVyxDQUFBO0lBQ1gsd0JBQXdCO0lBQ3hCLDJCQUFXLENBQUE7SUFDWCx1QkFBdUI7SUFDdkIsMkJBQVcsQ0FBQTtJQUNYLDJCQUEyQjtJQUMzQiwyQkFBVyxDQUFBO0lBQ1gscUJBQXFCO0lBQ3JCLDJCQUFXLENBQUE7SUFDWCxxQkFBcUI7SUFDckIsMkJBQVcsQ0FBQTtJQUNYLGtDQUFrQztJQUNsQywyQkFBVyxDQUFBO0lBQ1gsc0JBQXNCO0lBQ3RCLDJCQUFXLENBQUE7SUFDWCxtQkFBbUI7SUFDbkIsMkJBQVcsQ0FBQTtJQUNYLGtCQUFrQjtJQUNsQiwyQkFBVyxDQUFBO0lBQ1gscUJBQXFCO0lBQ3JCLDJCQUFXLENBQUE7SUFDWCw0QkFBNEI7SUFDNUIsMkJBQVcsQ0FBQTtJQUNYLHNCQUFzQjtJQUN0QiwyQkFBVyxDQUFBO0lBQ1gsa0NBQWtDO0lBQ2xDLDJCQUFXLENBQUE7SUFDWCxrQkFBa0I7SUFDbEIsMkJBQVcsQ0FBQTtJQUNYLHlCQUF5QjtJQUN6QiwyQkFBVyxDQUFBO0lBQ1gscUJBQXFCO0lBQ3JCLDJCQUFXLENBQUE7SUFDWCx3QkFBd0I7SUFDeEIsMkJBQVcsQ0FBQTtBQUNiLENBQUMsRUEzVFcsWUFBWSxLQUFaLFlBQVksUUEyVHZCO0FBb0xELE1BQU0sQ0FBTixJQUFZLGdCQXlCWDtBQXpCRCxXQUFZLGdCQUFnQjtJQUMxQiwrREFBMkMsQ0FBQTtJQUMzQywyREFBdUMsQ0FBQTtJQUN2Qyx1RUFBbUQsQ0FBQTtJQUNuRCx1RUFBbUQsQ0FBQTtJQUNuRCwrRUFBMkQsQ0FBQTtJQUMzRCx5RUFBcUQsQ0FBQTtJQUNyRCx5RUFBcUQsQ0FBQTtJQUNyRCx5RUFBcUQsQ0FBQTtJQUNyRCwyRUFBdUQsQ0FBQTtJQUN2RCwyRkFBdUUsQ0FBQTtJQUN2RSx5RkFBcUUsQ0FBQTtJQUNyRSx1RkFBbUUsQ0FBQTtJQUNuRSxxRkFBaUUsQ0FBQTtJQUNqRSxtREFBK0IsQ0FBQTtJQUMvQixxRUFBaUQsQ0FBQTtJQUNqRCx5RUFBcUQsQ0FBQTtJQUNyRCwyREFBdUMsQ0FBQTtJQUN2Qyw2REFBeUMsQ0FBQTtJQUN6Qyx1RUFBbUQsQ0FBQTtJQUNuRCxpRkFBNkQsQ0FBQTtJQUM3RCw2Q0FBeUIsQ0FBQTtJQUN6QixpRUFBNkMsQ0FBQTtJQUM3QyxpRUFBNkMsQ0FBQTtJQUM3QyxxREFBaUMsQ0FBQTtBQUNuQyxDQUFDLEVBekJXLGdCQUFnQixLQUFoQixnQkFBZ0IsUUF5QjNCO0FBUUQ7Ozs7Ozs7O0dBUUc7QUFDSCxNQUFNLENBQU4sSUFBWSxZQTJUWDtBQTNURCxXQUFZLFlBQVk7SUFDdEIsZ0JBQWdCO0lBQ2hCLHlCQUFTLENBQUE7SUFDVCxXQUFXO0lBQ1gseUJBQVMsQ0FBQTtJQUNULGNBQWM7SUFDZCx5QkFBUyxDQUFBO0lBQ1QsYUFBYTtJQUNiLHlCQUFTLENBQUE7SUFDVCxlQUFlO0lBQ2YseUJBQVMsQ0FBQTtJQUNULGtCQUFrQjtJQUNsQix5QkFBUyxDQUFBO0lBQ1QsaUJBQWlCO0lBQ2pCLHlCQUFTLENBQUE7SUFDVCxnQkFBZ0I7SUFDaEIseUJBQVMsQ0FBQTtJQUNULGNBQWM7SUFDZCx5QkFBUyxDQUFBO0lBQ1QsYUFBYTtJQUNiLHlCQUFTLENBQUE7SUFDVCxjQUFjO0lBQ2QseUJBQVMsQ0FBQTtJQUNULGFBQWE7SUFDYix5QkFBUyxDQUFBO0lBQ1QsY0FBYztJQUNkLHlCQUFTLENBQUE7SUFDVCxjQUFjO0lBQ2QseUJBQVMsQ0FBQTtJQUNULGNBQWM7SUFDZCx5QkFBUyxDQUFBO0lBQ1QsZUFBZTtJQUNmLHlCQUFTLENBQUE7SUFDVCxZQUFZO0lBQ1oseUJBQVMsQ0FBQTtJQUNULG9CQUFvQjtJQUNwQix5QkFBUyxDQUFBO0lBQ1QsWUFBWTtJQUNaLHlCQUFTLENBQUE7SUFDVCxhQUFhO0lBQ2IseUJBQVMsQ0FBQTtJQUNULGFBQWE7SUFDYix5QkFBUyxDQUFBO0lBQ1Qsc0JBQXNCO0lBQ3RCLCtCQUFlLENBQUE7SUFDZix3QkFBd0I7SUFDeEIsK0JBQWUsQ0FBQTtJQUNmLGVBQWU7SUFDZix5QkFBUyxDQUFBO0lBQ1QsVUFBVTtJQUNWLHlCQUFTLENBQUE7SUFDVCxZQUFZO0lBQ1oseUJBQVMsQ0FBQTtJQUNULGNBQWM7SUFDZCx5QkFBUyxDQUFBO0lBQ1QseUJBQXlCO0lBQ3pCLCtCQUFlLENBQUE7SUFDZix1QkFBdUI7SUFDdkIsK0JBQWUsQ0FBQTtJQUNmLHNCQUFzQjtJQUN0QiwrQkFBZSxDQUFBO0lBQ2YsdUJBQXVCO0lBQ3ZCLCtCQUFlLENBQUE7SUFDZixnQkFBZ0I7SUFDaEIseUJBQVMsQ0FBQTtJQUNULGNBQWM7SUFDZCx5QkFBUyxDQUFBO0lBQ1QsdUJBQXVCO0lBQ3ZCLCtCQUFlLENBQUE7SUFDZixzQkFBc0I7SUFDdEIsK0JBQWUsQ0FBQTtJQUNmLGVBQWU7SUFDZix5QkFBUyxDQUFBO0lBQ1QsYUFBYTtJQUNiLHlCQUFTLENBQUE7SUFDVCxjQUFjO0lBQ2QseUJBQVMsQ0FBQTtJQUNULFdBQVc7SUFDWCwrQkFBZSxDQUFBO0lBQ2YsWUFBWTtJQUNaLHlCQUFTLENBQUE7SUFDVCxjQUFjO0lBQ2QseUJBQVMsQ0FBQTtJQUNULGNBQWM7SUFDZCx5QkFBUyxDQUFBO0lBQ1QsYUFBYTtJQUNiLHlCQUFTLENBQUE7SUFDVCxzQkFBc0I7SUFDdEIsK0JBQWUsQ0FBQTtJQUNmLG1CQUFtQjtJQUNuQiwrQkFBZSxDQUFBO0lBQ2Ysc0JBQXNCO0lBQ3RCLHlCQUFTLENBQUE7SUFDVCxZQUFZO0lBQ1oseUJBQVMsQ0FBQTtJQUNULHNCQUFzQjtJQUN0Qix5QkFBUyxDQUFBO0lBQ1QsZUFBZTtJQUNmLHlCQUFTLENBQUE7SUFDVCxlQUFlO0lBQ2YseUJBQVMsQ0FBQTtJQUNULFdBQVc7SUFDWCx5QkFBUyxDQUFBO0lBQ1QsWUFBWTtJQUNaLHlCQUFTLENBQUE7SUFDVCxhQUFhO0lBQ2IseUJBQVMsQ0FBQTtJQUNULFlBQVk7SUFDWix5QkFBUyxDQUFBO0lBQ1QsZUFBZTtJQUNmLHlCQUFTLENBQUE7SUFDVCxxQkFBcUI7SUFDckIseUJBQVMsQ0FBQTtJQUNULGdCQUFnQjtJQUNoQix5QkFBUyxDQUFBO0lBQ1QsZUFBZTtJQUNmLHlCQUFTLENBQUE7SUFDVCxrQkFBa0I7SUFDbEIseUJBQVMsQ0FBQTtJQUNULGlCQUFpQjtJQUNqQix5QkFBUyxDQUFBO0lBQ1QsV0FBVztJQUNYLHlCQUFTLENBQUE7SUFDVCxpQkFBaUI7SUFDakIseUJBQVMsQ0FBQTtJQUNULGdCQUFnQjtJQUNoQix5QkFBUyxDQUFBO0lBQ1QsY0FBYztJQUNkLHlCQUFTLENBQUE7SUFDVCxlQUFlO0lBQ2YseUJBQVMsQ0FBQTtJQUNULGVBQWU7SUFDZix5QkFBUyxDQUFBO0lBQ1QsZUFBZTtJQUNmLHlCQUFTLENBQUE7SUFDVCxhQUFhO0lBQ2IseUJBQVMsQ0FBQTtJQUNULGFBQWE7SUFDYix5QkFBUyxDQUFBO0lBQ1Qsa0JBQWtCO0lBQ2xCLHlCQUFTLENBQUE7SUFDVCxZQUFZO0lBQ1oseUJBQVMsQ0FBQTtJQUNULGNBQWM7SUFDZCx5QkFBUyxDQUFBO0lBQ1QsYUFBYTtJQUNiLHlCQUFTLENBQUE7SUFDVCxlQUFlO0lBQ2YseUJBQVMsQ0FBQTtJQUNULGNBQWM7SUFDZCx5QkFBUyxDQUFBO0lBQ1QsY0FBYztJQUNkLHlCQUFTLENBQUE7SUFDVCxhQUFhO0lBQ2IseUJBQVMsQ0FBQTtJQUNULFlBQVk7SUFDWix5QkFBUyxDQUFBO0lBQ1Qsb0JBQW9CO0lBQ3BCLHlCQUFTLENBQUE7SUFDVCxZQUFZO0lBQ1oseUJBQVMsQ0FBQTtJQUNULGNBQWM7SUFDZCx5QkFBUyxDQUFBO0lBQ1QsVUFBVTtJQUNWLHlCQUFTLENBQUE7SUFDVCxpQkFBaUI7SUFDakIseUJBQVMsQ0FBQTtJQUNULG1CQUFtQjtJQUNuQix5QkFBUyxDQUFBO0lBQ1QsY0FBYztJQUNkLHlCQUFTLENBQUE7SUFDVCxlQUFlO0lBQ2YseUJBQVMsQ0FBQTtJQUNULFlBQVk7SUFDWix5QkFBUyxDQUFBO0lBQ1QsaUJBQWlCO0lBQ2pCLHlCQUFTLENBQUE7SUFDVCxnQkFBZ0I7SUFDaEIseUJBQVMsQ0FBQTtJQUNULGdCQUFnQjtJQUNoQix5QkFBUyxDQUFBO0lBQ1QsY0FBYztJQUNkLHlCQUFTLENBQUE7SUFDVCxZQUFZO0lBQ1oseUJBQVMsQ0FBQTtJQUNULGNBQWM7SUFDZCx5QkFBUyxDQUFBO0lBQ1QsY0FBYztJQUNkLHlCQUFTLENBQUE7SUFDVCx1QkFBdUI7SUFDdkIseUJBQVMsQ0FBQTtJQUNULG9CQUFvQjtJQUNwQix5QkFBUyxDQUFBO0lBQ1QsYUFBYTtJQUNiLHlCQUFTLENBQUE7SUFDVCxZQUFZO0lBQ1oseUJBQVMsQ0FBQTtJQUNULGNBQWM7SUFDZCwrQkFBZSxDQUFBO0lBQ2Ysd0JBQXdCO0lBQ3hCLHlCQUFTLENBQUE7SUFDVCxhQUFhO0lBQ2IseUJBQVMsQ0FBQTtJQUNULFlBQVk7SUFDWix5QkFBUyxDQUFBO0lBQ1QsV0FBVztJQUNYLHlCQUFTLENBQUE7SUFDVCxjQUFjO0lBQ2QseUJBQVMsQ0FBQTtJQUNULGNBQWM7SUFDZCx5QkFBUyxDQUFBO0lBQ1QsYUFBYTtJQUNiLHlCQUFTLENBQUE7SUFDVCxhQUFhO0lBQ2IseUJBQVMsQ0FBQTtJQUNULGlCQUFpQjtJQUNqQix5QkFBUyxDQUFBO0lBQ1QsMkJBQTJCO0lBQzNCLCtCQUFlLENBQUE7SUFDZiwwQkFBMEI7SUFDMUIsK0JBQWUsQ0FBQTtJQUNmLGNBQWM7SUFDZCx5QkFBUyxDQUFBO0lBQ1QsY0FBYztJQUNkLHlCQUFTLENBQUE7SUFDVCxZQUFZO0lBQ1oseUJBQVMsQ0FBQTtJQUNULGVBQWU7SUFDZix5QkFBUyxDQUFBO0lBQ1QsZ0JBQWdCO0lBQ2hCLCtCQUFlLENBQUE7SUFDZixjQUFjO0lBQ2QseUJBQVMsQ0FBQTtJQUNULGtCQUFrQjtJQUNsQix5QkFBUyxDQUFBO0lBQ1QsZUFBZTtJQUNmLHlCQUFTLENBQUE7SUFDVCxhQUFhO0lBQ2IseUJBQVMsQ0FBQTtJQUNULG9CQUFvQjtJQUNwQix5QkFBUyxDQUFBO0lBQ1QsWUFBWTtJQUNaLHlCQUFTLENBQUE7SUFDVCxjQUFjO0lBQ2QseUJBQVMsQ0FBQTtJQUNULGFBQWE7SUFDYix5QkFBUyxDQUFBO0lBQ1QsZ0JBQWdCO0lBQ2hCLHlCQUFTLENBQUE7SUFDVCxhQUFhO0lBQ2IseUJBQVMsQ0FBQTtJQUNULFlBQVk7SUFDWix5QkFBUyxDQUFBO0lBQ1QsYUFBYTtJQUNiLHlCQUFTLENBQUE7SUFDVCxlQUFlO0lBQ2YseUJBQVMsQ0FBQTtJQUNULGNBQWM7SUFDZCx5QkFBUyxDQUFBO0lBQ1QscUJBQXFCO0lBQ3JCLHlCQUFTLENBQUE7SUFDVCxnQkFBZ0I7SUFDaEIseUJBQVMsQ0FBQTtJQUNULGNBQWM7SUFDZCx5QkFBUyxDQUFBO0lBQ1QsY0FBYztJQUNkLHlCQUFTLENBQUE7SUFDVCxvQkFBb0I7SUFDcEIsK0JBQWUsQ0FBQTtJQUNmLFlBQVk7SUFDWix5QkFBUyxDQUFBO0lBQ1QsYUFBYTtJQUNiLHlCQUFTLENBQUE7SUFDVCxZQUFZO0lBQ1oseUJBQVMsQ0FBQTtJQUNULFdBQVc7SUFDWCx5QkFBUyxDQUFBO0lBQ1QsZUFBZTtJQUNmLHlCQUFTLENBQUE7SUFDVCxjQUFjO0lBQ2QseUJBQVMsQ0FBQTtJQUNULGFBQWE7SUFDYix5QkFBUyxDQUFBO0lBQ1QsY0FBYztJQUNkLHlCQUFTLENBQUE7SUFDVCxZQUFZO0lBQ1oseUJBQVMsQ0FBQTtJQUNULGFBQWE7SUFDYix5QkFBUyxDQUFBO0lBQ1QsZ0JBQWdCO0lBQ2hCLHlCQUFTLENBQUE7SUFDVCxXQUFXO0lBQ1gseUJBQVMsQ0FBQTtJQUNULFlBQVk7SUFDWix5QkFBUyxDQUFBO0lBQ1QsaUJBQWlCO0lBQ2pCLHlCQUFTLENBQUE7SUFDVCxjQUFjO0lBQ2QseUJBQVMsQ0FBQTtJQUNULFlBQVk7SUFDWix5QkFBUyxDQUFBO0lBQ1QsWUFBWTtJQUNaLHlCQUFTLENBQUE7SUFDVCxjQUFjO0lBQ2QseUJBQVMsQ0FBQTtJQUNULGFBQWE7SUFDYix5QkFBUyxDQUFBO0lBQ1QsY0FBYztJQUNkLHlCQUFTLENBQUE7SUFDVCx5QkFBeUI7SUFDekIsbUNBQW1CLENBQUE7SUFDbkIsMEJBQTBCO0lBQzFCLG1DQUFtQixDQUFBO0lBQ25CLFdBQVc7SUFDWCx5QkFBUyxDQUFBO0FBQ1gsQ0FBQyxFQTNUVyxZQUFZLEtBQVosWUFBWSxRQTJUdkIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyB0c2xpbnQ6ZGlzYWJsZVxuZXhwb3J0IHR5cGUgTWF5YmU8VD4gPSBUIHwgbnVsbDtcbmV4cG9ydCB0eXBlIEV4YWN0PFQgZXh0ZW5kcyB7IFtrZXk6IHN0cmluZ106IHVua25vd24gfT4gPSB7IFtLIGluIGtleW9mIFRdOiBUW0tdIH07XG5leHBvcnQgdHlwZSBNYWtlT3B0aW9uYWw8VCwgSyBleHRlbmRzIGtleW9mIFQ+ID0gT21pdDxULCBLPiAmIHsgW1N1YktleSBpbiBLXT86IE1heWJlPFRbU3ViS2V5XT4gfTtcbmV4cG9ydCB0eXBlIE1ha2VNYXliZTxULCBLIGV4dGVuZHMga2V5b2YgVD4gPSBPbWl0PFQsIEs+ICYgeyBbU3ViS2V5IGluIEtdOiBNYXliZTxUW1N1YktleV0+IH07XG4vKiogQWxsIGJ1aWx0LWluIGFuZCBjdXN0b20gc2NhbGFycywgbWFwcGVkIHRvIHRoZWlyIGFjdHVhbCB2YWx1ZXMgKi9cbmV4cG9ydCB0eXBlIFNjYWxhcnMgPSB7XG4gIElEOiBzdHJpbmc7XG4gIFN0cmluZzogc3RyaW5nO1xuICBCb29sZWFuOiBib29sZWFuO1xuICBJbnQ6IG51bWJlcjtcbiAgRmxvYXQ6IG51bWJlcjtcbiAgLyoqIFRoZSBgSlNPTmAgc2NhbGFyIHR5cGUgcmVwcmVzZW50cyBKU09OIHZhbHVlcyBhcyBzcGVjaWZpZWQgYnkgW0VDTUEtNDA0XShodHRwOi8vd3d3LmVjbWEtaW50ZXJuYXRpb25hbC5vcmcvcHVibGljYXRpb25zL2ZpbGVzL0VDTUEtU1QvRUNNQS00MDQucGRmKS4gKi9cbiAgSlNPTjogYW55O1xuICAvKiogQSBkYXRlLXRpbWUgc3RyaW5nIGF0IFVUQywgc3VjaCBhcyAyMDA3LTEyLTAzVDEwOjE1OjMwWiwgY29tcGxpYW50IHdpdGggdGhlIGBkYXRlLXRpbWVgIGZvcm1hdCBvdXRsaW5lZCBpbiBzZWN0aW9uIDUuNiBvZiB0aGUgUkZDIDMzMzkgcHJvZmlsZSBvZiB0aGUgSVNPIDg2MDEgc3RhbmRhcmQgZm9yIHJlcHJlc2VudGF0aW9uIG9mIGRhdGVzIGFuZCB0aW1lcyB1c2luZyB0aGUgR3JlZ29yaWFuIGNhbGVuZGFyLiAqL1xuICBEYXRlVGltZTogYW55O1xuICAvKiogVGhlIGBVcGxvYWRgIHNjYWxhciB0eXBlIHJlcHJlc2VudHMgYSBmaWxlIHVwbG9hZC4gKi9cbiAgVXBsb2FkOiBhbnk7XG59O1xuXG5cbmV4cG9ydCB0eXBlIFF1ZXJ5ID0ge1xuICBfX3R5cGVuYW1lPzogJ1F1ZXJ5JztcbiAgYWN0aXZlQWRtaW5pc3RyYXRvcj86IE1heWJlPEFkbWluaXN0cmF0b3I+O1xuICBhY3RpdmVDaGFubmVsOiBDaGFubmVsO1xuICBhZG1pbmlzdHJhdG9yPzogTWF5YmU8QWRtaW5pc3RyYXRvcj47XG4gIGFkbWluaXN0cmF0b3JzOiBBZG1pbmlzdHJhdG9yTGlzdDtcbiAgLyoqIEdldCBhIHNpbmdsZSBBc3NldCBieSBpZCAqL1xuICBhc3NldD86IE1heWJlPEFzc2V0PjtcbiAgLyoqIEdldCBhIGxpc3Qgb2YgQXNzZXRzICovXG4gIGFzc2V0czogQXNzZXRMaXN0O1xuICBjaGFubmVsPzogTWF5YmU8Q2hhbm5lbD47XG4gIGNoYW5uZWxzOiBBcnJheTxDaGFubmVsPjtcbiAgLyoqIEdldCBhIENvbGxlY3Rpb24gZWl0aGVyIGJ5IGlkIG9yIHNsdWcuIElmIG5laXRoZXIgaWQgbm9yIHNsdWcgaXMgc3BlaWNpZmllZCwgYW4gZXJyb3Igd2lsbCByZXN1bHQuICovXG4gIGNvbGxlY3Rpb24/OiBNYXliZTxDb2xsZWN0aW9uPjtcbiAgY29sbGVjdGlvbkZpbHRlcnM6IEFycmF5PENvbmZpZ3VyYWJsZU9wZXJhdGlvbkRlZmluaXRpb24+O1xuICBjb2xsZWN0aW9uczogQ29sbGVjdGlvbkxpc3Q7XG4gIGNvdW50cmllczogQ291bnRyeUxpc3Q7XG4gIGNvdW50cnk/OiBNYXliZTxDb3VudHJ5PjtcbiAgY3VzdG9tZXI/OiBNYXliZTxDdXN0b21lcj47XG4gIGN1c3RvbWVyR3JvdXA/OiBNYXliZTxDdXN0b21lckdyb3VwPjtcbiAgY3VzdG9tZXJHcm91cHM6IEN1c3RvbWVyR3JvdXBMaXN0O1xuICBjdXN0b21lcnM6IEN1c3RvbWVyTGlzdDtcbiAgZmFjZXQ/OiBNYXliZTxGYWNldD47XG4gIGZhY2V0czogRmFjZXRMaXN0O1xuICBmdWxmaWxsbWVudEhhbmRsZXJzOiBBcnJheTxDb25maWd1cmFibGVPcGVyYXRpb25EZWZpbml0aW9uPjtcbiAgZ2xvYmFsU2V0dGluZ3M6IEdsb2JhbFNldHRpbmdzO1xuICBqb2I/OiBNYXliZTxKb2I+O1xuICBqb2JRdWV1ZXM6IEFycmF5PEpvYlF1ZXVlPjtcbiAgam9iczogSm9iTGlzdDtcbiAgam9ic0J5SWQ6IEFycmF5PEpvYj47XG4gIG1lPzogTWF5YmU8Q3VycmVudFVzZXI+O1xuICBuZXR3b3JrU3RhdHVzOiBOZXR3b3JrU3RhdHVzO1xuICBvcmRlcj86IE1heWJlPE9yZGVyPjtcbiAgb3JkZXJzOiBPcmRlckxpc3Q7XG4gIHBheW1lbnRNZXRob2Q/OiBNYXliZTxQYXltZW50TWV0aG9kPjtcbiAgcGF5bWVudE1ldGhvZEVsaWdpYmlsaXR5Q2hlY2tlcnM6IEFycmF5PENvbmZpZ3VyYWJsZU9wZXJhdGlvbkRlZmluaXRpb24+O1xuICBwYXltZW50TWV0aG9kSGFuZGxlcnM6IEFycmF5PENvbmZpZ3VyYWJsZU9wZXJhdGlvbkRlZmluaXRpb24+O1xuICBwYXltZW50TWV0aG9kczogUGF5bWVudE1ldGhvZExpc3Q7XG4gIC8qKiBHZXQgYSBQcm9kdWN0IGVpdGhlciBieSBpZCBvciBzbHVnLiBJZiBuZWl0aGVyIGlkIG5vciBzbHVnIGlzIHNwZWljaWZpZWQsIGFuIGVycm9yIHdpbGwgcmVzdWx0LiAqL1xuICBwcm9kdWN0PzogTWF5YmU8UHJvZHVjdD47XG4gIHByb2R1Y3RPcHRpb25Hcm91cD86IE1heWJlPFByb2R1Y3RPcHRpb25Hcm91cD47XG4gIHByb2R1Y3RPcHRpb25Hcm91cHM6IEFycmF5PFByb2R1Y3RPcHRpb25Hcm91cD47XG4gIC8qKiBHZXQgYSBQcm9kdWN0VmFyaWFudCBieSBpZCAqL1xuICBwcm9kdWN0VmFyaWFudD86IE1heWJlPFByb2R1Y3RWYXJpYW50PjtcbiAgLyoqIExpc3QgUHJvZHVjdFZhcmlhbnRzIGVpdGhlciBhbGwgb3IgZm9yIHRoZSBzcGVjaWZpYyBwcm9kdWN0LiAqL1xuICBwcm9kdWN0VmFyaWFudHM6IFByb2R1Y3RWYXJpYW50TGlzdDtcbiAgLyoqIExpc3QgUHJvZHVjdHMgKi9cbiAgcHJvZHVjdHM6IFByb2R1Y3RMaXN0O1xuICBwcm9tb3Rpb24/OiBNYXliZTxQcm9tb3Rpb24+O1xuICBwcm9tb3Rpb25BY3Rpb25zOiBBcnJheTxDb25maWd1cmFibGVPcGVyYXRpb25EZWZpbml0aW9uPjtcbiAgcHJvbW90aW9uQ29uZGl0aW9uczogQXJyYXk8Q29uZmlndXJhYmxlT3BlcmF0aW9uRGVmaW5pdGlvbj47XG4gIHByb21vdGlvbnM6IFByb21vdGlvbkxpc3Q7XG4gIHJvbGU/OiBNYXliZTxSb2xlPjtcbiAgcm9sZXM6IFJvbGVMaXN0O1xuICBzZWFyY2g6IFNlYXJjaFJlc3BvbnNlO1xuICBzaGlwcGluZ0NhbGN1bGF0b3JzOiBBcnJheTxDb25maWd1cmFibGVPcGVyYXRpb25EZWZpbml0aW9uPjtcbiAgc2hpcHBpbmdFbGlnaWJpbGl0eUNoZWNrZXJzOiBBcnJheTxDb25maWd1cmFibGVPcGVyYXRpb25EZWZpbml0aW9uPjtcbiAgc2hpcHBpbmdNZXRob2Q/OiBNYXliZTxTaGlwcGluZ01ldGhvZD47XG4gIHNoaXBwaW5nTWV0aG9kczogU2hpcHBpbmdNZXRob2RMaXN0O1xuICB0YWc6IFRhZztcbiAgdGFnczogVGFnTGlzdDtcbiAgdGF4Q2F0ZWdvcmllczogQXJyYXk8VGF4Q2F0ZWdvcnk+O1xuICB0YXhDYXRlZ29yeT86IE1heWJlPFRheENhdGVnb3J5PjtcbiAgdGF4UmF0ZT86IE1heWJlPFRheFJhdGU+O1xuICB0YXhSYXRlczogVGF4UmF0ZUxpc3Q7XG4gIHRlc3RFbGlnaWJsZVNoaXBwaW5nTWV0aG9kczogQXJyYXk8U2hpcHBpbmdNZXRob2RRdW90ZT47XG4gIHRlc3RTaGlwcGluZ01ldGhvZDogVGVzdFNoaXBwaW5nTWV0aG9kUmVzdWx0O1xuICB1aVN0YXRlOiBVaVN0YXRlO1xuICB1c2VyU3RhdHVzOiBVc2VyU3RhdHVzO1xuICB6b25lPzogTWF5YmU8Wm9uZT47XG4gIHpvbmVzOiBBcnJheTxab25lPjtcbn07XG5cblxuZXhwb3J0IHR5cGUgUXVlcnlBZG1pbmlzdHJhdG9yQXJncyA9IHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG59O1xuXG5cbmV4cG9ydCB0eXBlIFF1ZXJ5QWRtaW5pc3RyYXRvcnNBcmdzID0ge1xuICBvcHRpb25zPzogTWF5YmU8QWRtaW5pc3RyYXRvckxpc3RPcHRpb25zPjtcbn07XG5cblxuZXhwb3J0IHR5cGUgUXVlcnlBc3NldEFyZ3MgPSB7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xufTtcblxuXG5leHBvcnQgdHlwZSBRdWVyeUFzc2V0c0FyZ3MgPSB7XG4gIG9wdGlvbnM/OiBNYXliZTxBc3NldExpc3RPcHRpb25zPjtcbn07XG5cblxuZXhwb3J0IHR5cGUgUXVlcnlDaGFubmVsQXJncyA9IHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG59O1xuXG5cbmV4cG9ydCB0eXBlIFF1ZXJ5Q29sbGVjdGlvbkFyZ3MgPSB7XG4gIGlkPzogTWF5YmU8U2NhbGFyc1snSUQnXT47XG4gIHNsdWc/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG59O1xuXG5cbmV4cG9ydCB0eXBlIFF1ZXJ5Q29sbGVjdGlvbnNBcmdzID0ge1xuICBvcHRpb25zPzogTWF5YmU8Q29sbGVjdGlvbkxpc3RPcHRpb25zPjtcbn07XG5cblxuZXhwb3J0IHR5cGUgUXVlcnlDb3VudHJpZXNBcmdzID0ge1xuICBvcHRpb25zPzogTWF5YmU8Q291bnRyeUxpc3RPcHRpb25zPjtcbn07XG5cblxuZXhwb3J0IHR5cGUgUXVlcnlDb3VudHJ5QXJncyA9IHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG59O1xuXG5cbmV4cG9ydCB0eXBlIFF1ZXJ5Q3VzdG9tZXJBcmdzID0ge1xuICBpZDogU2NhbGFyc1snSUQnXTtcbn07XG5cblxuZXhwb3J0IHR5cGUgUXVlcnlDdXN0b21lckdyb3VwQXJncyA9IHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG59O1xuXG5cbmV4cG9ydCB0eXBlIFF1ZXJ5Q3VzdG9tZXJHcm91cHNBcmdzID0ge1xuICBvcHRpb25zPzogTWF5YmU8Q3VzdG9tZXJHcm91cExpc3RPcHRpb25zPjtcbn07XG5cblxuZXhwb3J0IHR5cGUgUXVlcnlDdXN0b21lcnNBcmdzID0ge1xuICBvcHRpb25zPzogTWF5YmU8Q3VzdG9tZXJMaXN0T3B0aW9ucz47XG59O1xuXG5cbmV4cG9ydCB0eXBlIFF1ZXJ5RmFjZXRBcmdzID0ge1xuICBpZDogU2NhbGFyc1snSUQnXTtcbn07XG5cblxuZXhwb3J0IHR5cGUgUXVlcnlGYWNldHNBcmdzID0ge1xuICBvcHRpb25zPzogTWF5YmU8RmFjZXRMaXN0T3B0aW9ucz47XG59O1xuXG5cbmV4cG9ydCB0eXBlIFF1ZXJ5Sm9iQXJncyA9IHtcbiAgam9iSWQ6IFNjYWxhcnNbJ0lEJ107XG59O1xuXG5cbmV4cG9ydCB0eXBlIFF1ZXJ5Sm9ic0FyZ3MgPSB7XG4gIG9wdGlvbnM/OiBNYXliZTxKb2JMaXN0T3B0aW9ucz47XG59O1xuXG5cbmV4cG9ydCB0eXBlIFF1ZXJ5Sm9ic0J5SWRBcmdzID0ge1xuICBqb2JJZHM6IEFycmF5PFNjYWxhcnNbJ0lEJ10+O1xufTtcblxuXG5leHBvcnQgdHlwZSBRdWVyeU9yZGVyQXJncyA9IHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG59O1xuXG5cbmV4cG9ydCB0eXBlIFF1ZXJ5T3JkZXJzQXJncyA9IHtcbiAgb3B0aW9ucz86IE1heWJlPE9yZGVyTGlzdE9wdGlvbnM+O1xufTtcblxuXG5leHBvcnQgdHlwZSBRdWVyeVBheW1lbnRNZXRob2RBcmdzID0ge1xuICBpZDogU2NhbGFyc1snSUQnXTtcbn07XG5cblxuZXhwb3J0IHR5cGUgUXVlcnlQYXltZW50TWV0aG9kc0FyZ3MgPSB7XG4gIG9wdGlvbnM/OiBNYXliZTxQYXltZW50TWV0aG9kTGlzdE9wdGlvbnM+O1xufTtcblxuXG5leHBvcnQgdHlwZSBRdWVyeVByb2R1Y3RBcmdzID0ge1xuICBpZD86IE1heWJlPFNjYWxhcnNbJ0lEJ10+O1xuICBzbHVnPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xufTtcblxuXG5leHBvcnQgdHlwZSBRdWVyeVByb2R1Y3RPcHRpb25Hcm91cEFyZ3MgPSB7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xufTtcblxuXG5leHBvcnQgdHlwZSBRdWVyeVByb2R1Y3RPcHRpb25Hcm91cHNBcmdzID0ge1xuICBmaWx0ZXJUZXJtPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xufTtcblxuXG5leHBvcnQgdHlwZSBRdWVyeVByb2R1Y3RWYXJpYW50QXJncyA9IHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG59O1xuXG5cbmV4cG9ydCB0eXBlIFF1ZXJ5UHJvZHVjdFZhcmlhbnRzQXJncyA9IHtcbiAgb3B0aW9ucz86IE1heWJlPFByb2R1Y3RWYXJpYW50TGlzdE9wdGlvbnM+O1xuICBwcm9kdWN0SWQ/OiBNYXliZTxTY2FsYXJzWydJRCddPjtcbn07XG5cblxuZXhwb3J0IHR5cGUgUXVlcnlQcm9kdWN0c0FyZ3MgPSB7XG4gIG9wdGlvbnM/OiBNYXliZTxQcm9kdWN0TGlzdE9wdGlvbnM+O1xufTtcblxuXG5leHBvcnQgdHlwZSBRdWVyeVByb21vdGlvbkFyZ3MgPSB7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xufTtcblxuXG5leHBvcnQgdHlwZSBRdWVyeVByb21vdGlvbnNBcmdzID0ge1xuICBvcHRpb25zPzogTWF5YmU8UHJvbW90aW9uTGlzdE9wdGlvbnM+O1xufTtcblxuXG5leHBvcnQgdHlwZSBRdWVyeVJvbGVBcmdzID0ge1xuICBpZDogU2NhbGFyc1snSUQnXTtcbn07XG5cblxuZXhwb3J0IHR5cGUgUXVlcnlSb2xlc0FyZ3MgPSB7XG4gIG9wdGlvbnM/OiBNYXliZTxSb2xlTGlzdE9wdGlvbnM+O1xufTtcblxuXG5leHBvcnQgdHlwZSBRdWVyeVNlYXJjaEFyZ3MgPSB7XG4gIGlucHV0OiBTZWFyY2hJbnB1dDtcbn07XG5cblxuZXhwb3J0IHR5cGUgUXVlcnlTaGlwcGluZ01ldGhvZEFyZ3MgPSB7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xufTtcblxuXG5leHBvcnQgdHlwZSBRdWVyeVNoaXBwaW5nTWV0aG9kc0FyZ3MgPSB7XG4gIG9wdGlvbnM/OiBNYXliZTxTaGlwcGluZ01ldGhvZExpc3RPcHRpb25zPjtcbn07XG5cblxuZXhwb3J0IHR5cGUgUXVlcnlUYWdBcmdzID0ge1xuICBpZDogU2NhbGFyc1snSUQnXTtcbn07XG5cblxuZXhwb3J0IHR5cGUgUXVlcnlUYWdzQXJncyA9IHtcbiAgb3B0aW9ucz86IE1heWJlPFRhZ0xpc3RPcHRpb25zPjtcbn07XG5cblxuZXhwb3J0IHR5cGUgUXVlcnlUYXhDYXRlZ29yeUFyZ3MgPSB7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xufTtcblxuXG5leHBvcnQgdHlwZSBRdWVyeVRheFJhdGVBcmdzID0ge1xuICBpZDogU2NhbGFyc1snSUQnXTtcbn07XG5cblxuZXhwb3J0IHR5cGUgUXVlcnlUYXhSYXRlc0FyZ3MgPSB7XG4gIG9wdGlvbnM/OiBNYXliZTxUYXhSYXRlTGlzdE9wdGlvbnM+O1xufTtcblxuXG5leHBvcnQgdHlwZSBRdWVyeVRlc3RFbGlnaWJsZVNoaXBwaW5nTWV0aG9kc0FyZ3MgPSB7XG4gIGlucHV0OiBUZXN0RWxpZ2libGVTaGlwcGluZ01ldGhvZHNJbnB1dDtcbn07XG5cblxuZXhwb3J0IHR5cGUgUXVlcnlUZXN0U2hpcHBpbmdNZXRob2RBcmdzID0ge1xuICBpbnB1dDogVGVzdFNoaXBwaW5nTWV0aG9kSW5wdXQ7XG59O1xuXG5cbmV4cG9ydCB0eXBlIFF1ZXJ5Wm9uZUFyZ3MgPSB7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xufTtcblxuZXhwb3J0IHR5cGUgTXV0YXRpb24gPSB7XG4gIF9fdHlwZW5hbWU/OiAnTXV0YXRpb24nO1xuICAvKiogQWRkIEN1c3RvbWVycyB0byBhIEN1c3RvbWVyR3JvdXAgKi9cbiAgYWRkQ3VzdG9tZXJzVG9Hcm91cDogQ3VzdG9tZXJHcm91cDtcbiAgYWRkRnVsZmlsbG1lbnRUb09yZGVyOiBBZGRGdWxmaWxsbWVudFRvT3JkZXJSZXN1bHQ7XG4gIC8qKlxuICAgKiBVc2VkIHRvIG1hbnVhbGx5IGNyZWF0ZSBhIG5ldyBQYXltZW50IGFnYWluc3QgYW4gT3JkZXIuIFRoaXMgaXMgdXNlZCB3aGVuIGEgY29tcGxldGVkIE9yZGVyXG4gICAqIGhhcyBiZWVuIG1vZGlmaWVkICh1c2luZyBgbW9kaWZ5T3JkZXJgKSBhbmQgdGhlIHByaWNlIGhhcyBpbmNyZWFzZWQuIFRoZSBleHRyYSBwYXltZW50XG4gICAqIGNhbiB0aGVuIGJlIG1hbnVhbGx5IGFycmFuZ2VkIGJ5IHRoZSBhZG1pbmlzdHJhdG9yLCBhbmQgdGhlIGRldGFpbHMgdXNlZCB0byBjcmVhdGUgYSBuZXdcbiAgICogUGF5bWVudC5cbiAgICovXG4gIGFkZE1hbnVhbFBheW1lbnRUb09yZGVyOiBBZGRNYW51YWxQYXltZW50VG9PcmRlclJlc3VsdDtcbiAgLyoqIEFkZCBtZW1iZXJzIHRvIGEgWm9uZSAqL1xuICBhZGRNZW1iZXJzVG9ab25lOiBab25lO1xuICBhZGROb3RlVG9DdXN0b21lcjogQ3VzdG9tZXI7XG4gIGFkZE5vdGVUb09yZGVyOiBPcmRlcjtcbiAgLyoqIEFkZCBhbiBPcHRpb25Hcm91cCB0byBhIFByb2R1Y3QgKi9cbiAgYWRkT3B0aW9uR3JvdXBUb1Byb2R1Y3Q6IFByb2R1Y3Q7XG4gIC8qKiBBc3NpZ24gYXNzZXRzIHRvIGNoYW5uZWwgKi9cbiAgYXNzaWduQXNzZXRzVG9DaGFubmVsOiBBcnJheTxBc3NldD47XG4gIC8qKiBBc3NpZ25zIFByb2R1Y3RWYXJpYW50cyB0byB0aGUgc3BlY2lmaWVkIENoYW5uZWwgKi9cbiAgYXNzaWduUHJvZHVjdFZhcmlhbnRzVG9DaGFubmVsOiBBcnJheTxQcm9kdWN0VmFyaWFudD47XG4gIC8qKiBBc3NpZ25zIGFsbCBQcm9kdWN0VmFyaWFudHMgb2YgUHJvZHVjdCB0byB0aGUgc3BlY2lmaWVkIENoYW5uZWwgKi9cbiAgYXNzaWduUHJvZHVjdHNUb0NoYW5uZWw6IEFycmF5PFByb2R1Y3Q+O1xuICAvKiogQXNzaWducyBQcm9tb3Rpb25zIHRvIHRoZSBzcGVjaWZpZWQgQ2hhbm5lbCAqL1xuICBhc3NpZ25Qcm9tb3Rpb25zVG9DaGFubmVsOiBBcnJheTxQcm9tb3Rpb24+O1xuICAvKiogQXNzaWduIGEgUm9sZSB0byBhbiBBZG1pbmlzdHJhdG9yICovXG4gIGFzc2lnblJvbGVUb0FkbWluaXN0cmF0b3I6IEFkbWluaXN0cmF0b3I7XG4gIC8qKiBBdXRoZW50aWNhdGVzIHRoZSB1c2VyIHVzaW5nIGEgbmFtZWQgYXV0aGVudGljYXRpb24gc3RyYXRlZ3kgKi9cbiAgYXV0aGVudGljYXRlOiBBdXRoZW50aWNhdGlvblJlc3VsdDtcbiAgY2FuY2VsSm9iOiBKb2I7XG4gIGNhbmNlbE9yZGVyOiBDYW5jZWxPcmRlclJlc3VsdDtcbiAgLyoqIENyZWF0ZSBhIG5ldyBBZG1pbmlzdHJhdG9yICovXG4gIGNyZWF0ZUFkbWluaXN0cmF0b3I6IEFkbWluaXN0cmF0b3I7XG4gIC8qKiBDcmVhdGUgYSBuZXcgQXNzZXQgKi9cbiAgY3JlYXRlQXNzZXRzOiBBcnJheTxDcmVhdGVBc3NldFJlc3VsdD47XG4gIC8qKiBDcmVhdGUgYSBuZXcgQ2hhbm5lbCAqL1xuICBjcmVhdGVDaGFubmVsOiBDcmVhdGVDaGFubmVsUmVzdWx0O1xuICAvKiogQ3JlYXRlIGEgbmV3IENvbGxlY3Rpb24gKi9cbiAgY3JlYXRlQ29sbGVjdGlvbjogQ29sbGVjdGlvbjtcbiAgLyoqIENyZWF0ZSBhIG5ldyBDb3VudHJ5ICovXG4gIGNyZWF0ZUNvdW50cnk6IENvdW50cnk7XG4gIC8qKiBDcmVhdGUgYSBuZXcgQ3VzdG9tZXIuIElmIGEgcGFzc3dvcmQgaXMgcHJvdmlkZWQsIGEgbmV3IFVzZXIgd2lsbCBhbHNvIGJlIGNyZWF0ZWQgYW4gbGlua2VkIHRvIHRoZSBDdXN0b21lci4gKi9cbiAgY3JlYXRlQ3VzdG9tZXI6IENyZWF0ZUN1c3RvbWVyUmVzdWx0O1xuICAvKiogQ3JlYXRlIGEgbmV3IEFkZHJlc3MgYW5kIGFzc29jaWF0ZSBpdCB3aXRoIHRoZSBDdXN0b21lciBzcGVjaWZpZWQgYnkgY3VzdG9tZXJJZCAqL1xuICBjcmVhdGVDdXN0b21lckFkZHJlc3M6IEFkZHJlc3M7XG4gIC8qKiBDcmVhdGUgYSBuZXcgQ3VzdG9tZXJHcm91cCAqL1xuICBjcmVhdGVDdXN0b21lckdyb3VwOiBDdXN0b21lckdyb3VwO1xuICAvKiogQ3JlYXRlIGEgbmV3IEZhY2V0ICovXG4gIGNyZWF0ZUZhY2V0OiBGYWNldDtcbiAgLyoqIENyZWF0ZSBvbmUgb3IgbW9yZSBGYWNldFZhbHVlcyAqL1xuICBjcmVhdGVGYWNldFZhbHVlczogQXJyYXk8RmFjZXRWYWx1ZT47XG4gIC8qKiBDcmVhdGUgZXhpc3RpbmcgUGF5bWVudE1ldGhvZCAqL1xuICBjcmVhdGVQYXltZW50TWV0aG9kOiBQYXltZW50TWV0aG9kO1xuICAvKiogQ3JlYXRlIGEgbmV3IFByb2R1Y3QgKi9cbiAgY3JlYXRlUHJvZHVjdDogUHJvZHVjdDtcbiAgLyoqIENyZWF0ZSBhIG5ldyBQcm9kdWN0T3B0aW9uIHdpdGhpbiBhIFByb2R1Y3RPcHRpb25Hcm91cCAqL1xuICBjcmVhdGVQcm9kdWN0T3B0aW9uOiBQcm9kdWN0T3B0aW9uO1xuICAvKiogQ3JlYXRlIGEgbmV3IFByb2R1Y3RPcHRpb25Hcm91cCAqL1xuICBjcmVhdGVQcm9kdWN0T3B0aW9uR3JvdXA6IFByb2R1Y3RPcHRpb25Hcm91cDtcbiAgLyoqIENyZWF0ZSBhIHNldCBvZiBQcm9kdWN0VmFyaWFudHMgYmFzZWQgb24gdGhlIE9wdGlvbkdyb3VwcyBhc3NpZ25lZCB0byB0aGUgZ2l2ZW4gUHJvZHVjdCAqL1xuICBjcmVhdGVQcm9kdWN0VmFyaWFudHM6IEFycmF5PE1heWJlPFByb2R1Y3RWYXJpYW50Pj47XG4gIGNyZWF0ZVByb21vdGlvbjogQ3JlYXRlUHJvbW90aW9uUmVzdWx0O1xuICAvKiogQ3JlYXRlIGEgbmV3IFJvbGUgKi9cbiAgY3JlYXRlUm9sZTogUm9sZTtcbiAgLyoqIENyZWF0ZSBhIG5ldyBTaGlwcGluZ01ldGhvZCAqL1xuICBjcmVhdGVTaGlwcGluZ01ldGhvZDogU2hpcHBpbmdNZXRob2Q7XG4gIC8qKiBDcmVhdGUgYSBuZXcgVGFnICovXG4gIGNyZWF0ZVRhZzogVGFnO1xuICAvKiogQ3JlYXRlIGEgbmV3IFRheENhdGVnb3J5ICovXG4gIGNyZWF0ZVRheENhdGVnb3J5OiBUYXhDYXRlZ29yeTtcbiAgLyoqIENyZWF0ZSBhIG5ldyBUYXhSYXRlICovXG4gIGNyZWF0ZVRheFJhdGU6IFRheFJhdGU7XG4gIC8qKiBDcmVhdGUgYSBuZXcgWm9uZSAqL1xuICBjcmVhdGVab25lOiBab25lO1xuICAvKiogRGVsZXRlIGFuIEFkbWluaXN0cmF0b3IgKi9cbiAgZGVsZXRlQWRtaW5pc3RyYXRvcjogRGVsZXRpb25SZXNwb25zZTtcbiAgLyoqIERlbGV0ZSBhbiBBc3NldCAqL1xuICBkZWxldGVBc3NldDogRGVsZXRpb25SZXNwb25zZTtcbiAgLyoqIERlbGV0ZSBtdWx0aXBsZSBBc3NldHMgKi9cbiAgZGVsZXRlQXNzZXRzOiBEZWxldGlvblJlc3BvbnNlO1xuICAvKiogRGVsZXRlIGEgQ2hhbm5lbCAqL1xuICBkZWxldGVDaGFubmVsOiBEZWxldGlvblJlc3BvbnNlO1xuICAvKiogRGVsZXRlIGEgQ29sbGVjdGlvbiBhbmQgYWxsIG9mIGl0cyBkZXNjZW5kYW50cyAqL1xuICBkZWxldGVDb2xsZWN0aW9uOiBEZWxldGlvblJlc3BvbnNlO1xuICAvKiogRGVsZXRlIGEgQ291bnRyeSAqL1xuICBkZWxldGVDb3VudHJ5OiBEZWxldGlvblJlc3BvbnNlO1xuICAvKiogRGVsZXRlIGEgQ3VzdG9tZXIgKi9cbiAgZGVsZXRlQ3VzdG9tZXI6IERlbGV0aW9uUmVzcG9uc2U7XG4gIC8qKiBVcGRhdGUgYW4gZXhpc3RpbmcgQWRkcmVzcyAqL1xuICBkZWxldGVDdXN0b21lckFkZHJlc3M6IFN1Y2Nlc3M7XG4gIC8qKiBEZWxldGUgYSBDdXN0b21lckdyb3VwICovXG4gIGRlbGV0ZUN1c3RvbWVyR3JvdXA6IERlbGV0aW9uUmVzcG9uc2U7XG4gIGRlbGV0ZUN1c3RvbWVyTm90ZTogRGVsZXRpb25SZXNwb25zZTtcbiAgLyoqIERlbGV0ZSBhbiBleGlzdGluZyBGYWNldCAqL1xuICBkZWxldGVGYWNldDogRGVsZXRpb25SZXNwb25zZTtcbiAgLyoqIERlbGV0ZSBvbmUgb3IgbW9yZSBGYWNldFZhbHVlcyAqL1xuICBkZWxldGVGYWNldFZhbHVlczogQXJyYXk8RGVsZXRpb25SZXNwb25zZT47XG4gIGRlbGV0ZU9yZGVyTm90ZTogRGVsZXRpb25SZXNwb25zZTtcbiAgLyoqIERlbGV0ZSBhIFBheW1lbnRNZXRob2QgKi9cbiAgZGVsZXRlUGF5bWVudE1ldGhvZDogRGVsZXRpb25SZXNwb25zZTtcbiAgLyoqIERlbGV0ZSBhIFByb2R1Y3QgKi9cbiAgZGVsZXRlUHJvZHVjdDogRGVsZXRpb25SZXNwb25zZTtcbiAgLyoqIERlbGV0ZSBhIFByb2R1Y3RWYXJpYW50ICovXG4gIGRlbGV0ZVByb2R1Y3RWYXJpYW50OiBEZWxldGlvblJlc3BvbnNlO1xuICBkZWxldGVQcm9tb3Rpb246IERlbGV0aW9uUmVzcG9uc2U7XG4gIC8qKiBEZWxldGUgYW4gZXhpc3RpbmcgUm9sZSAqL1xuICBkZWxldGVSb2xlOiBEZWxldGlvblJlc3BvbnNlO1xuICAvKiogRGVsZXRlIGEgU2hpcHBpbmdNZXRob2QgKi9cbiAgZGVsZXRlU2hpcHBpbmdNZXRob2Q6IERlbGV0aW9uUmVzcG9uc2U7XG4gIC8qKiBEZWxldGUgYW4gZXhpc3RpbmcgVGFnICovXG4gIGRlbGV0ZVRhZzogRGVsZXRpb25SZXNwb25zZTtcbiAgLyoqIERlbGV0ZXMgYSBUYXhDYXRlZ29yeSAqL1xuICBkZWxldGVUYXhDYXRlZ29yeTogRGVsZXRpb25SZXNwb25zZTtcbiAgLyoqIERlbGV0ZSBhIFRheFJhdGUgKi9cbiAgZGVsZXRlVGF4UmF0ZTogRGVsZXRpb25SZXNwb25zZTtcbiAgLyoqIERlbGV0ZSBhIFpvbmUgKi9cbiAgZGVsZXRlWm9uZTogRGVsZXRpb25SZXNwb25zZTtcbiAgaW1wb3J0UHJvZHVjdHM/OiBNYXliZTxJbXBvcnRJbmZvPjtcbiAgLyoqIEF1dGhlbnRpY2F0ZXMgdGhlIHVzZXIgdXNpbmcgdGhlIG5hdGl2ZSBhdXRoZW50aWNhdGlvbiBzdHJhdGVneS4gVGhpcyBtdXRhdGlvbiBpcyBhbiBhbGlhcyBmb3IgYGF1dGhlbnRpY2F0ZSh7IG5hdGl2ZTogeyAuLi4gfX0pYCAqL1xuICBsb2dpbjogTmF0aXZlQXV0aGVudGljYXRpb25SZXN1bHQ7XG4gIGxvZ291dDogU3VjY2VzcztcbiAgLyoqXG4gICAqIEFsbG93cyBhbiBPcmRlciB0byBiZSBtb2RpZmllZCBhZnRlciBpdCBoYXMgYmVlbiBjb21wbGV0ZWQgYnkgdGhlIEN1c3RvbWVyLiBUaGUgT3JkZXIgbXVzdCBmaXJzdFxuICAgKiBiZSBpbiB0aGUgYE1vZGlmeWluZ2Agc3RhdGUuXG4gICAqL1xuICBtb2RpZnlPcmRlcjogTW9kaWZ5T3JkZXJSZXN1bHQ7XG4gIC8qKiBNb3ZlIGEgQ29sbGVjdGlvbiB0byBhIGRpZmZlcmVudCBwYXJlbnQgb3IgaW5kZXggKi9cbiAgbW92ZUNvbGxlY3Rpb246IENvbGxlY3Rpb247XG4gIHJlZnVuZE9yZGVyOiBSZWZ1bmRPcmRlclJlc3VsdDtcbiAgcmVpbmRleDogSm9iO1xuICAvKiogUmVtb3ZlIEN1c3RvbWVycyBmcm9tIGEgQ3VzdG9tZXJHcm91cCAqL1xuICByZW1vdmVDdXN0b21lcnNGcm9tR3JvdXA6IEN1c3RvbWVyR3JvdXA7XG4gIC8qKiBSZW1vdmUgbWVtYmVycyBmcm9tIGEgWm9uZSAqL1xuICByZW1vdmVNZW1iZXJzRnJvbVpvbmU6IFpvbmU7XG4gIC8qKiBSZW1vdmUgYW4gT3B0aW9uR3JvdXAgZnJvbSBhIFByb2R1Y3QgKi9cbiAgcmVtb3ZlT3B0aW9uR3JvdXBGcm9tUHJvZHVjdDogUmVtb3ZlT3B0aW9uR3JvdXBGcm9tUHJvZHVjdFJlc3VsdDtcbiAgLyoqIFJlbW92ZXMgUHJvZHVjdFZhcmlhbnRzIGZyb20gdGhlIHNwZWNpZmllZCBDaGFubmVsICovXG4gIHJlbW92ZVByb2R1Y3RWYXJpYW50c0Zyb21DaGFubmVsOiBBcnJheTxQcm9kdWN0VmFyaWFudD47XG4gIC8qKiBSZW1vdmVzIGFsbCBQcm9kdWN0VmFyaWFudHMgb2YgUHJvZHVjdCBmcm9tIHRoZSBzcGVjaWZpZWQgQ2hhbm5lbCAqL1xuICByZW1vdmVQcm9kdWN0c0Zyb21DaGFubmVsOiBBcnJheTxQcm9kdWN0PjtcbiAgLyoqIFJlbW92ZXMgUHJvbW90aW9ucyBmcm9tIHRoZSBzcGVjaWZpZWQgQ2hhbm5lbCAqL1xuICByZW1vdmVQcm9tb3Rpb25zRnJvbUNoYW5uZWw6IEFycmF5PFByb21vdGlvbj47XG4gIC8qKiBSZW1vdmUgYWxsIHNldHRsZWQgam9icyBpbiB0aGUgZ2l2ZW4gcXVldWVzIG9sZmVyIHRoYW4gdGhlIGdpdmVuIGRhdGUuIFJldHVybnMgdGhlIG51bWJlciBvZiBqb2JzIGRlbGV0ZWQuICovXG4gIHJlbW92ZVNldHRsZWRKb2JzOiBTY2FsYXJzWydJbnQnXTtcbiAgcmVxdWVzdENvbXBsZXRlZDogU2NhbGFyc1snSW50J107XG4gIHJlcXVlc3RTdGFydGVkOiBTY2FsYXJzWydJbnQnXTtcbiAgc2V0QWN0aXZlQ2hhbm5lbDogVXNlclN0YXR1cztcbiAgc2V0QXNMb2dnZWRJbjogVXNlclN0YXR1cztcbiAgc2V0QXNMb2dnZWRPdXQ6IFVzZXJTdGF0dXM7XG4gIHNldE9yZGVyQ3VzdG9tRmllbGRzPzogTWF5YmU8T3JkZXI+O1xuICBzZXRVaUxhbmd1YWdlOiBMYW5ndWFnZUNvZGU7XG4gIHNldFVpVGhlbWU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBzZXR0bGVQYXltZW50OiBTZXR0bGVQYXltZW50UmVzdWx0O1xuICBzZXR0bGVSZWZ1bmQ6IFNldHRsZVJlZnVuZFJlc3VsdDtcbiAgdHJhbnNpdGlvbkZ1bGZpbGxtZW50VG9TdGF0ZTogVHJhbnNpdGlvbkZ1bGZpbGxtZW50VG9TdGF0ZVJlc3VsdDtcbiAgdHJhbnNpdGlvbk9yZGVyVG9TdGF0ZT86IE1heWJlPFRyYW5zaXRpb25PcmRlclRvU3RhdGVSZXN1bHQ+O1xuICB0cmFuc2l0aW9uUGF5bWVudFRvU3RhdGU6IFRyYW5zaXRpb25QYXltZW50VG9TdGF0ZVJlc3VsdDtcbiAgLyoqIFVwZGF0ZSB0aGUgYWN0aXZlIChjdXJyZW50bHkgbG9nZ2VkLWluKSBBZG1pbmlzdHJhdG9yICovXG4gIHVwZGF0ZUFjdGl2ZUFkbWluaXN0cmF0b3I6IEFkbWluaXN0cmF0b3I7XG4gIC8qKiBVcGRhdGUgYW4gZXhpc3RpbmcgQWRtaW5pc3RyYXRvciAqL1xuICB1cGRhdGVBZG1pbmlzdHJhdG9yOiBBZG1pbmlzdHJhdG9yO1xuICAvKiogVXBkYXRlIGFuIGV4aXN0aW5nIEFzc2V0ICovXG4gIHVwZGF0ZUFzc2V0OiBBc3NldDtcbiAgLyoqIFVwZGF0ZSBhbiBleGlzdGluZyBDaGFubmVsICovXG4gIHVwZGF0ZUNoYW5uZWw6IFVwZGF0ZUNoYW5uZWxSZXN1bHQ7XG4gIC8qKiBVcGRhdGUgYW4gZXhpc3RpbmcgQ29sbGVjdGlvbiAqL1xuICB1cGRhdGVDb2xsZWN0aW9uOiBDb2xsZWN0aW9uO1xuICAvKiogVXBkYXRlIGFuIGV4aXN0aW5nIENvdW50cnkgKi9cbiAgdXBkYXRlQ291bnRyeTogQ291bnRyeTtcbiAgLyoqIFVwZGF0ZSBhbiBleGlzdGluZyBDdXN0b21lciAqL1xuICB1cGRhdGVDdXN0b21lcjogVXBkYXRlQ3VzdG9tZXJSZXN1bHQ7XG4gIC8qKiBVcGRhdGUgYW4gZXhpc3RpbmcgQWRkcmVzcyAqL1xuICB1cGRhdGVDdXN0b21lckFkZHJlc3M6IEFkZHJlc3M7XG4gIC8qKiBVcGRhdGUgYW4gZXhpc3RpbmcgQ3VzdG9tZXJHcm91cCAqL1xuICB1cGRhdGVDdXN0b21lckdyb3VwOiBDdXN0b21lckdyb3VwO1xuICB1cGRhdGVDdXN0b21lck5vdGU6IEhpc3RvcnlFbnRyeTtcbiAgLyoqIFVwZGF0ZSBhbiBleGlzdGluZyBGYWNldCAqL1xuICB1cGRhdGVGYWNldDogRmFjZXQ7XG4gIC8qKiBVcGRhdGUgb25lIG9yIG1vcmUgRmFjZXRWYWx1ZXMgKi9cbiAgdXBkYXRlRmFjZXRWYWx1ZXM6IEFycmF5PEZhY2V0VmFsdWU+O1xuICB1cGRhdGVHbG9iYWxTZXR0aW5nczogVXBkYXRlR2xvYmFsU2V0dGluZ3NSZXN1bHQ7XG4gIHVwZGF0ZU9yZGVyTm90ZTogSGlzdG9yeUVudHJ5O1xuICAvKiogVXBkYXRlIGFuIGV4aXN0aW5nIFBheW1lbnRNZXRob2QgKi9cbiAgdXBkYXRlUGF5bWVudE1ldGhvZDogUGF5bWVudE1ldGhvZDtcbiAgLyoqIFVwZGF0ZSBhbiBleGlzdGluZyBQcm9kdWN0ICovXG4gIHVwZGF0ZVByb2R1Y3Q6IFByb2R1Y3Q7XG4gIC8qKiBDcmVhdGUgYSBuZXcgUHJvZHVjdE9wdGlvbiB3aXRoaW4gYSBQcm9kdWN0T3B0aW9uR3JvdXAgKi9cbiAgdXBkYXRlUHJvZHVjdE9wdGlvbjogUHJvZHVjdE9wdGlvbjtcbiAgLyoqIFVwZGF0ZSBhbiBleGlzdGluZyBQcm9kdWN0T3B0aW9uR3JvdXAgKi9cbiAgdXBkYXRlUHJvZHVjdE9wdGlvbkdyb3VwOiBQcm9kdWN0T3B0aW9uR3JvdXA7XG4gIC8qKiBVcGRhdGUgZXhpc3RpbmcgUHJvZHVjdFZhcmlhbnRzICovXG4gIHVwZGF0ZVByb2R1Y3RWYXJpYW50czogQXJyYXk8TWF5YmU8UHJvZHVjdFZhcmlhbnQ+PjtcbiAgdXBkYXRlUHJvbW90aW9uOiBVcGRhdGVQcm9tb3Rpb25SZXN1bHQ7XG4gIC8qKiBVcGRhdGUgYW4gZXhpc3RpbmcgUm9sZSAqL1xuICB1cGRhdGVSb2xlOiBSb2xlO1xuICAvKiogVXBkYXRlIGFuIGV4aXN0aW5nIFNoaXBwaW5nTWV0aG9kICovXG4gIHVwZGF0ZVNoaXBwaW5nTWV0aG9kOiBTaGlwcGluZ01ldGhvZDtcbiAgLyoqIFVwZGF0ZSBhbiBleGlzdGluZyBUYWcgKi9cbiAgdXBkYXRlVGFnOiBUYWc7XG4gIC8qKiBVcGRhdGUgYW4gZXhpc3RpbmcgVGF4Q2F0ZWdvcnkgKi9cbiAgdXBkYXRlVGF4Q2F0ZWdvcnk6IFRheENhdGVnb3J5O1xuICAvKiogVXBkYXRlIGFuIGV4aXN0aW5nIFRheFJhdGUgKi9cbiAgdXBkYXRlVGF4UmF0ZTogVGF4UmF0ZTtcbiAgdXBkYXRlVXNlckNoYW5uZWxzOiBVc2VyU3RhdHVzO1xuICAvKiogVXBkYXRlIGFuIGV4aXN0aW5nIFpvbmUgKi9cbiAgdXBkYXRlWm9uZTogWm9uZTtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25BZGRDdXN0b21lcnNUb0dyb3VwQXJncyA9IHtcbiAgY3VzdG9tZXJHcm91cElkOiBTY2FsYXJzWydJRCddO1xuICBjdXN0b21lcklkczogQXJyYXk8U2NhbGFyc1snSUQnXT47XG59O1xuXG5cbmV4cG9ydCB0eXBlIE11dGF0aW9uQWRkRnVsZmlsbG1lbnRUb09yZGVyQXJncyA9IHtcbiAgaW5wdXQ6IEZ1bGZpbGxPcmRlcklucHV0O1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvbkFkZE1hbnVhbFBheW1lbnRUb09yZGVyQXJncyA9IHtcbiAgaW5wdXQ6IE1hbnVhbFBheW1lbnRJbnB1dDtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25BZGRNZW1iZXJzVG9ab25lQXJncyA9IHtcbiAgem9uZUlkOiBTY2FsYXJzWydJRCddO1xuICBtZW1iZXJJZHM6IEFycmF5PFNjYWxhcnNbJ0lEJ10+O1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvbkFkZE5vdGVUb0N1c3RvbWVyQXJncyA9IHtcbiAgaW5wdXQ6IEFkZE5vdGVUb0N1c3RvbWVySW5wdXQ7XG59O1xuXG5cbmV4cG9ydCB0eXBlIE11dGF0aW9uQWRkTm90ZVRvT3JkZXJBcmdzID0ge1xuICBpbnB1dDogQWRkTm90ZVRvT3JkZXJJbnB1dDtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25BZGRPcHRpb25Hcm91cFRvUHJvZHVjdEFyZ3MgPSB7XG4gIHByb2R1Y3RJZDogU2NhbGFyc1snSUQnXTtcbiAgb3B0aW9uR3JvdXBJZDogU2NhbGFyc1snSUQnXTtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25Bc3NpZ25Bc3NldHNUb0NoYW5uZWxBcmdzID0ge1xuICBpbnB1dDogQXNzaWduQXNzZXRzVG9DaGFubmVsSW5wdXQ7XG59O1xuXG5cbmV4cG9ydCB0eXBlIE11dGF0aW9uQXNzaWduUHJvZHVjdFZhcmlhbnRzVG9DaGFubmVsQXJncyA9IHtcbiAgaW5wdXQ6IEFzc2lnblByb2R1Y3RWYXJpYW50c1RvQ2hhbm5lbElucHV0O1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvbkFzc2lnblByb2R1Y3RzVG9DaGFubmVsQXJncyA9IHtcbiAgaW5wdXQ6IEFzc2lnblByb2R1Y3RzVG9DaGFubmVsSW5wdXQ7XG59O1xuXG5cbmV4cG9ydCB0eXBlIE11dGF0aW9uQXNzaWduUHJvbW90aW9uc1RvQ2hhbm5lbEFyZ3MgPSB7XG4gIGlucHV0OiBBc3NpZ25Qcm9tb3Rpb25zVG9DaGFubmVsSW5wdXQ7XG59O1xuXG5cbmV4cG9ydCB0eXBlIE11dGF0aW9uQXNzaWduUm9sZVRvQWRtaW5pc3RyYXRvckFyZ3MgPSB7XG4gIGFkbWluaXN0cmF0b3JJZDogU2NhbGFyc1snSUQnXTtcbiAgcm9sZUlkOiBTY2FsYXJzWydJRCddO1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvbkF1dGhlbnRpY2F0ZUFyZ3MgPSB7XG4gIGlucHV0OiBBdXRoZW50aWNhdGlvbklucHV0O1xuICByZW1lbWJlck1lPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddPjtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25DYW5jZWxKb2JBcmdzID0ge1xuICBqb2JJZDogU2NhbGFyc1snSUQnXTtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25DYW5jZWxPcmRlckFyZ3MgPSB7XG4gIGlucHV0OiBDYW5jZWxPcmRlcklucHV0O1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvbkNyZWF0ZUFkbWluaXN0cmF0b3JBcmdzID0ge1xuICBpbnB1dDogQ3JlYXRlQWRtaW5pc3RyYXRvcklucHV0O1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvbkNyZWF0ZUFzc2V0c0FyZ3MgPSB7XG4gIGlucHV0OiBBcnJheTxDcmVhdGVBc3NldElucHV0Pjtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25DcmVhdGVDaGFubmVsQXJncyA9IHtcbiAgaW5wdXQ6IENyZWF0ZUNoYW5uZWxJbnB1dDtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25DcmVhdGVDb2xsZWN0aW9uQXJncyA9IHtcbiAgaW5wdXQ6IENyZWF0ZUNvbGxlY3Rpb25JbnB1dDtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25DcmVhdGVDb3VudHJ5QXJncyA9IHtcbiAgaW5wdXQ6IENyZWF0ZUNvdW50cnlJbnB1dDtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25DcmVhdGVDdXN0b21lckFyZ3MgPSB7XG4gIGlucHV0OiBDcmVhdGVDdXN0b21lcklucHV0O1xuICBwYXNzd29yZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25DcmVhdGVDdXN0b21lckFkZHJlc3NBcmdzID0ge1xuICBjdXN0b21lcklkOiBTY2FsYXJzWydJRCddO1xuICBpbnB1dDogQ3JlYXRlQWRkcmVzc0lucHV0O1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvbkNyZWF0ZUN1c3RvbWVyR3JvdXBBcmdzID0ge1xuICBpbnB1dDogQ3JlYXRlQ3VzdG9tZXJHcm91cElucHV0O1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvbkNyZWF0ZUZhY2V0QXJncyA9IHtcbiAgaW5wdXQ6IENyZWF0ZUZhY2V0SW5wdXQ7XG59O1xuXG5cbmV4cG9ydCB0eXBlIE11dGF0aW9uQ3JlYXRlRmFjZXRWYWx1ZXNBcmdzID0ge1xuICBpbnB1dDogQXJyYXk8Q3JlYXRlRmFjZXRWYWx1ZUlucHV0Pjtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25DcmVhdGVQYXltZW50TWV0aG9kQXJncyA9IHtcbiAgaW5wdXQ6IENyZWF0ZVBheW1lbnRNZXRob2RJbnB1dDtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25DcmVhdGVQcm9kdWN0QXJncyA9IHtcbiAgaW5wdXQ6IENyZWF0ZVByb2R1Y3RJbnB1dDtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25DcmVhdGVQcm9kdWN0T3B0aW9uQXJncyA9IHtcbiAgaW5wdXQ6IENyZWF0ZVByb2R1Y3RPcHRpb25JbnB1dDtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25DcmVhdGVQcm9kdWN0T3B0aW9uR3JvdXBBcmdzID0ge1xuICBpbnB1dDogQ3JlYXRlUHJvZHVjdE9wdGlvbkdyb3VwSW5wdXQ7XG59O1xuXG5cbmV4cG9ydCB0eXBlIE11dGF0aW9uQ3JlYXRlUHJvZHVjdFZhcmlhbnRzQXJncyA9IHtcbiAgaW5wdXQ6IEFycmF5PENyZWF0ZVByb2R1Y3RWYXJpYW50SW5wdXQ+O1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvbkNyZWF0ZVByb21vdGlvbkFyZ3MgPSB7XG4gIGlucHV0OiBDcmVhdGVQcm9tb3Rpb25JbnB1dDtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25DcmVhdGVSb2xlQXJncyA9IHtcbiAgaW5wdXQ6IENyZWF0ZVJvbGVJbnB1dDtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25DcmVhdGVTaGlwcGluZ01ldGhvZEFyZ3MgPSB7XG4gIGlucHV0OiBDcmVhdGVTaGlwcGluZ01ldGhvZElucHV0O1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvbkNyZWF0ZVRhZ0FyZ3MgPSB7XG4gIGlucHV0OiBDcmVhdGVUYWdJbnB1dDtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25DcmVhdGVUYXhDYXRlZ29yeUFyZ3MgPSB7XG4gIGlucHV0OiBDcmVhdGVUYXhDYXRlZ29yeUlucHV0O1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvbkNyZWF0ZVRheFJhdGVBcmdzID0ge1xuICBpbnB1dDogQ3JlYXRlVGF4UmF0ZUlucHV0O1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvbkNyZWF0ZVpvbmVBcmdzID0ge1xuICBpbnB1dDogQ3JlYXRlWm9uZUlucHV0O1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvbkRlbGV0ZUFkbWluaXN0cmF0b3JBcmdzID0ge1xuICBpZDogU2NhbGFyc1snSUQnXTtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25EZWxldGVBc3NldEFyZ3MgPSB7XG4gIGlucHV0OiBEZWxldGVBc3NldElucHV0O1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvbkRlbGV0ZUFzc2V0c0FyZ3MgPSB7XG4gIGlucHV0OiBEZWxldGVBc3NldHNJbnB1dDtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25EZWxldGVDaGFubmVsQXJncyA9IHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG59O1xuXG5cbmV4cG9ydCB0eXBlIE11dGF0aW9uRGVsZXRlQ29sbGVjdGlvbkFyZ3MgPSB7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvbkRlbGV0ZUNvdW50cnlBcmdzID0ge1xuICBpZDogU2NhbGFyc1snSUQnXTtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25EZWxldGVDdXN0b21lckFyZ3MgPSB7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvbkRlbGV0ZUN1c3RvbWVyQWRkcmVzc0FyZ3MgPSB7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvbkRlbGV0ZUN1c3RvbWVyR3JvdXBBcmdzID0ge1xuICBpZDogU2NhbGFyc1snSUQnXTtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25EZWxldGVDdXN0b21lck5vdGVBcmdzID0ge1xuICBpZDogU2NhbGFyc1snSUQnXTtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25EZWxldGVGYWNldEFyZ3MgPSB7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xuICBmb3JjZT86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXT47XG59O1xuXG5cbmV4cG9ydCB0eXBlIE11dGF0aW9uRGVsZXRlRmFjZXRWYWx1ZXNBcmdzID0ge1xuICBpZHM6IEFycmF5PFNjYWxhcnNbJ0lEJ10+O1xuICBmb3JjZT86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXT47XG59O1xuXG5cbmV4cG9ydCB0eXBlIE11dGF0aW9uRGVsZXRlT3JkZXJOb3RlQXJncyA9IHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG59O1xuXG5cbmV4cG9ydCB0eXBlIE11dGF0aW9uRGVsZXRlUGF5bWVudE1ldGhvZEFyZ3MgPSB7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xuICBmb3JjZT86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXT47XG59O1xuXG5cbmV4cG9ydCB0eXBlIE11dGF0aW9uRGVsZXRlUHJvZHVjdEFyZ3MgPSB7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvbkRlbGV0ZVByb2R1Y3RWYXJpYW50QXJncyA9IHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG59O1xuXG5cbmV4cG9ydCB0eXBlIE11dGF0aW9uRGVsZXRlUHJvbW90aW9uQXJncyA9IHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG59O1xuXG5cbmV4cG9ydCB0eXBlIE11dGF0aW9uRGVsZXRlUm9sZUFyZ3MgPSB7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvbkRlbGV0ZVNoaXBwaW5nTWV0aG9kQXJncyA9IHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG59O1xuXG5cbmV4cG9ydCB0eXBlIE11dGF0aW9uRGVsZXRlVGFnQXJncyA9IHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG59O1xuXG5cbmV4cG9ydCB0eXBlIE11dGF0aW9uRGVsZXRlVGF4Q2F0ZWdvcnlBcmdzID0ge1xuICBpZDogU2NhbGFyc1snSUQnXTtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25EZWxldGVUYXhSYXRlQXJncyA9IHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG59O1xuXG5cbmV4cG9ydCB0eXBlIE11dGF0aW9uRGVsZXRlWm9uZUFyZ3MgPSB7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvbkltcG9ydFByb2R1Y3RzQXJncyA9IHtcbiAgY3N2RmlsZTogU2NhbGFyc1snVXBsb2FkJ107XG59O1xuXG5cbmV4cG9ydCB0eXBlIE11dGF0aW9uTG9naW5BcmdzID0ge1xuICB1c2VybmFtZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIHBhc3N3b3JkOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgcmVtZW1iZXJNZT86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXT47XG59O1xuXG5cbmV4cG9ydCB0eXBlIE11dGF0aW9uTW9kaWZ5T3JkZXJBcmdzID0ge1xuICBpbnB1dDogTW9kaWZ5T3JkZXJJbnB1dDtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25Nb3ZlQ29sbGVjdGlvbkFyZ3MgPSB7XG4gIGlucHV0OiBNb3ZlQ29sbGVjdGlvbklucHV0O1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvblJlZnVuZE9yZGVyQXJncyA9IHtcbiAgaW5wdXQ6IFJlZnVuZE9yZGVySW5wdXQ7XG59O1xuXG5cbmV4cG9ydCB0eXBlIE11dGF0aW9uUmVtb3ZlQ3VzdG9tZXJzRnJvbUdyb3VwQXJncyA9IHtcbiAgY3VzdG9tZXJHcm91cElkOiBTY2FsYXJzWydJRCddO1xuICBjdXN0b21lcklkczogQXJyYXk8U2NhbGFyc1snSUQnXT47XG59O1xuXG5cbmV4cG9ydCB0eXBlIE11dGF0aW9uUmVtb3ZlTWVtYmVyc0Zyb21ab25lQXJncyA9IHtcbiAgem9uZUlkOiBTY2FsYXJzWydJRCddO1xuICBtZW1iZXJJZHM6IEFycmF5PFNjYWxhcnNbJ0lEJ10+O1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvblJlbW92ZU9wdGlvbkdyb3VwRnJvbVByb2R1Y3RBcmdzID0ge1xuICBwcm9kdWN0SWQ6IFNjYWxhcnNbJ0lEJ107XG4gIG9wdGlvbkdyb3VwSWQ6IFNjYWxhcnNbJ0lEJ107XG59O1xuXG5cbmV4cG9ydCB0eXBlIE11dGF0aW9uUmVtb3ZlUHJvZHVjdFZhcmlhbnRzRnJvbUNoYW5uZWxBcmdzID0ge1xuICBpbnB1dDogUmVtb3ZlUHJvZHVjdFZhcmlhbnRzRnJvbUNoYW5uZWxJbnB1dDtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25SZW1vdmVQcm9kdWN0c0Zyb21DaGFubmVsQXJncyA9IHtcbiAgaW5wdXQ6IFJlbW92ZVByb2R1Y3RzRnJvbUNoYW5uZWxJbnB1dDtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25SZW1vdmVQcm9tb3Rpb25zRnJvbUNoYW5uZWxBcmdzID0ge1xuICBpbnB1dDogUmVtb3ZlUHJvbW90aW9uc0Zyb21DaGFubmVsSW5wdXQ7XG59O1xuXG5cbmV4cG9ydCB0eXBlIE11dGF0aW9uUmVtb3ZlU2V0dGxlZEpvYnNBcmdzID0ge1xuICBxdWV1ZU5hbWVzPzogTWF5YmU8QXJyYXk8U2NhbGFyc1snU3RyaW5nJ10+PjtcbiAgb2xkZXJUaGFuPzogTWF5YmU8U2NhbGFyc1snRGF0ZVRpbWUnXT47XG59O1xuXG5cbmV4cG9ydCB0eXBlIE11dGF0aW9uU2V0QWN0aXZlQ2hhbm5lbEFyZ3MgPSB7XG4gIGNoYW5uZWxJZDogU2NhbGFyc1snSUQnXTtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25TZXRBc0xvZ2dlZEluQXJncyA9IHtcbiAgaW5wdXQ6IFVzZXJTdGF0dXNJbnB1dDtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25TZXRPcmRlckN1c3RvbUZpZWxkc0FyZ3MgPSB7XG4gIGlucHV0OiBVcGRhdGVPcmRlcklucHV0O1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvblNldFVpTGFuZ3VhZ2VBcmdzID0ge1xuICBsYW5ndWFnZUNvZGU6IExhbmd1YWdlQ29kZTtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25TZXRVaVRoZW1lQXJncyA9IHtcbiAgdGhlbWU6IFNjYWxhcnNbJ1N0cmluZyddO1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvblNldHRsZVBheW1lbnRBcmdzID0ge1xuICBpZDogU2NhbGFyc1snSUQnXTtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25TZXR0bGVSZWZ1bmRBcmdzID0ge1xuICBpbnB1dDogU2V0dGxlUmVmdW5kSW5wdXQ7XG59O1xuXG5cbmV4cG9ydCB0eXBlIE11dGF0aW9uVHJhbnNpdGlvbkZ1bGZpbGxtZW50VG9TdGF0ZUFyZ3MgPSB7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xuICBzdGF0ZTogU2NhbGFyc1snU3RyaW5nJ107XG59O1xuXG5cbmV4cG9ydCB0eXBlIE11dGF0aW9uVHJhbnNpdGlvbk9yZGVyVG9TdGF0ZUFyZ3MgPSB7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xuICBzdGF0ZTogU2NhbGFyc1snU3RyaW5nJ107XG59O1xuXG5cbmV4cG9ydCB0eXBlIE11dGF0aW9uVHJhbnNpdGlvblBheW1lbnRUb1N0YXRlQXJncyA9IHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIHN0YXRlOiBTY2FsYXJzWydTdHJpbmcnXTtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25VcGRhdGVBY3RpdmVBZG1pbmlzdHJhdG9yQXJncyA9IHtcbiAgaW5wdXQ6IFVwZGF0ZUFjdGl2ZUFkbWluaXN0cmF0b3JJbnB1dDtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25VcGRhdGVBZG1pbmlzdHJhdG9yQXJncyA9IHtcbiAgaW5wdXQ6IFVwZGF0ZUFkbWluaXN0cmF0b3JJbnB1dDtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25VcGRhdGVBc3NldEFyZ3MgPSB7XG4gIGlucHV0OiBVcGRhdGVBc3NldElucHV0O1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvblVwZGF0ZUNoYW5uZWxBcmdzID0ge1xuICBpbnB1dDogVXBkYXRlQ2hhbm5lbElucHV0O1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvblVwZGF0ZUNvbGxlY3Rpb25BcmdzID0ge1xuICBpbnB1dDogVXBkYXRlQ29sbGVjdGlvbklucHV0O1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvblVwZGF0ZUNvdW50cnlBcmdzID0ge1xuICBpbnB1dDogVXBkYXRlQ291bnRyeUlucHV0O1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvblVwZGF0ZUN1c3RvbWVyQXJncyA9IHtcbiAgaW5wdXQ6IFVwZGF0ZUN1c3RvbWVySW5wdXQ7XG59O1xuXG5cbmV4cG9ydCB0eXBlIE11dGF0aW9uVXBkYXRlQ3VzdG9tZXJBZGRyZXNzQXJncyA9IHtcbiAgaW5wdXQ6IFVwZGF0ZUFkZHJlc3NJbnB1dDtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25VcGRhdGVDdXN0b21lckdyb3VwQXJncyA9IHtcbiAgaW5wdXQ6IFVwZGF0ZUN1c3RvbWVyR3JvdXBJbnB1dDtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25VcGRhdGVDdXN0b21lck5vdGVBcmdzID0ge1xuICBpbnB1dDogVXBkYXRlQ3VzdG9tZXJOb3RlSW5wdXQ7XG59O1xuXG5cbmV4cG9ydCB0eXBlIE11dGF0aW9uVXBkYXRlRmFjZXRBcmdzID0ge1xuICBpbnB1dDogVXBkYXRlRmFjZXRJbnB1dDtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25VcGRhdGVGYWNldFZhbHVlc0FyZ3MgPSB7XG4gIGlucHV0OiBBcnJheTxVcGRhdGVGYWNldFZhbHVlSW5wdXQ+O1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvblVwZGF0ZUdsb2JhbFNldHRpbmdzQXJncyA9IHtcbiAgaW5wdXQ6IFVwZGF0ZUdsb2JhbFNldHRpbmdzSW5wdXQ7XG59O1xuXG5cbmV4cG9ydCB0eXBlIE11dGF0aW9uVXBkYXRlT3JkZXJOb3RlQXJncyA9IHtcbiAgaW5wdXQ6IFVwZGF0ZU9yZGVyTm90ZUlucHV0O1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvblVwZGF0ZVBheW1lbnRNZXRob2RBcmdzID0ge1xuICBpbnB1dDogVXBkYXRlUGF5bWVudE1ldGhvZElucHV0O1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvblVwZGF0ZVByb2R1Y3RBcmdzID0ge1xuICBpbnB1dDogVXBkYXRlUHJvZHVjdElucHV0O1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvblVwZGF0ZVByb2R1Y3RPcHRpb25BcmdzID0ge1xuICBpbnB1dDogVXBkYXRlUHJvZHVjdE9wdGlvbklucHV0O1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvblVwZGF0ZVByb2R1Y3RPcHRpb25Hcm91cEFyZ3MgPSB7XG4gIGlucHV0OiBVcGRhdGVQcm9kdWN0T3B0aW9uR3JvdXBJbnB1dDtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25VcGRhdGVQcm9kdWN0VmFyaWFudHNBcmdzID0ge1xuICBpbnB1dDogQXJyYXk8VXBkYXRlUHJvZHVjdFZhcmlhbnRJbnB1dD47XG59O1xuXG5cbmV4cG9ydCB0eXBlIE11dGF0aW9uVXBkYXRlUHJvbW90aW9uQXJncyA9IHtcbiAgaW5wdXQ6IFVwZGF0ZVByb21vdGlvbklucHV0O1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvblVwZGF0ZVJvbGVBcmdzID0ge1xuICBpbnB1dDogVXBkYXRlUm9sZUlucHV0O1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvblVwZGF0ZVNoaXBwaW5nTWV0aG9kQXJncyA9IHtcbiAgaW5wdXQ6IFVwZGF0ZVNoaXBwaW5nTWV0aG9kSW5wdXQ7XG59O1xuXG5cbmV4cG9ydCB0eXBlIE11dGF0aW9uVXBkYXRlVGFnQXJncyA9IHtcbiAgaW5wdXQ6IFVwZGF0ZVRhZ0lucHV0O1xufTtcblxuXG5leHBvcnQgdHlwZSBNdXRhdGlvblVwZGF0ZVRheENhdGVnb3J5QXJncyA9IHtcbiAgaW5wdXQ6IFVwZGF0ZVRheENhdGVnb3J5SW5wdXQ7XG59O1xuXG5cbmV4cG9ydCB0eXBlIE11dGF0aW9uVXBkYXRlVGF4UmF0ZUFyZ3MgPSB7XG4gIGlucHV0OiBVcGRhdGVUYXhSYXRlSW5wdXQ7XG59O1xuXG5cbmV4cG9ydCB0eXBlIE11dGF0aW9uVXBkYXRlVXNlckNoYW5uZWxzQXJncyA9IHtcbiAgY2hhbm5lbHM6IEFycmF5PEN1cnJlbnRVc2VyQ2hhbm5lbElucHV0Pjtcbn07XG5cblxuZXhwb3J0IHR5cGUgTXV0YXRpb25VcGRhdGVab25lQXJncyA9IHtcbiAgaW5wdXQ6IFVwZGF0ZVpvbmVJbnB1dDtcbn07XG5cbmV4cG9ydCB0eXBlIENyZWF0ZUFkbWluaXN0cmF0b3JJbnB1dCA9IHtcbiAgZmlyc3ROYW1lOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgbGFzdE5hbWU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBlbWFpbEFkZHJlc3M6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBwYXNzd29yZDogU2NhbGFyc1snU3RyaW5nJ107XG4gIHJvbGVJZHM6IEFycmF5PFNjYWxhcnNbJ0lEJ10+O1xuICBjdXN0b21GaWVsZHM/OiBNYXliZTxTY2FsYXJzWydKU09OJ10+O1xufTtcblxuZXhwb3J0IHR5cGUgVXBkYXRlQWRtaW5pc3RyYXRvcklucHV0ID0ge1xuICBpZDogU2NhbGFyc1snSUQnXTtcbiAgZmlyc3ROYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBsYXN0TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgZW1haWxBZGRyZXNzPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBwYXNzd29yZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgcm9sZUlkcz86IE1heWJlPEFycmF5PFNjYWxhcnNbJ0lEJ10+PjtcbiAgY3VzdG9tRmllbGRzPzogTWF5YmU8U2NhbGFyc1snSlNPTiddPjtcbn07XG5cbmV4cG9ydCB0eXBlIFVwZGF0ZUFjdGl2ZUFkbWluaXN0cmF0b3JJbnB1dCA9IHtcbiAgZmlyc3ROYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBsYXN0TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgZW1haWxBZGRyZXNzPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBwYXNzd29yZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgY3VzdG9tRmllbGRzPzogTWF5YmU8U2NhbGFyc1snSlNPTiddPjtcbn07XG5cbmV4cG9ydCB0eXBlIEFkbWluaXN0cmF0b3IgPSBOb2RlICYge1xuICBfX3R5cGVuYW1lPzogJ0FkbWluaXN0cmF0b3InO1xuICBpZDogU2NhbGFyc1snSUQnXTtcbiAgY3JlYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICB1cGRhdGVkQXQ6IFNjYWxhcnNbJ0RhdGVUaW1lJ107XG4gIGZpcnN0TmFtZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIGxhc3ROYW1lOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgZW1haWxBZGRyZXNzOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgdXNlcjogVXNlcjtcbiAgY3VzdG9tRmllbGRzPzogTWF5YmU8U2NhbGFyc1snSlNPTiddPjtcbn07XG5cbmV4cG9ydCB0eXBlIEFkbWluaXN0cmF0b3JMaXN0ID0gUGFnaW5hdGVkTGlzdCAmIHtcbiAgX190eXBlbmFtZT86ICdBZG1pbmlzdHJhdG9yTGlzdCc7XG4gIGl0ZW1zOiBBcnJheTxBZG1pbmlzdHJhdG9yPjtcbiAgdG90YWxJdGVtczogU2NhbGFyc1snSW50J107XG59O1xuXG5leHBvcnQgdHlwZSBBc3NldCA9IE5vZGUgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQXNzZXQnO1xuICB0YWdzOiBBcnJheTxUYWc+O1xuICBpZDogU2NhbGFyc1snSUQnXTtcbiAgY3JlYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICB1cGRhdGVkQXQ6IFNjYWxhcnNbJ0RhdGVUaW1lJ107XG4gIG5hbWU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICB0eXBlOiBBc3NldFR5cGU7XG4gIGZpbGVTaXplOiBTY2FsYXJzWydJbnQnXTtcbiAgbWltZVR5cGU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICB3aWR0aDogU2NhbGFyc1snSW50J107XG4gIGhlaWdodDogU2NhbGFyc1snSW50J107XG4gIHNvdXJjZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIHByZXZpZXc6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBmb2NhbFBvaW50PzogTWF5YmU8Q29vcmRpbmF0ZT47XG4gIGN1c3RvbUZpZWxkcz86IE1heWJlPFNjYWxhcnNbJ0pTT04nXT47XG59O1xuXG5leHBvcnQgdHlwZSBNaW1lVHlwZUVycm9yID0gRXJyb3JSZXN1bHQgJiB7XG4gIF9fdHlwZW5hbWU/OiAnTWltZVR5cGVFcnJvcic7XG4gIGVycm9yQ29kZTogRXJyb3JDb2RlO1xuICBtZXNzYWdlOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgZmlsZU5hbWU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBtaW1lVHlwZTogU2NhbGFyc1snU3RyaW5nJ107XG59O1xuXG5leHBvcnQgdHlwZSBDcmVhdGVBc3NldFJlc3VsdCA9IEFzc2V0IHwgTWltZVR5cGVFcnJvcjtcblxuZXhwb3J0IHR5cGUgQXNzZXRMaXN0T3B0aW9ucyA9IHtcbiAgc2tpcD86IE1heWJlPFNjYWxhcnNbJ0ludCddPjtcbiAgdGFrZT86IE1heWJlPFNjYWxhcnNbJ0ludCddPjtcbiAgc29ydD86IE1heWJlPEFzc2V0U29ydFBhcmFtZXRlcj47XG4gIGZpbHRlcj86IE1heWJlPEFzc2V0RmlsdGVyUGFyYW1ldGVyPjtcbiAgdGFncz86IE1heWJlPEFycmF5PFNjYWxhcnNbJ1N0cmluZyddPj47XG4gIHRhZ3NPcGVyYXRvcj86IE1heWJlPExvZ2ljYWxPcGVyYXRvcj47XG59O1xuXG5leHBvcnQgdHlwZSBDcmVhdGVBc3NldElucHV0ID0ge1xuICBmaWxlOiBTY2FsYXJzWydVcGxvYWQnXTtcbiAgdGFncz86IE1heWJlPEFycmF5PFNjYWxhcnNbJ1N0cmluZyddPj47XG4gIGN1c3RvbUZpZWxkcz86IE1heWJlPFNjYWxhcnNbJ0pTT04nXT47XG59O1xuXG5leHBvcnQgdHlwZSBDb29yZGluYXRlSW5wdXQgPSB7XG4gIHg6IFNjYWxhcnNbJ0Zsb2F0J107XG4gIHk6IFNjYWxhcnNbJ0Zsb2F0J107XG59O1xuXG5leHBvcnQgdHlwZSBEZWxldGVBc3NldElucHV0ID0ge1xuICBhc3NldElkOiBTY2FsYXJzWydJRCddO1xuICBmb3JjZT86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXT47XG4gIGRlbGV0ZUZyb21BbGxDaGFubmVscz86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXT47XG59O1xuXG5leHBvcnQgdHlwZSBEZWxldGVBc3NldHNJbnB1dCA9IHtcbiAgYXNzZXRJZHM6IEFycmF5PFNjYWxhcnNbJ0lEJ10+O1xuICBmb3JjZT86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXT47XG4gIGRlbGV0ZUZyb21BbGxDaGFubmVscz86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXT47XG59O1xuXG5leHBvcnQgdHlwZSBVcGRhdGVBc3NldElucHV0ID0ge1xuICBpZDogU2NhbGFyc1snSUQnXTtcbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgZm9jYWxQb2ludD86IE1heWJlPENvb3JkaW5hdGVJbnB1dD47XG4gIHRhZ3M/OiBNYXliZTxBcnJheTxTY2FsYXJzWydTdHJpbmcnXT4+O1xuICBjdXN0b21GaWVsZHM/OiBNYXliZTxTY2FsYXJzWydKU09OJ10+O1xufTtcblxuZXhwb3J0IHR5cGUgQXNzaWduQXNzZXRzVG9DaGFubmVsSW5wdXQgPSB7XG4gIGFzc2V0SWRzOiBBcnJheTxTY2FsYXJzWydJRCddPjtcbiAgY2hhbm5lbElkOiBTY2FsYXJzWydJRCddO1xufTtcblxuZXhwb3J0IHR5cGUgTmF0aXZlQXV0aGVudGljYXRpb25SZXN1bHQgPSBDdXJyZW50VXNlciB8IEludmFsaWRDcmVkZW50aWFsc0Vycm9yIHwgTmF0aXZlQXV0aFN0cmF0ZWd5RXJyb3I7XG5cbmV4cG9ydCB0eXBlIEF1dGhlbnRpY2F0aW9uUmVzdWx0ID0gQ3VycmVudFVzZXIgfCBJbnZhbGlkQ3JlZGVudGlhbHNFcnJvcjtcblxuZXhwb3J0IHR5cGUgQ3JlYXRlQ2hhbm5lbElucHV0ID0ge1xuICBjb2RlOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgdG9rZW46IFNjYWxhcnNbJ1N0cmluZyddO1xuICBkZWZhdWx0TGFuZ3VhZ2VDb2RlOiBMYW5ndWFnZUNvZGU7XG4gIHByaWNlc0luY2x1ZGVUYXg6IFNjYWxhcnNbJ0Jvb2xlYW4nXTtcbiAgY3VycmVuY3lDb2RlOiBDdXJyZW5jeUNvZGU7XG4gIGRlZmF1bHRUYXhab25lSWQ6IFNjYWxhcnNbJ0lEJ107XG4gIGRlZmF1bHRTaGlwcGluZ1pvbmVJZDogU2NhbGFyc1snSUQnXTtcbiAgY3VzdG9tRmllbGRzPzogTWF5YmU8U2NhbGFyc1snSlNPTiddPjtcbn07XG5cbmV4cG9ydCB0eXBlIFVwZGF0ZUNoYW5uZWxJbnB1dCA9IHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIGNvZGU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIHRva2VuPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBkZWZhdWx0TGFuZ3VhZ2VDb2RlPzogTWF5YmU8TGFuZ3VhZ2VDb2RlPjtcbiAgcHJpY2VzSW5jbHVkZVRheD86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXT47XG4gIGN1cnJlbmN5Q29kZT86IE1heWJlPEN1cnJlbmN5Q29kZT47XG4gIGRlZmF1bHRUYXhab25lSWQ/OiBNYXliZTxTY2FsYXJzWydJRCddPjtcbiAgZGVmYXVsdFNoaXBwaW5nWm9uZUlkPzogTWF5YmU8U2NhbGFyc1snSUQnXT47XG4gIGN1c3RvbUZpZWxkcz86IE1heWJlPFNjYWxhcnNbJ0pTT04nXT47XG59O1xuXG4vKiogUmV0dXJuZWQgaWYgYXR0ZW1wdGluZyB0byBzZXQgYSBDaGFubmVsJ3MgZGVmYXVsdExhbmd1YWdlQ29kZSB0byBhIGxhbmd1YWdlIHdoaWNoIGlzIG5vdCBlbmFibGVkIGluIEdsb2JhbFNldHRpbmdzICovXG5leHBvcnQgdHlwZSBMYW5ndWFnZU5vdEF2YWlsYWJsZUVycm9yID0gRXJyb3JSZXN1bHQgJiB7XG4gIF9fdHlwZW5hbWU/OiAnTGFuZ3VhZ2VOb3RBdmFpbGFibGVFcnJvcic7XG4gIGVycm9yQ29kZTogRXJyb3JDb2RlO1xuICBtZXNzYWdlOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgbGFuZ3VhZ2VDb2RlOiBTY2FsYXJzWydTdHJpbmcnXTtcbn07XG5cbmV4cG9ydCB0eXBlIENyZWF0ZUNoYW5uZWxSZXN1bHQgPSBDaGFubmVsIHwgTGFuZ3VhZ2VOb3RBdmFpbGFibGVFcnJvcjtcblxuZXhwb3J0IHR5cGUgVXBkYXRlQ2hhbm5lbFJlc3VsdCA9IENoYW5uZWwgfCBMYW5ndWFnZU5vdEF2YWlsYWJsZUVycm9yO1xuXG5leHBvcnQgdHlwZSBDb2xsZWN0aW9uID0gTm9kZSAmIHtcbiAgX190eXBlbmFtZT86ICdDb2xsZWN0aW9uJztcbiAgaXNQcml2YXRlOiBTY2FsYXJzWydCb29sZWFuJ107XG4gIGlkOiBTY2FsYXJzWydJRCddO1xuICBjcmVhdGVkQXQ6IFNjYWxhcnNbJ0RhdGVUaW1lJ107XG4gIHVwZGF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgbGFuZ3VhZ2VDb2RlPzogTWF5YmU8TGFuZ3VhZ2VDb2RlPjtcbiAgbmFtZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIHNsdWc6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBicmVhZGNydW1iczogQXJyYXk8Q29sbGVjdGlvbkJyZWFkY3J1bWI+O1xuICBwb3NpdGlvbjogU2NhbGFyc1snSW50J107XG4gIGRlc2NyaXB0aW9uOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgZmVhdHVyZWRBc3NldD86IE1heWJlPEFzc2V0PjtcbiAgYXNzZXRzOiBBcnJheTxBc3NldD47XG4gIHBhcmVudD86IE1heWJlPENvbGxlY3Rpb24+O1xuICBjaGlsZHJlbj86IE1heWJlPEFycmF5PENvbGxlY3Rpb24+PjtcbiAgZmlsdGVyczogQXJyYXk8Q29uZmlndXJhYmxlT3BlcmF0aW9uPjtcbiAgdHJhbnNsYXRpb25zOiBBcnJheTxDb2xsZWN0aW9uVHJhbnNsYXRpb24+O1xuICBwcm9kdWN0VmFyaWFudHM6IFByb2R1Y3RWYXJpYW50TGlzdDtcbiAgY3VzdG9tRmllbGRzPzogTWF5YmU8U2NhbGFyc1snSlNPTiddPjtcbn07XG5cblxuZXhwb3J0IHR5cGUgQ29sbGVjdGlvblByb2R1Y3RWYXJpYW50c0FyZ3MgPSB7XG4gIG9wdGlvbnM/OiBNYXliZTxQcm9kdWN0VmFyaWFudExpc3RPcHRpb25zPjtcbn07XG5cbmV4cG9ydCB0eXBlIE1vdmVDb2xsZWN0aW9uSW5wdXQgPSB7XG4gIGNvbGxlY3Rpb25JZDogU2NhbGFyc1snSUQnXTtcbiAgcGFyZW50SWQ6IFNjYWxhcnNbJ0lEJ107XG4gIGluZGV4OiBTY2FsYXJzWydJbnQnXTtcbn07XG5cbmV4cG9ydCB0eXBlIENyZWF0ZUNvbGxlY3Rpb25UcmFuc2xhdGlvbklucHV0ID0ge1xuICBsYW5ndWFnZUNvZGU6IExhbmd1YWdlQ29kZTtcbiAgbmFtZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIHNsdWc6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBkZXNjcmlwdGlvbjogU2NhbGFyc1snU3RyaW5nJ107XG4gIGN1c3RvbUZpZWxkcz86IE1heWJlPFNjYWxhcnNbJ0pTT04nXT47XG59O1xuXG5leHBvcnQgdHlwZSBVcGRhdGVDb2xsZWN0aW9uVHJhbnNsYXRpb25JbnB1dCA9IHtcbiAgaWQ/OiBNYXliZTxTY2FsYXJzWydJRCddPjtcbiAgbGFuZ3VhZ2VDb2RlOiBMYW5ndWFnZUNvZGU7XG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIHNsdWc/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIGRlc2NyaXB0aW9uPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBjdXN0b21GaWVsZHM/OiBNYXliZTxTY2FsYXJzWydKU09OJ10+O1xufTtcblxuZXhwb3J0IHR5cGUgQ3JlYXRlQ29sbGVjdGlvbklucHV0ID0ge1xuICBpc1ByaXZhdGU/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ10+O1xuICBmZWF0dXJlZEFzc2V0SWQ/OiBNYXliZTxTY2FsYXJzWydJRCddPjtcbiAgYXNzZXRJZHM/OiBNYXliZTxBcnJheTxTY2FsYXJzWydJRCddPj47XG4gIHBhcmVudElkPzogTWF5YmU8U2NhbGFyc1snSUQnXT47XG4gIGZpbHRlcnM6IEFycmF5PENvbmZpZ3VyYWJsZU9wZXJhdGlvbklucHV0PjtcbiAgdHJhbnNsYXRpb25zOiBBcnJheTxDcmVhdGVDb2xsZWN0aW9uVHJhbnNsYXRpb25JbnB1dD47XG4gIGN1c3RvbUZpZWxkcz86IE1heWJlPFNjYWxhcnNbJ0pTT04nXT47XG59O1xuXG5leHBvcnQgdHlwZSBVcGRhdGVDb2xsZWN0aW9uSW5wdXQgPSB7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xuICBpc1ByaXZhdGU/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ10+O1xuICBmZWF0dXJlZEFzc2V0SWQ/OiBNYXliZTxTY2FsYXJzWydJRCddPjtcbiAgcGFyZW50SWQ/OiBNYXliZTxTY2FsYXJzWydJRCddPjtcbiAgYXNzZXRJZHM/OiBNYXliZTxBcnJheTxTY2FsYXJzWydJRCddPj47XG4gIGZpbHRlcnM/OiBNYXliZTxBcnJheTxDb25maWd1cmFibGVPcGVyYXRpb25JbnB1dD4+O1xuICB0cmFuc2xhdGlvbnM/OiBNYXliZTxBcnJheTxVcGRhdGVDb2xsZWN0aW9uVHJhbnNsYXRpb25JbnB1dD4+O1xuICBjdXN0b21GaWVsZHM/OiBNYXliZTxTY2FsYXJzWydKU09OJ10+O1xufTtcblxuZXhwb3J0IHR5cGUgQ291bnRyeVRyYW5zbGF0aW9uSW5wdXQgPSB7XG4gIGlkPzogTWF5YmU8U2NhbGFyc1snSUQnXT47XG4gIGxhbmd1YWdlQ29kZTogTGFuZ3VhZ2VDb2RlO1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xufTtcblxuZXhwb3J0IHR5cGUgQ3JlYXRlQ291bnRyeUlucHV0ID0ge1xuICBjb2RlOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgdHJhbnNsYXRpb25zOiBBcnJheTxDb3VudHJ5VHJhbnNsYXRpb25JbnB1dD47XG4gIGVuYWJsZWQ6IFNjYWxhcnNbJ0Jvb2xlYW4nXTtcbn07XG5cbmV4cG9ydCB0eXBlIFVwZGF0ZUNvdW50cnlJbnB1dCA9IHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIGNvZGU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIHRyYW5zbGF0aW9ucz86IE1heWJlPEFycmF5PENvdW50cnlUcmFuc2xhdGlvbklucHV0Pj47XG4gIGVuYWJsZWQ/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ10+O1xufTtcblxuZXhwb3J0IHR5cGUgQ3VzdG9tZXIgPSBOb2RlICYge1xuICBfX3R5cGVuYW1lPzogJ0N1c3RvbWVyJztcbiAgZ3JvdXBzOiBBcnJheTxDdXN0b21lckdyb3VwPjtcbiAgaGlzdG9yeTogSGlzdG9yeUVudHJ5TGlzdDtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIGNyZWF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgdXBkYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICB0aXRsZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgZmlyc3ROYW1lOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgbGFzdE5hbWU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBwaG9uZU51bWJlcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgZW1haWxBZGRyZXNzOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgYWRkcmVzc2VzPzogTWF5YmU8QXJyYXk8QWRkcmVzcz4+O1xuICBvcmRlcnM6IE9yZGVyTGlzdDtcbiAgdXNlcj86IE1heWJlPFVzZXI+O1xuICBjdXN0b21GaWVsZHM/OiBNYXliZTxTY2FsYXJzWydKU09OJ10+O1xufTtcblxuXG5leHBvcnQgdHlwZSBDdXN0b21lckhpc3RvcnlBcmdzID0ge1xuICBvcHRpb25zPzogTWF5YmU8SGlzdG9yeUVudHJ5TGlzdE9wdGlvbnM+O1xufTtcblxuXG5leHBvcnQgdHlwZSBDdXN0b21lck9yZGVyc0FyZ3MgPSB7XG4gIG9wdGlvbnM/OiBNYXliZTxPcmRlckxpc3RPcHRpb25zPjtcbn07XG5cbmV4cG9ydCB0eXBlIEN1c3RvbWVyR3JvdXBMaXN0ID0gUGFnaW5hdGVkTGlzdCAmIHtcbiAgX190eXBlbmFtZT86ICdDdXN0b21lckdyb3VwTGlzdCc7XG4gIGl0ZW1zOiBBcnJheTxDdXN0b21lckdyb3VwPjtcbiAgdG90YWxJdGVtczogU2NhbGFyc1snSW50J107XG59O1xuXG5leHBvcnQgdHlwZSBDcmVhdGVDdXN0b21lckdyb3VwSW5wdXQgPSB7XG4gIG5hbWU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBjdXN0b21lcklkcz86IE1heWJlPEFycmF5PFNjYWxhcnNbJ0lEJ10+Pjtcbn07XG5cbmV4cG9ydCB0eXBlIFVwZGF0ZUN1c3RvbWVyR3JvdXBJbnB1dCA9IHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG59O1xuXG5leHBvcnQgdHlwZSBVcGRhdGVDdXN0b21lcklucHV0ID0ge1xuICBpZDogU2NhbGFyc1snSUQnXTtcbiAgdGl0bGU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIGZpcnN0TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgbGFzdE5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIHBob25lTnVtYmVyPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBlbWFpbEFkZHJlc3M/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIGN1c3RvbUZpZWxkcz86IE1heWJlPFNjYWxhcnNbJ0pTT04nXT47XG59O1xuXG5leHBvcnQgdHlwZSBBZGROb3RlVG9DdXN0b21lcklucHV0ID0ge1xuICBpZDogU2NhbGFyc1snSUQnXTtcbiAgbm90ZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIGlzUHVibGljOiBTY2FsYXJzWydCb29sZWFuJ107XG59O1xuXG5leHBvcnQgdHlwZSBVcGRhdGVDdXN0b21lck5vdGVJbnB1dCA9IHtcbiAgbm90ZUlkOiBTY2FsYXJzWydJRCddO1xuICBub3RlOiBTY2FsYXJzWydTdHJpbmcnXTtcbn07XG5cbmV4cG9ydCB0eXBlIENyZWF0ZUN1c3RvbWVyUmVzdWx0ID0gQ3VzdG9tZXIgfCBFbWFpbEFkZHJlc3NDb25mbGljdEVycm9yO1xuXG5leHBvcnQgdHlwZSBVcGRhdGVDdXN0b21lclJlc3VsdCA9IEN1c3RvbWVyIHwgRW1haWxBZGRyZXNzQ29uZmxpY3RFcnJvcjtcblxuZXhwb3J0IHR5cGUgRmFjZXQgPSBOb2RlICYge1xuICBfX3R5cGVuYW1lPzogJ0ZhY2V0JztcbiAgaXNQcml2YXRlOiBTY2FsYXJzWydCb29sZWFuJ107XG4gIGlkOiBTY2FsYXJzWydJRCddO1xuICBjcmVhdGVkQXQ6IFNjYWxhcnNbJ0RhdGVUaW1lJ107XG4gIHVwZGF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgbGFuZ3VhZ2VDb2RlOiBMYW5ndWFnZUNvZGU7XG4gIG5hbWU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBjb2RlOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgdmFsdWVzOiBBcnJheTxGYWNldFZhbHVlPjtcbiAgdHJhbnNsYXRpb25zOiBBcnJheTxGYWNldFRyYW5zbGF0aW9uPjtcbiAgY3VzdG9tRmllbGRzPzogTWF5YmU8U2NhbGFyc1snSlNPTiddPjtcbn07XG5cbmV4cG9ydCB0eXBlIEZhY2V0VHJhbnNsYXRpb25JbnB1dCA9IHtcbiAgaWQ/OiBNYXliZTxTY2FsYXJzWydJRCddPjtcbiAgbGFuZ3VhZ2VDb2RlOiBMYW5ndWFnZUNvZGU7XG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIGN1c3RvbUZpZWxkcz86IE1heWJlPFNjYWxhcnNbJ0pTT04nXT47XG59O1xuXG5leHBvcnQgdHlwZSBDcmVhdGVGYWNldElucHV0ID0ge1xuICBjb2RlOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgaXNQcml2YXRlOiBTY2FsYXJzWydCb29sZWFuJ107XG4gIHRyYW5zbGF0aW9uczogQXJyYXk8RmFjZXRUcmFuc2xhdGlvbklucHV0PjtcbiAgdmFsdWVzPzogTWF5YmU8QXJyYXk8Q3JlYXRlRmFjZXRWYWx1ZVdpdGhGYWNldElucHV0Pj47XG4gIGN1c3RvbUZpZWxkcz86IE1heWJlPFNjYWxhcnNbJ0pTT04nXT47XG59O1xuXG5leHBvcnQgdHlwZSBVcGRhdGVGYWNldElucHV0ID0ge1xuICBpZDogU2NhbGFyc1snSUQnXTtcbiAgaXNQcml2YXRlPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddPjtcbiAgY29kZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgdHJhbnNsYXRpb25zPzogTWF5YmU8QXJyYXk8RmFjZXRUcmFuc2xhdGlvbklucHV0Pj47XG4gIGN1c3RvbUZpZWxkcz86IE1heWJlPFNjYWxhcnNbJ0pTT04nXT47XG59O1xuXG5leHBvcnQgdHlwZSBGYWNldFZhbHVlVHJhbnNsYXRpb25JbnB1dCA9IHtcbiAgaWQ/OiBNYXliZTxTY2FsYXJzWydJRCddPjtcbiAgbGFuZ3VhZ2VDb2RlOiBMYW5ndWFnZUNvZGU7XG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIGN1c3RvbUZpZWxkcz86IE1heWJlPFNjYWxhcnNbJ0pTT04nXT47XG59O1xuXG5leHBvcnQgdHlwZSBDcmVhdGVGYWNldFZhbHVlV2l0aEZhY2V0SW5wdXQgPSB7XG4gIGNvZGU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICB0cmFuc2xhdGlvbnM6IEFycmF5PEZhY2V0VmFsdWVUcmFuc2xhdGlvbklucHV0Pjtcbn07XG5cbmV4cG9ydCB0eXBlIENyZWF0ZUZhY2V0VmFsdWVJbnB1dCA9IHtcbiAgZmFjZXRJZDogU2NhbGFyc1snSUQnXTtcbiAgY29kZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIHRyYW5zbGF0aW9uczogQXJyYXk8RmFjZXRWYWx1ZVRyYW5zbGF0aW9uSW5wdXQ+O1xuICBjdXN0b21GaWVsZHM/OiBNYXliZTxTY2FsYXJzWydKU09OJ10+O1xufTtcblxuZXhwb3J0IHR5cGUgVXBkYXRlRmFjZXRWYWx1ZUlucHV0ID0ge1xuICBpZDogU2NhbGFyc1snSUQnXTtcbiAgY29kZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgdHJhbnNsYXRpb25zPzogTWF5YmU8QXJyYXk8RmFjZXRWYWx1ZVRyYW5zbGF0aW9uSW5wdXQ+PjtcbiAgY3VzdG9tRmllbGRzPzogTWF5YmU8U2NhbGFyc1snSlNPTiddPjtcbn07XG5cbmV4cG9ydCB0eXBlIFVwZGF0ZUdsb2JhbFNldHRpbmdzSW5wdXQgPSB7XG4gIGF2YWlsYWJsZUxhbmd1YWdlcz86IE1heWJlPEFycmF5PExhbmd1YWdlQ29kZT4+O1xuICB0cmFja0ludmVudG9yeT86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXT47XG4gIG91dE9mU3RvY2tUaHJlc2hvbGQ/OiBNYXliZTxTY2FsYXJzWydJbnQnXT47XG4gIGN1c3RvbUZpZWxkcz86IE1heWJlPFNjYWxhcnNbJ0pTT04nXT47XG59O1xuXG4vKipcbiAqIFJldHVybmVkIHdoZW4gdGhlIGRlZmF1bHQgTGFuZ3VhZ2VDb2RlIG9mIGEgQ2hhbm5lbCBpcyBubyBsb25nZXIgZm91bmQgaW4gdGhlIGBhdmFpbGFibGVMYW5ndWFnZXNgXG4gKiBvZiB0aGUgR2xvYmFsU2V0dGluZ3NcbiAqL1xuZXhwb3J0IHR5cGUgQ2hhbm5lbERlZmF1bHRMYW5ndWFnZUVycm9yID0gRXJyb3JSZXN1bHQgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ2hhbm5lbERlZmF1bHRMYW5ndWFnZUVycm9yJztcbiAgZXJyb3JDb2RlOiBFcnJvckNvZGU7XG4gIG1lc3NhZ2U6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBsYW5ndWFnZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIGNoYW5uZWxDb2RlOiBTY2FsYXJzWydTdHJpbmcnXTtcbn07XG5cbmV4cG9ydCB0eXBlIFVwZGF0ZUdsb2JhbFNldHRpbmdzUmVzdWx0ID0gR2xvYmFsU2V0dGluZ3MgfCBDaGFubmVsRGVmYXVsdExhbmd1YWdlRXJyb3I7XG5cbmV4cG9ydCB0eXBlIEdsb2JhbFNldHRpbmdzID0ge1xuICBfX3R5cGVuYW1lPzogJ0dsb2JhbFNldHRpbmdzJztcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIGNyZWF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgdXBkYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICBhdmFpbGFibGVMYW5ndWFnZXM6IEFycmF5PExhbmd1YWdlQ29kZT47XG4gIHRyYWNrSW52ZW50b3J5OiBTY2FsYXJzWydCb29sZWFuJ107XG4gIG91dE9mU3RvY2tUaHJlc2hvbGQ6IFNjYWxhcnNbJ0ludCddO1xuICBzZXJ2ZXJDb25maWc6IFNlcnZlckNvbmZpZztcbiAgY3VzdG9tRmllbGRzPzogTWF5YmU8U2NhbGFyc1snSlNPTiddPjtcbn07XG5cbmV4cG9ydCB0eXBlIE9yZGVyUHJvY2Vzc1N0YXRlID0ge1xuICBfX3R5cGVuYW1lPzogJ09yZGVyUHJvY2Vzc1N0YXRlJztcbiAgbmFtZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIHRvOiBBcnJheTxTY2FsYXJzWydTdHJpbmcnXT47XG59O1xuXG5leHBvcnQgdHlwZSBQZXJtaXNzaW9uRGVmaW5pdGlvbiA9IHtcbiAgX190eXBlbmFtZT86ICdQZXJtaXNzaW9uRGVmaW5pdGlvbic7XG4gIG5hbWU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBkZXNjcmlwdGlvbjogU2NhbGFyc1snU3RyaW5nJ107XG4gIGFzc2lnbmFibGU6IFNjYWxhcnNbJ0Jvb2xlYW4nXTtcbn07XG5cbmV4cG9ydCB0eXBlIFNlcnZlckNvbmZpZyA9IHtcbiAgX190eXBlbmFtZT86ICdTZXJ2ZXJDb25maWcnO1xuICBvcmRlclByb2Nlc3M6IEFycmF5PE9yZGVyUHJvY2Vzc1N0YXRlPjtcbiAgcGVybWl0dGVkQXNzZXRUeXBlczogQXJyYXk8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBwZXJtaXNzaW9uczogQXJyYXk8UGVybWlzc2lvbkRlZmluaXRpb24+O1xuICBjdXN0b21GaWVsZENvbmZpZzogQ3VzdG9tRmllbGRzO1xufTtcblxuZXhwb3J0IHR5cGUgSGlzdG9yeUVudHJ5ID0gTm9kZSAmIHtcbiAgX190eXBlbmFtZT86ICdIaXN0b3J5RW50cnknO1xuICBpc1B1YmxpYzogU2NhbGFyc1snQm9vbGVhbiddO1xuICBhZG1pbmlzdHJhdG9yPzogTWF5YmU8QWRtaW5pc3RyYXRvcj47XG4gIGlkOiBTY2FsYXJzWydJRCddO1xuICBjcmVhdGVkQXQ6IFNjYWxhcnNbJ0RhdGVUaW1lJ107XG4gIHVwZGF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgdHlwZTogSGlzdG9yeUVudHJ5VHlwZTtcbiAgZGF0YTogU2NhbGFyc1snSlNPTiddO1xufTtcblxuZXhwb3J0IHR5cGUgSW1wb3J0SW5mbyA9IHtcbiAgX190eXBlbmFtZT86ICdJbXBvcnRJbmZvJztcbiAgZXJyb3JzPzogTWF5YmU8QXJyYXk8U2NhbGFyc1snU3RyaW5nJ10+PjtcbiAgcHJvY2Vzc2VkOiBTY2FsYXJzWydJbnQnXTtcbiAgaW1wb3J0ZWQ6IFNjYWxhcnNbJ0ludCddO1xufTtcblxuLyoqXG4gKiBAZGVzY3JpcHRpb25cbiAqIFRoZSBzdGF0ZSBvZiBhIEpvYiBpbiB0aGUgSm9iUXVldWVcbiAqXG4gKiBAZG9jc0NhdGVnb3J5IGNvbW1vblxuICovXG5leHBvcnQgZW51bSBKb2JTdGF0ZSB7XG4gIFBFTkRJTkcgPSAnUEVORElORycsXG4gIFJVTk5JTkcgPSAnUlVOTklORycsXG4gIENPTVBMRVRFRCA9ICdDT01QTEVURUQnLFxuICBSRVRSWUlORyA9ICdSRVRSWUlORycsXG4gIEZBSUxFRCA9ICdGQUlMRUQnLFxuICBDQU5DRUxMRUQgPSAnQ0FOQ0VMTEVEJ1xufVxuXG5leHBvcnQgdHlwZSBKb2JMaXN0ID0gUGFnaW5hdGVkTGlzdCAmIHtcbiAgX190eXBlbmFtZT86ICdKb2JMaXN0JztcbiAgaXRlbXM6IEFycmF5PEpvYj47XG4gIHRvdGFsSXRlbXM6IFNjYWxhcnNbJ0ludCddO1xufTtcblxuZXhwb3J0IHR5cGUgSm9iID0gTm9kZSAmIHtcbiAgX190eXBlbmFtZT86ICdKb2InO1xuICBpZDogU2NhbGFyc1snSUQnXTtcbiAgY3JlYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICBzdGFydGVkQXQ/OiBNYXliZTxTY2FsYXJzWydEYXRlVGltZSddPjtcbiAgc2V0dGxlZEF0PzogTWF5YmU8U2NhbGFyc1snRGF0ZVRpbWUnXT47XG4gIHF1ZXVlTmFtZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIHN0YXRlOiBKb2JTdGF0ZTtcbiAgcHJvZ3Jlc3M6IFNjYWxhcnNbJ0Zsb2F0J107XG4gIGRhdGE/OiBNYXliZTxTY2FsYXJzWydKU09OJ10+O1xuICByZXN1bHQ/OiBNYXliZTxTY2FsYXJzWydKU09OJ10+O1xuICBlcnJvcj86IE1heWJlPFNjYWxhcnNbJ0pTT04nXT47XG4gIGlzU2V0dGxlZDogU2NhbGFyc1snQm9vbGVhbiddO1xuICBkdXJhdGlvbjogU2NhbGFyc1snSW50J107XG59O1xuXG5leHBvcnQgdHlwZSBKb2JRdWV1ZSA9IHtcbiAgX190eXBlbmFtZT86ICdKb2JRdWV1ZSc7XG4gIG5hbWU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBydW5uaW5nOiBTY2FsYXJzWydCb29sZWFuJ107XG59O1xuXG5leHBvcnQgdHlwZSBPcmRlciA9IE5vZGUgJiB7XG4gIF9fdHlwZW5hbWU/OiAnT3JkZXInO1xuICBuZXh0U3RhdGVzOiBBcnJheTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIG1vZGlmaWNhdGlvbnM6IEFycmF5PE9yZGVyTW9kaWZpY2F0aW9uPjtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIGNyZWF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgdXBkYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICAvKipcbiAgICogVGhlIGRhdGUgJiB0aW1lIHRoYXQgdGhlIE9yZGVyIHdhcyBwbGFjZWQsIGkuZS4gdGhlIEN1c3RvbWVyXG4gICAqIGNvbXBsZXRlZCB0aGUgY2hlY2tvdXQgYW5kIHRoZSBPcmRlciBpcyBubyBsb25nZXIgXCJhY3RpdmVcIlxuICAgKi9cbiAgb3JkZXJQbGFjZWRBdD86IE1heWJlPFNjYWxhcnNbJ0RhdGVUaW1lJ10+O1xuICAvKiogQSB1bmlxdWUgY29kZSBmb3IgdGhlIE9yZGVyICovXG4gIGNvZGU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBzdGF0ZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIC8qKiBBbiBvcmRlciBpcyBhY3RpdmUgYXMgbG9uZyBhcyB0aGUgcGF5bWVudCBwcm9jZXNzIGhhcyBub3QgYmVlbiBjb21wbGV0ZWQgKi9cbiAgYWN0aXZlOiBTY2FsYXJzWydCb29sZWFuJ107XG4gIGN1c3RvbWVyPzogTWF5YmU8Q3VzdG9tZXI+O1xuICBzaGlwcGluZ0FkZHJlc3M/OiBNYXliZTxPcmRlckFkZHJlc3M+O1xuICBiaWxsaW5nQWRkcmVzcz86IE1heWJlPE9yZGVyQWRkcmVzcz47XG4gIGxpbmVzOiBBcnJheTxPcmRlckxpbmU+O1xuICAvKipcbiAgICogU3VyY2hhcmdlcyBhcmUgYXJiaXRyYXJ5IG1vZGlmaWNhdGlvbnMgdG8gdGhlIE9yZGVyIHRvdGFsIHdoaWNoIGFyZSBuZWl0aGVyXG4gICAqIFByb2R1Y3RWYXJpYW50cyBub3IgZGlzY291bnRzIHJlc3VsdGluZyBmcm9tIGFwcGxpZWQgUHJvbW90aW9ucy4gRm9yIGV4YW1wbGUsXG4gICAqIG9uZS1vZmYgZGlzY291bnRzIGJhc2VkIG9uIGN1c3RvbWVyIGludGVyYWN0aW9uLCBvciBzdXJjaGFyZ2VzIGJhc2VkIG9uIHBheW1lbnRcbiAgICogbWV0aG9kcy5cbiAgICovXG4gIHN1cmNoYXJnZXM6IEFycmF5PFN1cmNoYXJnZT47XG4gIGRpc2NvdW50czogQXJyYXk8RGlzY291bnQ+O1xuICAvKiogQW4gYXJyYXkgb2YgYWxsIGNvdXBvbiBjb2RlcyBhcHBsaWVkIHRvIHRoZSBPcmRlciAqL1xuICBjb3Vwb25Db2RlczogQXJyYXk8U2NhbGFyc1snU3RyaW5nJ10+O1xuICAvKiogUHJvbW90aW9ucyBhcHBsaWVkIHRvIHRoZSBvcmRlci4gT25seSBnZXRzIHBvcHVsYXRlZCBhZnRlciB0aGUgcGF5bWVudCBwcm9jZXNzIGhhcyBjb21wbGV0ZWQuICovXG4gIHByb21vdGlvbnM6IEFycmF5PFByb21vdGlvbj47XG4gIHBheW1lbnRzPzogTWF5YmU8QXJyYXk8UGF5bWVudD4+O1xuICBmdWxmaWxsbWVudHM/OiBNYXliZTxBcnJheTxGdWxmaWxsbWVudD4+O1xuICB0b3RhbFF1YW50aXR5OiBTY2FsYXJzWydJbnQnXTtcbiAgLyoqXG4gICAqIFRoZSBzdWJUb3RhbCBpcyB0aGUgdG90YWwgb2YgYWxsIE9yZGVyTGluZXMgaW4gdGhlIE9yZGVyLiBUaGlzIGZpZ3VyZSBhbHNvIGluY2x1ZGVzIGFueSBPcmRlci1sZXZlbFxuICAgKiBkaXNjb3VudHMgd2hpY2ggaGF2ZSBiZWVuIHByb3JhdGVkIChwcm9wb3J0aW9uYWxseSBkaXN0cmlidXRlZCkgYW1vbmdzdCB0aGUgT3JkZXJJdGVtcy5cbiAgICogVG8gZ2V0IGEgdG90YWwgb2YgYWxsIE9yZGVyTGluZXMgd2hpY2ggZG9lcyBub3QgYWNjb3VudCBmb3IgcHJvcmF0ZWQgZGlzY291bnRzLCB1c2UgdGhlXG4gICAqIHN1bSBvZiBgT3JkZXJMaW5lLmRpc2NvdW50ZWRMaW5lUHJpY2VgIHZhbHVlcy5cbiAgICovXG4gIHN1YlRvdGFsOiBTY2FsYXJzWydJbnQnXTtcbiAgLyoqIFNhbWUgYXMgc3ViVG90YWwsIGJ1dCBpbmNsdXNpdmUgb2YgdGF4ICovXG4gIHN1YlRvdGFsV2l0aFRheDogU2NhbGFyc1snSW50J107XG4gIGN1cnJlbmN5Q29kZTogQ3VycmVuY3lDb2RlO1xuICBzaGlwcGluZ0xpbmVzOiBBcnJheTxTaGlwcGluZ0xpbmU+O1xuICBzaGlwcGluZzogU2NhbGFyc1snSW50J107XG4gIHNoaXBwaW5nV2l0aFRheDogU2NhbGFyc1snSW50J107XG4gIC8qKiBFcXVhbCB0byBzdWJUb3RhbCBwbHVzIHNoaXBwaW5nICovXG4gIHRvdGFsOiBTY2FsYXJzWydJbnQnXTtcbiAgLyoqIFRoZSBmaW5hbCBwYXlhYmxlIGFtb3VudC4gRXF1YWwgdG8gc3ViVG90YWxXaXRoVGF4IHBsdXMgc2hpcHBpbmdXaXRoVGF4ICovXG4gIHRvdGFsV2l0aFRheDogU2NhbGFyc1snSW50J107XG4gIC8qKiBBIHN1bW1hcnkgb2YgdGhlIHRheGVzIGJlaW5nIGFwcGxpZWQgdG8gdGhpcyBPcmRlciAqL1xuICB0YXhTdW1tYXJ5OiBBcnJheTxPcmRlclRheFN1bW1hcnk+O1xuICBoaXN0b3J5OiBIaXN0b3J5RW50cnlMaXN0O1xuICBjdXN0b21GaWVsZHM/OiBNYXliZTxTY2FsYXJzWydKU09OJ10+O1xufTtcblxuXG5leHBvcnQgdHlwZSBPcmRlckhpc3RvcnlBcmdzID0ge1xuICBvcHRpb25zPzogTWF5YmU8SGlzdG9yeUVudHJ5TGlzdE9wdGlvbnM+O1xufTtcblxuZXhwb3J0IHR5cGUgRnVsZmlsbG1lbnQgPSBOb2RlICYge1xuICBfX3R5cGVuYW1lPzogJ0Z1bGZpbGxtZW50JztcbiAgbmV4dFN0YXRlczogQXJyYXk8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBpZDogU2NhbGFyc1snSUQnXTtcbiAgY3JlYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICB1cGRhdGVkQXQ6IFNjYWxhcnNbJ0RhdGVUaW1lJ107XG4gIG9yZGVySXRlbXM6IEFycmF5PE9yZGVySXRlbT47XG4gIHN0YXRlOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgbWV0aG9kOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgdHJhY2tpbmdDb2RlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBjdXN0b21GaWVsZHM/OiBNYXliZTxTY2FsYXJzWydKU09OJ10+O1xufTtcblxuZXhwb3J0IHR5cGUgUGF5bWVudCA9IE5vZGUgJiB7XG4gIF9fdHlwZW5hbWU/OiAnUGF5bWVudCc7XG4gIG5leHRTdGF0ZXM6IEFycmF5PFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIGNyZWF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgdXBkYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICBtZXRob2Q6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBhbW91bnQ6IFNjYWxhcnNbJ0ludCddO1xuICBzdGF0ZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIHRyYW5zYWN0aW9uSWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIGVycm9yTWVzc2FnZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgcmVmdW5kczogQXJyYXk8UmVmdW5kPjtcbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydKU09OJ10+O1xufTtcblxuZXhwb3J0IHR5cGUgT3JkZXJNb2RpZmljYXRpb24gPSBOb2RlICYge1xuICBfX3R5cGVuYW1lPzogJ09yZGVyTW9kaWZpY2F0aW9uJztcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIGNyZWF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgdXBkYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICBwcmljZUNoYW5nZTogU2NhbGFyc1snSW50J107XG4gIG5vdGU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBvcmRlckl0ZW1zPzogTWF5YmU8QXJyYXk8T3JkZXJJdGVtPj47XG4gIHN1cmNoYXJnZXM/OiBNYXliZTxBcnJheTxTdXJjaGFyZ2U+PjtcbiAgcGF5bWVudD86IE1heWJlPFBheW1lbnQ+O1xuICByZWZ1bmQ/OiBNYXliZTxSZWZ1bmQ+O1xuICBpc1NldHRsZWQ6IFNjYWxhcnNbJ0Jvb2xlYW4nXTtcbn07XG5cbmV4cG9ydCB0eXBlIE9yZGVyRmlsdGVyUGFyYW1ldGVyID0ge1xuICBjcmVhdGVkQXQ/OiBNYXliZTxEYXRlT3BlcmF0b3JzPjtcbiAgdXBkYXRlZEF0PzogTWF5YmU8RGF0ZU9wZXJhdG9ycz47XG4gIG9yZGVyUGxhY2VkQXQ/OiBNYXliZTxEYXRlT3BlcmF0b3JzPjtcbiAgY29kZT86IE1heWJlPFN0cmluZ09wZXJhdG9ycz47XG4gIHN0YXRlPzogTWF5YmU8U3RyaW5nT3BlcmF0b3JzPjtcbiAgYWN0aXZlPzogTWF5YmU8Qm9vbGVhbk9wZXJhdG9ycz47XG4gIHRvdGFsUXVhbnRpdHk/OiBNYXliZTxOdW1iZXJPcGVyYXRvcnM+O1xuICBzdWJUb3RhbD86IE1heWJlPE51bWJlck9wZXJhdG9ycz47XG4gIHN1YlRvdGFsV2l0aFRheD86IE1heWJlPE51bWJlck9wZXJhdG9ycz47XG4gIGN1cnJlbmN5Q29kZT86IE1heWJlPFN0cmluZ09wZXJhdG9ycz47XG4gIHNoaXBwaW5nPzogTWF5YmU8TnVtYmVyT3BlcmF0b3JzPjtcbiAgc2hpcHBpbmdXaXRoVGF4PzogTWF5YmU8TnVtYmVyT3BlcmF0b3JzPjtcbiAgdG90YWw/OiBNYXliZTxOdW1iZXJPcGVyYXRvcnM+O1xuICB0b3RhbFdpdGhUYXg/OiBNYXliZTxOdW1iZXJPcGVyYXRvcnM+O1xuICBjdXN0b21lckxhc3ROYW1lPzogTWF5YmU8U3RyaW5nT3BlcmF0b3JzPjtcbn07XG5cbmV4cG9ydCB0eXBlIE9yZGVyU29ydFBhcmFtZXRlciA9IHtcbiAgaWQ/OiBNYXliZTxTb3J0T3JkZXI+O1xuICBjcmVhdGVkQXQ/OiBNYXliZTxTb3J0T3JkZXI+O1xuICB1cGRhdGVkQXQ/OiBNYXliZTxTb3J0T3JkZXI+O1xuICBvcmRlclBsYWNlZEF0PzogTWF5YmU8U29ydE9yZGVyPjtcbiAgY29kZT86IE1heWJlPFNvcnRPcmRlcj47XG4gIHN0YXRlPzogTWF5YmU8U29ydE9yZGVyPjtcbiAgdG90YWxRdWFudGl0eT86IE1heWJlPFNvcnRPcmRlcj47XG4gIHN1YlRvdGFsPzogTWF5YmU8U29ydE9yZGVyPjtcbiAgc3ViVG90YWxXaXRoVGF4PzogTWF5YmU8U29ydE9yZGVyPjtcbiAgc2hpcHBpbmc/OiBNYXliZTxTb3J0T3JkZXI+O1xuICBzaGlwcGluZ1dpdGhUYXg/OiBNYXliZTxTb3J0T3JkZXI+O1xuICB0b3RhbD86IE1heWJlPFNvcnRPcmRlcj47XG4gIHRvdGFsV2l0aFRheD86IE1heWJlPFNvcnRPcmRlcj47XG4gIGN1c3RvbWVyTGFzdE5hbWU/OiBNYXliZTxTb3J0T3JkZXI+O1xufTtcblxuZXhwb3J0IHR5cGUgVXBkYXRlT3JkZXJJbnB1dCA9IHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIGN1c3RvbUZpZWxkcz86IE1heWJlPFNjYWxhcnNbJ0pTT04nXT47XG59O1xuXG5leHBvcnQgdHlwZSBGdWxmaWxsT3JkZXJJbnB1dCA9IHtcbiAgbGluZXM6IEFycmF5PE9yZGVyTGluZUlucHV0PjtcbiAgaGFuZGxlcjogQ29uZmlndXJhYmxlT3BlcmF0aW9uSW5wdXQ7XG59O1xuXG5leHBvcnQgdHlwZSBDYW5jZWxPcmRlcklucHV0ID0ge1xuICAvKiogVGhlIGlkIG9mIHRoZSBvcmRlciB0byBiZSBjYW5jZWxsZWQgKi9cbiAgb3JkZXJJZDogU2NhbGFyc1snSUQnXTtcbiAgLyoqIE9wdGlvbmFsbHkgc3BlY2lmeSB3aGljaCBPcmRlckxpbmVzIHRvIGNhbmNlbC4gSWYgbm90IHByb3ZpZGVkLCBhbGwgT3JkZXJMaW5lcyB3aWxsIGJlIGNhbmNlbGxlZCAqL1xuICBsaW5lcz86IE1heWJlPEFycmF5PE9yZGVyTGluZUlucHV0Pj47XG4gIHJlYXNvbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbn07XG5cbmV4cG9ydCB0eXBlIFJlZnVuZE9yZGVySW5wdXQgPSB7XG4gIGxpbmVzOiBBcnJheTxPcmRlckxpbmVJbnB1dD47XG4gIHNoaXBwaW5nOiBTY2FsYXJzWydJbnQnXTtcbiAgYWRqdXN0bWVudDogU2NhbGFyc1snSW50J107XG4gIHBheW1lbnRJZDogU2NhbGFyc1snSUQnXTtcbiAgcmVhc29uPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xufTtcblxuZXhwb3J0IHR5cGUgT3JkZXJMaW5lSW5wdXQgPSB7XG4gIG9yZGVyTGluZUlkOiBTY2FsYXJzWydJRCddO1xuICBxdWFudGl0eTogU2NhbGFyc1snSW50J107XG59O1xuXG5leHBvcnQgdHlwZSBTZXR0bGVSZWZ1bmRJbnB1dCA9IHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIHRyYW5zYWN0aW9uSWQ6IFNjYWxhcnNbJ1N0cmluZyddO1xufTtcblxuZXhwb3J0IHR5cGUgQWRkTm90ZVRvT3JkZXJJbnB1dCA9IHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIG5vdGU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBpc1B1YmxpYzogU2NhbGFyc1snQm9vbGVhbiddO1xufTtcblxuZXhwb3J0IHR5cGUgVXBkYXRlT3JkZXJOb3RlSW5wdXQgPSB7XG4gIG5vdGVJZDogU2NhbGFyc1snSUQnXTtcbiAgbm90ZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgaXNQdWJsaWM/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ10+O1xufTtcblxuZXhwb3J0IHR5cGUgQWRtaW5pc3RyYXRvclBheW1lbnRJbnB1dCA9IHtcbiAgcGF5bWVudE1ldGhvZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydKU09OJ10+O1xufTtcblxuZXhwb3J0IHR5cGUgQWRtaW5pc3RyYXRvclJlZnVuZElucHV0ID0ge1xuICBwYXltZW50SWQ6IFNjYWxhcnNbJ0lEJ107XG4gIHJlYXNvbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbn07XG5cbmV4cG9ydCB0eXBlIE1vZGlmeU9yZGVyT3B0aW9ucyA9IHtcbiAgZnJlZXplUHJvbW90aW9ucz86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXT47XG4gIHJlY2FsY3VsYXRlU2hpcHBpbmc/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ10+O1xufTtcblxuZXhwb3J0IHR5cGUgVXBkYXRlT3JkZXJBZGRyZXNzSW5wdXQgPSB7XG4gIGZ1bGxOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBjb21wYW55PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBzdHJlZXRMaW5lMT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgc3RyZWV0TGluZTI/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIGNpdHk/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIHByb3ZpbmNlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBwb3N0YWxDb2RlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBjb3VudHJ5Q29kZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgcGhvbmVOdW1iZXI/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG59O1xuXG5leHBvcnQgdHlwZSBNb2RpZnlPcmRlcklucHV0ID0ge1xuICBkcnlSdW46IFNjYWxhcnNbJ0Jvb2xlYW4nXTtcbiAgb3JkZXJJZDogU2NhbGFyc1snSUQnXTtcbiAgYWRkSXRlbXM/OiBNYXliZTxBcnJheTxBZGRJdGVtSW5wdXQ+PjtcbiAgYWRqdXN0T3JkZXJMaW5lcz86IE1heWJlPEFycmF5PEFkanVzdE9yZGVyTGluZUlucHV0Pj47XG4gIHN1cmNoYXJnZXM/OiBNYXliZTxBcnJheTxTdXJjaGFyZ2VJbnB1dD4+O1xuICB1cGRhdGVTaGlwcGluZ0FkZHJlc3M/OiBNYXliZTxVcGRhdGVPcmRlckFkZHJlc3NJbnB1dD47XG4gIHVwZGF0ZUJpbGxpbmdBZGRyZXNzPzogTWF5YmU8VXBkYXRlT3JkZXJBZGRyZXNzSW5wdXQ+O1xuICBub3RlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICByZWZ1bmQ/OiBNYXliZTxBZG1pbmlzdHJhdG9yUmVmdW5kSW5wdXQ+O1xuICBvcHRpb25zPzogTWF5YmU8TW9kaWZ5T3JkZXJPcHRpb25zPjtcbn07XG5cbmV4cG9ydCB0eXBlIEFkZEl0ZW1JbnB1dCA9IHtcbiAgcHJvZHVjdFZhcmlhbnRJZDogU2NhbGFyc1snSUQnXTtcbiAgcXVhbnRpdHk6IFNjYWxhcnNbJ0ludCddO1xufTtcblxuZXhwb3J0IHR5cGUgQWRqdXN0T3JkZXJMaW5lSW5wdXQgPSB7XG4gIG9yZGVyTGluZUlkOiBTY2FsYXJzWydJRCddO1xuICBxdWFudGl0eTogU2NhbGFyc1snSW50J107XG59O1xuXG5leHBvcnQgdHlwZSBTdXJjaGFyZ2VJbnB1dCA9IHtcbiAgZGVzY3JpcHRpb246IFNjYWxhcnNbJ1N0cmluZyddO1xuICBza3U/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIHByaWNlOiBTY2FsYXJzWydJbnQnXTtcbiAgcHJpY2VJbmNsdWRlc1RheDogU2NhbGFyc1snQm9vbGVhbiddO1xuICB0YXhSYXRlPzogTWF5YmU8U2NhbGFyc1snRmxvYXQnXT47XG4gIHRheERlc2NyaXB0aW9uPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xufTtcblxuZXhwb3J0IHR5cGUgTWFudWFsUGF5bWVudElucHV0ID0ge1xuICBvcmRlcklkOiBTY2FsYXJzWydJRCddO1xuICBtZXRob2Q6IFNjYWxhcnNbJ1N0cmluZyddO1xuICB0cmFuc2FjdGlvbklkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0pTT04nXT47XG59O1xuXG4vKiogUmV0dXJuZWQgaWYgdGhlIFBheW1lbnQgc2V0dGxlbWVudCBmYWlscyAqL1xuZXhwb3J0IHR5cGUgU2V0dGxlUGF5bWVudEVycm9yID0gRXJyb3JSZXN1bHQgJiB7XG4gIF9fdHlwZW5hbWU/OiAnU2V0dGxlUGF5bWVudEVycm9yJztcbiAgZXJyb3JDb2RlOiBFcnJvckNvZGU7XG4gIG1lc3NhZ2U6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBwYXltZW50RXJyb3JNZXNzYWdlOiBTY2FsYXJzWydTdHJpbmcnXTtcbn07XG5cbi8qKiBSZXR1cm5lZCBpZiBubyBPcmRlckxpbmVzIGhhdmUgYmVlbiBzcGVjaWZpZWQgZm9yIHRoZSBvcGVyYXRpb24gKi9cbmV4cG9ydCB0eXBlIEVtcHR5T3JkZXJMaW5lU2VsZWN0aW9uRXJyb3IgPSBFcnJvclJlc3VsdCAmIHtcbiAgX190eXBlbmFtZT86ICdFbXB0eU9yZGVyTGluZVNlbGVjdGlvbkVycm9yJztcbiAgZXJyb3JDb2RlOiBFcnJvckNvZGU7XG4gIG1lc3NhZ2U6IFNjYWxhcnNbJ1N0cmluZyddO1xufTtcblxuLyoqIFJldHVybmVkIGlmIHRoZSBzcGVjaWZpZWQgaXRlbXMgYXJlIGFscmVhZHkgcGFydCBvZiBhIEZ1bGZpbGxtZW50ICovXG5leHBvcnQgdHlwZSBJdGVtc0FscmVhZHlGdWxmaWxsZWRFcnJvciA9IEVycm9yUmVzdWx0ICYge1xuICBfX3R5cGVuYW1lPzogJ0l0ZW1zQWxyZWFkeUZ1bGZpbGxlZEVycm9yJztcbiAgZXJyb3JDb2RlOiBFcnJvckNvZGU7XG4gIG1lc3NhZ2U6IFNjYWxhcnNbJ1N0cmluZyddO1xufTtcblxuLyoqIFJldHVybmVkIGlmIHRoZSBzcGVjaWZpZWQgRnVsZmlsbG1lbnRIYW5kbGVyIGNvZGUgaXMgbm90IHZhbGlkICovXG5leHBvcnQgdHlwZSBJbnZhbGlkRnVsZmlsbG1lbnRIYW5kbGVyRXJyb3IgPSBFcnJvclJlc3VsdCAmIHtcbiAgX190eXBlbmFtZT86ICdJbnZhbGlkRnVsZmlsbG1lbnRIYW5kbGVyRXJyb3InO1xuICBlcnJvckNvZGU6IEVycm9yQ29kZTtcbiAgbWVzc2FnZTogU2NhbGFyc1snU3RyaW5nJ107XG59O1xuXG4vKiogUmV0dXJuZWQgaWYgYW4gZXJyb3IgaXMgdGhyb3duIGluIGEgRnVsZmlsbG1lbnRIYW5kbGVyJ3MgY3JlYXRlRnVsZmlsbG1lbnQgbWV0aG9kICovXG5leHBvcnQgdHlwZSBDcmVhdGVGdWxmaWxsbWVudEVycm9yID0gRXJyb3JSZXN1bHQgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ3JlYXRlRnVsZmlsbG1lbnRFcnJvcic7XG4gIGVycm9yQ29kZTogRXJyb3JDb2RlO1xuICBtZXNzYWdlOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgZnVsZmlsbG1lbnRIYW5kbGVyRXJyb3I6IFNjYWxhcnNbJ1N0cmluZyddO1xufTtcblxuLyoqXG4gKiBSZXR1cm5lZCBpZiBhdHRlbXB0aW5nIHRvIGNyZWF0ZSBhIEZ1bGZpbGxtZW50IHdoZW4gdGhlcmUgaXMgaW5zdWZmaWNpZW50XG4gKiBzdG9ja09uSGFuZCBvZiBhIFByb2R1Y3RWYXJpYW50IHRvIHNhdGlzZnkgdGhlIHJlcXVlc3RlZCBxdWFudGl0eS5cbiAqL1xuZXhwb3J0IHR5cGUgSW5zdWZmaWNpZW50U3RvY2tPbkhhbmRFcnJvciA9IEVycm9yUmVzdWx0ICYge1xuICBfX3R5cGVuYW1lPzogJ0luc3VmZmljaWVudFN0b2NrT25IYW5kRXJyb3InO1xuICBlcnJvckNvZGU6IEVycm9yQ29kZTtcbiAgbWVzc2FnZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIHByb2R1Y3RWYXJpYW50SWQ6IFNjYWxhcnNbJ0lEJ107XG4gIHByb2R1Y3RWYXJpYW50TmFtZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIHN0b2NrT25IYW5kOiBTY2FsYXJzWydJbnQnXTtcbn07XG5cbi8qKiBSZXR1cm5lZCBpZiBhbiBvcGVyYXRpb24gaGFzIHNwZWNpZmllZCBPcmRlckxpbmVzIGZyb20gbXVsdGlwbGUgT3JkZXJzICovXG5leHBvcnQgdHlwZSBNdWx0aXBsZU9yZGVyRXJyb3IgPSBFcnJvclJlc3VsdCAmIHtcbiAgX190eXBlbmFtZT86ICdNdWx0aXBsZU9yZGVyRXJyb3InO1xuICBlcnJvckNvZGU6IEVycm9yQ29kZTtcbiAgbWVzc2FnZTogU2NhbGFyc1snU3RyaW5nJ107XG59O1xuXG4vKiogUmV0dXJuZWQgaWYgYW4gYXR0ZW1wdGluZyB0byBjYW5jZWwgbGluZXMgZnJvbSBhbiBPcmRlciB3aGljaCBpcyBzdGlsbCBhY3RpdmUgKi9cbmV4cG9ydCB0eXBlIENhbmNlbEFjdGl2ZU9yZGVyRXJyb3IgPSBFcnJvclJlc3VsdCAmIHtcbiAgX190eXBlbmFtZT86ICdDYW5jZWxBY3RpdmVPcmRlckVycm9yJztcbiAgZXJyb3JDb2RlOiBFcnJvckNvZGU7XG4gIG1lc3NhZ2U6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBvcmRlclN0YXRlOiBTY2FsYXJzWydTdHJpbmcnXTtcbn07XG5cbi8qKiBSZXR1cm5lZCBpZiBhbiBhdHRlbXB0aW5nIHRvIHJlZnVuZCBhIFBheW1lbnQgYWdhaW5zdCBPcmRlckxpbmVzIGZyb20gYSBkaWZmZXJlbnQgT3JkZXIgKi9cbmV4cG9ydCB0eXBlIFBheW1lbnRPcmRlck1pc21hdGNoRXJyb3IgPSBFcnJvclJlc3VsdCAmIHtcbiAgX190eXBlbmFtZT86ICdQYXltZW50T3JkZXJNaXNtYXRjaEVycm9yJztcbiAgZXJyb3JDb2RlOiBFcnJvckNvZGU7XG4gIG1lc3NhZ2U6IFNjYWxhcnNbJ1N0cmluZyddO1xufTtcblxuLyoqIFJldHVybmVkIGlmIGFuIGF0dGVtcHRpbmcgdG8gcmVmdW5kIGFuIE9yZGVyIHdoaWNoIGlzIG5vdCBpbiB0aGUgZXhwZWN0ZWQgc3RhdGUgKi9cbmV4cG9ydCB0eXBlIFJlZnVuZE9yZGVyU3RhdGVFcnJvciA9IEVycm9yUmVzdWx0ICYge1xuICBfX3R5cGVuYW1lPzogJ1JlZnVuZE9yZGVyU3RhdGVFcnJvcic7XG4gIGVycm9yQ29kZTogRXJyb3JDb2RlO1xuICBtZXNzYWdlOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgb3JkZXJTdGF0ZTogU2NhbGFyc1snU3RyaW5nJ107XG59O1xuXG4vKiogUmV0dXJuZWQgaWYgYW4gYXR0ZW1wdGluZyB0byByZWZ1bmQgYW4gT3JkZXIgYnV0IG5laXRoZXIgaXRlbXMgbm9yIHNoaXBwaW5nIHJlZnVuZCB3YXMgc3BlY2lmaWVkICovXG5leHBvcnQgdHlwZSBOb3RoaW5nVG9SZWZ1bmRFcnJvciA9IEVycm9yUmVzdWx0ICYge1xuICBfX3R5cGVuYW1lPzogJ05vdGhpbmdUb1JlZnVuZEVycm9yJztcbiAgZXJyb3JDb2RlOiBFcnJvckNvZGU7XG4gIG1lc3NhZ2U6IFNjYWxhcnNbJ1N0cmluZyddO1xufTtcblxuLyoqIFJldHVybmVkIGlmIGFuIGF0dGVtcHRpbmcgdG8gcmVmdW5kIGFuIE9yZGVySXRlbSB3aGljaCBoYXMgYWxyZWFkeSBiZWVuIHJlZnVuZGVkICovXG5leHBvcnQgdHlwZSBBbHJlYWR5UmVmdW5kZWRFcnJvciA9IEVycm9yUmVzdWx0ICYge1xuICBfX3R5cGVuYW1lPzogJ0FscmVhZHlSZWZ1bmRlZEVycm9yJztcbiAgZXJyb3JDb2RlOiBFcnJvckNvZGU7XG4gIG1lc3NhZ2U6IFNjYWxhcnNbJ1N0cmluZyddO1xuICByZWZ1bmRJZDogU2NhbGFyc1snSUQnXTtcbn07XG5cbi8qKiBSZXR1cm5lZCBpZiB0aGUgc3BlY2lmaWVkIHF1YW50aXR5IG9mIGFuIE9yZGVyTGluZSBpcyBncmVhdGVyIHRoYW4gdGhlIG51bWJlciBvZiBpdGVtcyBpbiB0aGF0IGxpbmUgKi9cbmV4cG9ydCB0eXBlIFF1YW50aXR5VG9vR3JlYXRFcnJvciA9IEVycm9yUmVzdWx0ICYge1xuICBfX3R5cGVuYW1lPzogJ1F1YW50aXR5VG9vR3JlYXRFcnJvcic7XG4gIGVycm9yQ29kZTogRXJyb3JDb2RlO1xuICBtZXNzYWdlOiBTY2FsYXJzWydTdHJpbmcnXTtcbn07XG5cbi8qKiBSZXR1cm5lZCB3aGVuIHRoZXJlIGlzIGFuIGVycm9yIGluIHRyYW5zaXRpb25pbmcgdGhlIFJlZnVuZCBzdGF0ZSAqL1xuZXhwb3J0IHR5cGUgUmVmdW5kU3RhdGVUcmFuc2l0aW9uRXJyb3IgPSBFcnJvclJlc3VsdCAmIHtcbiAgX190eXBlbmFtZT86ICdSZWZ1bmRTdGF0ZVRyYW5zaXRpb25FcnJvcic7XG4gIGVycm9yQ29kZTogRXJyb3JDb2RlO1xuICBtZXNzYWdlOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgdHJhbnNpdGlvbkVycm9yOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgZnJvbVN0YXRlOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgdG9TdGF0ZTogU2NhbGFyc1snU3RyaW5nJ107XG59O1xuXG4vKiogUmV0dXJuZWQgd2hlbiB0aGVyZSBpcyBhbiBlcnJvciBpbiB0cmFuc2l0aW9uaW5nIHRoZSBQYXltZW50IHN0YXRlICovXG5leHBvcnQgdHlwZSBQYXltZW50U3RhdGVUcmFuc2l0aW9uRXJyb3IgPSBFcnJvclJlc3VsdCAmIHtcbiAgX190eXBlbmFtZT86ICdQYXltZW50U3RhdGVUcmFuc2l0aW9uRXJyb3InO1xuICBlcnJvckNvZGU6IEVycm9yQ29kZTtcbiAgbWVzc2FnZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIHRyYW5zaXRpb25FcnJvcjogU2NhbGFyc1snU3RyaW5nJ107XG4gIGZyb21TdGF0ZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIHRvU3RhdGU6IFNjYWxhcnNbJ1N0cmluZyddO1xufTtcblxuLyoqIFJldHVybmVkIHdoZW4gdGhlcmUgaXMgYW4gZXJyb3IgaW4gdHJhbnNpdGlvbmluZyB0aGUgRnVsZmlsbG1lbnQgc3RhdGUgKi9cbmV4cG9ydCB0eXBlIEZ1bGZpbGxtZW50U3RhdGVUcmFuc2l0aW9uRXJyb3IgPSBFcnJvclJlc3VsdCAmIHtcbiAgX190eXBlbmFtZT86ICdGdWxmaWxsbWVudFN0YXRlVHJhbnNpdGlvbkVycm9yJztcbiAgZXJyb3JDb2RlOiBFcnJvckNvZGU7XG4gIG1lc3NhZ2U6IFNjYWxhcnNbJ1N0cmluZyddO1xuICB0cmFuc2l0aW9uRXJyb3I6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBmcm9tU3RhdGU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICB0b1N0YXRlOiBTY2FsYXJzWydTdHJpbmcnXTtcbn07XG5cbi8qKiBSZXR1cm5lZCB3aGVuIGF0dGVtcHRpbmcgdG8gbW9kaWZ5IHRoZSBjb250ZW50cyBvZiBhbiBPcmRlciB0aGF0IGlzIG5vdCBpbiB0aGUgYE1vZGlmeWluZ2Agc3RhdGUuICovXG5leHBvcnQgdHlwZSBPcmRlck1vZGlmaWNhdGlvblN0YXRlRXJyb3IgPSBFcnJvclJlc3VsdCAmIHtcbiAgX190eXBlbmFtZT86ICdPcmRlck1vZGlmaWNhdGlvblN0YXRlRXJyb3InO1xuICBlcnJvckNvZGU6IEVycm9yQ29kZTtcbiAgbWVzc2FnZTogU2NhbGFyc1snU3RyaW5nJ107XG59O1xuXG4vKiogUmV0dXJuZWQgd2hlbiBhIGNhbGwgdG8gbW9kaWZ5T3JkZXIgZmFpbHMgdG8gc3BlY2lmeSBhbnkgY2hhbmdlcyAqL1xuZXhwb3J0IHR5cGUgTm9DaGFuZ2VzU3BlY2lmaWVkRXJyb3IgPSBFcnJvclJlc3VsdCAmIHtcbiAgX190eXBlbmFtZT86ICdOb0NoYW5nZXNTcGVjaWZpZWRFcnJvcic7XG4gIGVycm9yQ29kZTogRXJyb3JDb2RlO1xuICBtZXNzYWdlOiBTY2FsYXJzWydTdHJpbmcnXTtcbn07XG5cbi8qKlxuICogUmV0dXJuZWQgd2hlbiBhIGNhbGwgdG8gbW9kaWZ5T3JkZXIgZmFpbHMgdG8gaW5jbHVkZSBhIHBheW1lbnRNZXRob2QgZXZlblxuICogdGhvdWdoIHRoZSBwcmljZSBoYXMgaW5jcmVhc2VkIGFzIGEgcmVzdWx0IG9mIHRoZSBjaGFuZ2VzLlxuICovXG5leHBvcnQgdHlwZSBQYXltZW50TWV0aG9kTWlzc2luZ0Vycm9yID0gRXJyb3JSZXN1bHQgJiB7XG4gIF9fdHlwZW5hbWU/OiAnUGF5bWVudE1ldGhvZE1pc3NpbmdFcnJvcic7XG4gIGVycm9yQ29kZTogRXJyb3JDb2RlO1xuICBtZXNzYWdlOiBTY2FsYXJzWydTdHJpbmcnXTtcbn07XG5cbi8qKlxuICogUmV0dXJuZWQgd2hlbiBhIGNhbGwgdG8gbW9kaWZ5T3JkZXIgZmFpbHMgdG8gaW5jbHVkZSBhIHJlZnVuZFBheW1lbnRJZCBldmVuXG4gKiB0aG91Z2ggdGhlIHByaWNlIGhhcyBkZWNyZWFzZWQgYXMgYSByZXN1bHQgb2YgdGhlIGNoYW5nZXMuXG4gKi9cbmV4cG9ydCB0eXBlIFJlZnVuZFBheW1lbnRJZE1pc3NpbmdFcnJvciA9IEVycm9yUmVzdWx0ICYge1xuICBfX3R5cGVuYW1lPzogJ1JlZnVuZFBheW1lbnRJZE1pc3NpbmdFcnJvcic7XG4gIGVycm9yQ29kZTogRXJyb3JDb2RlO1xuICBtZXNzYWdlOiBTY2FsYXJzWydTdHJpbmcnXTtcbn07XG5cbi8qKlxuICogUmV0dXJuZWQgd2hlbiBhIGNhbGwgdG8gYWRkTWFudWFsUGF5bWVudFRvT3JkZXIgaXMgbWFkZSBidXQgdGhlIE9yZGVyXG4gKiBpcyBub3QgaW4gdGhlIHJlcXVpcmVkIHN0YXRlLlxuICovXG5leHBvcnQgdHlwZSBNYW51YWxQYXltZW50U3RhdGVFcnJvciA9IEVycm9yUmVzdWx0ICYge1xuICBfX3R5cGVuYW1lPzogJ01hbnVhbFBheW1lbnRTdGF0ZUVycm9yJztcbiAgZXJyb3JDb2RlOiBFcnJvckNvZGU7XG4gIG1lc3NhZ2U6IFNjYWxhcnNbJ1N0cmluZyddO1xufTtcblxuZXhwb3J0IHR5cGUgVHJhbnNpdGlvbk9yZGVyVG9TdGF0ZVJlc3VsdCA9IE9yZGVyIHwgT3JkZXJTdGF0ZVRyYW5zaXRpb25FcnJvcjtcblxuZXhwb3J0IHR5cGUgU2V0dGxlUGF5bWVudFJlc3VsdCA9IFBheW1lbnQgfCBTZXR0bGVQYXltZW50RXJyb3IgfCBQYXltZW50U3RhdGVUcmFuc2l0aW9uRXJyb3IgfCBPcmRlclN0YXRlVHJhbnNpdGlvbkVycm9yO1xuXG5leHBvcnQgdHlwZSBBZGRGdWxmaWxsbWVudFRvT3JkZXJSZXN1bHQgPSBGdWxmaWxsbWVudCB8IEVtcHR5T3JkZXJMaW5lU2VsZWN0aW9uRXJyb3IgfCBJdGVtc0FscmVhZHlGdWxmaWxsZWRFcnJvciB8IEluc3VmZmljaWVudFN0b2NrT25IYW5kRXJyb3IgfCBJbnZhbGlkRnVsZmlsbG1lbnRIYW5kbGVyRXJyb3IgfCBGdWxmaWxsbWVudFN0YXRlVHJhbnNpdGlvbkVycm9yIHwgQ3JlYXRlRnVsZmlsbG1lbnRFcnJvcjtcblxuZXhwb3J0IHR5cGUgQ2FuY2VsT3JkZXJSZXN1bHQgPSBPcmRlciB8IEVtcHR5T3JkZXJMaW5lU2VsZWN0aW9uRXJyb3IgfCBRdWFudGl0eVRvb0dyZWF0RXJyb3IgfCBNdWx0aXBsZU9yZGVyRXJyb3IgfCBDYW5jZWxBY3RpdmVPcmRlckVycm9yIHwgT3JkZXJTdGF0ZVRyYW5zaXRpb25FcnJvcjtcblxuZXhwb3J0IHR5cGUgUmVmdW5kT3JkZXJSZXN1bHQgPSBSZWZ1bmQgfCBRdWFudGl0eVRvb0dyZWF0RXJyb3IgfCBOb3RoaW5nVG9SZWZ1bmRFcnJvciB8IE9yZGVyU3RhdGVUcmFuc2l0aW9uRXJyb3IgfCBNdWx0aXBsZU9yZGVyRXJyb3IgfCBQYXltZW50T3JkZXJNaXNtYXRjaEVycm9yIHwgUmVmdW5kT3JkZXJTdGF0ZUVycm9yIHwgQWxyZWFkeVJlZnVuZGVkRXJyb3IgfCBSZWZ1bmRTdGF0ZVRyYW5zaXRpb25FcnJvcjtcblxuZXhwb3J0IHR5cGUgU2V0dGxlUmVmdW5kUmVzdWx0ID0gUmVmdW5kIHwgUmVmdW5kU3RhdGVUcmFuc2l0aW9uRXJyb3I7XG5cbmV4cG9ydCB0eXBlIFRyYW5zaXRpb25GdWxmaWxsbWVudFRvU3RhdGVSZXN1bHQgPSBGdWxmaWxsbWVudCB8IEZ1bGZpbGxtZW50U3RhdGVUcmFuc2l0aW9uRXJyb3I7XG5cbmV4cG9ydCB0eXBlIFRyYW5zaXRpb25QYXltZW50VG9TdGF0ZVJlc3VsdCA9IFBheW1lbnQgfCBQYXltZW50U3RhdGVUcmFuc2l0aW9uRXJyb3I7XG5cbmV4cG9ydCB0eXBlIE1vZGlmeU9yZGVyUmVzdWx0ID0gT3JkZXIgfCBOb0NoYW5nZXNTcGVjaWZpZWRFcnJvciB8IE9yZGVyTW9kaWZpY2F0aW9uU3RhdGVFcnJvciB8IFBheW1lbnRNZXRob2RNaXNzaW5nRXJyb3IgfCBSZWZ1bmRQYXltZW50SWRNaXNzaW5nRXJyb3IgfCBPcmRlckxpbWl0RXJyb3IgfCBOZWdhdGl2ZVF1YW50aXR5RXJyb3IgfCBJbnN1ZmZpY2llbnRTdG9ja0Vycm9yO1xuXG5leHBvcnQgdHlwZSBBZGRNYW51YWxQYXltZW50VG9PcmRlclJlc3VsdCA9IE9yZGVyIHwgTWFudWFsUGF5bWVudFN0YXRlRXJyb3I7XG5cbmV4cG9ydCB0eXBlIFBheW1lbnRNZXRob2RMaXN0ID0gUGFnaW5hdGVkTGlzdCAmIHtcbiAgX190eXBlbmFtZT86ICdQYXltZW50TWV0aG9kTGlzdCc7XG4gIGl0ZW1zOiBBcnJheTxQYXltZW50TWV0aG9kPjtcbiAgdG90YWxJdGVtczogU2NhbGFyc1snSW50J107XG59O1xuXG5leHBvcnQgdHlwZSBDcmVhdGVQYXltZW50TWV0aG9kSW5wdXQgPSB7XG4gIG5hbWU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBjb2RlOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgZGVzY3JpcHRpb24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIGVuYWJsZWQ6IFNjYWxhcnNbJ0Jvb2xlYW4nXTtcbiAgY2hlY2tlcj86IE1heWJlPENvbmZpZ3VyYWJsZU9wZXJhdGlvbklucHV0PjtcbiAgaGFuZGxlcjogQ29uZmlndXJhYmxlT3BlcmF0aW9uSW5wdXQ7XG59O1xuXG5leHBvcnQgdHlwZSBVcGRhdGVQYXltZW50TWV0aG9kSW5wdXQgPSB7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBjb2RlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBkZXNjcmlwdGlvbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgZW5hYmxlZD86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXT47XG4gIGNoZWNrZXI/OiBNYXliZTxDb25maWd1cmFibGVPcGVyYXRpb25JbnB1dD47XG4gIGhhbmRsZXI/OiBNYXliZTxDb25maWd1cmFibGVPcGVyYXRpb25JbnB1dD47XG59O1xuXG5leHBvcnQgdHlwZSBQYXltZW50TWV0aG9kID0gTm9kZSAmIHtcbiAgX190eXBlbmFtZT86ICdQYXltZW50TWV0aG9kJztcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIGNyZWF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgdXBkYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICBuYW1lOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgY29kZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIGRlc2NyaXB0aW9uOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgZW5hYmxlZDogU2NhbGFyc1snQm9vbGVhbiddO1xuICBjaGVja2VyPzogTWF5YmU8Q29uZmlndXJhYmxlT3BlcmF0aW9uPjtcbiAgaGFuZGxlcjogQ29uZmlndXJhYmxlT3BlcmF0aW9uO1xufTtcblxuZXhwb3J0IHR5cGUgUHJvZHVjdCA9IE5vZGUgJiB7XG4gIF9fdHlwZW5hbWU/OiAnUHJvZHVjdCc7XG4gIGVuYWJsZWQ6IFNjYWxhcnNbJ0Jvb2xlYW4nXTtcbiAgY2hhbm5lbHM6IEFycmF5PENoYW5uZWw+O1xuICBpZDogU2NhbGFyc1snSUQnXTtcbiAgY3JlYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICB1cGRhdGVkQXQ6IFNjYWxhcnNbJ0RhdGVUaW1lJ107XG4gIGxhbmd1YWdlQ29kZTogTGFuZ3VhZ2VDb2RlO1xuICBuYW1lOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgc2x1ZzogU2NhbGFyc1snU3RyaW5nJ107XG4gIGRlc2NyaXB0aW9uOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgZmVhdHVyZWRBc3NldD86IE1heWJlPEFzc2V0PjtcbiAgYXNzZXRzOiBBcnJheTxBc3NldD47XG4gIHZhcmlhbnRzOiBBcnJheTxQcm9kdWN0VmFyaWFudD47XG4gIG9wdGlvbkdyb3VwczogQXJyYXk8UHJvZHVjdE9wdGlvbkdyb3VwPjtcbiAgZmFjZXRWYWx1ZXM6IEFycmF5PEZhY2V0VmFsdWU+O1xuICB0cmFuc2xhdGlvbnM6IEFycmF5PFByb2R1Y3RUcmFuc2xhdGlvbj47XG4gIGNvbGxlY3Rpb25zOiBBcnJheTxDb2xsZWN0aW9uPjtcbiAgY3VzdG9tRmllbGRzPzogTWF5YmU8U2NhbGFyc1snSlNPTiddPjtcbn07XG5cbmV4cG9ydCB0eXBlIFByb2R1Y3RWYXJpYW50ID0gTm9kZSAmIHtcbiAgX190eXBlbmFtZT86ICdQcm9kdWN0VmFyaWFudCc7XG4gIGVuYWJsZWQ6IFNjYWxhcnNbJ0Jvb2xlYW4nXTtcbiAgdHJhY2tJbnZlbnRvcnk6IEdsb2JhbEZsYWc7XG4gIHN0b2NrT25IYW5kOiBTY2FsYXJzWydJbnQnXTtcbiAgc3RvY2tBbGxvY2F0ZWQ6IFNjYWxhcnNbJ0ludCddO1xuICBvdXRPZlN0b2NrVGhyZXNob2xkOiBTY2FsYXJzWydJbnQnXTtcbiAgdXNlR2xvYmFsT3V0T2ZTdG9ja1RocmVzaG9sZDogU2NhbGFyc1snQm9vbGVhbiddO1xuICBzdG9ja01vdmVtZW50czogU3RvY2tNb3ZlbWVudExpc3Q7XG4gIGNoYW5uZWxzOiBBcnJheTxDaGFubmVsPjtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIHByb2R1Y3Q6IFByb2R1Y3Q7XG4gIHByb2R1Y3RJZDogU2NhbGFyc1snSUQnXTtcbiAgY3JlYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICB1cGRhdGVkQXQ6IFNjYWxhcnNbJ0RhdGVUaW1lJ107XG4gIGxhbmd1YWdlQ29kZTogTGFuZ3VhZ2VDb2RlO1xuICBza3U6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBuYW1lOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgZmVhdHVyZWRBc3NldD86IE1heWJlPEFzc2V0PjtcbiAgYXNzZXRzOiBBcnJheTxBc3NldD47XG4gIHByaWNlOiBTY2FsYXJzWydJbnQnXTtcbiAgY3VycmVuY3lDb2RlOiBDdXJyZW5jeUNvZGU7XG4gIHByaWNlV2l0aFRheDogU2NhbGFyc1snSW50J107XG4gIHN0b2NrTGV2ZWw6IFNjYWxhcnNbJ1N0cmluZyddO1xuICB0YXhSYXRlQXBwbGllZDogVGF4UmF0ZTtcbiAgdGF4Q2F0ZWdvcnk6IFRheENhdGVnb3J5O1xuICBvcHRpb25zOiBBcnJheTxQcm9kdWN0T3B0aW9uPjtcbiAgZmFjZXRWYWx1ZXM6IEFycmF5PEZhY2V0VmFsdWU+O1xuICB0cmFuc2xhdGlvbnM6IEFycmF5PFByb2R1Y3RWYXJpYW50VHJhbnNsYXRpb24+O1xuICBjdXN0b21GaWVsZHM/OiBNYXliZTxQcm9kdWN0VmFyaWFudEN1c3RvbUZpZWxkcz47XG59O1xuXG5cbmV4cG9ydCB0eXBlIFByb2R1Y3RWYXJpYW50U3RvY2tNb3ZlbWVudHNBcmdzID0ge1xuICBvcHRpb25zPzogTWF5YmU8U3RvY2tNb3ZlbWVudExpc3RPcHRpb25zPjtcbn07XG5cbmV4cG9ydCB0eXBlIFByb2R1Y3RPcHRpb25Hcm91cFRyYW5zbGF0aW9uSW5wdXQgPSB7XG4gIGlkPzogTWF5YmU8U2NhbGFyc1snSUQnXT47XG4gIGxhbmd1YWdlQ29kZTogTGFuZ3VhZ2VDb2RlO1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBjdXN0b21GaWVsZHM/OiBNYXliZTxTY2FsYXJzWydKU09OJ10+O1xufTtcblxuZXhwb3J0IHR5cGUgQ3JlYXRlUHJvZHVjdE9wdGlvbkdyb3VwSW5wdXQgPSB7XG4gIGNvZGU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICB0cmFuc2xhdGlvbnM6IEFycmF5PFByb2R1Y3RPcHRpb25Hcm91cFRyYW5zbGF0aW9uSW5wdXQ+O1xuICBvcHRpb25zOiBBcnJheTxDcmVhdGVHcm91cE9wdGlvbklucHV0PjtcbiAgY3VzdG9tRmllbGRzPzogTWF5YmU8U2NhbGFyc1snSlNPTiddPjtcbn07XG5cbmV4cG9ydCB0eXBlIFVwZGF0ZVByb2R1Y3RPcHRpb25Hcm91cElucHV0ID0ge1xuICBpZDogU2NhbGFyc1snSUQnXTtcbiAgY29kZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgdHJhbnNsYXRpb25zPzogTWF5YmU8QXJyYXk8UHJvZHVjdE9wdGlvbkdyb3VwVHJhbnNsYXRpb25JbnB1dD4+O1xuICBjdXN0b21GaWVsZHM/OiBNYXliZTxTY2FsYXJzWydKU09OJ10+O1xufTtcblxuZXhwb3J0IHR5cGUgUHJvZHVjdE9wdGlvblRyYW5zbGF0aW9uSW5wdXQgPSB7XG4gIGlkPzogTWF5YmU8U2NhbGFyc1snSUQnXT47XG4gIGxhbmd1YWdlQ29kZTogTGFuZ3VhZ2VDb2RlO1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBjdXN0b21GaWVsZHM/OiBNYXliZTxTY2FsYXJzWydKU09OJ10+O1xufTtcblxuZXhwb3J0IHR5cGUgQ3JlYXRlR3JvdXBPcHRpb25JbnB1dCA9IHtcbiAgY29kZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIHRyYW5zbGF0aW9uczogQXJyYXk8UHJvZHVjdE9wdGlvbkdyb3VwVHJhbnNsYXRpb25JbnB1dD47XG59O1xuXG5leHBvcnQgdHlwZSBDcmVhdGVQcm9kdWN0T3B0aW9uSW5wdXQgPSB7XG4gIHByb2R1Y3RPcHRpb25Hcm91cElkOiBTY2FsYXJzWydJRCddO1xuICBjb2RlOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgdHJhbnNsYXRpb25zOiBBcnJheTxQcm9kdWN0T3B0aW9uR3JvdXBUcmFuc2xhdGlvbklucHV0PjtcbiAgY3VzdG9tRmllbGRzPzogTWF5YmU8U2NhbGFyc1snSlNPTiddPjtcbn07XG5cbmV4cG9ydCB0eXBlIFVwZGF0ZVByb2R1Y3RPcHRpb25JbnB1dCA9IHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIGNvZGU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIHRyYW5zbGF0aW9ucz86IE1heWJlPEFycmF5PFByb2R1Y3RPcHRpb25Hcm91cFRyYW5zbGF0aW9uSW5wdXQ+PjtcbiAgY3VzdG9tRmllbGRzPzogTWF5YmU8U2NhbGFyc1snSlNPTiddPjtcbn07XG5cbmV4cG9ydCB0eXBlIFNlYXJjaFJlc3VsdCA9IHtcbiAgX190eXBlbmFtZT86ICdTZWFyY2hSZXN1bHQnO1xuICBlbmFibGVkOiBTY2FsYXJzWydCb29sZWFuJ107XG4gIC8qKiBBbiBhcnJheSBvZiBpZHMgb2YgdGhlIENoYW5uZWxzIGluIHdoaWNoIHRoaXMgcmVzdWx0IGFwcGVhcnMgKi9cbiAgY2hhbm5lbElkczogQXJyYXk8U2NhbGFyc1snSUQnXT47XG4gIHNrdTogU2NhbGFyc1snU3RyaW5nJ107XG4gIHNsdWc6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBwcm9kdWN0SWQ6IFNjYWxhcnNbJ0lEJ107XG4gIHByb2R1Y3ROYW1lOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgcHJvZHVjdEFzc2V0PzogTWF5YmU8U2VhcmNoUmVzdWx0QXNzZXQ+O1xuICBwcm9kdWN0VmFyaWFudElkOiBTY2FsYXJzWydJRCddO1xuICBwcm9kdWN0VmFyaWFudE5hbWU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBwcm9kdWN0VmFyaWFudEFzc2V0PzogTWF5YmU8U2VhcmNoUmVzdWx0QXNzZXQ+O1xuICBwcmljZTogU2VhcmNoUmVzdWx0UHJpY2U7XG4gIHByaWNlV2l0aFRheDogU2VhcmNoUmVzdWx0UHJpY2U7XG4gIGN1cnJlbmN5Q29kZTogQ3VycmVuY3lDb2RlO1xuICBkZXNjcmlwdGlvbjogU2NhbGFyc1snU3RyaW5nJ107XG4gIGZhY2V0SWRzOiBBcnJheTxTY2FsYXJzWydJRCddPjtcbiAgZmFjZXRWYWx1ZUlkczogQXJyYXk8U2NhbGFyc1snSUQnXT47XG4gIC8qKiBBbiBhcnJheSBvZiBpZHMgb2YgdGhlIENvbGxlY3Rpb25zIGluIHdoaWNoIHRoaXMgcmVzdWx0IGFwcGVhcnMgKi9cbiAgY29sbGVjdGlvbklkczogQXJyYXk8U2NhbGFyc1snSUQnXT47XG4gIC8qKiBBIHJlbGV2ZW5jZSBzY29yZSBmb3IgdGhlIHJlc3VsdC4gRGlmZmVycyBiZXR3ZWVuIGRhdGFiYXNlIGltcGxlbWVudGF0aW9ucyAqL1xuICBzY29yZTogU2NhbGFyc1snRmxvYXQnXTtcbn07XG5cbmV4cG9ydCB0eXBlIFN0b2NrTW92ZW1lbnRMaXN0T3B0aW9ucyA9IHtcbiAgdHlwZT86IE1heWJlPFN0b2NrTW92ZW1lbnRUeXBlPjtcbiAgc2tpcD86IE1heWJlPFNjYWxhcnNbJ0ludCddPjtcbiAgdGFrZT86IE1heWJlPFNjYWxhcnNbJ0ludCddPjtcbn07XG5cbmV4cG9ydCB0eXBlIFByb2R1Y3RUcmFuc2xhdGlvbklucHV0ID0ge1xuICBpZD86IE1heWJlPFNjYWxhcnNbJ0lEJ10+O1xuICBsYW5ndWFnZUNvZGU6IExhbmd1YWdlQ29kZTtcbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgc2x1Zz86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgZGVzY3JpcHRpb24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIGN1c3RvbUZpZWxkcz86IE1heWJlPFNjYWxhcnNbJ0pTT04nXT47XG59O1xuXG5leHBvcnQgdHlwZSBDcmVhdGVQcm9kdWN0SW5wdXQgPSB7XG4gIGZlYXR1cmVkQXNzZXRJZD86IE1heWJlPFNjYWxhcnNbJ0lEJ10+O1xuICBlbmFibGVkPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddPjtcbiAgYXNzZXRJZHM/OiBNYXliZTxBcnJheTxTY2FsYXJzWydJRCddPj47XG4gIGZhY2V0VmFsdWVJZHM/OiBNYXliZTxBcnJheTxTY2FsYXJzWydJRCddPj47XG4gIHRyYW5zbGF0aW9uczogQXJyYXk8UHJvZHVjdFRyYW5zbGF0aW9uSW5wdXQ+O1xuICBjdXN0b21GaWVsZHM/OiBNYXliZTxTY2FsYXJzWydKU09OJ10+O1xufTtcblxuZXhwb3J0IHR5cGUgVXBkYXRlUHJvZHVjdElucHV0ID0ge1xuICBpZDogU2NhbGFyc1snSUQnXTtcbiAgZW5hYmxlZD86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXT47XG4gIGZlYXR1cmVkQXNzZXRJZD86IE1heWJlPFNjYWxhcnNbJ0lEJ10+O1xuICBhc3NldElkcz86IE1heWJlPEFycmF5PFNjYWxhcnNbJ0lEJ10+PjtcbiAgZmFjZXRWYWx1ZUlkcz86IE1heWJlPEFycmF5PFNjYWxhcnNbJ0lEJ10+PjtcbiAgdHJhbnNsYXRpb25zPzogTWF5YmU8QXJyYXk8UHJvZHVjdFRyYW5zbGF0aW9uSW5wdXQ+PjtcbiAgY3VzdG9tRmllbGRzPzogTWF5YmU8U2NhbGFyc1snSlNPTiddPjtcbn07XG5cbmV4cG9ydCB0eXBlIFByb2R1Y3RWYXJpYW50VHJhbnNsYXRpb25JbnB1dCA9IHtcbiAgaWQ/OiBNYXliZTxTY2FsYXJzWydJRCddPjtcbiAgbGFuZ3VhZ2VDb2RlOiBMYW5ndWFnZUNvZGU7XG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIGN1c3RvbUZpZWxkcz86IE1heWJlPFNjYWxhcnNbJ0pTT04nXT47XG59O1xuXG5leHBvcnQgdHlwZSBDcmVhdGVQcm9kdWN0VmFyaWFudE9wdGlvbklucHV0ID0ge1xuICBvcHRpb25Hcm91cElkOiBTY2FsYXJzWydJRCddO1xuICBjb2RlOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgdHJhbnNsYXRpb25zOiBBcnJheTxQcm9kdWN0T3B0aW9uVHJhbnNsYXRpb25JbnB1dD47XG59O1xuXG5leHBvcnQgdHlwZSBDcmVhdGVQcm9kdWN0VmFyaWFudElucHV0ID0ge1xuICBwcm9kdWN0SWQ6IFNjYWxhcnNbJ0lEJ107XG4gIHRyYW5zbGF0aW9uczogQXJyYXk8UHJvZHVjdFZhcmlhbnRUcmFuc2xhdGlvbklucHV0PjtcbiAgZmFjZXRWYWx1ZUlkcz86IE1heWJlPEFycmF5PFNjYWxhcnNbJ0lEJ10+PjtcbiAgc2t1OiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgcHJpY2U/OiBNYXliZTxTY2FsYXJzWydJbnQnXT47XG4gIHRheENhdGVnb3J5SWQ/OiBNYXliZTxTY2FsYXJzWydJRCddPjtcbiAgb3B0aW9uSWRzPzogTWF5YmU8QXJyYXk8U2NhbGFyc1snSUQnXT4+O1xuICBmZWF0dXJlZEFzc2V0SWQ/OiBNYXliZTxTY2FsYXJzWydJRCddPjtcbiAgYXNzZXRJZHM/OiBNYXliZTxBcnJheTxTY2FsYXJzWydJRCddPj47XG4gIHN0b2NrT25IYW5kPzogTWF5YmU8U2NhbGFyc1snSW50J10+O1xuICBvdXRPZlN0b2NrVGhyZXNob2xkPzogTWF5YmU8U2NhbGFyc1snSW50J10+O1xuICB1c2VHbG9iYWxPdXRPZlN0b2NrVGhyZXNob2xkPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddPjtcbiAgdHJhY2tJbnZlbnRvcnk/OiBNYXliZTxHbG9iYWxGbGFnPjtcbiAgY3VzdG9tRmllbGRzPzogTWF5YmU8Q3JlYXRlUHJvZHVjdFZhcmlhbnRDdXN0b21GaWVsZHNJbnB1dD47XG59O1xuXG5leHBvcnQgdHlwZSBVcGRhdGVQcm9kdWN0VmFyaWFudElucHV0ID0ge1xuICBpZDogU2NhbGFyc1snSUQnXTtcbiAgZW5hYmxlZD86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXT47XG4gIHRyYW5zbGF0aW9ucz86IE1heWJlPEFycmF5PFByb2R1Y3RWYXJpYW50VHJhbnNsYXRpb25JbnB1dD4+O1xuICBmYWNldFZhbHVlSWRzPzogTWF5YmU8QXJyYXk8U2NhbGFyc1snSUQnXT4+O1xuICBza3U/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIHRheENhdGVnb3J5SWQ/OiBNYXliZTxTY2FsYXJzWydJRCddPjtcbiAgcHJpY2U/OiBNYXliZTxTY2FsYXJzWydJbnQnXT47XG4gIGZlYXR1cmVkQXNzZXRJZD86IE1heWJlPFNjYWxhcnNbJ0lEJ10+O1xuICBhc3NldElkcz86IE1heWJlPEFycmF5PFNjYWxhcnNbJ0lEJ10+PjtcbiAgc3RvY2tPbkhhbmQ/OiBNYXliZTxTY2FsYXJzWydJbnQnXT47XG4gIG91dE9mU3RvY2tUaHJlc2hvbGQ/OiBNYXliZTxTY2FsYXJzWydJbnQnXT47XG4gIHVzZUdsb2JhbE91dE9mU3RvY2tUaHJlc2hvbGQ/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ10+O1xuICB0cmFja0ludmVudG9yeT86IE1heWJlPEdsb2JhbEZsYWc+O1xuICBjdXN0b21GaWVsZHM/OiBNYXliZTxVcGRhdGVQcm9kdWN0VmFyaWFudEN1c3RvbUZpZWxkc0lucHV0Pjtcbn07XG5cbmV4cG9ydCB0eXBlIEFzc2lnblByb2R1Y3RzVG9DaGFubmVsSW5wdXQgPSB7XG4gIHByb2R1Y3RJZHM6IEFycmF5PFNjYWxhcnNbJ0lEJ10+O1xuICBjaGFubmVsSWQ6IFNjYWxhcnNbJ0lEJ107XG4gIHByaWNlRmFjdG9yPzogTWF5YmU8U2NhbGFyc1snRmxvYXQnXT47XG59O1xuXG5leHBvcnQgdHlwZSBSZW1vdmVQcm9kdWN0c0Zyb21DaGFubmVsSW5wdXQgPSB7XG4gIHByb2R1Y3RJZHM6IEFycmF5PFNjYWxhcnNbJ0lEJ10+O1xuICBjaGFubmVsSWQ6IFNjYWxhcnNbJ0lEJ107XG59O1xuXG5leHBvcnQgdHlwZSBBc3NpZ25Qcm9kdWN0VmFyaWFudHNUb0NoYW5uZWxJbnB1dCA9IHtcbiAgcHJvZHVjdFZhcmlhbnRJZHM6IEFycmF5PFNjYWxhcnNbJ0lEJ10+O1xuICBjaGFubmVsSWQ6IFNjYWxhcnNbJ0lEJ107XG4gIHByaWNlRmFjdG9yPzogTWF5YmU8U2NhbGFyc1snRmxvYXQnXT47XG59O1xuXG5leHBvcnQgdHlwZSBSZW1vdmVQcm9kdWN0VmFyaWFudHNGcm9tQ2hhbm5lbElucHV0ID0ge1xuICBwcm9kdWN0VmFyaWFudElkczogQXJyYXk8U2NhbGFyc1snSUQnXT47XG4gIGNoYW5uZWxJZDogU2NhbGFyc1snSUQnXTtcbn07XG5cbmV4cG9ydCB0eXBlIFByb2R1Y3RPcHRpb25JblVzZUVycm9yID0gRXJyb3JSZXN1bHQgJiB7XG4gIF9fdHlwZW5hbWU/OiAnUHJvZHVjdE9wdGlvbkluVXNlRXJyb3InO1xuICBlcnJvckNvZGU6IEVycm9yQ29kZTtcbiAgbWVzc2FnZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIG9wdGlvbkdyb3VwQ29kZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIHByb2R1Y3RWYXJpYW50Q291bnQ6IFNjYWxhcnNbJ0ludCddO1xufTtcblxuZXhwb3J0IHR5cGUgUmVtb3ZlT3B0aW9uR3JvdXBGcm9tUHJvZHVjdFJlc3VsdCA9IFByb2R1Y3QgfCBQcm9kdWN0T3B0aW9uSW5Vc2VFcnJvcjtcblxuZXhwb3J0IHR5cGUgQ3JlYXRlUHJvbW90aW9uSW5wdXQgPSB7XG4gIG5hbWU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBlbmFibGVkOiBTY2FsYXJzWydCb29sZWFuJ107XG4gIHN0YXJ0c0F0PzogTWF5YmU8U2NhbGFyc1snRGF0ZVRpbWUnXT47XG4gIGVuZHNBdD86IE1heWJlPFNjYWxhcnNbJ0RhdGVUaW1lJ10+O1xuICBjb3Vwb25Db2RlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBwZXJDdXN0b21lclVzYWdlTGltaXQ/OiBNYXliZTxTY2FsYXJzWydJbnQnXT47XG4gIGNvbmRpdGlvbnM6IEFycmF5PENvbmZpZ3VyYWJsZU9wZXJhdGlvbklucHV0PjtcbiAgYWN0aW9uczogQXJyYXk8Q29uZmlndXJhYmxlT3BlcmF0aW9uSW5wdXQ+O1xufTtcblxuZXhwb3J0IHR5cGUgVXBkYXRlUHJvbW90aW9uSW5wdXQgPSB7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBlbmFibGVkPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddPjtcbiAgc3RhcnRzQXQ/OiBNYXliZTxTY2FsYXJzWydEYXRlVGltZSddPjtcbiAgZW5kc0F0PzogTWF5YmU8U2NhbGFyc1snRGF0ZVRpbWUnXT47XG4gIGNvdXBvbkNvZGU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIHBlckN1c3RvbWVyVXNhZ2VMaW1pdD86IE1heWJlPFNjYWxhcnNbJ0ludCddPjtcbiAgY29uZGl0aW9ucz86IE1heWJlPEFycmF5PENvbmZpZ3VyYWJsZU9wZXJhdGlvbklucHV0Pj47XG4gIGFjdGlvbnM/OiBNYXliZTxBcnJheTxDb25maWd1cmFibGVPcGVyYXRpb25JbnB1dD4+O1xufTtcblxuZXhwb3J0IHR5cGUgQXNzaWduUHJvbW90aW9uc1RvQ2hhbm5lbElucHV0ID0ge1xuICBwcm9tb3Rpb25JZHM6IEFycmF5PFNjYWxhcnNbJ0lEJ10+O1xuICBjaGFubmVsSWQ6IFNjYWxhcnNbJ0lEJ107XG59O1xuXG5leHBvcnQgdHlwZSBSZW1vdmVQcm9tb3Rpb25zRnJvbUNoYW5uZWxJbnB1dCA9IHtcbiAgcHJvbW90aW9uSWRzOiBBcnJheTxTY2FsYXJzWydJRCddPjtcbiAgY2hhbm5lbElkOiBTY2FsYXJzWydJRCddO1xufTtcblxuLyoqIFJldHVybmVkIGlmIGEgUHJvbW90aW9uQ29uZGl0aW9uIGhhcyBuZWl0aGVyIGEgY291cG9uQ29kZSBub3IgYW55IGNvbmRpdGlvbnMgc2V0ICovXG5leHBvcnQgdHlwZSBNaXNzaW5nQ29uZGl0aW9uc0Vycm9yID0gRXJyb3JSZXN1bHQgJiB7XG4gIF9fdHlwZW5hbWU/OiAnTWlzc2luZ0NvbmRpdGlvbnNFcnJvcic7XG4gIGVycm9yQ29kZTogRXJyb3JDb2RlO1xuICBtZXNzYWdlOiBTY2FsYXJzWydTdHJpbmcnXTtcbn07XG5cbmV4cG9ydCB0eXBlIENyZWF0ZVByb21vdGlvblJlc3VsdCA9IFByb21vdGlvbiB8IE1pc3NpbmdDb25kaXRpb25zRXJyb3I7XG5cbmV4cG9ydCB0eXBlIFVwZGF0ZVByb21vdGlvblJlc3VsdCA9IFByb21vdGlvbiB8IE1pc3NpbmdDb25kaXRpb25zRXJyb3I7XG5cbmV4cG9ydCB0eXBlIENyZWF0ZVJvbGVJbnB1dCA9IHtcbiAgY29kZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIGRlc2NyaXB0aW9uOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgcGVybWlzc2lvbnM6IEFycmF5PFBlcm1pc3Npb24+O1xuICBjaGFubmVsSWRzPzogTWF5YmU8QXJyYXk8U2NhbGFyc1snSUQnXT4+O1xufTtcblxuZXhwb3J0IHR5cGUgVXBkYXRlUm9sZUlucHV0ID0ge1xuICBpZDogU2NhbGFyc1snSUQnXTtcbiAgY29kZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgZGVzY3JpcHRpb24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIHBlcm1pc3Npb25zPzogTWF5YmU8QXJyYXk8UGVybWlzc2lvbj4+O1xuICBjaGFubmVsSWRzPzogTWF5YmU8QXJyYXk8U2NhbGFyc1snSUQnXT4+O1xufTtcblxuZXhwb3J0IHR5cGUgU2hpcHBpbmdNZXRob2RUcmFuc2xhdGlvbklucHV0ID0ge1xuICBpZD86IE1heWJlPFNjYWxhcnNbJ0lEJ10+O1xuICBsYW5ndWFnZUNvZGU6IExhbmd1YWdlQ29kZTtcbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgZGVzY3JpcHRpb24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIGN1c3RvbUZpZWxkcz86IE1heWJlPFNjYWxhcnNbJ0pTT04nXT47XG59O1xuXG5leHBvcnQgdHlwZSBDcmVhdGVTaGlwcGluZ01ldGhvZElucHV0ID0ge1xuICBjb2RlOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgZnVsZmlsbG1lbnRIYW5kbGVyOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgY2hlY2tlcjogQ29uZmlndXJhYmxlT3BlcmF0aW9uSW5wdXQ7XG4gIGNhbGN1bGF0b3I6IENvbmZpZ3VyYWJsZU9wZXJhdGlvbklucHV0O1xuICB0cmFuc2xhdGlvbnM6IEFycmF5PFNoaXBwaW5nTWV0aG9kVHJhbnNsYXRpb25JbnB1dD47XG4gIGN1c3RvbUZpZWxkcz86IE1heWJlPFNjYWxhcnNbJ0pTT04nXT47XG59O1xuXG5leHBvcnQgdHlwZSBVcGRhdGVTaGlwcGluZ01ldGhvZElucHV0ID0ge1xuICBpZDogU2NhbGFyc1snSUQnXTtcbiAgY29kZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgZnVsZmlsbG1lbnRIYW5kbGVyPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBjaGVja2VyPzogTWF5YmU8Q29uZmlndXJhYmxlT3BlcmF0aW9uSW5wdXQ+O1xuICBjYWxjdWxhdG9yPzogTWF5YmU8Q29uZmlndXJhYmxlT3BlcmF0aW9uSW5wdXQ+O1xuICB0cmFuc2xhdGlvbnM6IEFycmF5PFNoaXBwaW5nTWV0aG9kVHJhbnNsYXRpb25JbnB1dD47XG4gIGN1c3RvbUZpZWxkcz86IE1heWJlPFNjYWxhcnNbJ0pTT04nXT47XG59O1xuXG5leHBvcnQgdHlwZSBUZXN0U2hpcHBpbmdNZXRob2RJbnB1dCA9IHtcbiAgY2hlY2tlcjogQ29uZmlndXJhYmxlT3BlcmF0aW9uSW5wdXQ7XG4gIGNhbGN1bGF0b3I6IENvbmZpZ3VyYWJsZU9wZXJhdGlvbklucHV0O1xuICBzaGlwcGluZ0FkZHJlc3M6IENyZWF0ZUFkZHJlc3NJbnB1dDtcbiAgbGluZXM6IEFycmF5PFRlc3RTaGlwcGluZ01ldGhvZE9yZGVyTGluZUlucHV0Pjtcbn07XG5cbmV4cG9ydCB0eXBlIFRlc3RFbGlnaWJsZVNoaXBwaW5nTWV0aG9kc0lucHV0ID0ge1xuICBzaGlwcGluZ0FkZHJlc3M6IENyZWF0ZUFkZHJlc3NJbnB1dDtcbiAgbGluZXM6IEFycmF5PFRlc3RTaGlwcGluZ01ldGhvZE9yZGVyTGluZUlucHV0Pjtcbn07XG5cbmV4cG9ydCB0eXBlIFRlc3RTaGlwcGluZ01ldGhvZE9yZGVyTGluZUlucHV0ID0ge1xuICBwcm9kdWN0VmFyaWFudElkOiBTY2FsYXJzWydJRCddO1xuICBxdWFudGl0eTogU2NhbGFyc1snSW50J107XG59O1xuXG5leHBvcnQgdHlwZSBUZXN0U2hpcHBpbmdNZXRob2RSZXN1bHQgPSB7XG4gIF9fdHlwZW5hbWU/OiAnVGVzdFNoaXBwaW5nTWV0aG9kUmVzdWx0JztcbiAgZWxpZ2libGU6IFNjYWxhcnNbJ0Jvb2xlYW4nXTtcbiAgcXVvdGU/OiBNYXliZTxUZXN0U2hpcHBpbmdNZXRob2RRdW90ZT47XG59O1xuXG5leHBvcnQgdHlwZSBUZXN0U2hpcHBpbmdNZXRob2RRdW90ZSA9IHtcbiAgX190eXBlbmFtZT86ICdUZXN0U2hpcHBpbmdNZXRob2RRdW90ZSc7XG4gIHByaWNlOiBTY2FsYXJzWydJbnQnXTtcbiAgcHJpY2VXaXRoVGF4OiBTY2FsYXJzWydJbnQnXTtcbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydKU09OJ10+O1xufTtcblxuZXhwb3J0IGVudW0gU3RvY2tNb3ZlbWVudFR5cGUge1xuICBBREpVU1RNRU5UID0gJ0FESlVTVE1FTlQnLFxuICBBTExPQ0FUSU9OID0gJ0FMTE9DQVRJT04nLFxuICBSRUxFQVNFID0gJ1JFTEVBU0UnLFxuICBTQUxFID0gJ1NBTEUnLFxuICBDQU5DRUxMQVRJT04gPSAnQ0FOQ0VMTEFUSU9OJyxcbiAgUkVUVVJOID0gJ1JFVFVSTidcbn1cblxuZXhwb3J0IHR5cGUgU3RvY2tNb3ZlbWVudCA9IHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIGNyZWF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgdXBkYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICBwcm9kdWN0VmFyaWFudDogUHJvZHVjdFZhcmlhbnQ7XG4gIHR5cGU6IFN0b2NrTW92ZW1lbnRUeXBlO1xuICBxdWFudGl0eTogU2NhbGFyc1snSW50J107XG59O1xuXG5leHBvcnQgdHlwZSBTdG9ja0FkanVzdG1lbnQgPSBOb2RlICYgU3RvY2tNb3ZlbWVudCAmIHtcbiAgX190eXBlbmFtZT86ICdTdG9ja0FkanVzdG1lbnQnO1xuICBpZDogU2NhbGFyc1snSUQnXTtcbiAgY3JlYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICB1cGRhdGVkQXQ6IFNjYWxhcnNbJ0RhdGVUaW1lJ107XG4gIHByb2R1Y3RWYXJpYW50OiBQcm9kdWN0VmFyaWFudDtcbiAgdHlwZTogU3RvY2tNb3ZlbWVudFR5cGU7XG4gIHF1YW50aXR5OiBTY2FsYXJzWydJbnQnXTtcbn07XG5cbmV4cG9ydCB0eXBlIEFsbG9jYXRpb24gPSBOb2RlICYgU3RvY2tNb3ZlbWVudCAmIHtcbiAgX190eXBlbmFtZT86ICdBbGxvY2F0aW9uJztcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIGNyZWF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgdXBkYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICBwcm9kdWN0VmFyaWFudDogUHJvZHVjdFZhcmlhbnQ7XG4gIHR5cGU6IFN0b2NrTW92ZW1lbnRUeXBlO1xuICBxdWFudGl0eTogU2NhbGFyc1snSW50J107XG4gIG9yZGVyTGluZTogT3JkZXJMaW5lO1xufTtcblxuZXhwb3J0IHR5cGUgU2FsZSA9IE5vZGUgJiBTdG9ja01vdmVtZW50ICYge1xuICBfX3R5cGVuYW1lPzogJ1NhbGUnO1xuICBpZDogU2NhbGFyc1snSUQnXTtcbiAgY3JlYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICB1cGRhdGVkQXQ6IFNjYWxhcnNbJ0RhdGVUaW1lJ107XG4gIHByb2R1Y3RWYXJpYW50OiBQcm9kdWN0VmFyaWFudDtcbiAgdHlwZTogU3RvY2tNb3ZlbWVudFR5cGU7XG4gIHF1YW50aXR5OiBTY2FsYXJzWydJbnQnXTtcbiAgb3JkZXJJdGVtOiBPcmRlckl0ZW07XG59O1xuXG5leHBvcnQgdHlwZSBDYW5jZWxsYXRpb24gPSBOb2RlICYgU3RvY2tNb3ZlbWVudCAmIHtcbiAgX190eXBlbmFtZT86ICdDYW5jZWxsYXRpb24nO1xuICBpZDogU2NhbGFyc1snSUQnXTtcbiAgY3JlYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICB1cGRhdGVkQXQ6IFNjYWxhcnNbJ0RhdGVUaW1lJ107XG4gIHByb2R1Y3RWYXJpYW50OiBQcm9kdWN0VmFyaWFudDtcbiAgdHlwZTogU3RvY2tNb3ZlbWVudFR5cGU7XG4gIHF1YW50aXR5OiBTY2FsYXJzWydJbnQnXTtcbiAgb3JkZXJMaW5lOiBPcmRlckxpbmU7XG59O1xuXG5leHBvcnQgdHlwZSBSZXR1cm4gPSBOb2RlICYgU3RvY2tNb3ZlbWVudCAmIHtcbiAgX190eXBlbmFtZT86ICdSZXR1cm4nO1xuICBpZDogU2NhbGFyc1snSUQnXTtcbiAgY3JlYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICB1cGRhdGVkQXQ6IFNjYWxhcnNbJ0RhdGVUaW1lJ107XG4gIHByb2R1Y3RWYXJpYW50OiBQcm9kdWN0VmFyaWFudDtcbiAgdHlwZTogU3RvY2tNb3ZlbWVudFR5cGU7XG4gIHF1YW50aXR5OiBTY2FsYXJzWydJbnQnXTtcbiAgb3JkZXJJdGVtOiBPcmRlckl0ZW07XG59O1xuXG5leHBvcnQgdHlwZSBSZWxlYXNlID0gTm9kZSAmIFN0b2NrTW92ZW1lbnQgJiB7XG4gIF9fdHlwZW5hbWU/OiAnUmVsZWFzZSc7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xuICBjcmVhdGVkQXQ6IFNjYWxhcnNbJ0RhdGVUaW1lJ107XG4gIHVwZGF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgcHJvZHVjdFZhcmlhbnQ6IFByb2R1Y3RWYXJpYW50O1xuICB0eXBlOiBTdG9ja01vdmVtZW50VHlwZTtcbiAgcXVhbnRpdHk6IFNjYWxhcnNbJ0ludCddO1xuICBvcmRlckl0ZW06IE9yZGVySXRlbTtcbn07XG5cbmV4cG9ydCB0eXBlIFN0b2NrTW92ZW1lbnRJdGVtID0gU3RvY2tBZGp1c3RtZW50IHwgQWxsb2NhdGlvbiB8IFNhbGUgfCBDYW5jZWxsYXRpb24gfCBSZXR1cm4gfCBSZWxlYXNlO1xuXG5leHBvcnQgdHlwZSBTdG9ja01vdmVtZW50TGlzdCA9IHtcbiAgX190eXBlbmFtZT86ICdTdG9ja01vdmVtZW50TGlzdCc7XG4gIGl0ZW1zOiBBcnJheTxTdG9ja01vdmVtZW50SXRlbT47XG4gIHRvdGFsSXRlbXM6IFNjYWxhcnNbJ0ludCddO1xufTtcblxuZXhwb3J0IHR5cGUgQ3JlYXRlVGFnSW5wdXQgPSB7XG4gIHZhbHVlOiBTY2FsYXJzWydTdHJpbmcnXTtcbn07XG5cbmV4cG9ydCB0eXBlIFVwZGF0ZVRhZ0lucHV0ID0ge1xuICBpZDogU2NhbGFyc1snSUQnXTtcbiAgdmFsdWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG59O1xuXG5leHBvcnQgdHlwZSBDcmVhdGVUYXhDYXRlZ29yeUlucHV0ID0ge1xuICBuYW1lOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgaXNEZWZhdWx0PzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddPjtcbn07XG5cbmV4cG9ydCB0eXBlIFVwZGF0ZVRheENhdGVnb3J5SW5wdXQgPSB7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBpc0RlZmF1bHQ/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ10+O1xufTtcblxuZXhwb3J0IHR5cGUgQ3JlYXRlVGF4UmF0ZUlucHV0ID0ge1xuICBuYW1lOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgZW5hYmxlZDogU2NhbGFyc1snQm9vbGVhbiddO1xuICB2YWx1ZTogU2NhbGFyc1snRmxvYXQnXTtcbiAgY2F0ZWdvcnlJZDogU2NhbGFyc1snSUQnXTtcbiAgem9uZUlkOiBTY2FsYXJzWydJRCddO1xuICBjdXN0b21lckdyb3VwSWQ/OiBNYXliZTxTY2FsYXJzWydJRCddPjtcbn07XG5cbmV4cG9ydCB0eXBlIFVwZGF0ZVRheFJhdGVJbnB1dCA9IHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIHZhbHVlPzogTWF5YmU8U2NhbGFyc1snRmxvYXQnXT47XG4gIGVuYWJsZWQ/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ10+O1xuICBjYXRlZ29yeUlkPzogTWF5YmU8U2NhbGFyc1snSUQnXT47XG4gIHpvbmVJZD86IE1heWJlPFNjYWxhcnNbJ0lEJ10+O1xuICBjdXN0b21lckdyb3VwSWQ/OiBNYXliZTxTY2FsYXJzWydJRCddPjtcbn07XG5cbmV4cG9ydCB0eXBlIENyZWF0ZVpvbmVJbnB1dCA9IHtcbiAgbmFtZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIG1lbWJlcklkcz86IE1heWJlPEFycmF5PFNjYWxhcnNbJ0lEJ10+Pjtcbn07XG5cbmV4cG9ydCB0eXBlIFVwZGF0ZVpvbmVJbnB1dCA9IHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG59O1xuXG5leHBvcnQgdHlwZSBBZGRyZXNzID0gTm9kZSAmIHtcbiAgX190eXBlbmFtZT86ICdBZGRyZXNzJztcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIGNyZWF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgdXBkYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICBmdWxsTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgY29tcGFueT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgc3RyZWV0TGluZTE6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBzdHJlZXRMaW5lMj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgY2l0eT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgcHJvdmluY2U/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIHBvc3RhbENvZGU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIGNvdW50cnk6IENvdW50cnk7XG4gIHBob25lTnVtYmVyPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBkZWZhdWx0U2hpcHBpbmdBZGRyZXNzPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddPjtcbiAgZGVmYXVsdEJpbGxpbmdBZGRyZXNzPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddPjtcbiAgY3VzdG9tRmllbGRzPzogTWF5YmU8U2NhbGFyc1snSlNPTiddPjtcbn07XG5cbmV4cG9ydCB0eXBlIENvb3JkaW5hdGUgPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ29vcmRpbmF0ZSc7XG4gIHg6IFNjYWxhcnNbJ0Zsb2F0J107XG4gIHk6IFNjYWxhcnNbJ0Zsb2F0J107XG59O1xuXG5leHBvcnQgdHlwZSBBc3NldExpc3QgPSBQYWdpbmF0ZWRMaXN0ICYge1xuICBfX3R5cGVuYW1lPzogJ0Fzc2V0TGlzdCc7XG4gIGl0ZW1zOiBBcnJheTxBc3NldD47XG4gIHRvdGFsSXRlbXM6IFNjYWxhcnNbJ0ludCddO1xufTtcblxuZXhwb3J0IGVudW0gQXNzZXRUeXBlIHtcbiAgSU1BR0UgPSAnSU1BR0UnLFxuICBWSURFTyA9ICdWSURFTycsXG4gIEJJTkFSWSA9ICdCSU5BUlknXG59XG5cbmV4cG9ydCB0eXBlIEN1cnJlbnRVc2VyID0ge1xuICBfX3R5cGVuYW1lPzogJ0N1cnJlbnRVc2VyJztcbiAgY2hhbm5lbHM6IEFycmF5PEN1cnJlbnRVc2VyQ2hhbm5lbD47XG4gIGlkOiBTY2FsYXJzWydJRCddO1xuICBpZGVudGlmaWVyOiBTY2FsYXJzWydTdHJpbmcnXTtcbn07XG5cbmV4cG9ydCB0eXBlIEN1cnJlbnRVc2VyQ2hhbm5lbCA9IHtcbiAgX190eXBlbmFtZT86ICdDdXJyZW50VXNlckNoYW5uZWwnO1xuICBjb2RlOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIHBlcm1pc3Npb25zOiBBcnJheTxQZXJtaXNzaW9uPjtcbiAgdG9rZW46IFNjYWxhcnNbJ1N0cmluZyddO1xufTtcblxuZXhwb3J0IHR5cGUgQ2hhbm5lbCA9IE5vZGUgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ2hhbm5lbCc7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xuICBjcmVhdGVkQXQ6IFNjYWxhcnNbJ0RhdGVUaW1lJ107XG4gIHVwZGF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgY29kZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIHRva2VuOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgZGVmYXVsdFRheFpvbmU/OiBNYXliZTxab25lPjtcbiAgZGVmYXVsdFNoaXBwaW5nWm9uZT86IE1heWJlPFpvbmU+O1xuICBkZWZhdWx0TGFuZ3VhZ2VDb2RlOiBMYW5ndWFnZUNvZGU7XG4gIGN1cnJlbmN5Q29kZTogQ3VycmVuY3lDb2RlO1xuICBwcmljZXNJbmNsdWRlVGF4OiBTY2FsYXJzWydCb29sZWFuJ107XG4gIGN1c3RvbUZpZWxkcz86IE1heWJlPFNjYWxhcnNbJ0pTT04nXT47XG59O1xuXG5leHBvcnQgdHlwZSBDb2xsZWN0aW9uQnJlYWRjcnVtYiA9IHtcbiAgX190eXBlbmFtZT86ICdDb2xsZWN0aW9uQnJlYWRjcnVtYic7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xuICBuYW1lOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgc2x1ZzogU2NhbGFyc1snU3RyaW5nJ107XG59O1xuXG5leHBvcnQgdHlwZSBDb2xsZWN0aW9uVHJhbnNsYXRpb24gPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ29sbGVjdGlvblRyYW5zbGF0aW9uJztcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIGNyZWF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgdXBkYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICBsYW5ndWFnZUNvZGU6IExhbmd1YWdlQ29kZTtcbiAgbmFtZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIHNsdWc6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBkZXNjcmlwdGlvbjogU2NhbGFyc1snU3RyaW5nJ107XG59O1xuXG5leHBvcnQgdHlwZSBDb2xsZWN0aW9uTGlzdCA9IFBhZ2luYXRlZExpc3QgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29sbGVjdGlvbkxpc3QnO1xuICBpdGVtczogQXJyYXk8Q29sbGVjdGlvbj47XG4gIHRvdGFsSXRlbXM6IFNjYWxhcnNbJ0ludCddO1xufTtcblxuZXhwb3J0IHR5cGUgUHJvZHVjdFZhcmlhbnRMaXN0ID0gUGFnaW5hdGVkTGlzdCAmIHtcbiAgX190eXBlbmFtZT86ICdQcm9kdWN0VmFyaWFudExpc3QnO1xuICBpdGVtczogQXJyYXk8UHJvZHVjdFZhcmlhbnQ+O1xuICB0b3RhbEl0ZW1zOiBTY2FsYXJzWydJbnQnXTtcbn07XG5cbmV4cG9ydCBlbnVtIEdsb2JhbEZsYWcge1xuICBUUlVFID0gJ1RSVUUnLFxuICBGQUxTRSA9ICdGQUxTRScsXG4gIElOSEVSSVQgPSAnSU5IRVJJVCdcbn1cblxuZXhwb3J0IGVudW0gQWRqdXN0bWVudFR5cGUge1xuICBQUk9NT1RJT04gPSAnUFJPTU9USU9OJyxcbiAgRElTVFJJQlVURURfT1JERVJfUFJPTU9USU9OID0gJ0RJU1RSSUJVVEVEX09SREVSX1BST01PVElPTidcbn1cblxuZXhwb3J0IGVudW0gRGVsZXRpb25SZXN1bHQge1xuICAvKiogVGhlIGVudGl0eSB3YXMgc3VjY2Vzc2Z1bGx5IGRlbGV0ZWQgKi9cbiAgREVMRVRFRCA9ICdERUxFVEVEJyxcbiAgLyoqIERlbGV0aW9uIGRpZCBub3QgdGFrZSBwbGFjZSwgcmVhc29uIGdpdmVuIGluIG1lc3NhZ2UgKi9cbiAgTk9UX0RFTEVURUQgPSAnTk9UX0RFTEVURUQnXG59XG5cbi8qKlxuICogQGRlc2NyaXB0aW9uXG4gKiBQZXJtaXNzaW9ucyBmb3IgYWRtaW5pc3RyYXRvcnMgYW5kIGN1c3RvbWVycy4gVXNlZCB0byBjb250cm9sIGFjY2VzcyB0b1xuICogR3JhcGhRTCByZXNvbHZlcnMgdmlhIHRoZSB7QGxpbmsgQWxsb3d9IGRlY29yYXRvci5cbiAqXG4gKiBAZG9jc0NhdGVnb3J5IGNvbW1vblxuICovXG5leHBvcnQgZW51bSBQZXJtaXNzaW9uIHtcbiAgLyoqIEF1dGhlbnRpY2F0ZWQgbWVhbnMgc2ltcGx5IHRoYXQgdGhlIHVzZXIgaXMgbG9nZ2VkIGluICovXG4gIEF1dGhlbnRpY2F0ZWQgPSAnQXV0aGVudGljYXRlZCcsXG4gIC8qKiBHcmFudHMgcGVybWlzc2lvbiB0byBjcmVhdGUgQWRtaW5pc3RyYXRvciAqL1xuICBDcmVhdGVBZG1pbmlzdHJhdG9yID0gJ0NyZWF0ZUFkbWluaXN0cmF0b3InLFxuICAvKiogR3JhbnRzIHBlcm1pc3Npb24gdG8gY3JlYXRlIEFzc2V0ICovXG4gIENyZWF0ZUFzc2V0ID0gJ0NyZWF0ZUFzc2V0JyxcbiAgLyoqIEdyYW50cyBwZXJtaXNzaW9uIHRvIGNyZWF0ZSBQcm9kdWN0cywgRmFjZXRzLCBBc3NldHMsIENvbGxlY3Rpb25zICovXG4gIENyZWF0ZUNhdGFsb2cgPSAnQ3JlYXRlQ2F0YWxvZycsXG4gIC8qKiBHcmFudHMgcGVybWlzc2lvbiB0byBjcmVhdGUgQ2hhbm5lbCAqL1xuICBDcmVhdGVDaGFubmVsID0gJ0NyZWF0ZUNoYW5uZWwnLFxuICAvKiogR3JhbnRzIHBlcm1pc3Npb24gdG8gY3JlYXRlIENvbGxlY3Rpb24gKi9cbiAgQ3JlYXRlQ29sbGVjdGlvbiA9ICdDcmVhdGVDb2xsZWN0aW9uJyxcbiAgLyoqIEdyYW50cyBwZXJtaXNzaW9uIHRvIGNyZWF0ZSBDb3VudHJ5ICovXG4gIENyZWF0ZUNvdW50cnkgPSAnQ3JlYXRlQ291bnRyeScsXG4gIC8qKiBHcmFudHMgcGVybWlzc2lvbiB0byBjcmVhdGUgQ3VzdG9tZXIgKi9cbiAgQ3JlYXRlQ3VzdG9tZXIgPSAnQ3JlYXRlQ3VzdG9tZXInLFxuICAvKiogR3JhbnRzIHBlcm1pc3Npb24gdG8gY3JlYXRlIEN1c3RvbWVyR3JvdXAgKi9cbiAgQ3JlYXRlQ3VzdG9tZXJHcm91cCA9ICdDcmVhdGVDdXN0b21lckdyb3VwJyxcbiAgLyoqIEdyYW50cyBwZXJtaXNzaW9uIHRvIGNyZWF0ZSBGYWNldCAqL1xuICBDcmVhdGVGYWNldCA9ICdDcmVhdGVGYWNldCcsXG4gIC8qKiBHcmFudHMgcGVybWlzc2lvbiB0byBjcmVhdGUgT3JkZXIgKi9cbiAgQ3JlYXRlT3JkZXIgPSAnQ3JlYXRlT3JkZXInLFxuICAvKiogR3JhbnRzIHBlcm1pc3Npb24gdG8gY3JlYXRlIFBheW1lbnRNZXRob2QgKi9cbiAgQ3JlYXRlUGF5bWVudE1ldGhvZCA9ICdDcmVhdGVQYXltZW50TWV0aG9kJyxcbiAgLyoqIEdyYW50cyBwZXJtaXNzaW9uIHRvIGNyZWF0ZSBQcm9kdWN0ICovXG4gIENyZWF0ZVByb2R1Y3QgPSAnQ3JlYXRlUHJvZHVjdCcsXG4gIC8qKiBHcmFudHMgcGVybWlzc2lvbiB0byBjcmVhdGUgUHJvbW90aW9uICovXG4gIENyZWF0ZVByb21vdGlvbiA9ICdDcmVhdGVQcm9tb3Rpb24nLFxuICAvKiogR3JhbnRzIHBlcm1pc3Npb24gdG8gY3JlYXRlIFBheW1lbnRNZXRob2RzLCBTaGlwcGluZ01ldGhvZHMsIFRheENhdGVnb3JpZXMsIFRheFJhdGVzLCBab25lcywgQ291bnRyaWVzLCBTeXN0ZW0gJiBHbG9iYWxTZXR0aW5ncyAqL1xuICBDcmVhdGVTZXR0aW5ncyA9ICdDcmVhdGVTZXR0aW5ncycsXG4gIC8qKiBHcmFudHMgcGVybWlzc2lvbiB0byBjcmVhdGUgU2hpcHBpbmdNZXRob2QgKi9cbiAgQ3JlYXRlU2hpcHBpbmdNZXRob2QgPSAnQ3JlYXRlU2hpcHBpbmdNZXRob2QnLFxuICAvKiogR3JhbnRzIHBlcm1pc3Npb24gdG8gY3JlYXRlIFN5c3RlbSAqL1xuICBDcmVhdGVTeXN0ZW0gPSAnQ3JlYXRlU3lzdGVtJyxcbiAgLyoqIEdyYW50cyBwZXJtaXNzaW9uIHRvIGNyZWF0ZSBUYWcgKi9cbiAgQ3JlYXRlVGFnID0gJ0NyZWF0ZVRhZycsXG4gIC8qKiBHcmFudHMgcGVybWlzc2lvbiB0byBjcmVhdGUgVGF4Q2F0ZWdvcnkgKi9cbiAgQ3JlYXRlVGF4Q2F0ZWdvcnkgPSAnQ3JlYXRlVGF4Q2F0ZWdvcnknLFxuICAvKiogR3JhbnRzIHBlcm1pc3Npb24gdG8gY3JlYXRlIFRheFJhdGUgKi9cbiAgQ3JlYXRlVGF4UmF0ZSA9ICdDcmVhdGVUYXhSYXRlJyxcbiAgLyoqIEdyYW50cyBwZXJtaXNzaW9uIHRvIGNyZWF0ZSBab25lICovXG4gIENyZWF0ZVpvbmUgPSAnQ3JlYXRlWm9uZScsXG4gIC8qKiBHcmFudHMgcGVybWlzc2lvbiB0byBkZWxldGUgQWRtaW5pc3RyYXRvciAqL1xuICBEZWxldGVBZG1pbmlzdHJhdG9yID0gJ0RlbGV0ZUFkbWluaXN0cmF0b3InLFxuICAvKiogR3JhbnRzIHBlcm1pc3Npb24gdG8gZGVsZXRlIEFzc2V0ICovXG4gIERlbGV0ZUFzc2V0ID0gJ0RlbGV0ZUFzc2V0JyxcbiAgLyoqIEdyYW50cyBwZXJtaXNzaW9uIHRvIGRlbGV0ZSBQcm9kdWN0cywgRmFjZXRzLCBBc3NldHMsIENvbGxlY3Rpb25zICovXG4gIERlbGV0ZUNhdGFsb2cgPSAnRGVsZXRlQ2F0YWxvZycsXG4gIC8qKiBHcmFudHMgcGVybWlzc2lvbiB0byBkZWxldGUgQ2hhbm5lbCAqL1xuICBEZWxldGVDaGFubmVsID0gJ0RlbGV0ZUNoYW5uZWwnLFxuICAvKiogR3JhbnRzIHBlcm1pc3Npb24gdG8gZGVsZXRlIENvbGxlY3Rpb24gKi9cbiAgRGVsZXRlQ29sbGVjdGlvbiA9ICdEZWxldGVDb2xsZWN0aW9uJyxcbiAgLyoqIEdyYW50cyBwZXJtaXNzaW9uIHRvIGRlbGV0ZSBDb3VudHJ5ICovXG4gIERlbGV0ZUNvdW50cnkgPSAnRGVsZXRlQ291bnRyeScsXG4gIC8qKiBHcmFudHMgcGVybWlzc2lvbiB0byBkZWxldGUgQ3VzdG9tZXIgKi9cbiAgRGVsZXRlQ3VzdG9tZXIgPSAnRGVsZXRlQ3VzdG9tZXInLFxuICAvKiogR3JhbnRzIHBlcm1pc3Npb24gdG8gZGVsZXRlIEN1c3RvbWVyR3JvdXAgKi9cbiAgRGVsZXRlQ3VzdG9tZXJHcm91cCA9ICdEZWxldGVDdXN0b21lckdyb3VwJyxcbiAgLyoqIEdyYW50cyBwZXJtaXNzaW9uIHRvIGRlbGV0ZSBGYWNldCAqL1xuICBEZWxldGVGYWNldCA9ICdEZWxldGVGYWNldCcsXG4gIC8qKiBHcmFudHMgcGVybWlzc2lvbiB0byBkZWxldGUgT3JkZXIgKi9cbiAgRGVsZXRlT3JkZXIgPSAnRGVsZXRlT3JkZXInLFxuICAvKiogR3JhbnRzIHBlcm1pc3Npb24gdG8gZGVsZXRlIFBheW1lbnRNZXRob2QgKi9cbiAgRGVsZXRlUGF5bWVudE1ldGhvZCA9ICdEZWxldGVQYXltZW50TWV0aG9kJyxcbiAgLyoqIEdyYW50cyBwZXJtaXNzaW9uIHRvIGRlbGV0ZSBQcm9kdWN0ICovXG4gIERlbGV0ZVByb2R1Y3QgPSAnRGVsZXRlUHJvZHVjdCcsXG4gIC8qKiBHcmFudHMgcGVybWlzc2lvbiB0byBkZWxldGUgUHJvbW90aW9uICovXG4gIERlbGV0ZVByb21vdGlvbiA9ICdEZWxldGVQcm9tb3Rpb24nLFxuICAvKiogR3JhbnRzIHBlcm1pc3Npb24gdG8gZGVsZXRlIFBheW1lbnRNZXRob2RzLCBTaGlwcGluZ01ldGhvZHMsIFRheENhdGVnb3JpZXMsIFRheFJhdGVzLCBab25lcywgQ291bnRyaWVzLCBTeXN0ZW0gJiBHbG9iYWxTZXR0aW5ncyAqL1xuICBEZWxldGVTZXR0aW5ncyA9ICdEZWxldGVTZXR0aW5ncycsXG4gIC8qKiBHcmFudHMgcGVybWlzc2lvbiB0byBkZWxldGUgU2hpcHBpbmdNZXRob2QgKi9cbiAgRGVsZXRlU2hpcHBpbmdNZXRob2QgPSAnRGVsZXRlU2hpcHBpbmdNZXRob2QnLFxuICAvKiogR3JhbnRzIHBlcm1pc3Npb24gdG8gZGVsZXRlIFN5c3RlbSAqL1xuICBEZWxldGVTeXN0ZW0gPSAnRGVsZXRlU3lzdGVtJyxcbiAgLyoqIEdyYW50cyBwZXJtaXNzaW9uIHRvIGRlbGV0ZSBUYWcgKi9cbiAgRGVsZXRlVGFnID0gJ0RlbGV0ZVRhZycsXG4gIC8qKiBHcmFudHMgcGVybWlzc2lvbiB0byBkZWxldGUgVGF4Q2F0ZWdvcnkgKi9cbiAgRGVsZXRlVGF4Q2F0ZWdvcnkgPSAnRGVsZXRlVGF4Q2F0ZWdvcnknLFxuICAvKiogR3JhbnRzIHBlcm1pc3Npb24gdG8gZGVsZXRlIFRheFJhdGUgKi9cbiAgRGVsZXRlVGF4UmF0ZSA9ICdEZWxldGVUYXhSYXRlJyxcbiAgLyoqIEdyYW50cyBwZXJtaXNzaW9uIHRvIGRlbGV0ZSBab25lICovXG4gIERlbGV0ZVpvbmUgPSAnRGVsZXRlWm9uZScsXG4gIC8qKiBPd25lciBtZWFucyB0aGUgdXNlciBvd25zIHRoaXMgZW50aXR5LCBlLmcuIGEgQ3VzdG9tZXIncyBvd24gT3JkZXIgKi9cbiAgT3duZXIgPSAnT3duZXInLFxuICBQbGFjZWhvbGRlciA9ICdQbGFjZWhvbGRlcicsXG4gIC8qKiBQdWJsaWMgbWVhbnMgYW55IHVuYXV0aGVudGljYXRlZCB1c2VyIG1heSBwZXJmb3JtIHRoZSBvcGVyYXRpb24gKi9cbiAgUHVibGljID0gJ1B1YmxpYycsXG4gIC8qKiBHcmFudHMgcGVybWlzc2lvbiB0byByZWFkIEFkbWluaXN0cmF0b3IgKi9cbiAgUmVhZEFkbWluaXN0cmF0b3IgPSAnUmVhZEFkbWluaXN0cmF0b3InLFxuICAvKiogR3JhbnRzIHBlcm1pc3Npb24gdG8gcmVhZCBBc3NldCAqL1xuICBSZWFkQXNzZXQgPSAnUmVhZEFzc2V0JyxcbiAgLyoqIEdyYW50cyBwZXJtaXNzaW9uIHRvIHJlYWQgUHJvZHVjdHMsIEZhY2V0cywgQXNzZXRzLCBDb2xsZWN0aW9ucyAqL1xuICBSZWFkQ2F0YWxvZyA9ICdSZWFkQ2F0YWxvZycsXG4gIC8qKiBHcmFudHMgcGVybWlzc2lvbiB0byByZWFkIENoYW5uZWwgKi9cbiAgUmVhZENoYW5uZWwgPSAnUmVhZENoYW5uZWwnLFxuICAvKiogR3JhbnRzIHBlcm1pc3Npb24gdG8gcmVhZCBDb2xsZWN0aW9uICovXG4gIFJlYWRDb2xsZWN0aW9uID0gJ1JlYWRDb2xsZWN0aW9uJyxcbiAgLyoqIEdyYW50cyBwZXJtaXNzaW9uIHRvIHJlYWQgQ291bnRyeSAqL1xuICBSZWFkQ291bnRyeSA9ICdSZWFkQ291bnRyeScsXG4gIC8qKiBHcmFudHMgcGVybWlzc2lvbiB0byByZWFkIEN1c3RvbWVyICovXG4gIFJlYWRDdXN0b21lciA9ICdSZWFkQ3VzdG9tZXInLFxuICAvKiogR3JhbnRzIHBlcm1pc3Npb24gdG8gcmVhZCBDdXN0b21lckdyb3VwICovXG4gIFJlYWRDdXN0b21lckdyb3VwID0gJ1JlYWRDdXN0b21lckdyb3VwJyxcbiAgLyoqIEdyYW50cyBwZXJtaXNzaW9uIHRvIHJlYWQgRmFjZXQgKi9cbiAgUmVhZEZhY2V0ID0gJ1JlYWRGYWNldCcsXG4gIC8qKiBHcmFudHMgcGVybWlzc2lvbiB0byByZWFkIE9yZGVyICovXG4gIFJlYWRPcmRlciA9ICdSZWFkT3JkZXInLFxuICAvKiogR3JhbnRzIHBlcm1pc3Npb24gdG8gcmVhZCBQYXltZW50TWV0aG9kICovXG4gIFJlYWRQYXltZW50TWV0aG9kID0gJ1JlYWRQYXltZW50TWV0aG9kJyxcbiAgLyoqIEdyYW50cyBwZXJtaXNzaW9uIHRvIHJlYWQgUHJvZHVjdCAqL1xuICBSZWFkUHJvZHVjdCA9ICdSZWFkUHJvZHVjdCcsXG4gIC8qKiBHcmFudHMgcGVybWlzc2lvbiB0byByZWFkIFByb21vdGlvbiAqL1xuICBSZWFkUHJvbW90aW9uID0gJ1JlYWRQcm9tb3Rpb24nLFxuICAvKiogR3JhbnRzIHBlcm1pc3Npb24gdG8gcmVhZCBQYXltZW50TWV0aG9kcywgU2hpcHBpbmdNZXRob2RzLCBUYXhDYXRlZ29yaWVzLCBUYXhSYXRlcywgWm9uZXMsIENvdW50cmllcywgU3lzdGVtICYgR2xvYmFsU2V0dGluZ3MgKi9cbiAgUmVhZFNldHRpbmdzID0gJ1JlYWRTZXR0aW5ncycsXG4gIC8qKiBHcmFudHMgcGVybWlzc2lvbiB0byByZWFkIFNoaXBwaW5nTWV0aG9kICovXG4gIFJlYWRTaGlwcGluZ01ldGhvZCA9ICdSZWFkU2hpcHBpbmdNZXRob2QnLFxuICAvKiogR3JhbnRzIHBlcm1pc3Npb24gdG8gcmVhZCBTeXN0ZW0gKi9cbiAgUmVhZFN5c3RlbSA9ICdSZWFkU3lzdGVtJyxcbiAgLyoqIEdyYW50cyBwZXJtaXNzaW9uIHRvIHJlYWQgVGFnICovXG4gIFJlYWRUYWcgPSAnUmVhZFRhZycsXG4gIC8qKiBHcmFudHMgcGVybWlzc2lvbiB0byByZWFkIFRheENhdGVnb3J5ICovXG4gIFJlYWRUYXhDYXRlZ29yeSA9ICdSZWFkVGF4Q2F0ZWdvcnknLFxuICAvKiogR3JhbnRzIHBlcm1pc3Npb24gdG8gcmVhZCBUYXhSYXRlICovXG4gIFJlYWRUYXhSYXRlID0gJ1JlYWRUYXhSYXRlJyxcbiAgLyoqIEdyYW50cyBwZXJtaXNzaW9uIHRvIHJlYWQgWm9uZSAqL1xuICBSZWFkWm9uZSA9ICdSZWFkWm9uZScsXG4gIC8qKiBTdXBlckFkbWluIGhhcyB1bnJlc3RyaWN0ZWQgYWNjZXNzIHRvIGFsbCBvcGVyYXRpb25zICovXG4gIFN1cGVyQWRtaW4gPSAnU3VwZXJBZG1pbicsXG4gIC8qKiBHcmFudHMgcGVybWlzc2lvbiB0byB1cGRhdGUgQWRtaW5pc3RyYXRvciAqL1xuICBVcGRhdGVBZG1pbmlzdHJhdG9yID0gJ1VwZGF0ZUFkbWluaXN0cmF0b3InLFxuICAvKiogR3JhbnRzIHBlcm1pc3Npb24gdG8gdXBkYXRlIEFzc2V0ICovXG4gIFVwZGF0ZUFzc2V0ID0gJ1VwZGF0ZUFzc2V0JyxcbiAgLyoqIEdyYW50cyBwZXJtaXNzaW9uIHRvIHVwZGF0ZSBQcm9kdWN0cywgRmFjZXRzLCBBc3NldHMsIENvbGxlY3Rpb25zICovXG4gIFVwZGF0ZUNhdGFsb2cgPSAnVXBkYXRlQ2F0YWxvZycsXG4gIC8qKiBHcmFudHMgcGVybWlzc2lvbiB0byB1cGRhdGUgQ2hhbm5lbCAqL1xuICBVcGRhdGVDaGFubmVsID0gJ1VwZGF0ZUNoYW5uZWwnLFxuICAvKiogR3JhbnRzIHBlcm1pc3Npb24gdG8gdXBkYXRlIENvbGxlY3Rpb24gKi9cbiAgVXBkYXRlQ29sbGVjdGlvbiA9ICdVcGRhdGVDb2xsZWN0aW9uJyxcbiAgLyoqIEdyYW50cyBwZXJtaXNzaW9uIHRvIHVwZGF0ZSBDb3VudHJ5ICovXG4gIFVwZGF0ZUNvdW50cnkgPSAnVXBkYXRlQ291bnRyeScsXG4gIC8qKiBHcmFudHMgcGVybWlzc2lvbiB0byB1cGRhdGUgQ3VzdG9tZXIgKi9cbiAgVXBkYXRlQ3VzdG9tZXIgPSAnVXBkYXRlQ3VzdG9tZXInLFxuICAvKiogR3JhbnRzIHBlcm1pc3Npb24gdG8gdXBkYXRlIEN1c3RvbWVyR3JvdXAgKi9cbiAgVXBkYXRlQ3VzdG9tZXJHcm91cCA9ICdVcGRhdGVDdXN0b21lckdyb3VwJyxcbiAgLyoqIEdyYW50cyBwZXJtaXNzaW9uIHRvIHVwZGF0ZSBGYWNldCAqL1xuICBVcGRhdGVGYWNldCA9ICdVcGRhdGVGYWNldCcsXG4gIC8qKiBHcmFudHMgcGVybWlzc2lvbiB0byB1cGRhdGUgR2xvYmFsU2V0dGluZ3MgKi9cbiAgVXBkYXRlR2xvYmFsU2V0dGluZ3MgPSAnVXBkYXRlR2xvYmFsU2V0dGluZ3MnLFxuICAvKiogR3JhbnRzIHBlcm1pc3Npb24gdG8gdXBkYXRlIE9yZGVyICovXG4gIFVwZGF0ZU9yZGVyID0gJ1VwZGF0ZU9yZGVyJyxcbiAgLyoqIEdyYW50cyBwZXJtaXNzaW9uIHRvIHVwZGF0ZSBQYXltZW50TWV0aG9kICovXG4gIFVwZGF0ZVBheW1lbnRNZXRob2QgPSAnVXBkYXRlUGF5bWVudE1ldGhvZCcsXG4gIC8qKiBHcmFudHMgcGVybWlzc2lvbiB0byB1cGRhdGUgUHJvZHVjdCAqL1xuICBVcGRhdGVQcm9kdWN0ID0gJ1VwZGF0ZVByb2R1Y3QnLFxuICAvKiogR3JhbnRzIHBlcm1pc3Npb24gdG8gdXBkYXRlIFByb21vdGlvbiAqL1xuICBVcGRhdGVQcm9tb3Rpb24gPSAnVXBkYXRlUHJvbW90aW9uJyxcbiAgLyoqIEdyYW50cyBwZXJtaXNzaW9uIHRvIHVwZGF0ZSBQYXltZW50TWV0aG9kcywgU2hpcHBpbmdNZXRob2RzLCBUYXhDYXRlZ29yaWVzLCBUYXhSYXRlcywgWm9uZXMsIENvdW50cmllcywgU3lzdGVtICYgR2xvYmFsU2V0dGluZ3MgKi9cbiAgVXBkYXRlU2V0dGluZ3MgPSAnVXBkYXRlU2V0dGluZ3MnLFxuICAvKiogR3JhbnRzIHBlcm1pc3Npb24gdG8gdXBkYXRlIFNoaXBwaW5nTWV0aG9kICovXG4gIFVwZGF0ZVNoaXBwaW5nTWV0aG9kID0gJ1VwZGF0ZVNoaXBwaW5nTWV0aG9kJyxcbiAgLyoqIEdyYW50cyBwZXJtaXNzaW9uIHRvIHVwZGF0ZSBTeXN0ZW0gKi9cbiAgVXBkYXRlU3lzdGVtID0gJ1VwZGF0ZVN5c3RlbScsXG4gIC8qKiBHcmFudHMgcGVybWlzc2lvbiB0byB1cGRhdGUgVGFnICovXG4gIFVwZGF0ZVRhZyA9ICdVcGRhdGVUYWcnLFxuICAvKiogR3JhbnRzIHBlcm1pc3Npb24gdG8gdXBkYXRlIFRheENhdGVnb3J5ICovXG4gIFVwZGF0ZVRheENhdGVnb3J5ID0gJ1VwZGF0ZVRheENhdGVnb3J5JyxcbiAgLyoqIEdyYW50cyBwZXJtaXNzaW9uIHRvIHVwZGF0ZSBUYXhSYXRlICovXG4gIFVwZGF0ZVRheFJhdGUgPSAnVXBkYXRlVGF4UmF0ZScsXG4gIC8qKiBHcmFudHMgcGVybWlzc2lvbiB0byB1cGRhdGUgWm9uZSAqL1xuICBVcGRhdGVab25lID0gJ1VwZGF0ZVpvbmUnXG59XG5cbmV4cG9ydCBlbnVtIFNvcnRPcmRlciB7XG4gIEFTQyA9ICdBU0MnLFxuICBERVNDID0gJ0RFU0MnXG59XG5cbmV4cG9ydCBlbnVtIEVycm9yQ29kZSB7XG4gIFVOS05PV05fRVJST1IgPSAnVU5LTk9XTl9FUlJPUicsXG4gIE1JTUVfVFlQRV9FUlJPUiA9ICdNSU1FX1RZUEVfRVJST1InLFxuICBMQU5HVUFHRV9OT1RfQVZBSUxBQkxFX0VSUk9SID0gJ0xBTkdVQUdFX05PVF9BVkFJTEFCTEVfRVJST1InLFxuICBDSEFOTkVMX0RFRkFVTFRfTEFOR1VBR0VfRVJST1IgPSAnQ0hBTk5FTF9ERUZBVUxUX0xBTkdVQUdFX0VSUk9SJyxcbiAgU0VUVExFX1BBWU1FTlRfRVJST1IgPSAnU0VUVExFX1BBWU1FTlRfRVJST1InLFxuICBFTVBUWV9PUkRFUl9MSU5FX1NFTEVDVElPTl9FUlJPUiA9ICdFTVBUWV9PUkRFUl9MSU5FX1NFTEVDVElPTl9FUlJPUicsXG4gIElURU1TX0FMUkVBRFlfRlVMRklMTEVEX0VSUk9SID0gJ0lURU1TX0FMUkVBRFlfRlVMRklMTEVEX0VSUk9SJyxcbiAgSU5WQUxJRF9GVUxGSUxMTUVOVF9IQU5ETEVSX0VSUk9SID0gJ0lOVkFMSURfRlVMRklMTE1FTlRfSEFORExFUl9FUlJPUicsXG4gIENSRUFURV9GVUxGSUxMTUVOVF9FUlJPUiA9ICdDUkVBVEVfRlVMRklMTE1FTlRfRVJST1InLFxuICBJTlNVRkZJQ0lFTlRfU1RPQ0tfT05fSEFORF9FUlJPUiA9ICdJTlNVRkZJQ0lFTlRfU1RPQ0tfT05fSEFORF9FUlJPUicsXG4gIE1VTFRJUExFX09SREVSX0VSUk9SID0gJ01VTFRJUExFX09SREVSX0VSUk9SJyxcbiAgQ0FOQ0VMX0FDVElWRV9PUkRFUl9FUlJPUiA9ICdDQU5DRUxfQUNUSVZFX09SREVSX0VSUk9SJyxcbiAgUEFZTUVOVF9PUkRFUl9NSVNNQVRDSF9FUlJPUiA9ICdQQVlNRU5UX09SREVSX01JU01BVENIX0VSUk9SJyxcbiAgUkVGVU5EX09SREVSX1NUQVRFX0VSUk9SID0gJ1JFRlVORF9PUkRFUl9TVEFURV9FUlJPUicsXG4gIE5PVEhJTkdfVE9fUkVGVU5EX0VSUk9SID0gJ05PVEhJTkdfVE9fUkVGVU5EX0VSUk9SJyxcbiAgQUxSRUFEWV9SRUZVTkRFRF9FUlJPUiA9ICdBTFJFQURZX1JFRlVOREVEX0VSUk9SJyxcbiAgUVVBTlRJVFlfVE9PX0dSRUFUX0VSUk9SID0gJ1FVQU5USVRZX1RPT19HUkVBVF9FUlJPUicsXG4gIFJFRlVORF9TVEFURV9UUkFOU0lUSU9OX0VSUk9SID0gJ1JFRlVORF9TVEFURV9UUkFOU0lUSU9OX0VSUk9SJyxcbiAgUEFZTUVOVF9TVEFURV9UUkFOU0lUSU9OX0VSUk9SID0gJ1BBWU1FTlRfU1RBVEVfVFJBTlNJVElPTl9FUlJPUicsXG4gIEZVTEZJTExNRU5UX1NUQVRFX1RSQU5TSVRJT05fRVJST1IgPSAnRlVMRklMTE1FTlRfU1RBVEVfVFJBTlNJVElPTl9FUlJPUicsXG4gIE9SREVSX01PRElGSUNBVElPTl9TVEFURV9FUlJPUiA9ICdPUkRFUl9NT0RJRklDQVRJT05fU1RBVEVfRVJST1InLFxuICBOT19DSEFOR0VTX1NQRUNJRklFRF9FUlJPUiA9ICdOT19DSEFOR0VTX1NQRUNJRklFRF9FUlJPUicsXG4gIFBBWU1FTlRfTUVUSE9EX01JU1NJTkdfRVJST1IgPSAnUEFZTUVOVF9NRVRIT0RfTUlTU0lOR19FUlJPUicsXG4gIFJFRlVORF9QQVlNRU5UX0lEX01JU1NJTkdfRVJST1IgPSAnUkVGVU5EX1BBWU1FTlRfSURfTUlTU0lOR19FUlJPUicsXG4gIE1BTlVBTF9QQVlNRU5UX1NUQVRFX0VSUk9SID0gJ01BTlVBTF9QQVlNRU5UX1NUQVRFX0VSUk9SJyxcbiAgUFJPRFVDVF9PUFRJT05fSU5fVVNFX0VSUk9SID0gJ1BST0RVQ1RfT1BUSU9OX0lOX1VTRV9FUlJPUicsXG4gIE1JU1NJTkdfQ09ORElUSU9OU19FUlJPUiA9ICdNSVNTSU5HX0NPTkRJVElPTlNfRVJST1InLFxuICBOQVRJVkVfQVVUSF9TVFJBVEVHWV9FUlJPUiA9ICdOQVRJVkVfQVVUSF9TVFJBVEVHWV9FUlJPUicsXG4gIElOVkFMSURfQ1JFREVOVElBTFNfRVJST1IgPSAnSU5WQUxJRF9DUkVERU5USUFMU19FUlJPUicsXG4gIE9SREVSX1NUQVRFX1RSQU5TSVRJT05fRVJST1IgPSAnT1JERVJfU1RBVEVfVFJBTlNJVElPTl9FUlJPUicsXG4gIEVNQUlMX0FERFJFU1NfQ09ORkxJQ1RfRVJST1IgPSAnRU1BSUxfQUREUkVTU19DT05GTElDVF9FUlJPUicsXG4gIE9SREVSX0xJTUlUX0VSUk9SID0gJ09SREVSX0xJTUlUX0VSUk9SJyxcbiAgTkVHQVRJVkVfUVVBTlRJVFlfRVJST1IgPSAnTkVHQVRJVkVfUVVBTlRJVFlfRVJST1InLFxuICBJTlNVRkZJQ0lFTlRfU1RPQ0tfRVJST1IgPSAnSU5TVUZGSUNJRU5UX1NUT0NLX0VSUk9SJ1xufVxuXG5leHBvcnQgZW51bSBMb2dpY2FsT3BlcmF0b3Ige1xuICBBTkQgPSAnQU5EJyxcbiAgT1IgPSAnT1InXG59XG5cbi8qKiBSZXR1cmVkIHdoZW4gYXR0ZW1wdGluZyBhbiBvcGVyYXRpb24gdGhhdCByZWxpZXMgb24gdGhlIE5hdGl2ZUF1dGhTdHJhdGVneSwgaWYgdGhhdCBzdHJhdGVneSBpcyBub3QgY29uZmlndXJlZC4gKi9cbmV4cG9ydCB0eXBlIE5hdGl2ZUF1dGhTdHJhdGVneUVycm9yID0gRXJyb3JSZXN1bHQgJiB7XG4gIF9fdHlwZW5hbWU/OiAnTmF0aXZlQXV0aFN0cmF0ZWd5RXJyb3InO1xuICBlcnJvckNvZGU6IEVycm9yQ29kZTtcbiAgbWVzc2FnZTogU2NhbGFyc1snU3RyaW5nJ107XG59O1xuXG4vKiogUmV0dXJuZWQgaWYgdGhlIHVzZXIgYXV0aGVudGljYXRpb24gY3JlZGVudGlhbHMgYXJlIG5vdCB2YWxpZCAqL1xuZXhwb3J0IHR5cGUgSW52YWxpZENyZWRlbnRpYWxzRXJyb3IgPSBFcnJvclJlc3VsdCAmIHtcbiAgX190eXBlbmFtZT86ICdJbnZhbGlkQ3JlZGVudGlhbHNFcnJvcic7XG4gIGVycm9yQ29kZTogRXJyb3JDb2RlO1xuICBtZXNzYWdlOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgYXV0aGVudGljYXRpb25FcnJvcjogU2NhbGFyc1snU3RyaW5nJ107XG59O1xuXG4vKiogUmV0dXJuZWQgaWYgdGhlcmUgaXMgYW4gZXJyb3IgaW4gdHJhbnNpdGlvbmluZyB0aGUgT3JkZXIgc3RhdGUgKi9cbmV4cG9ydCB0eXBlIE9yZGVyU3RhdGVUcmFuc2l0aW9uRXJyb3IgPSBFcnJvclJlc3VsdCAmIHtcbiAgX190eXBlbmFtZT86ICdPcmRlclN0YXRlVHJhbnNpdGlvbkVycm9yJztcbiAgZXJyb3JDb2RlOiBFcnJvckNvZGU7XG4gIG1lc3NhZ2U6IFNjYWxhcnNbJ1N0cmluZyddO1xuICB0cmFuc2l0aW9uRXJyb3I6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBmcm9tU3RhdGU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICB0b1N0YXRlOiBTY2FsYXJzWydTdHJpbmcnXTtcbn07XG5cbi8qKiBSZXR1cmVkIHdoZW4gYXR0ZW10aW5nIHRvIGNyZWF0ZSBhIEN1c3RvbWVyIHdpdGggYW4gZW1haWwgYWRkcmVzcyBhbHJlYWR5IHJlZ2lzdGVyZWQgdG8gYW4gZXhpc3RpbmcgVXNlci4gKi9cbmV4cG9ydCB0eXBlIEVtYWlsQWRkcmVzc0NvbmZsaWN0RXJyb3IgPSBFcnJvclJlc3VsdCAmIHtcbiAgX190eXBlbmFtZT86ICdFbWFpbEFkZHJlc3NDb25mbGljdEVycm9yJztcbiAgZXJyb3JDb2RlOiBFcnJvckNvZGU7XG4gIG1lc3NhZ2U6IFNjYWxhcnNbJ1N0cmluZyddO1xufTtcblxuLyoqIFJldHVyZWQgd2hlbiB0aGUgbWF4aW11bSBvcmRlciBzaXplIGxpbWl0IGhhcyBiZWVuIHJlYWNoZWQuICovXG5leHBvcnQgdHlwZSBPcmRlckxpbWl0RXJyb3IgPSBFcnJvclJlc3VsdCAmIHtcbiAgX190eXBlbmFtZT86ICdPcmRlckxpbWl0RXJyb3InO1xuICBlcnJvckNvZGU6IEVycm9yQ29kZTtcbiAgbWVzc2FnZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIG1heEl0ZW1zOiBTY2FsYXJzWydJbnQnXTtcbn07XG5cbi8qKiBSZXR1cmVkIHdoZW4gYXR0ZW10aW5nIHRvIHNldCBhIG5lZ2F0aXZlIE9yZGVyTGluZSBxdWFudGl0eS4gKi9cbmV4cG9ydCB0eXBlIE5lZ2F0aXZlUXVhbnRpdHlFcnJvciA9IEVycm9yUmVzdWx0ICYge1xuICBfX3R5cGVuYW1lPzogJ05lZ2F0aXZlUXVhbnRpdHlFcnJvcic7XG4gIGVycm9yQ29kZTogRXJyb3JDb2RlO1xuICBtZXNzYWdlOiBTY2FsYXJzWydTdHJpbmcnXTtcbn07XG5cbi8qKiBSZXR1cm5lZCB3aGVuIGF0dGVtcHRpbmcgdG8gYWRkIG1vcmUgaXRlbXMgdG8gdGhlIE9yZGVyIHRoYW4gYXJlIGF2YWlsYWJsZSAqL1xuZXhwb3J0IHR5cGUgSW5zdWZmaWNpZW50U3RvY2tFcnJvciA9IEVycm9yUmVzdWx0ICYge1xuICBfX3R5cGVuYW1lPzogJ0luc3VmZmljaWVudFN0b2NrRXJyb3InO1xuICBlcnJvckNvZGU6IEVycm9yQ29kZTtcbiAgbWVzc2FnZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIHF1YW50aXR5QXZhaWxhYmxlOiBTY2FsYXJzWydJbnQnXTtcbiAgb3JkZXI6IE9yZGVyO1xufTtcblxuXG5cblxuZXhwb3J0IHR5cGUgUGFnaW5hdGVkTGlzdCA9IHtcbiAgaXRlbXM6IEFycmF5PE5vZGU+O1xuICB0b3RhbEl0ZW1zOiBTY2FsYXJzWydJbnQnXTtcbn07XG5cbmV4cG9ydCB0eXBlIE5vZGUgPSB7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xufTtcblxuZXhwb3J0IHR5cGUgRXJyb3JSZXN1bHQgPSB7XG4gIGVycm9yQ29kZTogRXJyb3JDb2RlO1xuICBtZXNzYWdlOiBTY2FsYXJzWydTdHJpbmcnXTtcbn07XG5cbmV4cG9ydCB0eXBlIEFkanVzdG1lbnQgPSB7XG4gIF9fdHlwZW5hbWU/OiAnQWRqdXN0bWVudCc7XG4gIGFkanVzdG1lbnRTb3VyY2U6IFNjYWxhcnNbJ1N0cmluZyddO1xuICB0eXBlOiBBZGp1c3RtZW50VHlwZTtcbiAgZGVzY3JpcHRpb246IFNjYWxhcnNbJ1N0cmluZyddO1xuICBhbW91bnQ6IFNjYWxhcnNbJ0ludCddO1xufTtcblxuZXhwb3J0IHR5cGUgVGF4TGluZSA9IHtcbiAgX190eXBlbmFtZT86ICdUYXhMaW5lJztcbiAgZGVzY3JpcHRpb246IFNjYWxhcnNbJ1N0cmluZyddO1xuICB0YXhSYXRlOiBTY2FsYXJzWydGbG9hdCddO1xufTtcblxuZXhwb3J0IHR5cGUgQ29uZmlnQXJnID0ge1xuICBfX3R5cGVuYW1lPzogJ0NvbmZpZ0FyZyc7XG4gIG5hbWU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICB2YWx1ZTogU2NhbGFyc1snU3RyaW5nJ107XG59O1xuXG5leHBvcnQgdHlwZSBDb25maWdBcmdEZWZpbml0aW9uID0ge1xuICBfX3R5cGVuYW1lPzogJ0NvbmZpZ0FyZ0RlZmluaXRpb24nO1xuICBuYW1lOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgdHlwZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIGxpc3Q6IFNjYWxhcnNbJ0Jvb2xlYW4nXTtcbiAgcmVxdWlyZWQ6IFNjYWxhcnNbJ0Jvb2xlYW4nXTtcbiAgZGVmYXVsdFZhbHVlPzogTWF5YmU8U2NhbGFyc1snSlNPTiddPjtcbiAgbGFiZWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIGRlc2NyaXB0aW9uPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICB1aT86IE1heWJlPFNjYWxhcnNbJ0pTT04nXT47XG59O1xuXG5leHBvcnQgdHlwZSBDb25maWd1cmFibGVPcGVyYXRpb24gPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ29uZmlndXJhYmxlT3BlcmF0aW9uJztcbiAgY29kZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIGFyZ3M6IEFycmF5PENvbmZpZ0FyZz47XG59O1xuXG5leHBvcnQgdHlwZSBDb25maWd1cmFibGVPcGVyYXRpb25EZWZpbml0aW9uID0ge1xuICBfX3R5cGVuYW1lPzogJ0NvbmZpZ3VyYWJsZU9wZXJhdGlvbkRlZmluaXRpb24nO1xuICBjb2RlOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgYXJnczogQXJyYXk8Q29uZmlnQXJnRGVmaW5pdGlvbj47XG4gIGRlc2NyaXB0aW9uOiBTY2FsYXJzWydTdHJpbmcnXTtcbn07XG5cbmV4cG9ydCB0eXBlIERlbGV0aW9uUmVzcG9uc2UgPSB7XG4gIF9fdHlwZW5hbWU/OiAnRGVsZXRpb25SZXNwb25zZSc7XG4gIHJlc3VsdDogRGVsZXRpb25SZXN1bHQ7XG4gIG1lc3NhZ2U/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG59O1xuXG5leHBvcnQgdHlwZSBDb25maWdBcmdJbnB1dCA9IHtcbiAgbmFtZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIC8qKiBBIEpTT04gc3RyaW5naWZpZWQgcmVwcmVzZW50YXRpb24gb2YgdGhlIGFjdHVhbCB2YWx1ZSAqL1xuICB2YWx1ZTogU2NhbGFyc1snU3RyaW5nJ107XG59O1xuXG5leHBvcnQgdHlwZSBDb25maWd1cmFibGVPcGVyYXRpb25JbnB1dCA9IHtcbiAgY29kZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIGFyZ3VtZW50czogQXJyYXk8Q29uZmlnQXJnSW5wdXQ+O1xufTtcblxuZXhwb3J0IHR5cGUgU3RyaW5nT3BlcmF0b3JzID0ge1xuICBlcT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgbm90RXE/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIGNvbnRhaW5zPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBub3RDb250YWlucz86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgaW4/OiBNYXliZTxBcnJheTxTY2FsYXJzWydTdHJpbmcnXT4+O1xuICBub3RJbj86IE1heWJlPEFycmF5PFNjYWxhcnNbJ1N0cmluZyddPj47XG4gIHJlZ2V4PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xufTtcblxuZXhwb3J0IHR5cGUgQm9vbGVhbk9wZXJhdG9ycyA9IHtcbiAgZXE/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ10+O1xufTtcblxuZXhwb3J0IHR5cGUgTnVtYmVyUmFuZ2UgPSB7XG4gIHN0YXJ0OiBTY2FsYXJzWydGbG9hdCddO1xuICBlbmQ6IFNjYWxhcnNbJ0Zsb2F0J107XG59O1xuXG5leHBvcnQgdHlwZSBOdW1iZXJPcGVyYXRvcnMgPSB7XG4gIGVxPzogTWF5YmU8U2NhbGFyc1snRmxvYXQnXT47XG4gIGx0PzogTWF5YmU8U2NhbGFyc1snRmxvYXQnXT47XG4gIGx0ZT86IE1heWJlPFNjYWxhcnNbJ0Zsb2F0J10+O1xuICBndD86IE1heWJlPFNjYWxhcnNbJ0Zsb2F0J10+O1xuICBndGU/OiBNYXliZTxTY2FsYXJzWydGbG9hdCddPjtcbiAgYmV0d2Vlbj86IE1heWJlPE51bWJlclJhbmdlPjtcbn07XG5cbmV4cG9ydCB0eXBlIERhdGVSYW5nZSA9IHtcbiAgc3RhcnQ6IFNjYWxhcnNbJ0RhdGVUaW1lJ107XG4gIGVuZDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbn07XG5cbmV4cG9ydCB0eXBlIERhdGVPcGVyYXRvcnMgPSB7XG4gIGVxPzogTWF5YmU8U2NhbGFyc1snRGF0ZVRpbWUnXT47XG4gIGJlZm9yZT86IE1heWJlPFNjYWxhcnNbJ0RhdGVUaW1lJ10+O1xuICBhZnRlcj86IE1heWJlPFNjYWxhcnNbJ0RhdGVUaW1lJ10+O1xuICBiZXR3ZWVuPzogTWF5YmU8RGF0ZVJhbmdlPjtcbn07XG5cbi8qKlxuICogVXNlZCB0byBjb25zdHJ1Y3QgYm9vbGVhbiBleHByZXNzaW9ucyBmb3IgZmlsdGVyaW5nIHNlYXJjaCByZXN1bHRzXG4gKiBieSBGYWNldFZhbHVlIElELiBFeGFtcGxlczpcbiAqXG4gKiAqIElEPTEgT1IgSUQ9MjogYHsgZmFjZXRWYWx1ZUZpbHRlcnM6IFt7IG9yOiBbMSwyXSB9XSB9YFxuICogKiBJRD0xIEFORCBJRD0yOiBgeyBmYWNldFZhbHVlRmlsdGVyczogW3sgYW5kOiAxIH0sIHsgYW5kOiAyIH1dIH1gXG4gKiAqIElEPTEgQU5EIChJRD0yIE9SIElEPTMpOiBgeyBmYWNldFZhbHVlRmlsdGVyczogW3sgYW5kOiAxIH0sIHsgb3I6IFsyLDNdIH1dIH1gXG4gKi9cbmV4cG9ydCB0eXBlIEZhY2V0VmFsdWVGaWx0ZXJJbnB1dCA9IHtcbiAgYW5kPzogTWF5YmU8U2NhbGFyc1snSUQnXT47XG4gIG9yPzogTWF5YmU8QXJyYXk8U2NhbGFyc1snSUQnXT4+O1xufTtcblxuZXhwb3J0IHR5cGUgU2VhcmNoSW5wdXQgPSB7XG4gIHRlcm0/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIGZhY2V0VmFsdWVJZHM/OiBNYXliZTxBcnJheTxTY2FsYXJzWydJRCddPj47XG4gIGZhY2V0VmFsdWVPcGVyYXRvcj86IE1heWJlPExvZ2ljYWxPcGVyYXRvcj47XG4gIGZhY2V0VmFsdWVGaWx0ZXJzPzogTWF5YmU8QXJyYXk8RmFjZXRWYWx1ZUZpbHRlcklucHV0Pj47XG4gIGNvbGxlY3Rpb25JZD86IE1heWJlPFNjYWxhcnNbJ0lEJ10+O1xuICBjb2xsZWN0aW9uU2x1Zz86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgZ3JvdXBCeVByb2R1Y3Q/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ10+O1xuICB0YWtlPzogTWF5YmU8U2NhbGFyc1snSW50J10+O1xuICBza2lwPzogTWF5YmU8U2NhbGFyc1snSW50J10+O1xuICBzb3J0PzogTWF5YmU8U2VhcmNoUmVzdWx0U29ydFBhcmFtZXRlcj47XG59O1xuXG5leHBvcnQgdHlwZSBTZWFyY2hSZXN1bHRTb3J0UGFyYW1ldGVyID0ge1xuICBuYW1lPzogTWF5YmU8U29ydE9yZGVyPjtcbiAgcHJpY2U/OiBNYXliZTxTb3J0T3JkZXI+O1xufTtcblxuZXhwb3J0IHR5cGUgQ3JlYXRlQ3VzdG9tZXJJbnB1dCA9IHtcbiAgdGl0bGU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIGZpcnN0TmFtZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIGxhc3ROYW1lOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgcGhvbmVOdW1iZXI/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIGVtYWlsQWRkcmVzczogU2NhbGFyc1snU3RyaW5nJ107XG4gIGN1c3RvbUZpZWxkcz86IE1heWJlPFNjYWxhcnNbJ0pTT04nXT47XG59O1xuXG5leHBvcnQgdHlwZSBDcmVhdGVBZGRyZXNzSW5wdXQgPSB7XG4gIGZ1bGxOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBjb21wYW55PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBzdHJlZXRMaW5lMTogU2NhbGFyc1snU3RyaW5nJ107XG4gIHN0cmVldExpbmUyPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBjaXR5PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBwcm92aW5jZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgcG9zdGFsQ29kZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgY291bnRyeUNvZGU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBwaG9uZU51bWJlcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgZGVmYXVsdFNoaXBwaW5nQWRkcmVzcz86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXT47XG4gIGRlZmF1bHRCaWxsaW5nQWRkcmVzcz86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXT47XG4gIGN1c3RvbUZpZWxkcz86IE1heWJlPFNjYWxhcnNbJ0pTT04nXT47XG59O1xuXG5leHBvcnQgdHlwZSBVcGRhdGVBZGRyZXNzSW5wdXQgPSB7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xuICBmdWxsTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgY29tcGFueT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgc3RyZWV0TGluZTE/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIHN0cmVldExpbmUyPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBjaXR5PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBwcm92aW5jZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgcG9zdGFsQ29kZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgY291bnRyeUNvZGU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIHBob25lTnVtYmVyPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBkZWZhdWx0U2hpcHBpbmdBZGRyZXNzPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddPjtcbiAgZGVmYXVsdEJpbGxpbmdBZGRyZXNzPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddPjtcbiAgY3VzdG9tRmllbGRzPzogTWF5YmU8U2NhbGFyc1snSlNPTiddPjtcbn07XG5cbi8qKiBJbmRpY2F0ZXMgdGhhdCBhbiBvcGVyYXRpb24gc3VjY2VlZGVkLCB3aGVyZSB3ZSBkbyBub3Qgd2FudCB0byByZXR1cm4gYW55IG1vcmUgc3BlY2lmaWMgaW5mb3JtYXRpb24uICovXG5leHBvcnQgdHlwZSBTdWNjZXNzID0ge1xuICBfX3R5cGVuYW1lPzogJ1N1Y2Nlc3MnO1xuICBzdWNjZXNzOiBTY2FsYXJzWydCb29sZWFuJ107XG59O1xuXG5leHBvcnQgdHlwZSBTaGlwcGluZ01ldGhvZFF1b3RlID0ge1xuICBfX3R5cGVuYW1lPzogJ1NoaXBwaW5nTWV0aG9kUXVvdGUnO1xuICBpZDogU2NhbGFyc1snSUQnXTtcbiAgcHJpY2U6IFNjYWxhcnNbJ0ludCddO1xuICBwcmljZVdpdGhUYXg6IFNjYWxhcnNbJ0ludCddO1xuICBjb2RlOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgbmFtZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIGRlc2NyaXB0aW9uOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgLyoqIEFueSBvcHRpb25hbCBtZXRhZGF0YSByZXR1cm5lZCBieSB0aGUgU2hpcHBpbmdDYWxjdWxhdG9yIGluIHRoZSBTaGlwcGluZ0NhbGN1bGF0aW9uUmVzdWx0ICovXG4gIG1ldGFkYXRhPzogTWF5YmU8U2NhbGFyc1snSlNPTiddPjtcbn07XG5cbmV4cG9ydCB0eXBlIFBheW1lbnRNZXRob2RRdW90ZSA9IHtcbiAgX190eXBlbmFtZT86ICdQYXltZW50TWV0aG9kUXVvdGUnO1xuICBpZDogU2NhbGFyc1snSUQnXTtcbiAgY29kZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIG5hbWU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBkZXNjcmlwdGlvbjogU2NhbGFyc1snU3RyaW5nJ107XG4gIGlzRWxpZ2libGU6IFNjYWxhcnNbJ0Jvb2xlYW4nXTtcbiAgZWxpZ2liaWxpdHlNZXNzYWdlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xufTtcblxuZXhwb3J0IHR5cGUgQ291bnRyeSA9IE5vZGUgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ291bnRyeSc7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xuICBjcmVhdGVkQXQ6IFNjYWxhcnNbJ0RhdGVUaW1lJ107XG4gIHVwZGF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgbGFuZ3VhZ2VDb2RlOiBMYW5ndWFnZUNvZGU7XG4gIGNvZGU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBuYW1lOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgZW5hYmxlZDogU2NhbGFyc1snQm9vbGVhbiddO1xuICB0cmFuc2xhdGlvbnM6IEFycmF5PENvdW50cnlUcmFuc2xhdGlvbj47XG59O1xuXG5leHBvcnQgdHlwZSBDb3VudHJ5VHJhbnNsYXRpb24gPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ291bnRyeVRyYW5zbGF0aW9uJztcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIGNyZWF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgdXBkYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICBsYW5ndWFnZUNvZGU6IExhbmd1YWdlQ29kZTtcbiAgbmFtZTogU2NhbGFyc1snU3RyaW5nJ107XG59O1xuXG5leHBvcnQgdHlwZSBDb3VudHJ5TGlzdCA9IFBhZ2luYXRlZExpc3QgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ291bnRyeUxpc3QnO1xuICBpdGVtczogQXJyYXk8Q291bnRyeT47XG4gIHRvdGFsSXRlbXM6IFNjYWxhcnNbJ0ludCddO1xufTtcblxuLyoqXG4gKiBAZGVzY3JpcHRpb25cbiAqIElTTyA0MjE3IGN1cnJlbmN5IGNvZGVcbiAqXG4gKiBAZG9jc0NhdGVnb3J5IGNvbW1vblxuICovXG5leHBvcnQgZW51bSBDdXJyZW5jeUNvZGUge1xuICAvKiogVW5pdGVkIEFyYWIgRW1pcmF0ZXMgZGlyaGFtICovXG4gIEFFRCA9ICdBRUQnLFxuICAvKiogQWZnaGFuIGFmZ2hhbmkgKi9cbiAgQUZOID0gJ0FGTicsXG4gIC8qKiBBbGJhbmlhbiBsZWsgKi9cbiAgQUxMID0gJ0FMTCcsXG4gIC8qKiBBcm1lbmlhbiBkcmFtICovXG4gIEFNRCA9ICdBTUQnLFxuICAvKiogTmV0aGVybGFuZHMgQW50aWxsZWFuIGd1aWxkZXIgKi9cbiAgQU5HID0gJ0FORycsXG4gIC8qKiBBbmdvbGFuIGt3YW56YSAqL1xuICBBT0EgPSAnQU9BJyxcbiAgLyoqIEFyZ2VudGluZSBwZXNvICovXG4gIEFSUyA9ICdBUlMnLFxuICAvKiogQXVzdHJhbGlhbiBkb2xsYXIgKi9cbiAgQVVEID0gJ0FVRCcsXG4gIC8qKiBBcnViYW4gZmxvcmluICovXG4gIEFXRyA9ICdBV0cnLFxuICAvKiogQXplcmJhaWphbmkgbWFuYXQgKi9cbiAgQVpOID0gJ0FaTicsXG4gIC8qKiBCb3NuaWEgYW5kIEhlcnplZ292aW5hIGNvbnZlcnRpYmxlIG1hcmsgKi9cbiAgQkFNID0gJ0JBTScsXG4gIC8qKiBCYXJiYWRvcyBkb2xsYXIgKi9cbiAgQkJEID0gJ0JCRCcsXG4gIC8qKiBCYW5nbGFkZXNoaSB0YWthICovXG4gIEJEVCA9ICdCRFQnLFxuICAvKiogQnVsZ2FyaWFuIGxldiAqL1xuICBCR04gPSAnQkdOJyxcbiAgLyoqIEJhaHJhaW5pIGRpbmFyICovXG4gIEJIRCA9ICdCSEQnLFxuICAvKiogQnVydW5kaWFuIGZyYW5jICovXG4gIEJJRiA9ICdCSUYnLFxuICAvKiogQmVybXVkaWFuIGRvbGxhciAqL1xuICBCTUQgPSAnQk1EJyxcbiAgLyoqIEJydW5laSBkb2xsYXIgKi9cbiAgQk5EID0gJ0JORCcsXG4gIC8qKiBCb2xpdmlhbm8gKi9cbiAgQk9CID0gJ0JPQicsXG4gIC8qKiBCcmF6aWxpYW4gcmVhbCAqL1xuICBCUkwgPSAnQlJMJyxcbiAgLyoqIEJhaGFtaWFuIGRvbGxhciAqL1xuICBCU0QgPSAnQlNEJyxcbiAgLyoqIEJodXRhbmVzZSBuZ3VsdHJ1bSAqL1xuICBCVE4gPSAnQlROJyxcbiAgLyoqIEJvdHN3YW5hIHB1bGEgKi9cbiAgQldQID0gJ0JXUCcsXG4gIC8qKiBCZWxhcnVzaWFuIHJ1YmxlICovXG4gIEJZTiA9ICdCWU4nLFxuICAvKiogQmVsaXplIGRvbGxhciAqL1xuICBCWkQgPSAnQlpEJyxcbiAgLyoqIENhbmFkaWFuIGRvbGxhciAqL1xuICBDQUQgPSAnQ0FEJyxcbiAgLyoqIENvbmdvbGVzZSBmcmFuYyAqL1xuICBDREYgPSAnQ0RGJyxcbiAgLyoqIFN3aXNzIGZyYW5jICovXG4gIENIRiA9ICdDSEYnLFxuICAvKiogQ2hpbGVhbiBwZXNvICovXG4gIENMUCA9ICdDTFAnLFxuICAvKiogUmVubWluYmkgKENoaW5lc2UpIHl1YW4gKi9cbiAgQ05ZID0gJ0NOWScsXG4gIC8qKiBDb2xvbWJpYW4gcGVzbyAqL1xuICBDT1AgPSAnQ09QJyxcbiAgLyoqIENvc3RhIFJpY2FuIGNvbG9uICovXG4gIENSQyA9ICdDUkMnLFxuICAvKiogQ3ViYW4gY29udmVydGlibGUgcGVzbyAqL1xuICBDVUMgPSAnQ1VDJyxcbiAgLyoqIEN1YmFuIHBlc28gKi9cbiAgQ1VQID0gJ0NVUCcsXG4gIC8qKiBDYXBlIFZlcmRlIGVzY3VkbyAqL1xuICBDVkUgPSAnQ1ZFJyxcbiAgLyoqIEN6ZWNoIGtvcnVuYSAqL1xuICBDWksgPSAnQ1pLJyxcbiAgLyoqIERqaWJvdXRpYW4gZnJhbmMgKi9cbiAgREpGID0gJ0RKRicsXG4gIC8qKiBEYW5pc2gga3JvbmUgKi9cbiAgREtLID0gJ0RLSycsXG4gIC8qKiBEb21pbmljYW4gcGVzbyAqL1xuICBET1AgPSAnRE9QJyxcbiAgLyoqIEFsZ2VyaWFuIGRpbmFyICovXG4gIERaRCA9ICdEWkQnLFxuICAvKiogRWd5cHRpYW4gcG91bmQgKi9cbiAgRUdQID0gJ0VHUCcsXG4gIC8qKiBFcml0cmVhbiBuYWtmYSAqL1xuICBFUk4gPSAnRVJOJyxcbiAgLyoqIEV0aGlvcGlhbiBiaXJyICovXG4gIEVUQiA9ICdFVEInLFxuICAvKiogRXVybyAqL1xuICBFVVIgPSAnRVVSJyxcbiAgLyoqIEZpamkgZG9sbGFyICovXG4gIEZKRCA9ICdGSkQnLFxuICAvKiogRmFsa2xhbmQgSXNsYW5kcyBwb3VuZCAqL1xuICBGS1AgPSAnRktQJyxcbiAgLyoqIFBvdW5kIHN0ZXJsaW5nICovXG4gIEdCUCA9ICdHQlAnLFxuICAvKiogR2VvcmdpYW4gbGFyaSAqL1xuICBHRUwgPSAnR0VMJyxcbiAgLyoqIEdoYW5haWFuIGNlZGkgKi9cbiAgR0hTID0gJ0dIUycsXG4gIC8qKiBHaWJyYWx0YXIgcG91bmQgKi9cbiAgR0lQID0gJ0dJUCcsXG4gIC8qKiBHYW1iaWFuIGRhbGFzaSAqL1xuICBHTUQgPSAnR01EJyxcbiAgLyoqIEd1aW5lYW4gZnJhbmMgKi9cbiAgR05GID0gJ0dORicsXG4gIC8qKiBHdWF0ZW1hbGFuIHF1ZXR6YWwgKi9cbiAgR1RRID0gJ0dUUScsXG4gIC8qKiBHdXlhbmVzZSBkb2xsYXIgKi9cbiAgR1lEID0gJ0dZRCcsXG4gIC8qKiBIb25nIEtvbmcgZG9sbGFyICovXG4gIEhLRCA9ICdIS0QnLFxuICAvKiogSG9uZHVyYW4gbGVtcGlyYSAqL1xuICBITkwgPSAnSE5MJyxcbiAgLyoqIENyb2F0aWFuIGt1bmEgKi9cbiAgSFJLID0gJ0hSSycsXG4gIC8qKiBIYWl0aWFuIGdvdXJkZSAqL1xuICBIVEcgPSAnSFRHJyxcbiAgLyoqIEh1bmdhcmlhbiBmb3JpbnQgKi9cbiAgSFVGID0gJ0hVRicsXG4gIC8qKiBJbmRvbmVzaWFuIHJ1cGlhaCAqL1xuICBJRFIgPSAnSURSJyxcbiAgLyoqIElzcmFlbGkgbmV3IHNoZWtlbCAqL1xuICBJTFMgPSAnSUxTJyxcbiAgLyoqIEluZGlhbiBydXBlZSAqL1xuICBJTlIgPSAnSU5SJyxcbiAgLyoqIElyYXFpIGRpbmFyICovXG4gIElRRCA9ICdJUUQnLFxuICAvKiogSXJhbmlhbiByaWFsICovXG4gIElSUiA9ICdJUlInLFxuICAvKiogSWNlbGFuZGljIGtyw7NuYSAqL1xuICBJU0sgPSAnSVNLJyxcbiAgLyoqIEphbWFpY2FuIGRvbGxhciAqL1xuICBKTUQgPSAnSk1EJyxcbiAgLyoqIEpvcmRhbmlhbiBkaW5hciAqL1xuICBKT0QgPSAnSk9EJyxcbiAgLyoqIEphcGFuZXNlIHllbiAqL1xuICBKUFkgPSAnSlBZJyxcbiAgLyoqIEtlbnlhbiBzaGlsbGluZyAqL1xuICBLRVMgPSAnS0VTJyxcbiAgLyoqIEt5cmd5enN0YW5pIHNvbSAqL1xuICBLR1MgPSAnS0dTJyxcbiAgLyoqIENhbWJvZGlhbiByaWVsICovXG4gIEtIUiA9ICdLSFInLFxuICAvKiogQ29tb3JvIGZyYW5jICovXG4gIEtNRiA9ICdLTUYnLFxuICAvKiogTm9ydGggS29yZWFuIHdvbiAqL1xuICBLUFcgPSAnS1BXJyxcbiAgLyoqIFNvdXRoIEtvcmVhbiB3b24gKi9cbiAgS1JXID0gJ0tSVycsXG4gIC8qKiBLdXdhaXRpIGRpbmFyICovXG4gIEtXRCA9ICdLV0QnLFxuICAvKiogQ2F5bWFuIElzbGFuZHMgZG9sbGFyICovXG4gIEtZRCA9ICdLWUQnLFxuICAvKiogS2F6YWtoc3RhbmkgdGVuZ2UgKi9cbiAgS1pUID0gJ0taVCcsXG4gIC8qKiBMYW8ga2lwICovXG4gIExBSyA9ICdMQUsnLFxuICAvKiogTGViYW5lc2UgcG91bmQgKi9cbiAgTEJQID0gJ0xCUCcsXG4gIC8qKiBTcmkgTGFua2FuIHJ1cGVlICovXG4gIExLUiA9ICdMS1InLFxuICAvKiogTGliZXJpYW4gZG9sbGFyICovXG4gIExSRCA9ICdMUkQnLFxuICAvKiogTGVzb3RobyBsb3RpICovXG4gIExTTCA9ICdMU0wnLFxuICAvKiogTGlieWFuIGRpbmFyICovXG4gIExZRCA9ICdMWUQnLFxuICAvKiogTW9yb2NjYW4gZGlyaGFtICovXG4gIE1BRCA9ICdNQUQnLFxuICAvKiogTW9sZG92YW4gbGV1ICovXG4gIE1ETCA9ICdNREwnLFxuICAvKiogTWFsYWdhc3kgYXJpYXJ5ICovXG4gIE1HQSA9ICdNR0EnLFxuICAvKiogTWFjZWRvbmlhbiBkZW5hciAqL1xuICBNS0QgPSAnTUtEJyxcbiAgLyoqIE15YW5tYXIga3lhdCAqL1xuICBNTUsgPSAnTU1LJyxcbiAgLyoqIE1vbmdvbGlhbiB0w7ZncsO2ZyAqL1xuICBNTlQgPSAnTU5UJyxcbiAgLyoqIE1hY2FuZXNlIHBhdGFjYSAqL1xuICBNT1AgPSAnTU9QJyxcbiAgLyoqIE1hdXJpdGFuaWFuIG91Z3VpeWEgKi9cbiAgTVJVID0gJ01SVScsXG4gIC8qKiBNYXVyaXRpYW4gcnVwZWUgKi9cbiAgTVVSID0gJ01VUicsXG4gIC8qKiBNYWxkaXZpYW4gcnVmaXlhYSAqL1xuICBNVlIgPSAnTVZSJyxcbiAgLyoqIE1hbGF3aWFuIGt3YWNoYSAqL1xuICBNV0sgPSAnTVdLJyxcbiAgLyoqIE1leGljYW4gcGVzbyAqL1xuICBNWE4gPSAnTVhOJyxcbiAgLyoqIE1hbGF5c2lhbiByaW5nZ2l0ICovXG4gIE1ZUiA9ICdNWVInLFxuICAvKiogTW96YW1iaWNhbiBtZXRpY2FsICovXG4gIE1aTiA9ICdNWk4nLFxuICAvKiogTmFtaWJpYW4gZG9sbGFyICovXG4gIE5BRCA9ICdOQUQnLFxuICAvKiogTmlnZXJpYW4gbmFpcmEgKi9cbiAgTkdOID0gJ05HTicsXG4gIC8qKiBOaWNhcmFndWFuIGPDs3Jkb2JhICovXG4gIE5JTyA9ICdOSU8nLFxuICAvKiogTm9yd2VnaWFuIGtyb25lICovXG4gIE5PSyA9ICdOT0snLFxuICAvKiogTmVwYWxlc2UgcnVwZWUgKi9cbiAgTlBSID0gJ05QUicsXG4gIC8qKiBOZXcgWmVhbGFuZCBkb2xsYXIgKi9cbiAgTlpEID0gJ05aRCcsXG4gIC8qKiBPbWFuaSByaWFsICovXG4gIE9NUiA9ICdPTVInLFxuICAvKiogUGFuYW1hbmlhbiBiYWxib2EgKi9cbiAgUEFCID0gJ1BBQicsXG4gIC8qKiBQZXJ1dmlhbiBzb2wgKi9cbiAgUEVOID0gJ1BFTicsXG4gIC8qKiBQYXB1YSBOZXcgR3VpbmVhbiBraW5hICovXG4gIFBHSyA9ICdQR0snLFxuICAvKiogUGhpbGlwcGluZSBwZXNvICovXG4gIFBIUCA9ICdQSFAnLFxuICAvKiogUGFraXN0YW5pIHJ1cGVlICovXG4gIFBLUiA9ICdQS1InLFxuICAvKiogUG9saXNoIHrFgm90eSAqL1xuICBQTE4gPSAnUExOJyxcbiAgLyoqIFBhcmFndWF5YW4gZ3VhcmFuw60gKi9cbiAgUFlHID0gJ1BZRycsXG4gIC8qKiBRYXRhcmkgcml5YWwgKi9cbiAgUUFSID0gJ1FBUicsXG4gIC8qKiBSb21hbmlhbiBsZXUgKi9cbiAgUk9OID0gJ1JPTicsXG4gIC8qKiBTZXJiaWFuIGRpbmFyICovXG4gIFJTRCA9ICdSU0QnLFxuICAvKiogUnVzc2lhbiBydWJsZSAqL1xuICBSVUIgPSAnUlVCJyxcbiAgLyoqIFJ3YW5kYW4gZnJhbmMgKi9cbiAgUldGID0gJ1JXRicsXG4gIC8qKiBTYXVkaSByaXlhbCAqL1xuICBTQVIgPSAnU0FSJyxcbiAgLyoqIFNvbG9tb24gSXNsYW5kcyBkb2xsYXIgKi9cbiAgU0JEID0gJ1NCRCcsXG4gIC8qKiBTZXljaGVsbGVzIHJ1cGVlICovXG4gIFNDUiA9ICdTQ1InLFxuICAvKiogU3VkYW5lc2UgcG91bmQgKi9cbiAgU0RHID0gJ1NERycsXG4gIC8qKiBTd2VkaXNoIGtyb25hL2tyb25vciAqL1xuICBTRUsgPSAnU0VLJyxcbiAgLyoqIFNpbmdhcG9yZSBkb2xsYXIgKi9cbiAgU0dEID0gJ1NHRCcsXG4gIC8qKiBTYWludCBIZWxlbmEgcG91bmQgKi9cbiAgU0hQID0gJ1NIUCcsXG4gIC8qKiBTaWVycmEgTGVvbmVhbiBsZW9uZSAqL1xuICBTTEwgPSAnU0xMJyxcbiAgLyoqIFNvbWFsaSBzaGlsbGluZyAqL1xuICBTT1MgPSAnU09TJyxcbiAgLyoqIFN1cmluYW1lc2UgZG9sbGFyICovXG4gIFNSRCA9ICdTUkQnLFxuICAvKiogU291dGggU3VkYW5lc2UgcG91bmQgKi9cbiAgU1NQID0gJ1NTUCcsXG4gIC8qKiBTw6NvIFRvbcOpIGFuZCBQcsOtbmNpcGUgZG9icmEgKi9cbiAgU1ROID0gJ1NUTicsXG4gIC8qKiBTYWx2YWRvcmFuIGNvbMOzbiAqL1xuICBTVkMgPSAnU1ZDJyxcbiAgLyoqIFN5cmlhbiBwb3VuZCAqL1xuICBTWVAgPSAnU1lQJyxcbiAgLyoqIFN3YXppIGxpbGFuZ2VuaSAqL1xuICBTWkwgPSAnU1pMJyxcbiAgLyoqIFRoYWkgYmFodCAqL1xuICBUSEIgPSAnVEhCJyxcbiAgLyoqIFRhamlraXN0YW5pIHNvbW9uaSAqL1xuICBUSlMgPSAnVEpTJyxcbiAgLyoqIFR1cmttZW5pc3RhbiBtYW5hdCAqL1xuICBUTVQgPSAnVE1UJyxcbiAgLyoqIFR1bmlzaWFuIGRpbmFyICovXG4gIFRORCA9ICdUTkQnLFxuICAvKiogVG9uZ2FuIHBhyrthbmdhICovXG4gIFRPUCA9ICdUT1AnLFxuICAvKiogVHVya2lzaCBsaXJhICovXG4gIFRSWSA9ICdUUlknLFxuICAvKiogVHJpbmlkYWQgYW5kIFRvYmFnbyBkb2xsYXIgKi9cbiAgVFREID0gJ1RURCcsXG4gIC8qKiBOZXcgVGFpd2FuIGRvbGxhciAqL1xuICBUV0QgPSAnVFdEJyxcbiAgLyoqIFRhbnphbmlhbiBzaGlsbGluZyAqL1xuICBUWlMgPSAnVFpTJyxcbiAgLyoqIFVrcmFpbmlhbiBocnl2bmlhICovXG4gIFVBSCA9ICdVQUgnLFxuICAvKiogVWdhbmRhbiBzaGlsbGluZyAqL1xuICBVR1ggPSAnVUdYJyxcbiAgLyoqIFVuaXRlZCBTdGF0ZXMgZG9sbGFyICovXG4gIFVTRCA9ICdVU0QnLFxuICAvKiogVXJ1Z3VheWFuIHBlc28gKi9cbiAgVVlVID0gJ1VZVScsXG4gIC8qKiBVemJla2lzdGFuIHNvbSAqL1xuICBVWlMgPSAnVVpTJyxcbiAgLyoqIFZlbmV6dWVsYW4gYm9sw612YXIgc29iZXJhbm8gKi9cbiAgVkVTID0gJ1ZFUycsXG4gIC8qKiBWaWV0bmFtZXNlIMSR4buTbmcgKi9cbiAgVk5EID0gJ1ZORCcsXG4gIC8qKiBWYW51YXR1IHZhdHUgKi9cbiAgVlVWID0gJ1ZVVicsXG4gIC8qKiBTYW1vYW4gdGFsYSAqL1xuICBXU1QgPSAnV1NUJyxcbiAgLyoqIENGQSBmcmFuYyBCRUFDICovXG4gIFhBRiA9ICdYQUYnLFxuICAvKiogRWFzdCBDYXJpYmJlYW4gZG9sbGFyICovXG4gIFhDRCA9ICdYQ0QnLFxuICAvKiogQ0ZBIGZyYW5jIEJDRUFPICovXG4gIFhPRiA9ICdYT0YnLFxuICAvKiogQ0ZQIGZyYW5jIChmcmFuYyBQYWNpZmlxdWUpICovXG4gIFhQRiA9ICdYUEYnLFxuICAvKiogWWVtZW5pIHJpYWwgKi9cbiAgWUVSID0gJ1lFUicsXG4gIC8qKiBTb3V0aCBBZnJpY2FuIHJhbmQgKi9cbiAgWkFSID0gJ1pBUicsXG4gIC8qKiBaYW1iaWFuIGt3YWNoYSAqL1xuICBaTVcgPSAnWk1XJyxcbiAgLyoqIFppbWJhYndlYW4gZG9sbGFyICovXG4gIFpXTCA9ICdaV0wnXG59XG5cbmV4cG9ydCB0eXBlIEN1c3RvbUZpZWxkID0ge1xuICBuYW1lOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgdHlwZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIGxpc3Q6IFNjYWxhcnNbJ0Jvb2xlYW4nXTtcbiAgbGFiZWw/OiBNYXliZTxBcnJheTxMb2NhbGl6ZWRTdHJpbmc+PjtcbiAgZGVzY3JpcHRpb24/OiBNYXliZTxBcnJheTxMb2NhbGl6ZWRTdHJpbmc+PjtcbiAgcmVhZG9ubHk/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ10+O1xuICBpbnRlcm5hbD86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXT47XG59O1xuXG5leHBvcnQgdHlwZSBTdHJpbmdDdXN0b21GaWVsZENvbmZpZyA9IEN1c3RvbUZpZWxkICYge1xuICBfX3R5cGVuYW1lPzogJ1N0cmluZ0N1c3RvbUZpZWxkQ29uZmlnJztcbiAgbmFtZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIHR5cGU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBsaXN0OiBTY2FsYXJzWydCb29sZWFuJ107XG4gIGxlbmd0aD86IE1heWJlPFNjYWxhcnNbJ0ludCddPjtcbiAgbGFiZWw/OiBNYXliZTxBcnJheTxMb2NhbGl6ZWRTdHJpbmc+PjtcbiAgZGVzY3JpcHRpb24/OiBNYXliZTxBcnJheTxMb2NhbGl6ZWRTdHJpbmc+PjtcbiAgcmVhZG9ubHk/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ10+O1xuICBpbnRlcm5hbD86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXT47XG4gIHBhdHRlcm4/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIG9wdGlvbnM/OiBNYXliZTxBcnJheTxTdHJpbmdGaWVsZE9wdGlvbj4+O1xufTtcblxuZXhwb3J0IHR5cGUgU3RyaW5nRmllbGRPcHRpb24gPSB7XG4gIF9fdHlwZW5hbWU/OiAnU3RyaW5nRmllbGRPcHRpb24nO1xuICB2YWx1ZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIGxhYmVsPzogTWF5YmU8QXJyYXk8TG9jYWxpemVkU3RyaW5nPj47XG59O1xuXG5leHBvcnQgdHlwZSBMb2NhbGVTdHJpbmdDdXN0b21GaWVsZENvbmZpZyA9IEN1c3RvbUZpZWxkICYge1xuICBfX3R5cGVuYW1lPzogJ0xvY2FsZVN0cmluZ0N1c3RvbUZpZWxkQ29uZmlnJztcbiAgbmFtZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIHR5cGU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBsaXN0OiBTY2FsYXJzWydCb29sZWFuJ107XG4gIGxlbmd0aD86IE1heWJlPFNjYWxhcnNbJ0ludCddPjtcbiAgbGFiZWw/OiBNYXliZTxBcnJheTxMb2NhbGl6ZWRTdHJpbmc+PjtcbiAgZGVzY3JpcHRpb24/OiBNYXliZTxBcnJheTxMb2NhbGl6ZWRTdHJpbmc+PjtcbiAgcmVhZG9ubHk/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ10+O1xuICBpbnRlcm5hbD86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXT47XG4gIHBhdHRlcm4/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG59O1xuXG5leHBvcnQgdHlwZSBJbnRDdXN0b21GaWVsZENvbmZpZyA9IEN1c3RvbUZpZWxkICYge1xuICBfX3R5cGVuYW1lPzogJ0ludEN1c3RvbUZpZWxkQ29uZmlnJztcbiAgbmFtZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIHR5cGU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBsaXN0OiBTY2FsYXJzWydCb29sZWFuJ107XG4gIGxhYmVsPzogTWF5YmU8QXJyYXk8TG9jYWxpemVkU3RyaW5nPj47XG4gIGRlc2NyaXB0aW9uPzogTWF5YmU8QXJyYXk8TG9jYWxpemVkU3RyaW5nPj47XG4gIHJlYWRvbmx5PzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddPjtcbiAgaW50ZXJuYWw/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ10+O1xuICBtaW4/OiBNYXliZTxTY2FsYXJzWydJbnQnXT47XG4gIG1heD86IE1heWJlPFNjYWxhcnNbJ0ludCddPjtcbiAgc3RlcD86IE1heWJlPFNjYWxhcnNbJ0ludCddPjtcbn07XG5cbmV4cG9ydCB0eXBlIEZsb2F0Q3VzdG9tRmllbGRDb25maWcgPSBDdXN0b21GaWVsZCAmIHtcbiAgX190eXBlbmFtZT86ICdGbG9hdEN1c3RvbUZpZWxkQ29uZmlnJztcbiAgbmFtZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIHR5cGU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBsaXN0OiBTY2FsYXJzWydCb29sZWFuJ107XG4gIGxhYmVsPzogTWF5YmU8QXJyYXk8TG9jYWxpemVkU3RyaW5nPj47XG4gIGRlc2NyaXB0aW9uPzogTWF5YmU8QXJyYXk8TG9jYWxpemVkU3RyaW5nPj47XG4gIHJlYWRvbmx5PzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddPjtcbiAgaW50ZXJuYWw/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ10+O1xuICBtaW4/OiBNYXliZTxTY2FsYXJzWydGbG9hdCddPjtcbiAgbWF4PzogTWF5YmU8U2NhbGFyc1snRmxvYXQnXT47XG4gIHN0ZXA/OiBNYXliZTxTY2FsYXJzWydGbG9hdCddPjtcbn07XG5cbmV4cG9ydCB0eXBlIEJvb2xlYW5DdXN0b21GaWVsZENvbmZpZyA9IEN1c3RvbUZpZWxkICYge1xuICBfX3R5cGVuYW1lPzogJ0Jvb2xlYW5DdXN0b21GaWVsZENvbmZpZyc7XG4gIG5hbWU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICB0eXBlOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgbGlzdDogU2NhbGFyc1snQm9vbGVhbiddO1xuICBsYWJlbD86IE1heWJlPEFycmF5PExvY2FsaXplZFN0cmluZz4+O1xuICBkZXNjcmlwdGlvbj86IE1heWJlPEFycmF5PExvY2FsaXplZFN0cmluZz4+O1xuICByZWFkb25seT86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXT47XG4gIGludGVybmFsPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddPjtcbn07XG5cbi8qKlxuICogRXhwZWN0cyB0aGUgc2FtZSB2YWxpZGF0aW9uIGZvcm1hdHMgYXMgdGhlIGA8aW5wdXQgdHlwZT1cImRhdGV0aW1lLWxvY2FsXCI+YCBIVE1MIGVsZW1lbnQuXG4gKiBTZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L2lucHV0L2RhdGV0aW1lLWxvY2FsI0FkZGl0aW9uYWxfYXR0cmlidXRlc1xuICovXG5leHBvcnQgdHlwZSBEYXRlVGltZUN1c3RvbUZpZWxkQ29uZmlnID0gQ3VzdG9tRmllbGQgJiB7XG4gIF9fdHlwZW5hbWU/OiAnRGF0ZVRpbWVDdXN0b21GaWVsZENvbmZpZyc7XG4gIG5hbWU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICB0eXBlOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgbGlzdDogU2NhbGFyc1snQm9vbGVhbiddO1xuICBsYWJlbD86IE1heWJlPEFycmF5PExvY2FsaXplZFN0cmluZz4+O1xuICBkZXNjcmlwdGlvbj86IE1heWJlPEFycmF5PExvY2FsaXplZFN0cmluZz4+O1xuICByZWFkb25seT86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXT47XG4gIGludGVybmFsPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddPjtcbiAgbWluPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBtYXg/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIHN0ZXA/OiBNYXliZTxTY2FsYXJzWydJbnQnXT47XG59O1xuXG5leHBvcnQgdHlwZSBSZWxhdGlvbkN1c3RvbUZpZWxkQ29uZmlnID0gQ3VzdG9tRmllbGQgJiB7XG4gIF9fdHlwZW5hbWU/OiAnUmVsYXRpb25DdXN0b21GaWVsZENvbmZpZyc7XG4gIG5hbWU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICB0eXBlOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgbGlzdDogU2NhbGFyc1snQm9vbGVhbiddO1xuICBsYWJlbD86IE1heWJlPEFycmF5PExvY2FsaXplZFN0cmluZz4+O1xuICBkZXNjcmlwdGlvbj86IE1heWJlPEFycmF5PExvY2FsaXplZFN0cmluZz4+O1xuICByZWFkb25seT86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXT47XG4gIGludGVybmFsPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddPjtcbiAgZW50aXR5OiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgc2NhbGFyRmllbGRzOiBBcnJheTxTY2FsYXJzWydTdHJpbmcnXT47XG59O1xuXG5leHBvcnQgdHlwZSBMb2NhbGl6ZWRTdHJpbmcgPSB7XG4gIF9fdHlwZW5hbWU/OiAnTG9jYWxpemVkU3RyaW5nJztcbiAgbGFuZ3VhZ2VDb2RlOiBMYW5ndWFnZUNvZGU7XG4gIHZhbHVlOiBTY2FsYXJzWydTdHJpbmcnXTtcbn07XG5cbmV4cG9ydCB0eXBlIEN1c3RvbUZpZWxkQ29uZmlnID0gU3RyaW5nQ3VzdG9tRmllbGRDb25maWcgfCBMb2NhbGVTdHJpbmdDdXN0b21GaWVsZENvbmZpZyB8IEludEN1c3RvbUZpZWxkQ29uZmlnIHwgRmxvYXRDdXN0b21GaWVsZENvbmZpZyB8IEJvb2xlYW5DdXN0b21GaWVsZENvbmZpZyB8IERhdGVUaW1lQ3VzdG9tRmllbGRDb25maWcgfCBSZWxhdGlvbkN1c3RvbUZpZWxkQ29uZmlnO1xuXG5leHBvcnQgdHlwZSBDdXN0b21lckdyb3VwID0gTm9kZSAmIHtcbiAgX190eXBlbmFtZT86ICdDdXN0b21lckdyb3VwJztcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIGNyZWF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgdXBkYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICBuYW1lOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgY3VzdG9tZXJzOiBDdXN0b21lckxpc3Q7XG59O1xuXG5cbmV4cG9ydCB0eXBlIEN1c3RvbWVyR3JvdXBDdXN0b21lcnNBcmdzID0ge1xuICBvcHRpb25zPzogTWF5YmU8Q3VzdG9tZXJMaXN0T3B0aW9ucz47XG59O1xuXG5leHBvcnQgdHlwZSBDdXN0b21lckxpc3QgPSBQYWdpbmF0ZWRMaXN0ICYge1xuICBfX3R5cGVuYW1lPzogJ0N1c3RvbWVyTGlzdCc7XG4gIGl0ZW1zOiBBcnJheTxDdXN0b21lcj47XG4gIHRvdGFsSXRlbXM6IFNjYWxhcnNbJ0ludCddO1xufTtcblxuZXhwb3J0IHR5cGUgRmFjZXRWYWx1ZSA9IE5vZGUgJiB7XG4gIF9fdHlwZW5hbWU/OiAnRmFjZXRWYWx1ZSc7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xuICBjcmVhdGVkQXQ6IFNjYWxhcnNbJ0RhdGVUaW1lJ107XG4gIHVwZGF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgbGFuZ3VhZ2VDb2RlOiBMYW5ndWFnZUNvZGU7XG4gIGZhY2V0OiBGYWNldDtcbiAgbmFtZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIGNvZGU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICB0cmFuc2xhdGlvbnM6IEFycmF5PEZhY2V0VmFsdWVUcmFuc2xhdGlvbj47XG4gIGN1c3RvbUZpZWxkcz86IE1heWJlPFNjYWxhcnNbJ0pTT04nXT47XG59O1xuXG5leHBvcnQgdHlwZSBGYWNldFZhbHVlVHJhbnNsYXRpb24gPSB7XG4gIF9fdHlwZW5hbWU/OiAnRmFjZXRWYWx1ZVRyYW5zbGF0aW9uJztcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIGNyZWF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgdXBkYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICBsYW5ndWFnZUNvZGU6IExhbmd1YWdlQ29kZTtcbiAgbmFtZTogU2NhbGFyc1snU3RyaW5nJ107XG59O1xuXG5leHBvcnQgdHlwZSBGYWNldFRyYW5zbGF0aW9uID0ge1xuICBfX3R5cGVuYW1lPzogJ0ZhY2V0VHJhbnNsYXRpb24nO1xuICBpZDogU2NhbGFyc1snSUQnXTtcbiAgY3JlYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICB1cGRhdGVkQXQ6IFNjYWxhcnNbJ0RhdGVUaW1lJ107XG4gIGxhbmd1YWdlQ29kZTogTGFuZ3VhZ2VDb2RlO1xuICBuYW1lOiBTY2FsYXJzWydTdHJpbmcnXTtcbn07XG5cbmV4cG9ydCB0eXBlIEZhY2V0TGlzdCA9IFBhZ2luYXRlZExpc3QgJiB7XG4gIF9fdHlwZW5hbWU/OiAnRmFjZXRMaXN0JztcbiAgaXRlbXM6IEFycmF5PEZhY2V0PjtcbiAgdG90YWxJdGVtczogU2NhbGFyc1snSW50J107XG59O1xuXG5leHBvcnQgZW51bSBIaXN0b3J5RW50cnlUeXBlIHtcbiAgQ1VTVE9NRVJfUkVHSVNURVJFRCA9ICdDVVNUT01FUl9SRUdJU1RFUkVEJyxcbiAgQ1VTVE9NRVJfVkVSSUZJRUQgPSAnQ1VTVE9NRVJfVkVSSUZJRUQnLFxuICBDVVNUT01FUl9ERVRBSUxfVVBEQVRFRCA9ICdDVVNUT01FUl9ERVRBSUxfVVBEQVRFRCcsXG4gIENVU1RPTUVSX0FEREVEX1RPX0dST1VQID0gJ0NVU1RPTUVSX0FEREVEX1RPX0dST1VQJyxcbiAgQ1VTVE9NRVJfUkVNT1ZFRF9GUk9NX0dST1VQID0gJ0NVU1RPTUVSX1JFTU9WRURfRlJPTV9HUk9VUCcsXG4gIENVU1RPTUVSX0FERFJFU1NfQ1JFQVRFRCA9ICdDVVNUT01FUl9BRERSRVNTX0NSRUFURUQnLFxuICBDVVNUT01FUl9BRERSRVNTX1VQREFURUQgPSAnQ1VTVE9NRVJfQUREUkVTU19VUERBVEVEJyxcbiAgQ1VTVE9NRVJfQUREUkVTU19ERUxFVEVEID0gJ0NVU1RPTUVSX0FERFJFU1NfREVMRVRFRCcsXG4gIENVU1RPTUVSX1BBU1NXT1JEX1VQREFURUQgPSAnQ1VTVE9NRVJfUEFTU1dPUkRfVVBEQVRFRCcsXG4gIENVU1RPTUVSX1BBU1NXT1JEX1JFU0VUX1JFUVVFU1RFRCA9ICdDVVNUT01FUl9QQVNTV09SRF9SRVNFVF9SRVFVRVNURUQnLFxuICBDVVNUT01FUl9QQVNTV09SRF9SRVNFVF9WRVJJRklFRCA9ICdDVVNUT01FUl9QQVNTV09SRF9SRVNFVF9WRVJJRklFRCcsXG4gIENVU1RPTUVSX0VNQUlMX1VQREFURV9SRVFVRVNURUQgPSAnQ1VTVE9NRVJfRU1BSUxfVVBEQVRFX1JFUVVFU1RFRCcsXG4gIENVU1RPTUVSX0VNQUlMX1VQREFURV9WRVJJRklFRCA9ICdDVVNUT01FUl9FTUFJTF9VUERBVEVfVkVSSUZJRUQnLFxuICBDVVNUT01FUl9OT1RFID0gJ0NVU1RPTUVSX05PVEUnLFxuICBPUkRFUl9TVEFURV9UUkFOU0lUSU9OID0gJ09SREVSX1NUQVRFX1RSQU5TSVRJT04nLFxuICBPUkRFUl9QQVlNRU5UX1RSQU5TSVRJT04gPSAnT1JERVJfUEFZTUVOVF9UUkFOU0lUSU9OJyxcbiAgT1JERVJfRlVMRklMTE1FTlQgPSAnT1JERVJfRlVMRklMTE1FTlQnLFxuICBPUkRFUl9DQU5DRUxMQVRJT04gPSAnT1JERVJfQ0FOQ0VMTEFUSU9OJyxcbiAgT1JERVJfUkVGVU5EX1RSQU5TSVRJT04gPSAnT1JERVJfUkVGVU5EX1RSQU5TSVRJT04nLFxuICBPUkRFUl9GVUxGSUxMTUVOVF9UUkFOU0lUSU9OID0gJ09SREVSX0ZVTEZJTExNRU5UX1RSQU5TSVRJT04nLFxuICBPUkRFUl9OT1RFID0gJ09SREVSX05PVEUnLFxuICBPUkRFUl9DT1VQT05fQVBQTElFRCA9ICdPUkRFUl9DT1VQT05fQVBQTElFRCcsXG4gIE9SREVSX0NPVVBPTl9SRU1PVkVEID0gJ09SREVSX0NPVVBPTl9SRU1PVkVEJyxcbiAgT1JERVJfTU9ESUZJRUQgPSAnT1JERVJfTU9ESUZJRUQnXG59XG5cbmV4cG9ydCB0eXBlIEhpc3RvcnlFbnRyeUxpc3QgPSBQYWdpbmF0ZWRMaXN0ICYge1xuICBfX3R5cGVuYW1lPzogJ0hpc3RvcnlFbnRyeUxpc3QnO1xuICBpdGVtczogQXJyYXk8SGlzdG9yeUVudHJ5PjtcbiAgdG90YWxJdGVtczogU2NhbGFyc1snSW50J107XG59O1xuXG4vKipcbiAqIEBkZXNjcmlwdGlvblxuICogTGFuZ3VhZ2VzIGluIHRoZSBmb3JtIG9mIGEgSVNPIDYzOS0xIGxhbmd1YWdlIGNvZGUgd2l0aCBvcHRpb25hbFxuICogcmVnaW9uIG9yIHNjcmlwdCBtb2RpZmllciAoZS5nLiBkZV9BVCkuIFRoZSBzZWxlY3Rpb24gYXZhaWxhYmxlIGlzIGJhc2VkXG4gKiBvbiB0aGUgW1VuaWNvZGUgQ0xEUiBzdW1tYXJ5IGxpc3RdKGh0dHBzOi8vdW5pY29kZS1vcmcuZ2l0aHViLmlvL2NsZHItc3RhZ2luZy9jaGFydHMvMzcvc3VtbWFyeS9yb290Lmh0bWwpXG4gKiBhbmQgaW5jbHVkZXMgdGhlIG1ham9yIHNwb2tlbiBsYW5ndWFnZXMgb2YgdGhlIHdvcmxkIGFuZCBhbnkgd2lkZWx5LXVzZWQgdmFyaWFudHMuXG4gKlxuICogQGRvY3NDYXRlZ29yeSBjb21tb25cbiAqL1xuZXhwb3J0IGVudW0gTGFuZ3VhZ2VDb2RlIHtcbiAgLyoqIEFmcmlrYWFucyAqL1xuICBhZiA9ICdhZicsXG4gIC8qKiBBa2FuICovXG4gIGFrID0gJ2FrJyxcbiAgLyoqIEFtaGFyaWMgKi9cbiAgYW0gPSAnYW0nLFxuICAvKiogQXJhYmljICovXG4gIGFyID0gJ2FyJyxcbiAgLyoqIEFzc2FtZXNlICovXG4gIGFzID0gJ2FzJyxcbiAgLyoqIEF6ZXJiYWlqYW5pICovXG4gIGF6ID0gJ2F6JyxcbiAgLyoqIEJlbGFydXNpYW4gKi9cbiAgYmUgPSAnYmUnLFxuICAvKiogQnVsZ2FyaWFuICovXG4gIGJnID0gJ2JnJyxcbiAgLyoqIEJhbWJhcmEgKi9cbiAgYm0gPSAnYm0nLFxuICAvKiogQmFuZ2xhICovXG4gIGJuID0gJ2JuJyxcbiAgLyoqIFRpYmV0YW4gKi9cbiAgYm8gPSAnYm8nLFxuICAvKiogQnJldG9uICovXG4gIGJyID0gJ2JyJyxcbiAgLyoqIEJvc25pYW4gKi9cbiAgYnMgPSAnYnMnLFxuICAvKiogQ2F0YWxhbiAqL1xuICBjYSA9ICdjYScsXG4gIC8qKiBDaGVjaGVuICovXG4gIGNlID0gJ2NlJyxcbiAgLyoqIENvcnNpY2FuICovXG4gIGNvID0gJ2NvJyxcbiAgLyoqIEN6ZWNoICovXG4gIGNzID0gJ2NzJyxcbiAgLyoqIENodXJjaCBTbGF2aWMgKi9cbiAgY3UgPSAnY3UnLFxuICAvKiogV2Vsc2ggKi9cbiAgY3kgPSAnY3knLFxuICAvKiogRGFuaXNoICovXG4gIGRhID0gJ2RhJyxcbiAgLyoqIEdlcm1hbiAqL1xuICBkZSA9ICdkZScsXG4gIC8qKiBBdXN0cmlhbiBHZXJtYW4gKi9cbiAgZGVfQVQgPSAnZGVfQVQnLFxuICAvKiogU3dpc3MgSGlnaCBHZXJtYW4gKi9cbiAgZGVfQ0ggPSAnZGVfQ0gnLFxuICAvKiogRHpvbmdraGEgKi9cbiAgZHogPSAnZHonLFxuICAvKiogRXdlICovXG4gIGVlID0gJ2VlJyxcbiAgLyoqIEdyZWVrICovXG4gIGVsID0gJ2VsJyxcbiAgLyoqIEVuZ2xpc2ggKi9cbiAgZW4gPSAnZW4nLFxuICAvKiogQXVzdHJhbGlhbiBFbmdsaXNoICovXG4gIGVuX0FVID0gJ2VuX0FVJyxcbiAgLyoqIENhbmFkaWFuIEVuZ2xpc2ggKi9cbiAgZW5fQ0EgPSAnZW5fQ0EnLFxuICAvKiogQnJpdGlzaCBFbmdsaXNoICovXG4gIGVuX0dCID0gJ2VuX0dCJyxcbiAgLyoqIEFtZXJpY2FuIEVuZ2xpc2ggKi9cbiAgZW5fVVMgPSAnZW5fVVMnLFxuICAvKiogRXNwZXJhbnRvICovXG4gIGVvID0gJ2VvJyxcbiAgLyoqIFNwYW5pc2ggKi9cbiAgZXMgPSAnZXMnLFxuICAvKiogRXVyb3BlYW4gU3BhbmlzaCAqL1xuICBlc19FUyA9ICdlc19FUycsXG4gIC8qKiBNZXhpY2FuIFNwYW5pc2ggKi9cbiAgZXNfTVggPSAnZXNfTVgnLFxuICAvKiogRXN0b25pYW4gKi9cbiAgZXQgPSAnZXQnLFxuICAvKiogQmFzcXVlICovXG4gIGV1ID0gJ2V1JyxcbiAgLyoqIFBlcnNpYW4gKi9cbiAgZmEgPSAnZmEnLFxuICAvKiogRGFyaSAqL1xuICBmYV9BRiA9ICdmYV9BRicsXG4gIC8qKiBGdWxhaCAqL1xuICBmZiA9ICdmZicsXG4gIC8qKiBGaW5uaXNoICovXG4gIGZpID0gJ2ZpJyxcbiAgLyoqIEZhcm9lc2UgKi9cbiAgZm8gPSAnZm8nLFxuICAvKiogRnJlbmNoICovXG4gIGZyID0gJ2ZyJyxcbiAgLyoqIENhbmFkaWFuIEZyZW5jaCAqL1xuICBmcl9DQSA9ICdmcl9DQScsXG4gIC8qKiBTd2lzcyBGcmVuY2ggKi9cbiAgZnJfQ0ggPSAnZnJfQ0gnLFxuICAvKiogV2VzdGVybiBGcmlzaWFuICovXG4gIGZ5ID0gJ2Z5JyxcbiAgLyoqIElyaXNoICovXG4gIGdhID0gJ2dhJyxcbiAgLyoqIFNjb3R0aXNoIEdhZWxpYyAqL1xuICBnZCA9ICdnZCcsXG4gIC8qKiBHYWxpY2lhbiAqL1xuICBnbCA9ICdnbCcsXG4gIC8qKiBHdWphcmF0aSAqL1xuICBndSA9ICdndScsXG4gIC8qKiBNYW54ICovXG4gIGd2ID0gJ2d2JyxcbiAgLyoqIEhhdXNhICovXG4gIGhhID0gJ2hhJyxcbiAgLyoqIEhlYnJldyAqL1xuICBoZSA9ICdoZScsXG4gIC8qKiBIaW5kaSAqL1xuICBoaSA9ICdoaScsXG4gIC8qKiBDcm9hdGlhbiAqL1xuICBociA9ICdocicsXG4gIC8qKiBIYWl0aWFuIENyZW9sZSAqL1xuICBodCA9ICdodCcsXG4gIC8qKiBIdW5nYXJpYW4gKi9cbiAgaHUgPSAnaHUnLFxuICAvKiogQXJtZW5pYW4gKi9cbiAgaHkgPSAnaHknLFxuICAvKiogSW50ZXJsaW5ndWEgKi9cbiAgaWEgPSAnaWEnLFxuICAvKiogSW5kb25lc2lhbiAqL1xuICBpZCA9ICdpZCcsXG4gIC8qKiBJZ2JvICovXG4gIGlnID0gJ2lnJyxcbiAgLyoqIFNpY2h1YW4gWWkgKi9cbiAgaWkgPSAnaWknLFxuICAvKiogSWNlbGFuZGljICovXG4gIGlzID0gJ2lzJyxcbiAgLyoqIEl0YWxpYW4gKi9cbiAgaXQgPSAnaXQnLFxuICAvKiogSmFwYW5lc2UgKi9cbiAgamEgPSAnamEnLFxuICAvKiogSmF2YW5lc2UgKi9cbiAganYgPSAnanYnLFxuICAvKiogR2VvcmdpYW4gKi9cbiAga2EgPSAna2EnLFxuICAvKiogS2lrdXl1ICovXG4gIGtpID0gJ2tpJyxcbiAgLyoqIEthemFraCAqL1xuICBrayA9ICdraycsXG4gIC8qKiBLYWxhYWxsaXN1dCAqL1xuICBrbCA9ICdrbCcsXG4gIC8qKiBLaG1lciAqL1xuICBrbSA9ICdrbScsXG4gIC8qKiBLYW5uYWRhICovXG4gIGtuID0gJ2tuJyxcbiAgLyoqIEtvcmVhbiAqL1xuICBrbyA9ICdrbycsXG4gIC8qKiBLYXNobWlyaSAqL1xuICBrcyA9ICdrcycsXG4gIC8qKiBLdXJkaXNoICovXG4gIGt1ID0gJ2t1JyxcbiAgLyoqIENvcm5pc2ggKi9cbiAga3cgPSAna3cnLFxuICAvKiogS3lyZ3l6ICovXG4gIGt5ID0gJ2t5JyxcbiAgLyoqIExhdGluICovXG4gIGxhID0gJ2xhJyxcbiAgLyoqIEx1eGVtYm91cmdpc2ggKi9cbiAgbGIgPSAnbGInLFxuICAvKiogR2FuZGEgKi9cbiAgbGcgPSAnbGcnLFxuICAvKiogTGluZ2FsYSAqL1xuICBsbiA9ICdsbicsXG4gIC8qKiBMYW8gKi9cbiAgbG8gPSAnbG8nLFxuICAvKiogTGl0aHVhbmlhbiAqL1xuICBsdCA9ICdsdCcsXG4gIC8qKiBMdWJhLUthdGFuZ2EgKi9cbiAgbHUgPSAnbHUnLFxuICAvKiogTGF0dmlhbiAqL1xuICBsdiA9ICdsdicsXG4gIC8qKiBNYWxhZ2FzeSAqL1xuICBtZyA9ICdtZycsXG4gIC8qKiBNYW9yaSAqL1xuICBtaSA9ICdtaScsXG4gIC8qKiBNYWNlZG9uaWFuICovXG4gIG1rID0gJ21rJyxcbiAgLyoqIE1hbGF5YWxhbSAqL1xuICBtbCA9ICdtbCcsXG4gIC8qKiBNb25nb2xpYW4gKi9cbiAgbW4gPSAnbW4nLFxuICAvKiogTWFyYXRoaSAqL1xuICBtciA9ICdtcicsXG4gIC8qKiBNYWxheSAqL1xuICBtcyA9ICdtcycsXG4gIC8qKiBNYWx0ZXNlICovXG4gIG10ID0gJ210JyxcbiAgLyoqIEJ1cm1lc2UgKi9cbiAgbXkgPSAnbXknLFxuICAvKiogTm9yd2VnaWFuIEJva23DpWwgKi9cbiAgbmIgPSAnbmInLFxuICAvKiogTm9ydGggTmRlYmVsZSAqL1xuICBuZCA9ICduZCcsXG4gIC8qKiBOZXBhbGkgKi9cbiAgbmUgPSAnbmUnLFxuICAvKiogRHV0Y2ggKi9cbiAgbmwgPSAnbmwnLFxuICAvKiogRmxlbWlzaCAqL1xuICBubF9CRSA9ICdubF9CRScsXG4gIC8qKiBOb3J3ZWdpYW4gTnlub3JzayAqL1xuICBubiA9ICdubicsXG4gIC8qKiBOeWFuamEgKi9cbiAgbnkgPSAnbnknLFxuICAvKiogT3JvbW8gKi9cbiAgb20gPSAnb20nLFxuICAvKiogT2RpYSAqL1xuICBvciA9ICdvcicsXG4gIC8qKiBPc3NldGljICovXG4gIG9zID0gJ29zJyxcbiAgLyoqIFB1bmphYmkgKi9cbiAgcGEgPSAncGEnLFxuICAvKiogUG9saXNoICovXG4gIHBsID0gJ3BsJyxcbiAgLyoqIFBhc2h0byAqL1xuICBwcyA9ICdwcycsXG4gIC8qKiBQb3J0dWd1ZXNlICovXG4gIHB0ID0gJ3B0JyxcbiAgLyoqIEJyYXppbGlhbiBQb3J0dWd1ZXNlICovXG4gIHB0X0JSID0gJ3B0X0JSJyxcbiAgLyoqIEV1cm9wZWFuIFBvcnR1Z3Vlc2UgKi9cbiAgcHRfUFQgPSAncHRfUFQnLFxuICAvKiogUXVlY2h1YSAqL1xuICBxdSA9ICdxdScsXG4gIC8qKiBSb21hbnNoICovXG4gIHJtID0gJ3JtJyxcbiAgLyoqIFJ1bmRpICovXG4gIHJuID0gJ3JuJyxcbiAgLyoqIFJvbWFuaWFuICovXG4gIHJvID0gJ3JvJyxcbiAgLyoqIE1vbGRhdmlhbiAqL1xuICByb19NRCA9ICdyb19NRCcsXG4gIC8qKiBSdXNzaWFuICovXG4gIHJ1ID0gJ3J1JyxcbiAgLyoqIEtpbnlhcndhbmRhICovXG4gIHJ3ID0gJ3J3JyxcbiAgLyoqIFNhbnNrcml0ICovXG4gIHNhID0gJ3NhJyxcbiAgLyoqIFNpbmRoaSAqL1xuICBzZCA9ICdzZCcsXG4gIC8qKiBOb3J0aGVybiBTYW1pICovXG4gIHNlID0gJ3NlJyxcbiAgLyoqIFNhbmdvICovXG4gIHNnID0gJ3NnJyxcbiAgLyoqIFNpbmhhbGEgKi9cbiAgc2kgPSAnc2knLFxuICAvKiogU2xvdmFrICovXG4gIHNrID0gJ3NrJyxcbiAgLyoqIFNsb3ZlbmlhbiAqL1xuICBzbCA9ICdzbCcsXG4gIC8qKiBTYW1vYW4gKi9cbiAgc20gPSAnc20nLFxuICAvKiogU2hvbmEgKi9cbiAgc24gPSAnc24nLFxuICAvKiogU29tYWxpICovXG4gIHNvID0gJ3NvJyxcbiAgLyoqIEFsYmFuaWFuICovXG4gIHNxID0gJ3NxJyxcbiAgLyoqIFNlcmJpYW4gKi9cbiAgc3IgPSAnc3InLFxuICAvKiogU291dGhlcm4gU290aG8gKi9cbiAgc3QgPSAnc3QnLFxuICAvKiogU3VuZGFuZXNlICovXG4gIHN1ID0gJ3N1JyxcbiAgLyoqIFN3ZWRpc2ggKi9cbiAgc3YgPSAnc3YnLFxuICAvKiogU3dhaGlsaSAqL1xuICBzdyA9ICdzdycsXG4gIC8qKiBDb25nbyBTd2FoaWxpICovXG4gIHN3X0NEID0gJ3N3X0NEJyxcbiAgLyoqIFRhbWlsICovXG4gIHRhID0gJ3RhJyxcbiAgLyoqIFRlbHVndSAqL1xuICB0ZSA9ICd0ZScsXG4gIC8qKiBUYWppayAqL1xuICB0ZyA9ICd0ZycsXG4gIC8qKiBUaGFpICovXG4gIHRoID0gJ3RoJyxcbiAgLyoqIFRpZ3JpbnlhICovXG4gIHRpID0gJ3RpJyxcbiAgLyoqIFR1cmttZW4gKi9cbiAgdGsgPSAndGsnLFxuICAvKiogVG9uZ2FuICovXG4gIHRvID0gJ3RvJyxcbiAgLyoqIFR1cmtpc2ggKi9cbiAgdHIgPSAndHInLFxuICAvKiogVGF0YXIgKi9cbiAgdHQgPSAndHQnLFxuICAvKiogVXlnaHVyICovXG4gIHVnID0gJ3VnJyxcbiAgLyoqIFVrcmFpbmlhbiAqL1xuICB1ayA9ICd1aycsXG4gIC8qKiBVcmR1ICovXG4gIHVyID0gJ3VyJyxcbiAgLyoqIFV6YmVrICovXG4gIHV6ID0gJ3V6JyxcbiAgLyoqIFZpZXRuYW1lc2UgKi9cbiAgdmkgPSAndmknLFxuICAvKiogVm9sYXDDvGsgKi9cbiAgdm8gPSAndm8nLFxuICAvKiogV29sb2YgKi9cbiAgd28gPSAnd28nLFxuICAvKiogWGhvc2EgKi9cbiAgeGggPSAneGgnLFxuICAvKiogWWlkZGlzaCAqL1xuICB5aSA9ICd5aScsXG4gIC8qKiBZb3J1YmEgKi9cbiAgeW8gPSAneW8nLFxuICAvKiogQ2hpbmVzZSAqL1xuICB6aCA9ICd6aCcsXG4gIC8qKiBTaW1wbGlmaWVkIENoaW5lc2UgKi9cbiAgemhfSGFucyA9ICd6aF9IYW5zJyxcbiAgLyoqIFRyYWRpdGlvbmFsIENoaW5lc2UgKi9cbiAgemhfSGFudCA9ICd6aF9IYW50JyxcbiAgLyoqIFp1bHUgKi9cbiAgenUgPSAnenUnXG59XG5cbi8qKlxuICogQSBzdW1tYXJ5IG9mIHRoZSB0YXhlcyBiZWluZyBhcHBsaWVkIHRvIHRoaXMgb3JkZXIsIGdyb3VwZWRcbiAqIGJ5IHRheFJhdGUuXG4gKi9cbmV4cG9ydCB0eXBlIE9yZGVyVGF4U3VtbWFyeSA9IHtcbiAgX190eXBlbmFtZT86ICdPcmRlclRheFN1bW1hcnknO1xuICAvKiogQSBkZXNjcmlwdGlvbiBvZiB0aGlzIHRheCAqL1xuICBkZXNjcmlwdGlvbjogU2NhbGFyc1snU3RyaW5nJ107XG4gIC8qKiBUaGUgdGF4UmF0ZSBhcyBhIHBlcmNlbnRhZ2UgKi9cbiAgdGF4UmF0ZTogU2NhbGFyc1snRmxvYXQnXTtcbiAgLyoqIFRoZSB0b3RhbCBuZXQgcHJpY2Ugb3IgT3JkZXJJdGVtcyB0byB3aGljaCB0aGlzIHRheFJhdGUgYXBwbGllcyAqL1xuICB0YXhCYXNlOiBTY2FsYXJzWydJbnQnXTtcbiAgLyoqIFRoZSB0b3RhbCB0YXggYmVpbmcgYXBwbGllZCB0byB0aGUgT3JkZXIgYXQgdGhpcyB0YXhSYXRlICovXG4gIHRheFRvdGFsOiBTY2FsYXJzWydJbnQnXTtcbn07XG5cbmV4cG9ydCB0eXBlIE9yZGVyQWRkcmVzcyA9IHtcbiAgX190eXBlbmFtZT86ICdPcmRlckFkZHJlc3MnO1xuICBmdWxsTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgY29tcGFueT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgc3RyZWV0TGluZTE/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIHN0cmVldExpbmUyPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBjaXR5PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBwcm92aW5jZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgcG9zdGFsQ29kZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgY291bnRyeT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgY291bnRyeUNvZGU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIHBob25lTnVtYmVyPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBjdXN0b21GaWVsZHM/OiBNYXliZTxTY2FsYXJzWydKU09OJ10+O1xufTtcblxuZXhwb3J0IHR5cGUgT3JkZXJMaXN0ID0gUGFnaW5hdGVkTGlzdCAmIHtcbiAgX190eXBlbmFtZT86ICdPcmRlckxpc3QnO1xuICBpdGVtczogQXJyYXk8T3JkZXI+O1xuICB0b3RhbEl0ZW1zOiBTY2FsYXJzWydJbnQnXTtcbn07XG5cbmV4cG9ydCB0eXBlIFNoaXBwaW5nTGluZSA9IHtcbiAgX190eXBlbmFtZT86ICdTaGlwcGluZ0xpbmUnO1xuICBzaGlwcGluZ01ldGhvZDogU2hpcHBpbmdNZXRob2Q7XG4gIHByaWNlOiBTY2FsYXJzWydJbnQnXTtcbiAgcHJpY2VXaXRoVGF4OiBTY2FsYXJzWydJbnQnXTtcbiAgZGlzY291bnRlZFByaWNlOiBTY2FsYXJzWydJbnQnXTtcbiAgZGlzY291bnRlZFByaWNlV2l0aFRheDogU2NhbGFyc1snSW50J107XG4gIGRpc2NvdW50czogQXJyYXk8RGlzY291bnQ+O1xufTtcblxuZXhwb3J0IHR5cGUgRGlzY291bnQgPSB7XG4gIF9fdHlwZW5hbWU/OiAnRGlzY291bnQnO1xuICBhZGp1c3RtZW50U291cmNlOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgdHlwZTogQWRqdXN0bWVudFR5cGU7XG4gIGRlc2NyaXB0aW9uOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgYW1vdW50OiBTY2FsYXJzWydJbnQnXTtcbiAgYW1vdW50V2l0aFRheDogU2NhbGFyc1snSW50J107XG59O1xuXG5leHBvcnQgdHlwZSBPcmRlckl0ZW0gPSBOb2RlICYge1xuICBfX3R5cGVuYW1lPzogJ09yZGVySXRlbSc7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xuICBjcmVhdGVkQXQ6IFNjYWxhcnNbJ0RhdGVUaW1lJ107XG4gIHVwZGF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgY2FuY2VsbGVkOiBTY2FsYXJzWydCb29sZWFuJ107XG4gIC8qKiBUaGUgcHJpY2Ugb2YgYSBzaW5nbGUgdW5pdCwgZXhjbHVkaW5nIHRheCBhbmQgZGlzY291bnRzICovXG4gIHVuaXRQcmljZTogU2NhbGFyc1snSW50J107XG4gIC8qKiBUaGUgcHJpY2Ugb2YgYSBzaW5nbGUgdW5pdCwgaW5jbHVkaW5nIHRheCBidXQgZXhjbHVkaW5nIGRpc2NvdW50cyAqL1xuICB1bml0UHJpY2VXaXRoVGF4OiBTY2FsYXJzWydJbnQnXTtcbiAgLyoqXG4gICAqIFRoZSBwcmljZSBvZiBhIHNpbmdsZSB1bml0IGluY2x1ZGluZyBkaXNjb3VudHMsIGV4Y2x1ZGluZyB0YXguXG4gICAqXG4gICAqIElmIE9yZGVyLWxldmVsIGRpc2NvdW50cyBoYXZlIGJlZW4gYXBwbGllZCwgdGhpcyB3aWxsIG5vdCBiZSB0aGVcbiAgICogYWN0dWFsIHRheGFibGUgdW5pdCBwcmljZSAoc2VlIGBwcm9yYXRlZFVuaXRQcmljZWApLCBidXQgaXMgZ2VuZXJhbGx5IHRoZVxuICAgKiBjb3JyZWN0IHByaWNlIHRvIGRpc3BsYXkgdG8gY3VzdG9tZXJzIHRvIGF2b2lkIGNvbmZ1c2lvblxuICAgKiBhYm91dCB0aGUgaW50ZXJuYWwgaGFuZGxpbmcgb2YgZGlzdHJpYnV0ZWQgT3JkZXItbGV2ZWwgZGlzY291bnRzLlxuICAgKi9cbiAgZGlzY291bnRlZFVuaXRQcmljZTogU2NhbGFyc1snSW50J107XG4gIC8qKiBUaGUgcHJpY2Ugb2YgYSBzaW5nbGUgdW5pdCBpbmNsdWRpbmcgZGlzY291bnRzIGFuZCB0YXggKi9cbiAgZGlzY291bnRlZFVuaXRQcmljZVdpdGhUYXg6IFNjYWxhcnNbJ0ludCddO1xuICAvKipcbiAgICogVGhlIGFjdHVhbCB1bml0IHByaWNlLCB0YWtpbmcgaW50byBhY2NvdW50IGJvdGggaXRlbSBkaXNjb3VudHMgX2FuZF8gcHJvcmF0ZWQgKHByb3BvcnRpYWxseS1kaXN0cmlidXRlZClcbiAgICogT3JkZXItbGV2ZWwgZGlzY291bnRzLiBUaGlzIHZhbHVlIGlzIHRoZSB0cnVlIGVjb25vbWljIHZhbHVlIG9mIHRoZSBPcmRlckl0ZW0sIGFuZCBpcyB1c2VkIGluIHRheFxuICAgKiBhbmQgcmVmdW5kIGNhbGN1bGF0aW9ucy5cbiAgICovXG4gIHByb3JhdGVkVW5pdFByaWNlOiBTY2FsYXJzWydJbnQnXTtcbiAgLyoqIFRoZSBwcm9yYXRlZFVuaXRQcmljZSBpbmNsdWRpbmcgdGF4ICovXG4gIHByb3JhdGVkVW5pdFByaWNlV2l0aFRheDogU2NhbGFyc1snSW50J107XG4gIHVuaXRUYXg6IFNjYWxhcnNbJ0ludCddO1xuICB0YXhSYXRlOiBTY2FsYXJzWydGbG9hdCddO1xuICBhZGp1c3RtZW50czogQXJyYXk8QWRqdXN0bWVudD47XG4gIHRheExpbmVzOiBBcnJheTxUYXhMaW5lPjtcbiAgZnVsZmlsbG1lbnQ/OiBNYXliZTxGdWxmaWxsbWVudD47XG4gIHJlZnVuZElkPzogTWF5YmU8U2NhbGFyc1snSUQnXT47XG59O1xuXG5leHBvcnQgdHlwZSBPcmRlckxpbmUgPSBOb2RlICYge1xuICBfX3R5cGVuYW1lPzogJ09yZGVyTGluZSc7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xuICBjcmVhdGVkQXQ6IFNjYWxhcnNbJ0RhdGVUaW1lJ107XG4gIHVwZGF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgcHJvZHVjdFZhcmlhbnQ6IFByb2R1Y3RWYXJpYW50O1xuICBmZWF0dXJlZEFzc2V0PzogTWF5YmU8QXNzZXQ+O1xuICAvKiogVGhlIHByaWNlIG9mIGEgc2luZ2xlIHVuaXQsIGV4Y2x1ZGluZyB0YXggYW5kIGRpc2NvdW50cyAqL1xuICB1bml0UHJpY2U6IFNjYWxhcnNbJ0ludCddO1xuICAvKiogVGhlIHByaWNlIG9mIGEgc2luZ2xlIHVuaXQsIGluY2x1ZGluZyB0YXggYnV0IGV4Y2x1ZGluZyBkaXNjb3VudHMgKi9cbiAgdW5pdFByaWNlV2l0aFRheDogU2NhbGFyc1snSW50J107XG4gIC8qKiBOb24temVybyBpZiB0aGUgdW5pdFByaWNlIGhhcyBjaGFuZ2VkIHNpbmNlIGl0IHdhcyBpbml0aWFsbHkgYWRkZWQgdG8gT3JkZXIgKi9cbiAgdW5pdFByaWNlQ2hhbmdlU2luY2VBZGRlZDogU2NhbGFyc1snSW50J107XG4gIC8qKiBOb24temVybyBpZiB0aGUgdW5pdFByaWNlV2l0aFRheCBoYXMgY2hhbmdlZCBzaW5jZSBpdCB3YXMgaW5pdGlhbGx5IGFkZGVkIHRvIE9yZGVyICovXG4gIHVuaXRQcmljZVdpdGhUYXhDaGFuZ2VTaW5jZUFkZGVkOiBTY2FsYXJzWydJbnQnXTtcbiAgLyoqXG4gICAqIFRoZSBwcmljZSBvZiBhIHNpbmdsZSB1bml0IGluY2x1ZGluZyBkaXNjb3VudHMsIGV4Y2x1ZGluZyB0YXguXG4gICAqXG4gICAqIElmIE9yZGVyLWxldmVsIGRpc2NvdW50cyBoYXZlIGJlZW4gYXBwbGllZCwgdGhpcyB3aWxsIG5vdCBiZSB0aGVcbiAgICogYWN0dWFsIHRheGFibGUgdW5pdCBwcmljZSAoc2VlIGBwcm9yYXRlZFVuaXRQcmljZWApLCBidXQgaXMgZ2VuZXJhbGx5IHRoZVxuICAgKiBjb3JyZWN0IHByaWNlIHRvIGRpc3BsYXkgdG8gY3VzdG9tZXJzIHRvIGF2b2lkIGNvbmZ1c2lvblxuICAgKiBhYm91dCB0aGUgaW50ZXJuYWwgaGFuZGxpbmcgb2YgZGlzdHJpYnV0ZWQgT3JkZXItbGV2ZWwgZGlzY291bnRzLlxuICAgKi9cbiAgZGlzY291bnRlZFVuaXRQcmljZTogU2NhbGFyc1snSW50J107XG4gIC8qKiBUaGUgcHJpY2Ugb2YgYSBzaW5nbGUgdW5pdCBpbmNsdWRpbmcgZGlzY291bnRzIGFuZCB0YXggKi9cbiAgZGlzY291bnRlZFVuaXRQcmljZVdpdGhUYXg6IFNjYWxhcnNbJ0ludCddO1xuICAvKipcbiAgICogVGhlIGFjdHVhbCB1bml0IHByaWNlLCB0YWtpbmcgaW50byBhY2NvdW50IGJvdGggaXRlbSBkaXNjb3VudHMgX2FuZF8gcHJvcmF0ZWQgKHByb3BvcnRpYWxseS1kaXN0cmlidXRlZClcbiAgICogT3JkZXItbGV2ZWwgZGlzY291bnRzLiBUaGlzIHZhbHVlIGlzIHRoZSB0cnVlIGVjb25vbWljIHZhbHVlIG9mIHRoZSBPcmRlckl0ZW0sIGFuZCBpcyB1c2VkIGluIHRheFxuICAgKiBhbmQgcmVmdW5kIGNhbGN1bGF0aW9ucy5cbiAgICovXG4gIHByb3JhdGVkVW5pdFByaWNlOiBTY2FsYXJzWydJbnQnXTtcbiAgLyoqIFRoZSBwcm9yYXRlZFVuaXRQcmljZSBpbmNsdWRpbmcgdGF4ICovXG4gIHByb3JhdGVkVW5pdFByaWNlV2l0aFRheDogU2NhbGFyc1snSW50J107XG4gIHF1YW50aXR5OiBTY2FsYXJzWydJbnQnXTtcbiAgaXRlbXM6IEFycmF5PE9yZGVySXRlbT47XG4gIHRheFJhdGU6IFNjYWxhcnNbJ0Zsb2F0J107XG4gIC8qKiBUaGUgdG90YWwgcHJpY2Ugb2YgdGhlIGxpbmUgZXhjbHVkaW5nIHRheCBhbmQgZGlzY291bnRzLiAqL1xuICBsaW5lUHJpY2U6IFNjYWxhcnNbJ0ludCddO1xuICAvKiogVGhlIHRvdGFsIHByaWNlIG9mIHRoZSBsaW5lIGluY2x1ZGluZyB0YXggYml0IGV4Y2x1ZGluZyBkaXNjb3VudHMuICovXG4gIGxpbmVQcmljZVdpdGhUYXg6IFNjYWxhcnNbJ0ludCddO1xuICAvKiogVGhlIHByaWNlIG9mIHRoZSBsaW5lIGluY2x1ZGluZyBkaXNjb3VudHMsIGV4Y2x1ZGluZyB0YXggKi9cbiAgZGlzY291bnRlZExpbmVQcmljZTogU2NhbGFyc1snSW50J107XG4gIC8qKiBUaGUgcHJpY2Ugb2YgdGhlIGxpbmUgaW5jbHVkaW5nIGRpc2NvdW50cyBhbmQgdGF4ICovXG4gIGRpc2NvdW50ZWRMaW5lUHJpY2VXaXRoVGF4OiBTY2FsYXJzWydJbnQnXTtcbiAgLyoqXG4gICAqIFRoZSBhY3R1YWwgbGluZSBwcmljZSwgdGFraW5nIGludG8gYWNjb3VudCBib3RoIGl0ZW0gZGlzY291bnRzIF9hbmRfIHByb3JhdGVkIChwcm9wb3J0aWFsbHktZGlzdHJpYnV0ZWQpXG4gICAqIE9yZGVyLWxldmVsIGRpc2NvdW50cy4gVGhpcyB2YWx1ZSBpcyB0aGUgdHJ1ZSBlY29ub21pYyB2YWx1ZSBvZiB0aGUgT3JkZXJMaW5lLCBhbmQgaXMgdXNlZCBpbiB0YXhcbiAgICogYW5kIHJlZnVuZCBjYWxjdWxhdGlvbnMuXG4gICAqL1xuICBwcm9yYXRlZExpbmVQcmljZTogU2NhbGFyc1snSW50J107XG4gIC8qKiBUaGUgcHJvcmF0ZWRMaW5lUHJpY2UgaW5jbHVkaW5nIHRheCAqL1xuICBwcm9yYXRlZExpbmVQcmljZVdpdGhUYXg6IFNjYWxhcnNbJ0ludCddO1xuICAvKiogVGhlIHRvdGFsIHRheCBvbiB0aGlzIGxpbmUgKi9cbiAgbGluZVRheDogU2NhbGFyc1snSW50J107XG4gIGRpc2NvdW50czogQXJyYXk8RGlzY291bnQ+O1xuICB0YXhMaW5lczogQXJyYXk8VGF4TGluZT47XG4gIG9yZGVyOiBPcmRlcjtcbiAgY3VzdG9tRmllbGRzPzogTWF5YmU8U2NhbGFyc1snSlNPTiddPjtcbn07XG5cbmV4cG9ydCB0eXBlIFJlZnVuZCA9IE5vZGUgJiB7XG4gIF9fdHlwZW5hbWU/OiAnUmVmdW5kJztcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIGNyZWF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgdXBkYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICBpdGVtczogU2NhbGFyc1snSW50J107XG4gIHNoaXBwaW5nOiBTY2FsYXJzWydJbnQnXTtcbiAgYWRqdXN0bWVudDogU2NhbGFyc1snSW50J107XG4gIHRvdGFsOiBTY2FsYXJzWydJbnQnXTtcbiAgbWV0aG9kPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xuICBzdGF0ZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIHRyYW5zYWN0aW9uSWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIHJlYXNvbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddPjtcbiAgb3JkZXJJdGVtczogQXJyYXk8T3JkZXJJdGVtPjtcbiAgcGF5bWVudElkOiBTY2FsYXJzWydJRCddO1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0pTT04nXT47XG59O1xuXG5leHBvcnQgdHlwZSBTdXJjaGFyZ2UgPSBOb2RlICYge1xuICBfX3R5cGVuYW1lPzogJ1N1cmNoYXJnZSc7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xuICBjcmVhdGVkQXQ6IFNjYWxhcnNbJ0RhdGVUaW1lJ107XG4gIHVwZGF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgZGVzY3JpcHRpb246IFNjYWxhcnNbJ1N0cmluZyddO1xuICBza3U/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIHRheExpbmVzOiBBcnJheTxUYXhMaW5lPjtcbiAgcHJpY2U6IFNjYWxhcnNbJ0ludCddO1xuICBwcmljZVdpdGhUYXg6IFNjYWxhcnNbJ0ludCddO1xuICB0YXhSYXRlOiBTY2FsYXJzWydGbG9hdCddO1xufTtcblxuZXhwb3J0IHR5cGUgUHJvZHVjdE9wdGlvbkdyb3VwID0gTm9kZSAmIHtcbiAgX190eXBlbmFtZT86ICdQcm9kdWN0T3B0aW9uR3JvdXAnO1xuICBpZDogU2NhbGFyc1snSUQnXTtcbiAgY3JlYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICB1cGRhdGVkQXQ6IFNjYWxhcnNbJ0RhdGVUaW1lJ107XG4gIGxhbmd1YWdlQ29kZTogTGFuZ3VhZ2VDb2RlO1xuICBjb2RlOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgbmFtZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIG9wdGlvbnM6IEFycmF5PFByb2R1Y3RPcHRpb24+O1xuICB0cmFuc2xhdGlvbnM6IEFycmF5PFByb2R1Y3RPcHRpb25Hcm91cFRyYW5zbGF0aW9uPjtcbiAgY3VzdG9tRmllbGRzPzogTWF5YmU8U2NhbGFyc1snSlNPTiddPjtcbn07XG5cbmV4cG9ydCB0eXBlIFByb2R1Y3RPcHRpb25Hcm91cFRyYW5zbGF0aW9uID0ge1xuICBfX3R5cGVuYW1lPzogJ1Byb2R1Y3RPcHRpb25Hcm91cFRyYW5zbGF0aW9uJztcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIGNyZWF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgdXBkYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICBsYW5ndWFnZUNvZGU6IExhbmd1YWdlQ29kZTtcbiAgbmFtZTogU2NhbGFyc1snU3RyaW5nJ107XG59O1xuXG5leHBvcnQgdHlwZSBQcm9kdWN0T3B0aW9uID0gTm9kZSAmIHtcbiAgX190eXBlbmFtZT86ICdQcm9kdWN0T3B0aW9uJztcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIGNyZWF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgdXBkYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICBsYW5ndWFnZUNvZGU6IExhbmd1YWdlQ29kZTtcbiAgY29kZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIG5hbWU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBncm91cElkOiBTY2FsYXJzWydJRCddO1xuICBncm91cDogUHJvZHVjdE9wdGlvbkdyb3VwO1xuICB0cmFuc2xhdGlvbnM6IEFycmF5PFByb2R1Y3RPcHRpb25UcmFuc2xhdGlvbj47XG4gIGN1c3RvbUZpZWxkcz86IE1heWJlPFNjYWxhcnNbJ0pTT04nXT47XG59O1xuXG5leHBvcnQgdHlwZSBQcm9kdWN0T3B0aW9uVHJhbnNsYXRpb24gPSB7XG4gIF9fdHlwZW5hbWU/OiAnUHJvZHVjdE9wdGlvblRyYW5zbGF0aW9uJztcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIGNyZWF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgdXBkYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICBsYW5ndWFnZUNvZGU6IExhbmd1YWdlQ29kZTtcbiAgbmFtZTogU2NhbGFyc1snU3RyaW5nJ107XG59O1xuXG5leHBvcnQgdHlwZSBTZWFyY2hSZWluZGV4UmVzcG9uc2UgPSB7XG4gIF9fdHlwZW5hbWU/OiAnU2VhcmNoUmVpbmRleFJlc3BvbnNlJztcbiAgc3VjY2VzczogU2NhbGFyc1snQm9vbGVhbiddO1xufTtcblxuZXhwb3J0IHR5cGUgU2VhcmNoUmVzcG9uc2UgPSB7XG4gIF9fdHlwZW5hbWU/OiAnU2VhcmNoUmVzcG9uc2UnO1xuICBpdGVtczogQXJyYXk8U2VhcmNoUmVzdWx0PjtcbiAgdG90YWxJdGVtczogU2NhbGFyc1snSW50J107XG4gIGZhY2V0VmFsdWVzOiBBcnJheTxGYWNldFZhbHVlUmVzdWx0Pjtcbn07XG5cbi8qKlxuICogV2hpY2ggRmFjZXRWYWx1ZXMgYXJlIHByZXNlbnQgaW4gdGhlIHByb2R1Y3RzIHJldHVybmVkXG4gKiBieSB0aGUgc2VhcmNoLCBhbmQgaW4gd2hhdCBxdWFudGl0eS5cbiAqL1xuZXhwb3J0IHR5cGUgRmFjZXRWYWx1ZVJlc3VsdCA9IHtcbiAgX190eXBlbmFtZT86ICdGYWNldFZhbHVlUmVzdWx0JztcbiAgZmFjZXRWYWx1ZTogRmFjZXRWYWx1ZTtcbiAgY291bnQ6IFNjYWxhcnNbJ0ludCddO1xufTtcblxuZXhwb3J0IHR5cGUgU2VhcmNoUmVzdWx0QXNzZXQgPSB7XG4gIF9fdHlwZW5hbWU/OiAnU2VhcmNoUmVzdWx0QXNzZXQnO1xuICBpZDogU2NhbGFyc1snSUQnXTtcbiAgcHJldmlldzogU2NhbGFyc1snU3RyaW5nJ107XG4gIGZvY2FsUG9pbnQ/OiBNYXliZTxDb29yZGluYXRlPjtcbn07XG5cbi8qKiBUaGUgcHJpY2Ugb2YgYSBzZWFyY2ggcmVzdWx0IHByb2R1Y3QsIGVpdGhlciBhcyBhIHJhbmdlIG9yIGFzIGEgc2luZ2xlIHByaWNlICovXG5leHBvcnQgdHlwZSBTZWFyY2hSZXN1bHRQcmljZSA9IFByaWNlUmFuZ2UgfCBTaW5nbGVQcmljZTtcblxuLyoqIFRoZSBwcmljZSB2YWx1ZSB3aGVyZSB0aGUgcmVzdWx0IGhhcyBhIHNpbmdsZSBwcmljZSAqL1xuZXhwb3J0IHR5cGUgU2luZ2xlUHJpY2UgPSB7XG4gIF9fdHlwZW5hbWU/OiAnU2luZ2xlUHJpY2UnO1xuICB2YWx1ZTogU2NhbGFyc1snSW50J107XG59O1xuXG4vKiogVGhlIHByaWNlIHJhbmdlIHdoZXJlIHRoZSByZXN1bHQgaGFzIG1vcmUgdGhhbiBvbmUgcHJpY2UgKi9cbmV4cG9ydCB0eXBlIFByaWNlUmFuZ2UgPSB7XG4gIF9fdHlwZW5hbWU/OiAnUHJpY2VSYW5nZSc7XG4gIG1pbjogU2NhbGFyc1snSW50J107XG4gIG1heDogU2NhbGFyc1snSW50J107XG59O1xuXG5leHBvcnQgdHlwZSBQcm9kdWN0VHJhbnNsYXRpb24gPSB7XG4gIF9fdHlwZW5hbWU/OiAnUHJvZHVjdFRyYW5zbGF0aW9uJztcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIGNyZWF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgdXBkYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICBsYW5ndWFnZUNvZGU6IExhbmd1YWdlQ29kZTtcbiAgbmFtZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIHNsdWc6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBkZXNjcmlwdGlvbjogU2NhbGFyc1snU3RyaW5nJ107XG59O1xuXG5leHBvcnQgdHlwZSBQcm9kdWN0TGlzdCA9IFBhZ2luYXRlZExpc3QgJiB7XG4gIF9fdHlwZW5hbWU/OiAnUHJvZHVjdExpc3QnO1xuICBpdGVtczogQXJyYXk8UHJvZHVjdD47XG4gIHRvdGFsSXRlbXM6IFNjYWxhcnNbJ0ludCddO1xufTtcblxuZXhwb3J0IHR5cGUgUHJvZHVjdFZhcmlhbnRUcmFuc2xhdGlvbiA9IHtcbiAgX190eXBlbmFtZT86ICdQcm9kdWN0VmFyaWFudFRyYW5zbGF0aW9uJztcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIGNyZWF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgdXBkYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICBsYW5ndWFnZUNvZGU6IExhbmd1YWdlQ29kZTtcbiAgbmFtZTogU2NhbGFyc1snU3RyaW5nJ107XG59O1xuXG5leHBvcnQgdHlwZSBQcm9tb3Rpb24gPSBOb2RlICYge1xuICBfX3R5cGVuYW1lPzogJ1Byb21vdGlvbic7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xuICBjcmVhdGVkQXQ6IFNjYWxhcnNbJ0RhdGVUaW1lJ107XG4gIHVwZGF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgc3RhcnRzQXQ/OiBNYXliZTxTY2FsYXJzWydEYXRlVGltZSddPjtcbiAgZW5kc0F0PzogTWF5YmU8U2NhbGFyc1snRGF0ZVRpbWUnXT47XG4gIGNvdXBvbkNvZGU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG4gIHBlckN1c3RvbWVyVXNhZ2VMaW1pdD86IE1heWJlPFNjYWxhcnNbJ0ludCddPjtcbiAgbmFtZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIGVuYWJsZWQ6IFNjYWxhcnNbJ0Jvb2xlYW4nXTtcbiAgY29uZGl0aW9uczogQXJyYXk8Q29uZmlndXJhYmxlT3BlcmF0aW9uPjtcbiAgYWN0aW9uczogQXJyYXk8Q29uZmlndXJhYmxlT3BlcmF0aW9uPjtcbn07XG5cbmV4cG9ydCB0eXBlIFByb21vdGlvbkxpc3QgPSBQYWdpbmF0ZWRMaXN0ICYge1xuICBfX3R5cGVuYW1lPzogJ1Byb21vdGlvbkxpc3QnO1xuICBpdGVtczogQXJyYXk8UHJvbW90aW9uPjtcbiAgdG90YWxJdGVtczogU2NhbGFyc1snSW50J107XG59O1xuXG5leHBvcnQgdHlwZSBSb2xlID0gTm9kZSAmIHtcbiAgX190eXBlbmFtZT86ICdSb2xlJztcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIGNyZWF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgdXBkYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICBjb2RlOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgZGVzY3JpcHRpb246IFNjYWxhcnNbJ1N0cmluZyddO1xuICBwZXJtaXNzaW9uczogQXJyYXk8UGVybWlzc2lvbj47XG4gIGNoYW5uZWxzOiBBcnJheTxDaGFubmVsPjtcbn07XG5cbmV4cG9ydCB0eXBlIFJvbGVMaXN0ID0gUGFnaW5hdGVkTGlzdCAmIHtcbiAgX190eXBlbmFtZT86ICdSb2xlTGlzdCc7XG4gIGl0ZW1zOiBBcnJheTxSb2xlPjtcbiAgdG90YWxJdGVtczogU2NhbGFyc1snSW50J107XG59O1xuXG5leHBvcnQgdHlwZSBTaGlwcGluZ01ldGhvZCA9IE5vZGUgJiB7XG4gIF9fdHlwZW5hbWU/OiAnU2hpcHBpbmdNZXRob2QnO1xuICBpZDogU2NhbGFyc1snSUQnXTtcbiAgY3JlYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICB1cGRhdGVkQXQ6IFNjYWxhcnNbJ0RhdGVUaW1lJ107XG4gIGNvZGU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBuYW1lOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgZGVzY3JpcHRpb246IFNjYWxhcnNbJ1N0cmluZyddO1xuICBmdWxmaWxsbWVudEhhbmRsZXJDb2RlOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgY2hlY2tlcjogQ29uZmlndXJhYmxlT3BlcmF0aW9uO1xuICBjYWxjdWxhdG9yOiBDb25maWd1cmFibGVPcGVyYXRpb247XG4gIHRyYW5zbGF0aW9uczogQXJyYXk8U2hpcHBpbmdNZXRob2RUcmFuc2xhdGlvbj47XG4gIGN1c3RvbUZpZWxkcz86IE1heWJlPFNjYWxhcnNbJ0pTT04nXT47XG59O1xuXG5leHBvcnQgdHlwZSBTaGlwcGluZ01ldGhvZFRyYW5zbGF0aW9uID0ge1xuICBfX3R5cGVuYW1lPzogJ1NoaXBwaW5nTWV0aG9kVHJhbnNsYXRpb24nO1xuICBpZDogU2NhbGFyc1snSUQnXTtcbiAgY3JlYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICB1cGRhdGVkQXQ6IFNjYWxhcnNbJ0RhdGVUaW1lJ107XG4gIGxhbmd1YWdlQ29kZTogTGFuZ3VhZ2VDb2RlO1xuICBuYW1lOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgZGVzY3JpcHRpb246IFNjYWxhcnNbJ1N0cmluZyddO1xufTtcblxuZXhwb3J0IHR5cGUgU2hpcHBpbmdNZXRob2RMaXN0ID0gUGFnaW5hdGVkTGlzdCAmIHtcbiAgX190eXBlbmFtZT86ICdTaGlwcGluZ01ldGhvZExpc3QnO1xuICBpdGVtczogQXJyYXk8U2hpcHBpbmdNZXRob2Q+O1xuICB0b3RhbEl0ZW1zOiBTY2FsYXJzWydJbnQnXTtcbn07XG5cbmV4cG9ydCB0eXBlIFRhZyA9IE5vZGUgJiB7XG4gIF9fdHlwZW5hbWU/OiAnVGFnJztcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIGNyZWF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgdXBkYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICB2YWx1ZTogU2NhbGFyc1snU3RyaW5nJ107XG59O1xuXG5leHBvcnQgdHlwZSBUYWdMaXN0ID0gUGFnaW5hdGVkTGlzdCAmIHtcbiAgX190eXBlbmFtZT86ICdUYWdMaXN0JztcbiAgaXRlbXM6IEFycmF5PFRhZz47XG4gIHRvdGFsSXRlbXM6IFNjYWxhcnNbJ0ludCddO1xufTtcblxuZXhwb3J0IHR5cGUgVGF4Q2F0ZWdvcnkgPSBOb2RlICYge1xuICBfX3R5cGVuYW1lPzogJ1RheENhdGVnb3J5JztcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIGNyZWF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgdXBkYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICBuYW1lOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgaXNEZWZhdWx0OiBTY2FsYXJzWydCb29sZWFuJ107XG59O1xuXG5leHBvcnQgdHlwZSBUYXhSYXRlID0gTm9kZSAmIHtcbiAgX190eXBlbmFtZT86ICdUYXhSYXRlJztcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIGNyZWF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgdXBkYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICBuYW1lOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgZW5hYmxlZDogU2NhbGFyc1snQm9vbGVhbiddO1xuICB2YWx1ZTogU2NhbGFyc1snRmxvYXQnXTtcbiAgY2F0ZWdvcnk6IFRheENhdGVnb3J5O1xuICB6b25lOiBab25lO1xuICBjdXN0b21lckdyb3VwPzogTWF5YmU8Q3VzdG9tZXJHcm91cD47XG59O1xuXG5leHBvcnQgdHlwZSBUYXhSYXRlTGlzdCA9IFBhZ2luYXRlZExpc3QgJiB7XG4gIF9fdHlwZW5hbWU/OiAnVGF4UmF0ZUxpc3QnO1xuICBpdGVtczogQXJyYXk8VGF4UmF0ZT47XG4gIHRvdGFsSXRlbXM6IFNjYWxhcnNbJ0ludCddO1xufTtcblxuZXhwb3J0IHR5cGUgVXNlciA9IE5vZGUgJiB7XG4gIF9fdHlwZW5hbWU/OiAnVXNlcic7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xuICBjcmVhdGVkQXQ6IFNjYWxhcnNbJ0RhdGVUaW1lJ107XG4gIHVwZGF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgaWRlbnRpZmllcjogU2NhbGFyc1snU3RyaW5nJ107XG4gIHZlcmlmaWVkOiBTY2FsYXJzWydCb29sZWFuJ107XG4gIHJvbGVzOiBBcnJheTxSb2xlPjtcbiAgbGFzdExvZ2luPzogTWF5YmU8U2NhbGFyc1snRGF0ZVRpbWUnXT47XG4gIGF1dGhlbnRpY2F0aW9uTWV0aG9kczogQXJyYXk8QXV0aGVudGljYXRpb25NZXRob2Q+O1xuICBjdXN0b21GaWVsZHM/OiBNYXliZTxTY2FsYXJzWydKU09OJ10+O1xufTtcblxuZXhwb3J0IHR5cGUgQXV0aGVudGljYXRpb25NZXRob2QgPSBOb2RlICYge1xuICBfX3R5cGVuYW1lPzogJ0F1dGhlbnRpY2F0aW9uTWV0aG9kJztcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIGNyZWF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgdXBkYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICBzdHJhdGVneTogU2NhbGFyc1snU3RyaW5nJ107XG59O1xuXG5leHBvcnQgdHlwZSBab25lID0gTm9kZSAmIHtcbiAgX190eXBlbmFtZT86ICdab25lJztcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIGNyZWF0ZWRBdDogU2NhbGFyc1snRGF0ZVRpbWUnXTtcbiAgdXBkYXRlZEF0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICBuYW1lOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgbWVtYmVyczogQXJyYXk8Q291bnRyeT47XG59O1xuXG5leHBvcnQgdHlwZSBBZG1pbmlzdHJhdG9yTGlzdE9wdGlvbnMgPSB7XG4gIHNraXA/OiBNYXliZTxTY2FsYXJzWydJbnQnXT47XG4gIHRha2U/OiBNYXliZTxTY2FsYXJzWydJbnQnXT47XG4gIHNvcnQ/OiBNYXliZTxBZG1pbmlzdHJhdG9yU29ydFBhcmFtZXRlcj47XG4gIGZpbHRlcj86IE1heWJlPEFkbWluaXN0cmF0b3JGaWx0ZXJQYXJhbWV0ZXI+O1xufTtcblxuZXhwb3J0IHR5cGUgQ29sbGVjdGlvbkxpc3RPcHRpb25zID0ge1xuICBza2lwPzogTWF5YmU8U2NhbGFyc1snSW50J10+O1xuICB0YWtlPzogTWF5YmU8U2NhbGFyc1snSW50J10+O1xuICBzb3J0PzogTWF5YmU8Q29sbGVjdGlvblNvcnRQYXJhbWV0ZXI+O1xuICBmaWx0ZXI/OiBNYXliZTxDb2xsZWN0aW9uRmlsdGVyUGFyYW1ldGVyPjtcbn07XG5cbmV4cG9ydCB0eXBlIENvdW50cnlMaXN0T3B0aW9ucyA9IHtcbiAgc2tpcD86IE1heWJlPFNjYWxhcnNbJ0ludCddPjtcbiAgdGFrZT86IE1heWJlPFNjYWxhcnNbJ0ludCddPjtcbiAgc29ydD86IE1heWJlPENvdW50cnlTb3J0UGFyYW1ldGVyPjtcbiAgZmlsdGVyPzogTWF5YmU8Q291bnRyeUZpbHRlclBhcmFtZXRlcj47XG59O1xuXG5leHBvcnQgdHlwZSBDdXN0b21lckdyb3VwTGlzdE9wdGlvbnMgPSB7XG4gIHNraXA/OiBNYXliZTxTY2FsYXJzWydJbnQnXT47XG4gIHRha2U/OiBNYXliZTxTY2FsYXJzWydJbnQnXT47XG4gIHNvcnQ/OiBNYXliZTxDdXN0b21lckdyb3VwU29ydFBhcmFtZXRlcj47XG4gIGZpbHRlcj86IE1heWJlPEN1c3RvbWVyR3JvdXBGaWx0ZXJQYXJhbWV0ZXI+O1xufTtcblxuZXhwb3J0IHR5cGUgQ3VzdG9tZXJMaXN0T3B0aW9ucyA9IHtcbiAgc2tpcD86IE1heWJlPFNjYWxhcnNbJ0ludCddPjtcbiAgdGFrZT86IE1heWJlPFNjYWxhcnNbJ0ludCddPjtcbiAgc29ydD86IE1heWJlPEN1c3RvbWVyU29ydFBhcmFtZXRlcj47XG4gIGZpbHRlcj86IE1heWJlPEN1c3RvbWVyRmlsdGVyUGFyYW1ldGVyPjtcbn07XG5cbmV4cG9ydCB0eXBlIEZhY2V0TGlzdE9wdGlvbnMgPSB7XG4gIHNraXA/OiBNYXliZTxTY2FsYXJzWydJbnQnXT47XG4gIHRha2U/OiBNYXliZTxTY2FsYXJzWydJbnQnXT47XG4gIHNvcnQ/OiBNYXliZTxGYWNldFNvcnRQYXJhbWV0ZXI+O1xuICBmaWx0ZXI/OiBNYXliZTxGYWNldEZpbHRlclBhcmFtZXRlcj47XG59O1xuXG5leHBvcnQgdHlwZSBKb2JMaXN0T3B0aW9ucyA9IHtcbiAgc2tpcD86IE1heWJlPFNjYWxhcnNbJ0ludCddPjtcbiAgdGFrZT86IE1heWJlPFNjYWxhcnNbJ0ludCddPjtcbiAgc29ydD86IE1heWJlPEpvYlNvcnRQYXJhbWV0ZXI+O1xuICBmaWx0ZXI/OiBNYXliZTxKb2JGaWx0ZXJQYXJhbWV0ZXI+O1xufTtcblxuZXhwb3J0IHR5cGUgT3JkZXJMaXN0T3B0aW9ucyA9IHtcbiAgc2tpcD86IE1heWJlPFNjYWxhcnNbJ0ludCddPjtcbiAgdGFrZT86IE1heWJlPFNjYWxhcnNbJ0ludCddPjtcbiAgc29ydD86IE1heWJlPE9yZGVyU29ydFBhcmFtZXRlcj47XG4gIGZpbHRlcj86IE1heWJlPE9yZGVyRmlsdGVyUGFyYW1ldGVyPjtcbn07XG5cbmV4cG9ydCB0eXBlIFBheW1lbnRNZXRob2RMaXN0T3B0aW9ucyA9IHtcbiAgc2tpcD86IE1heWJlPFNjYWxhcnNbJ0ludCddPjtcbiAgdGFrZT86IE1heWJlPFNjYWxhcnNbJ0ludCddPjtcbiAgc29ydD86IE1heWJlPFBheW1lbnRNZXRob2RTb3J0UGFyYW1ldGVyPjtcbiAgZmlsdGVyPzogTWF5YmU8UGF5bWVudE1ldGhvZEZpbHRlclBhcmFtZXRlcj47XG59O1xuXG5leHBvcnQgdHlwZSBQcm9kdWN0TGlzdE9wdGlvbnMgPSB7XG4gIHNraXA/OiBNYXliZTxTY2FsYXJzWydJbnQnXT47XG4gIHRha2U/OiBNYXliZTxTY2FsYXJzWydJbnQnXT47XG4gIHNvcnQ/OiBNYXliZTxQcm9kdWN0U29ydFBhcmFtZXRlcj47XG4gIGZpbHRlcj86IE1heWJlPFByb2R1Y3RGaWx0ZXJQYXJhbWV0ZXI+O1xufTtcblxuZXhwb3J0IHR5cGUgUHJvZHVjdFZhcmlhbnRMaXN0T3B0aW9ucyA9IHtcbiAgc2tpcD86IE1heWJlPFNjYWxhcnNbJ0ludCddPjtcbiAgdGFrZT86IE1heWJlPFNjYWxhcnNbJ0ludCddPjtcbiAgc29ydD86IE1heWJlPFByb2R1Y3RWYXJpYW50U29ydFBhcmFtZXRlcj47XG4gIGZpbHRlcj86IE1heWJlPFByb2R1Y3RWYXJpYW50RmlsdGVyUGFyYW1ldGVyPjtcbn07XG5cbmV4cG9ydCB0eXBlIFByb21vdGlvbkxpc3RPcHRpb25zID0ge1xuICBza2lwPzogTWF5YmU8U2NhbGFyc1snSW50J10+O1xuICB0YWtlPzogTWF5YmU8U2NhbGFyc1snSW50J10+O1xuICBzb3J0PzogTWF5YmU8UHJvbW90aW9uU29ydFBhcmFtZXRlcj47XG4gIGZpbHRlcj86IE1heWJlPFByb21vdGlvbkZpbHRlclBhcmFtZXRlcj47XG59O1xuXG5leHBvcnQgdHlwZSBSb2xlTGlzdE9wdGlvbnMgPSB7XG4gIHNraXA/OiBNYXliZTxTY2FsYXJzWydJbnQnXT47XG4gIHRha2U/OiBNYXliZTxTY2FsYXJzWydJbnQnXT47XG4gIHNvcnQ/OiBNYXliZTxSb2xlU29ydFBhcmFtZXRlcj47XG4gIGZpbHRlcj86IE1heWJlPFJvbGVGaWx0ZXJQYXJhbWV0ZXI+O1xufTtcblxuZXhwb3J0IHR5cGUgU2hpcHBpbmdNZXRob2RMaXN0T3B0aW9ucyA9IHtcbiAgc2tpcD86IE1heWJlPFNjYWxhcnNbJ0ludCddPjtcbiAgdGFrZT86IE1heWJlPFNjYWxhcnNbJ0ludCddPjtcbiAgc29ydD86IE1heWJlPFNoaXBwaW5nTWV0aG9kU29ydFBhcmFtZXRlcj47XG4gIGZpbHRlcj86IE1heWJlPFNoaXBwaW5nTWV0aG9kRmlsdGVyUGFyYW1ldGVyPjtcbn07XG5cbmV4cG9ydCB0eXBlIFRhZ0xpc3RPcHRpb25zID0ge1xuICBza2lwPzogTWF5YmU8U2NhbGFyc1snSW50J10+O1xuICB0YWtlPzogTWF5YmU8U2NhbGFyc1snSW50J10+O1xuICBzb3J0PzogTWF5YmU8VGFnU29ydFBhcmFtZXRlcj47XG4gIGZpbHRlcj86IE1heWJlPFRhZ0ZpbHRlclBhcmFtZXRlcj47XG59O1xuXG5leHBvcnQgdHlwZSBUYXhSYXRlTGlzdE9wdGlvbnMgPSB7XG4gIHNraXA/OiBNYXliZTxTY2FsYXJzWydJbnQnXT47XG4gIHRha2U/OiBNYXliZTxTY2FsYXJzWydJbnQnXT47XG4gIHNvcnQ/OiBNYXliZTxUYXhSYXRlU29ydFBhcmFtZXRlcj47XG4gIGZpbHRlcj86IE1heWJlPFRheFJhdGVGaWx0ZXJQYXJhbWV0ZXI+O1xufTtcblxuZXhwb3J0IHR5cGUgSGlzdG9yeUVudHJ5TGlzdE9wdGlvbnMgPSB7XG4gIHNraXA/OiBNYXliZTxTY2FsYXJzWydJbnQnXT47XG4gIHRha2U/OiBNYXliZTxTY2FsYXJzWydJbnQnXT47XG4gIHNvcnQ/OiBNYXliZTxIaXN0b3J5RW50cnlTb3J0UGFyYW1ldGVyPjtcbiAgZmlsdGVyPzogTWF5YmU8SGlzdG9yeUVudHJ5RmlsdGVyUGFyYW1ldGVyPjtcbn07XG5cbmV4cG9ydCB0eXBlIEFkbWluaXN0cmF0b3JGaWx0ZXJQYXJhbWV0ZXIgPSB7XG4gIGNyZWF0ZWRBdD86IE1heWJlPERhdGVPcGVyYXRvcnM+O1xuICB1cGRhdGVkQXQ/OiBNYXliZTxEYXRlT3BlcmF0b3JzPjtcbiAgZmlyc3ROYW1lPzogTWF5YmU8U3RyaW5nT3BlcmF0b3JzPjtcbiAgbGFzdE5hbWU/OiBNYXliZTxTdHJpbmdPcGVyYXRvcnM+O1xuICBlbWFpbEFkZHJlc3M/OiBNYXliZTxTdHJpbmdPcGVyYXRvcnM+O1xufTtcblxuZXhwb3J0IHR5cGUgQWRtaW5pc3RyYXRvclNvcnRQYXJhbWV0ZXIgPSB7XG4gIGlkPzogTWF5YmU8U29ydE9yZGVyPjtcbiAgY3JlYXRlZEF0PzogTWF5YmU8U29ydE9yZGVyPjtcbiAgdXBkYXRlZEF0PzogTWF5YmU8U29ydE9yZGVyPjtcbiAgZmlyc3ROYW1lPzogTWF5YmU8U29ydE9yZGVyPjtcbiAgbGFzdE5hbWU/OiBNYXliZTxTb3J0T3JkZXI+O1xuICBlbWFpbEFkZHJlc3M/OiBNYXliZTxTb3J0T3JkZXI+O1xufTtcblxuZXhwb3J0IHR5cGUgQXNzZXRGaWx0ZXJQYXJhbWV0ZXIgPSB7XG4gIGNyZWF0ZWRBdD86IE1heWJlPERhdGVPcGVyYXRvcnM+O1xuICB1cGRhdGVkQXQ/OiBNYXliZTxEYXRlT3BlcmF0b3JzPjtcbiAgbmFtZT86IE1heWJlPFN0cmluZ09wZXJhdG9ycz47XG4gIHR5cGU/OiBNYXliZTxTdHJpbmdPcGVyYXRvcnM+O1xuICBmaWxlU2l6ZT86IE1heWJlPE51bWJlck9wZXJhdG9ycz47XG4gIG1pbWVUeXBlPzogTWF5YmU8U3RyaW5nT3BlcmF0b3JzPjtcbiAgd2lkdGg/OiBNYXliZTxOdW1iZXJPcGVyYXRvcnM+O1xuICBoZWlnaHQ/OiBNYXliZTxOdW1iZXJPcGVyYXRvcnM+O1xuICBzb3VyY2U/OiBNYXliZTxTdHJpbmdPcGVyYXRvcnM+O1xuICBwcmV2aWV3PzogTWF5YmU8U3RyaW5nT3BlcmF0b3JzPjtcbn07XG5cbmV4cG9ydCB0eXBlIEFzc2V0U29ydFBhcmFtZXRlciA9IHtcbiAgaWQ/OiBNYXliZTxTb3J0T3JkZXI+O1xuICBjcmVhdGVkQXQ/OiBNYXliZTxTb3J0T3JkZXI+O1xuICB1cGRhdGVkQXQ/OiBNYXliZTxTb3J0T3JkZXI+O1xuICBuYW1lPzogTWF5YmU8U29ydE9yZGVyPjtcbiAgZmlsZVNpemU/OiBNYXliZTxTb3J0T3JkZXI+O1xuICBtaW1lVHlwZT86IE1heWJlPFNvcnRPcmRlcj47XG4gIHdpZHRoPzogTWF5YmU8U29ydE9yZGVyPjtcbiAgaGVpZ2h0PzogTWF5YmU8U29ydE9yZGVyPjtcbiAgc291cmNlPzogTWF5YmU8U29ydE9yZGVyPjtcbiAgcHJldmlldz86IE1heWJlPFNvcnRPcmRlcj47XG59O1xuXG5leHBvcnQgdHlwZSBDb2xsZWN0aW9uRmlsdGVyUGFyYW1ldGVyID0ge1xuICBpc1ByaXZhdGU/OiBNYXliZTxCb29sZWFuT3BlcmF0b3JzPjtcbiAgY3JlYXRlZEF0PzogTWF5YmU8RGF0ZU9wZXJhdG9ycz47XG4gIHVwZGF0ZWRBdD86IE1heWJlPERhdGVPcGVyYXRvcnM+O1xuICBsYW5ndWFnZUNvZGU/OiBNYXliZTxTdHJpbmdPcGVyYXRvcnM+O1xuICBuYW1lPzogTWF5YmU8U3RyaW5nT3BlcmF0b3JzPjtcbiAgc2x1Zz86IE1heWJlPFN0cmluZ09wZXJhdG9ycz47XG4gIHBvc2l0aW9uPzogTWF5YmU8TnVtYmVyT3BlcmF0b3JzPjtcbiAgZGVzY3JpcHRpb24/OiBNYXliZTxTdHJpbmdPcGVyYXRvcnM+O1xufTtcblxuZXhwb3J0IHR5cGUgQ29sbGVjdGlvblNvcnRQYXJhbWV0ZXIgPSB7XG4gIGlkPzogTWF5YmU8U29ydE9yZGVyPjtcbiAgY3JlYXRlZEF0PzogTWF5YmU8U29ydE9yZGVyPjtcbiAgdXBkYXRlZEF0PzogTWF5YmU8U29ydE9yZGVyPjtcbiAgbmFtZT86IE1heWJlPFNvcnRPcmRlcj47XG4gIHNsdWc/OiBNYXliZTxTb3J0T3JkZXI+O1xuICBwb3NpdGlvbj86IE1heWJlPFNvcnRPcmRlcj47XG4gIGRlc2NyaXB0aW9uPzogTWF5YmU8U29ydE9yZGVyPjtcbn07XG5cbmV4cG9ydCB0eXBlIENvdW50cnlGaWx0ZXJQYXJhbWV0ZXIgPSB7XG4gIGNyZWF0ZWRBdD86IE1heWJlPERhdGVPcGVyYXRvcnM+O1xuICB1cGRhdGVkQXQ/OiBNYXliZTxEYXRlT3BlcmF0b3JzPjtcbiAgbGFuZ3VhZ2VDb2RlPzogTWF5YmU8U3RyaW5nT3BlcmF0b3JzPjtcbiAgY29kZT86IE1heWJlPFN0cmluZ09wZXJhdG9ycz47XG4gIG5hbWU/OiBNYXliZTxTdHJpbmdPcGVyYXRvcnM+O1xuICBlbmFibGVkPzogTWF5YmU8Qm9vbGVhbk9wZXJhdG9ycz47XG59O1xuXG5leHBvcnQgdHlwZSBDb3VudHJ5U29ydFBhcmFtZXRlciA9IHtcbiAgaWQ/OiBNYXliZTxTb3J0T3JkZXI+O1xuICBjcmVhdGVkQXQ/OiBNYXliZTxTb3J0T3JkZXI+O1xuICB1cGRhdGVkQXQ/OiBNYXliZTxTb3J0T3JkZXI+O1xuICBjb2RlPzogTWF5YmU8U29ydE9yZGVyPjtcbiAgbmFtZT86IE1heWJlPFNvcnRPcmRlcj47XG59O1xuXG5leHBvcnQgdHlwZSBDdXN0b21lckdyb3VwRmlsdGVyUGFyYW1ldGVyID0ge1xuICBjcmVhdGVkQXQ/OiBNYXliZTxEYXRlT3BlcmF0b3JzPjtcbiAgdXBkYXRlZEF0PzogTWF5YmU8RGF0ZU9wZXJhdG9ycz47XG4gIG5hbWU/OiBNYXliZTxTdHJpbmdPcGVyYXRvcnM+O1xufTtcblxuZXhwb3J0IHR5cGUgQ3VzdG9tZXJHcm91cFNvcnRQYXJhbWV0ZXIgPSB7XG4gIGlkPzogTWF5YmU8U29ydE9yZGVyPjtcbiAgY3JlYXRlZEF0PzogTWF5YmU8U29ydE9yZGVyPjtcbiAgdXBkYXRlZEF0PzogTWF5YmU8U29ydE9yZGVyPjtcbiAgbmFtZT86IE1heWJlPFNvcnRPcmRlcj47XG59O1xuXG5leHBvcnQgdHlwZSBDdXN0b21lckZpbHRlclBhcmFtZXRlciA9IHtcbiAgY3JlYXRlZEF0PzogTWF5YmU8RGF0ZU9wZXJhdG9ycz47XG4gIHVwZGF0ZWRBdD86IE1heWJlPERhdGVPcGVyYXRvcnM+O1xuICB0aXRsZT86IE1heWJlPFN0cmluZ09wZXJhdG9ycz47XG4gIGZpcnN0TmFtZT86IE1heWJlPFN0cmluZ09wZXJhdG9ycz47XG4gIGxhc3ROYW1lPzogTWF5YmU8U3RyaW5nT3BlcmF0b3JzPjtcbiAgcGhvbmVOdW1iZXI/OiBNYXliZTxTdHJpbmdPcGVyYXRvcnM+O1xuICBlbWFpbEFkZHJlc3M/OiBNYXliZTxTdHJpbmdPcGVyYXRvcnM+O1xufTtcblxuZXhwb3J0IHR5cGUgQ3VzdG9tZXJTb3J0UGFyYW1ldGVyID0ge1xuICBpZD86IE1heWJlPFNvcnRPcmRlcj47XG4gIGNyZWF0ZWRBdD86IE1heWJlPFNvcnRPcmRlcj47XG4gIHVwZGF0ZWRBdD86IE1heWJlPFNvcnRPcmRlcj47XG4gIHRpdGxlPzogTWF5YmU8U29ydE9yZGVyPjtcbiAgZmlyc3ROYW1lPzogTWF5YmU8U29ydE9yZGVyPjtcbiAgbGFzdE5hbWU/OiBNYXliZTxTb3J0T3JkZXI+O1xuICBwaG9uZU51bWJlcj86IE1heWJlPFNvcnRPcmRlcj47XG4gIGVtYWlsQWRkcmVzcz86IE1heWJlPFNvcnRPcmRlcj47XG59O1xuXG5leHBvcnQgdHlwZSBGYWNldEZpbHRlclBhcmFtZXRlciA9IHtcbiAgaXNQcml2YXRlPzogTWF5YmU8Qm9vbGVhbk9wZXJhdG9ycz47XG4gIGNyZWF0ZWRBdD86IE1heWJlPERhdGVPcGVyYXRvcnM+O1xuICB1cGRhdGVkQXQ/OiBNYXliZTxEYXRlT3BlcmF0b3JzPjtcbiAgbGFuZ3VhZ2VDb2RlPzogTWF5YmU8U3RyaW5nT3BlcmF0b3JzPjtcbiAgbmFtZT86IE1heWJlPFN0cmluZ09wZXJhdG9ycz47XG4gIGNvZGU/OiBNYXliZTxTdHJpbmdPcGVyYXRvcnM+O1xufTtcblxuZXhwb3J0IHR5cGUgRmFjZXRTb3J0UGFyYW1ldGVyID0ge1xuICBpZD86IE1heWJlPFNvcnRPcmRlcj47XG4gIGNyZWF0ZWRBdD86IE1heWJlPFNvcnRPcmRlcj47XG4gIHVwZGF0ZWRBdD86IE1heWJlPFNvcnRPcmRlcj47XG4gIG5hbWU/OiBNYXliZTxTb3J0T3JkZXI+O1xuICBjb2RlPzogTWF5YmU8U29ydE9yZGVyPjtcbn07XG5cbmV4cG9ydCB0eXBlIEpvYkZpbHRlclBhcmFtZXRlciA9IHtcbiAgY3JlYXRlZEF0PzogTWF5YmU8RGF0ZU9wZXJhdG9ycz47XG4gIHN0YXJ0ZWRBdD86IE1heWJlPERhdGVPcGVyYXRvcnM+O1xuICBzZXR0bGVkQXQ/OiBNYXliZTxEYXRlT3BlcmF0b3JzPjtcbiAgcXVldWVOYW1lPzogTWF5YmU8U3RyaW5nT3BlcmF0b3JzPjtcbiAgc3RhdGU/OiBNYXliZTxTdHJpbmdPcGVyYXRvcnM+O1xuICBwcm9ncmVzcz86IE1heWJlPE51bWJlck9wZXJhdG9ycz47XG4gIGlzU2V0dGxlZD86IE1heWJlPEJvb2xlYW5PcGVyYXRvcnM+O1xuICBkdXJhdGlvbj86IE1heWJlPE51bWJlck9wZXJhdG9ycz47XG59O1xuXG5leHBvcnQgdHlwZSBKb2JTb3J0UGFyYW1ldGVyID0ge1xuICBpZD86IE1heWJlPFNvcnRPcmRlcj47XG4gIGNyZWF0ZWRBdD86IE1heWJlPFNvcnRPcmRlcj47XG4gIHN0YXJ0ZWRBdD86IE1heWJlPFNvcnRPcmRlcj47XG4gIHNldHRsZWRBdD86IE1heWJlPFNvcnRPcmRlcj47XG4gIHF1ZXVlTmFtZT86IE1heWJlPFNvcnRPcmRlcj47XG4gIHByb2dyZXNzPzogTWF5YmU8U29ydE9yZGVyPjtcbiAgZHVyYXRpb24/OiBNYXliZTxTb3J0T3JkZXI+O1xufTtcblxuZXhwb3J0IHR5cGUgUGF5bWVudE1ldGhvZEZpbHRlclBhcmFtZXRlciA9IHtcbiAgY3JlYXRlZEF0PzogTWF5YmU8RGF0ZU9wZXJhdG9ycz47XG4gIHVwZGF0ZWRBdD86IE1heWJlPERhdGVPcGVyYXRvcnM+O1xuICBuYW1lPzogTWF5YmU8U3RyaW5nT3BlcmF0b3JzPjtcbiAgY29kZT86IE1heWJlPFN0cmluZ09wZXJhdG9ycz47XG4gIGRlc2NyaXB0aW9uPzogTWF5YmU8U3RyaW5nT3BlcmF0b3JzPjtcbiAgZW5hYmxlZD86IE1heWJlPEJvb2xlYW5PcGVyYXRvcnM+O1xufTtcblxuZXhwb3J0IHR5cGUgUGF5bWVudE1ldGhvZFNvcnRQYXJhbWV0ZXIgPSB7XG4gIGlkPzogTWF5YmU8U29ydE9yZGVyPjtcbiAgY3JlYXRlZEF0PzogTWF5YmU8U29ydE9yZGVyPjtcbiAgdXBkYXRlZEF0PzogTWF5YmU8U29ydE9yZGVyPjtcbiAgbmFtZT86IE1heWJlPFNvcnRPcmRlcj47XG4gIGNvZGU/OiBNYXliZTxTb3J0T3JkZXI+O1xuICBkZXNjcmlwdGlvbj86IE1heWJlPFNvcnRPcmRlcj47XG59O1xuXG5leHBvcnQgdHlwZSBQcm9kdWN0RmlsdGVyUGFyYW1ldGVyID0ge1xuICBlbmFibGVkPzogTWF5YmU8Qm9vbGVhbk9wZXJhdG9ycz47XG4gIGNyZWF0ZWRBdD86IE1heWJlPERhdGVPcGVyYXRvcnM+O1xuICB1cGRhdGVkQXQ/OiBNYXliZTxEYXRlT3BlcmF0b3JzPjtcbiAgbGFuZ3VhZ2VDb2RlPzogTWF5YmU8U3RyaW5nT3BlcmF0b3JzPjtcbiAgbmFtZT86IE1heWJlPFN0cmluZ09wZXJhdG9ycz47XG4gIHNsdWc/OiBNYXliZTxTdHJpbmdPcGVyYXRvcnM+O1xuICBkZXNjcmlwdGlvbj86IE1heWJlPFN0cmluZ09wZXJhdG9ycz47XG59O1xuXG5leHBvcnQgdHlwZSBQcm9kdWN0U29ydFBhcmFtZXRlciA9IHtcbiAgaWQ/OiBNYXliZTxTb3J0T3JkZXI+O1xuICBjcmVhdGVkQXQ/OiBNYXliZTxTb3J0T3JkZXI+O1xuICB1cGRhdGVkQXQ/OiBNYXliZTxTb3J0T3JkZXI+O1xuICBuYW1lPzogTWF5YmU8U29ydE9yZGVyPjtcbiAgc2x1Zz86IE1heWJlPFNvcnRPcmRlcj47XG4gIGRlc2NyaXB0aW9uPzogTWF5YmU8U29ydE9yZGVyPjtcbn07XG5cbmV4cG9ydCB0eXBlIFByb2R1Y3RWYXJpYW50RmlsdGVyUGFyYW1ldGVyID0ge1xuICBlbmFibGVkPzogTWF5YmU8Qm9vbGVhbk9wZXJhdG9ycz47XG4gIHRyYWNrSW52ZW50b3J5PzogTWF5YmU8U3RyaW5nT3BlcmF0b3JzPjtcbiAgc3RvY2tPbkhhbmQ/OiBNYXliZTxOdW1iZXJPcGVyYXRvcnM+O1xuICBzdG9ja0FsbG9jYXRlZD86IE1heWJlPE51bWJlck9wZXJhdG9ycz47XG4gIG91dE9mU3RvY2tUaHJlc2hvbGQ/OiBNYXliZTxOdW1iZXJPcGVyYXRvcnM+O1xuICB1c2VHbG9iYWxPdXRPZlN0b2NrVGhyZXNob2xkPzogTWF5YmU8Qm9vbGVhbk9wZXJhdG9ycz47XG4gIGNyZWF0ZWRBdD86IE1heWJlPERhdGVPcGVyYXRvcnM+O1xuICB1cGRhdGVkQXQ/OiBNYXliZTxEYXRlT3BlcmF0b3JzPjtcbiAgbGFuZ3VhZ2VDb2RlPzogTWF5YmU8U3RyaW5nT3BlcmF0b3JzPjtcbiAgc2t1PzogTWF5YmU8U3RyaW5nT3BlcmF0b3JzPjtcbiAgbmFtZT86IE1heWJlPFN0cmluZ09wZXJhdG9ycz47XG4gIHByaWNlPzogTWF5YmU8TnVtYmVyT3BlcmF0b3JzPjtcbiAgY3VycmVuY3lDb2RlPzogTWF5YmU8U3RyaW5nT3BlcmF0b3JzPjtcbiAgcHJpY2VXaXRoVGF4PzogTWF5YmU8TnVtYmVyT3BlcmF0b3JzPjtcbiAgc3RvY2tMZXZlbD86IE1heWJlPFN0cmluZ09wZXJhdG9ycz47XG4gIGRpc2NvdW50UHJpY2U/OiBNYXliZTxOdW1iZXJPcGVyYXRvcnM+O1xufTtcblxuZXhwb3J0IHR5cGUgUHJvZHVjdFZhcmlhbnRTb3J0UGFyYW1ldGVyID0ge1xuICBzdG9ja09uSGFuZD86IE1heWJlPFNvcnRPcmRlcj47XG4gIHN0b2NrQWxsb2NhdGVkPzogTWF5YmU8U29ydE9yZGVyPjtcbiAgb3V0T2ZTdG9ja1RocmVzaG9sZD86IE1heWJlPFNvcnRPcmRlcj47XG4gIGlkPzogTWF5YmU8U29ydE9yZGVyPjtcbiAgcHJvZHVjdElkPzogTWF5YmU8U29ydE9yZGVyPjtcbiAgY3JlYXRlZEF0PzogTWF5YmU8U29ydE9yZGVyPjtcbiAgdXBkYXRlZEF0PzogTWF5YmU8U29ydE9yZGVyPjtcbiAgc2t1PzogTWF5YmU8U29ydE9yZGVyPjtcbiAgbmFtZT86IE1heWJlPFNvcnRPcmRlcj47XG4gIHByaWNlPzogTWF5YmU8U29ydE9yZGVyPjtcbiAgcHJpY2VXaXRoVGF4PzogTWF5YmU8U29ydE9yZGVyPjtcbiAgc3RvY2tMZXZlbD86IE1heWJlPFNvcnRPcmRlcj47XG4gIGRpc2NvdW50UHJpY2U/OiBNYXliZTxTb3J0T3JkZXI+O1xufTtcblxuZXhwb3J0IHR5cGUgUHJvbW90aW9uRmlsdGVyUGFyYW1ldGVyID0ge1xuICBjcmVhdGVkQXQ/OiBNYXliZTxEYXRlT3BlcmF0b3JzPjtcbiAgdXBkYXRlZEF0PzogTWF5YmU8RGF0ZU9wZXJhdG9ycz47XG4gIHN0YXJ0c0F0PzogTWF5YmU8RGF0ZU9wZXJhdG9ycz47XG4gIGVuZHNBdD86IE1heWJlPERhdGVPcGVyYXRvcnM+O1xuICBjb3Vwb25Db2RlPzogTWF5YmU8U3RyaW5nT3BlcmF0b3JzPjtcbiAgcGVyQ3VzdG9tZXJVc2FnZUxpbWl0PzogTWF5YmU8TnVtYmVyT3BlcmF0b3JzPjtcbiAgbmFtZT86IE1heWJlPFN0cmluZ09wZXJhdG9ycz47XG4gIGVuYWJsZWQ/OiBNYXliZTxCb29sZWFuT3BlcmF0b3JzPjtcbn07XG5cbmV4cG9ydCB0eXBlIFByb21vdGlvblNvcnRQYXJhbWV0ZXIgPSB7XG4gIGlkPzogTWF5YmU8U29ydE9yZGVyPjtcbiAgY3JlYXRlZEF0PzogTWF5YmU8U29ydE9yZGVyPjtcbiAgdXBkYXRlZEF0PzogTWF5YmU8U29ydE9yZGVyPjtcbiAgc3RhcnRzQXQ/OiBNYXliZTxTb3J0T3JkZXI+O1xuICBlbmRzQXQ/OiBNYXliZTxTb3J0T3JkZXI+O1xuICBjb3Vwb25Db2RlPzogTWF5YmU8U29ydE9yZGVyPjtcbiAgcGVyQ3VzdG9tZXJVc2FnZUxpbWl0PzogTWF5YmU8U29ydE9yZGVyPjtcbiAgbmFtZT86IE1heWJlPFNvcnRPcmRlcj47XG59O1xuXG5leHBvcnQgdHlwZSBSb2xlRmlsdGVyUGFyYW1ldGVyID0ge1xuICBjcmVhdGVkQXQ/OiBNYXliZTxEYXRlT3BlcmF0b3JzPjtcbiAgdXBkYXRlZEF0PzogTWF5YmU8RGF0ZU9wZXJhdG9ycz47XG4gIGNvZGU/OiBNYXliZTxTdHJpbmdPcGVyYXRvcnM+O1xuICBkZXNjcmlwdGlvbj86IE1heWJlPFN0cmluZ09wZXJhdG9ycz47XG59O1xuXG5leHBvcnQgdHlwZSBSb2xlU29ydFBhcmFtZXRlciA9IHtcbiAgaWQ/OiBNYXliZTxTb3J0T3JkZXI+O1xuICBjcmVhdGVkQXQ/OiBNYXliZTxTb3J0T3JkZXI+O1xuICB1cGRhdGVkQXQ/OiBNYXliZTxTb3J0T3JkZXI+O1xuICBjb2RlPzogTWF5YmU8U29ydE9yZGVyPjtcbiAgZGVzY3JpcHRpb24/OiBNYXliZTxTb3J0T3JkZXI+O1xufTtcblxuZXhwb3J0IHR5cGUgU2hpcHBpbmdNZXRob2RGaWx0ZXJQYXJhbWV0ZXIgPSB7XG4gIGNyZWF0ZWRBdD86IE1heWJlPERhdGVPcGVyYXRvcnM+O1xuICB1cGRhdGVkQXQ/OiBNYXliZTxEYXRlT3BlcmF0b3JzPjtcbiAgY29kZT86IE1heWJlPFN0cmluZ09wZXJhdG9ycz47XG4gIG5hbWU/OiBNYXliZTxTdHJpbmdPcGVyYXRvcnM+O1xuICBkZXNjcmlwdGlvbj86IE1heWJlPFN0cmluZ09wZXJhdG9ycz47XG4gIGZ1bGZpbGxtZW50SGFuZGxlckNvZGU/OiBNYXliZTxTdHJpbmdPcGVyYXRvcnM+O1xufTtcblxuZXhwb3J0IHR5cGUgU2hpcHBpbmdNZXRob2RTb3J0UGFyYW1ldGVyID0ge1xuICBpZD86IE1heWJlPFNvcnRPcmRlcj47XG4gIGNyZWF0ZWRBdD86IE1heWJlPFNvcnRPcmRlcj47XG4gIHVwZGF0ZWRBdD86IE1heWJlPFNvcnRPcmRlcj47XG4gIGNvZGU/OiBNYXliZTxTb3J0T3JkZXI+O1xuICBuYW1lPzogTWF5YmU8U29ydE9yZGVyPjtcbiAgZGVzY3JpcHRpb24/OiBNYXliZTxTb3J0T3JkZXI+O1xuICBmdWxmaWxsbWVudEhhbmRsZXJDb2RlPzogTWF5YmU8U29ydE9yZGVyPjtcbn07XG5cbmV4cG9ydCB0eXBlIFRhZ0ZpbHRlclBhcmFtZXRlciA9IHtcbiAgY3JlYXRlZEF0PzogTWF5YmU8RGF0ZU9wZXJhdG9ycz47XG4gIHVwZGF0ZWRBdD86IE1heWJlPERhdGVPcGVyYXRvcnM+O1xuICB2YWx1ZT86IE1heWJlPFN0cmluZ09wZXJhdG9ycz47XG59O1xuXG5leHBvcnQgdHlwZSBUYWdTb3J0UGFyYW1ldGVyID0ge1xuICBpZD86IE1heWJlPFNvcnRPcmRlcj47XG4gIGNyZWF0ZWRBdD86IE1heWJlPFNvcnRPcmRlcj47XG4gIHVwZGF0ZWRBdD86IE1heWJlPFNvcnRPcmRlcj47XG4gIHZhbHVlPzogTWF5YmU8U29ydE9yZGVyPjtcbn07XG5cbmV4cG9ydCB0eXBlIFRheFJhdGVGaWx0ZXJQYXJhbWV0ZXIgPSB7XG4gIGNyZWF0ZWRBdD86IE1heWJlPERhdGVPcGVyYXRvcnM+O1xuICB1cGRhdGVkQXQ/OiBNYXliZTxEYXRlT3BlcmF0b3JzPjtcbiAgbmFtZT86IE1heWJlPFN0cmluZ09wZXJhdG9ycz47XG4gIGVuYWJsZWQ/OiBNYXliZTxCb29sZWFuT3BlcmF0b3JzPjtcbiAgdmFsdWU/OiBNYXliZTxOdW1iZXJPcGVyYXRvcnM+O1xufTtcblxuZXhwb3J0IHR5cGUgVGF4UmF0ZVNvcnRQYXJhbWV0ZXIgPSB7XG4gIGlkPzogTWF5YmU8U29ydE9yZGVyPjtcbiAgY3JlYXRlZEF0PzogTWF5YmU8U29ydE9yZGVyPjtcbiAgdXBkYXRlZEF0PzogTWF5YmU8U29ydE9yZGVyPjtcbiAgbmFtZT86IE1heWJlPFNvcnRPcmRlcj47XG4gIHZhbHVlPzogTWF5YmU8U29ydE9yZGVyPjtcbn07XG5cbmV4cG9ydCB0eXBlIEhpc3RvcnlFbnRyeUZpbHRlclBhcmFtZXRlciA9IHtcbiAgaXNQdWJsaWM/OiBNYXliZTxCb29sZWFuT3BlcmF0b3JzPjtcbiAgY3JlYXRlZEF0PzogTWF5YmU8RGF0ZU9wZXJhdG9ycz47XG4gIHVwZGF0ZWRBdD86IE1heWJlPERhdGVPcGVyYXRvcnM+O1xuICB0eXBlPzogTWF5YmU8U3RyaW5nT3BlcmF0b3JzPjtcbn07XG5cbmV4cG9ydCB0eXBlIEhpc3RvcnlFbnRyeVNvcnRQYXJhbWV0ZXIgPSB7XG4gIGlkPzogTWF5YmU8U29ydE9yZGVyPjtcbiAgY3JlYXRlZEF0PzogTWF5YmU8U29ydE9yZGVyPjtcbiAgdXBkYXRlZEF0PzogTWF5YmU8U29ydE9yZGVyPjtcbn07XG5cbmV4cG9ydCB0eXBlIFByb2R1Y3RWYXJpYW50Q3VzdG9tRmllbGRzID0ge1xuICBfX3R5cGVuYW1lPzogJ1Byb2R1Y3RWYXJpYW50Q3VzdG9tRmllbGRzJztcbiAgZGlzY291bnRQcmljZT86IE1heWJlPFNjYWxhcnNbJ0ludCddPjtcbn07XG5cbmV4cG9ydCB0eXBlIENyZWF0ZVByb2R1Y3RWYXJpYW50Q3VzdG9tRmllbGRzSW5wdXQgPSB7XG4gIGRpc2NvdW50UHJpY2U/OiBNYXliZTxTY2FsYXJzWydJbnQnXT47XG59O1xuXG5leHBvcnQgdHlwZSBVcGRhdGVQcm9kdWN0VmFyaWFudEN1c3RvbUZpZWxkc0lucHV0ID0ge1xuICBkaXNjb3VudFByaWNlPzogTWF5YmU8U2NhbGFyc1snSW50J10+O1xufTtcblxuZXhwb3J0IHR5cGUgQXV0aGVudGljYXRpb25JbnB1dCA9IHtcbiAgbmF0aXZlPzogTWF5YmU8TmF0aXZlQXV0aElucHV0Pjtcbn07XG5cbmV4cG9ydCB0eXBlIE5hdGl2ZUF1dGhJbnB1dCA9IHtcbiAgdXNlcm5hbWU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBwYXNzd29yZDogU2NhbGFyc1snU3RyaW5nJ107XG59O1xuXG5leHBvcnQgdHlwZSBDdXN0b21GaWVsZHMgPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ3VzdG9tRmllbGRzJztcbiAgQWRkcmVzczogQXJyYXk8Q3VzdG9tRmllbGRDb25maWc+O1xuICBBZG1pbmlzdHJhdG9yOiBBcnJheTxDdXN0b21GaWVsZENvbmZpZz47XG4gIEFzc2V0OiBBcnJheTxDdXN0b21GaWVsZENvbmZpZz47XG4gIENoYW5uZWw6IEFycmF5PEN1c3RvbUZpZWxkQ29uZmlnPjtcbiAgQ29sbGVjdGlvbjogQXJyYXk8Q3VzdG9tRmllbGRDb25maWc+O1xuICBDdXN0b21lcjogQXJyYXk8Q3VzdG9tRmllbGRDb25maWc+O1xuICBGYWNldDogQXJyYXk8Q3VzdG9tRmllbGRDb25maWc+O1xuICBGYWNldFZhbHVlOiBBcnJheTxDdXN0b21GaWVsZENvbmZpZz47XG4gIEZ1bGZpbGxtZW50OiBBcnJheTxDdXN0b21GaWVsZENvbmZpZz47XG4gIEdsb2JhbFNldHRpbmdzOiBBcnJheTxDdXN0b21GaWVsZENvbmZpZz47XG4gIE9yZGVyOiBBcnJheTxDdXN0b21GaWVsZENvbmZpZz47XG4gIE9yZGVyTGluZTogQXJyYXk8Q3VzdG9tRmllbGRDb25maWc+O1xuICBQcm9kdWN0OiBBcnJheTxDdXN0b21GaWVsZENvbmZpZz47XG4gIFByb2R1Y3RPcHRpb246IEFycmF5PEN1c3RvbUZpZWxkQ29uZmlnPjtcbiAgUHJvZHVjdE9wdGlvbkdyb3VwOiBBcnJheTxDdXN0b21GaWVsZENvbmZpZz47XG4gIFByb2R1Y3RWYXJpYW50OiBBcnJheTxDdXN0b21GaWVsZENvbmZpZz47XG4gIFVzZXI6IEFycmF5PEN1c3RvbUZpZWxkQ29uZmlnPjtcbiAgU2hpcHBpbmdNZXRob2Q6IEFycmF5PEN1c3RvbUZpZWxkQ29uZmlnPjtcbn07XG5cbmV4cG9ydCB0eXBlIE5ldHdvcmtTdGF0dXMgPSB7XG4gIF9fdHlwZW5hbWU/OiAnTmV0d29ya1N0YXR1cyc7XG4gIGluRmxpZ2h0UmVxdWVzdHM6IFNjYWxhcnNbJ0ludCddO1xufTtcblxuZXhwb3J0IHR5cGUgVXNlclN0YXR1cyA9IHtcbiAgX190eXBlbmFtZT86ICdVc2VyU3RhdHVzJztcbiAgdXNlcm5hbWU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBpc0xvZ2dlZEluOiBTY2FsYXJzWydCb29sZWFuJ107XG4gIGxvZ2luVGltZTogU2NhbGFyc1snU3RyaW5nJ107XG4gIHBlcm1pc3Npb25zOiBBcnJheTxQZXJtaXNzaW9uPjtcbiAgYWN0aXZlQ2hhbm5lbElkPzogTWF5YmU8U2NhbGFyc1snSUQnXT47XG4gIGNoYW5uZWxzOiBBcnJheTxDdXJyZW50VXNlckNoYW5uZWw+O1xufTtcblxuZXhwb3J0IHR5cGUgVWlTdGF0ZSA9IHtcbiAgX190eXBlbmFtZT86ICdVaVN0YXRlJztcbiAgbGFuZ3VhZ2U6IExhbmd1YWdlQ29kZTtcbiAgdGhlbWU6IFNjYWxhcnNbJ1N0cmluZyddO1xufTtcblxuZXhwb3J0IHR5cGUgQ3VycmVudFVzZXJDaGFubmVsSW5wdXQgPSB7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xuICB0b2tlbjogU2NhbGFyc1snU3RyaW5nJ107XG4gIGNvZGU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBwZXJtaXNzaW9uczogQXJyYXk8UGVybWlzc2lvbj47XG59O1xuXG5leHBvcnQgdHlwZSBVc2VyU3RhdHVzSW5wdXQgPSB7XG4gIHVzZXJuYW1lOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgbG9naW5UaW1lOiBTY2FsYXJzWydTdHJpbmcnXTtcbiAgYWN0aXZlQ2hhbm5lbElkOiBTY2FsYXJzWydJRCddO1xuICBjaGFubmVsczogQXJyYXk8Q3VycmVudFVzZXJDaGFubmVsSW5wdXQ+O1xufTtcblxuZXhwb3J0IHR5cGUgUm9sZUZyYWdtZW50ID0gKFxuICB7IF9fdHlwZW5hbWU/OiAnUm9sZScgfVxuICAmIFBpY2s8Um9sZSwgJ2lkJyB8ICdjcmVhdGVkQXQnIHwgJ3VwZGF0ZWRBdCcgfCAnY29kZScgfCAnZGVzY3JpcHRpb24nIHwgJ3Blcm1pc3Npb25zJz5cbiAgJiB7IGNoYW5uZWxzOiBBcnJheTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0NoYW5uZWwnIH1cbiAgICAmIFBpY2s8Q2hhbm5lbCwgJ2lkJyB8ICdjb2RlJyB8ICd0b2tlbic+XG4gICk+IH1cbik7XG5cbmV4cG9ydCB0eXBlIEFkbWluaXN0cmF0b3JGcmFnbWVudCA9IChcbiAgeyBfX3R5cGVuYW1lPzogJ0FkbWluaXN0cmF0b3InIH1cbiAgJiBQaWNrPEFkbWluaXN0cmF0b3IsICdpZCcgfCAnY3JlYXRlZEF0JyB8ICd1cGRhdGVkQXQnIHwgJ2ZpcnN0TmFtZScgfCAnbGFzdE5hbWUnIHwgJ2VtYWlsQWRkcmVzcyc+XG4gICYgeyB1c2VyOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1VzZXInIH1cbiAgICAmIFBpY2s8VXNlciwgJ2lkJyB8ICdpZGVudGlmaWVyJyB8ICdsYXN0TG9naW4nPlxuICAgICYgeyByb2xlczogQXJyYXk8KFxuICAgICAgeyBfX3R5cGVuYW1lPzogJ1JvbGUnIH1cbiAgICAgICYgUm9sZUZyYWdtZW50XG4gICAgKT4gfVxuICApIH1cbik7XG5cbmV4cG9ydCB0eXBlIEdldEFkbWluaXN0cmF0b3JzUXVlcnlWYXJpYWJsZXMgPSBFeGFjdDx7XG4gIG9wdGlvbnM/OiBNYXliZTxBZG1pbmlzdHJhdG9yTGlzdE9wdGlvbnM+O1xufT47XG5cblxuZXhwb3J0IHR5cGUgR2V0QWRtaW5pc3RyYXRvcnNRdWVyeSA9IHsgYWRtaW5pc3RyYXRvcnM6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQWRtaW5pc3RyYXRvckxpc3QnIH1cbiAgICAmIFBpY2s8QWRtaW5pc3RyYXRvckxpc3QsICd0b3RhbEl0ZW1zJz5cbiAgICAmIHsgaXRlbXM6IEFycmF5PChcbiAgICAgIHsgX190eXBlbmFtZT86ICdBZG1pbmlzdHJhdG9yJyB9XG4gICAgICAmIEFkbWluaXN0cmF0b3JGcmFnbWVudFxuICAgICk+IH1cbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBHZXRBY3RpdmVBZG1pbmlzdHJhdG9yUXVlcnlWYXJpYWJsZXMgPSBFeGFjdDx7IFtrZXk6IHN0cmluZ106IG5ldmVyOyB9PjtcblxuXG5leHBvcnQgdHlwZSBHZXRBY3RpdmVBZG1pbmlzdHJhdG9yUXVlcnkgPSB7IGFjdGl2ZUFkbWluaXN0cmF0b3I/OiBNYXliZTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0FkbWluaXN0cmF0b3InIH1cbiAgICAmIEFkbWluaXN0cmF0b3JGcmFnbWVudFxuICApPiB9O1xuXG5leHBvcnQgdHlwZSBHZXRBZG1pbmlzdHJhdG9yUXVlcnlWYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xufT47XG5cblxuZXhwb3J0IHR5cGUgR2V0QWRtaW5pc3RyYXRvclF1ZXJ5ID0geyBhZG1pbmlzdHJhdG9yPzogTWF5YmU8KFxuICAgIHsgX190eXBlbmFtZT86ICdBZG1pbmlzdHJhdG9yJyB9XG4gICAgJiBBZG1pbmlzdHJhdG9yRnJhZ21lbnRcbiAgKT4gfTtcblxuZXhwb3J0IHR5cGUgQ3JlYXRlQWRtaW5pc3RyYXRvck11dGF0aW9uVmFyaWFibGVzID0gRXhhY3Q8e1xuICBpbnB1dDogQ3JlYXRlQWRtaW5pc3RyYXRvcklucHV0O1xufT47XG5cblxuZXhwb3J0IHR5cGUgQ3JlYXRlQWRtaW5pc3RyYXRvck11dGF0aW9uID0geyBjcmVhdGVBZG1pbmlzdHJhdG9yOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0FkbWluaXN0cmF0b3InIH1cbiAgICAmIEFkbWluaXN0cmF0b3JGcmFnbWVudFxuICApIH07XG5cbmV4cG9ydCB0eXBlIFVwZGF0ZUFkbWluaXN0cmF0b3JNdXRhdGlvblZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgaW5wdXQ6IFVwZGF0ZUFkbWluaXN0cmF0b3JJbnB1dDtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIFVwZGF0ZUFkbWluaXN0cmF0b3JNdXRhdGlvbiA9IHsgdXBkYXRlQWRtaW5pc3RyYXRvcjogKFxuICAgIHsgX190eXBlbmFtZT86ICdBZG1pbmlzdHJhdG9yJyB9XG4gICAgJiBBZG1pbmlzdHJhdG9yRnJhZ21lbnRcbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBVcGRhdGVBY3RpdmVBZG1pbmlzdHJhdG9yTXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlucHV0OiBVcGRhdGVBY3RpdmVBZG1pbmlzdHJhdG9ySW5wdXQ7XG59PjtcblxuXG5leHBvcnQgdHlwZSBVcGRhdGVBY3RpdmVBZG1pbmlzdHJhdG9yTXV0YXRpb24gPSB7IHVwZGF0ZUFjdGl2ZUFkbWluaXN0cmF0b3I6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQWRtaW5pc3RyYXRvcicgfVxuICAgICYgQWRtaW5pc3RyYXRvckZyYWdtZW50XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgRGVsZXRlQWRtaW5pc3RyYXRvck11dGF0aW9uVmFyaWFibGVzID0gRXhhY3Q8e1xuICBpZDogU2NhbGFyc1snSUQnXTtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIERlbGV0ZUFkbWluaXN0cmF0b3JNdXRhdGlvbiA9IHsgZGVsZXRlQWRtaW5pc3RyYXRvcjogKFxuICAgIHsgX190eXBlbmFtZT86ICdEZWxldGlvblJlc3BvbnNlJyB9XG4gICAgJiBQaWNrPERlbGV0aW9uUmVzcG9uc2UsICdyZXN1bHQnIHwgJ21lc3NhZ2UnPlxuICApIH07XG5cbmV4cG9ydCB0eXBlIEdldFJvbGVzUXVlcnlWYXJpYWJsZXMgPSBFeGFjdDx7XG4gIG9wdGlvbnM/OiBNYXliZTxSb2xlTGlzdE9wdGlvbnM+O1xufT47XG5cblxuZXhwb3J0IHR5cGUgR2V0Um9sZXNRdWVyeSA9IHsgcm9sZXM6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnUm9sZUxpc3QnIH1cbiAgICAmIFBpY2s8Um9sZUxpc3QsICd0b3RhbEl0ZW1zJz5cbiAgICAmIHsgaXRlbXM6IEFycmF5PChcbiAgICAgIHsgX190eXBlbmFtZT86ICdSb2xlJyB9XG4gICAgICAmIFJvbGVGcmFnbWVudFxuICAgICk+IH1cbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBHZXRSb2xlUXVlcnlWYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xufT47XG5cblxuZXhwb3J0IHR5cGUgR2V0Um9sZVF1ZXJ5ID0geyByb2xlPzogTWF5YmU8KFxuICAgIHsgX190eXBlbmFtZT86ICdSb2xlJyB9XG4gICAgJiBSb2xlRnJhZ21lbnRcbiAgKT4gfTtcblxuZXhwb3J0IHR5cGUgQ3JlYXRlUm9sZU11dGF0aW9uVmFyaWFibGVzID0gRXhhY3Q8e1xuICBpbnB1dDogQ3JlYXRlUm9sZUlucHV0O1xufT47XG5cblxuZXhwb3J0IHR5cGUgQ3JlYXRlUm9sZU11dGF0aW9uID0geyBjcmVhdGVSb2xlOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1JvbGUnIH1cbiAgICAmIFJvbGVGcmFnbWVudFxuICApIH07XG5cbmV4cG9ydCB0eXBlIFVwZGF0ZVJvbGVNdXRhdGlvblZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgaW5wdXQ6IFVwZGF0ZVJvbGVJbnB1dDtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIFVwZGF0ZVJvbGVNdXRhdGlvbiA9IHsgdXBkYXRlUm9sZTogKFxuICAgIHsgX190eXBlbmFtZT86ICdSb2xlJyB9XG4gICAgJiBSb2xlRnJhZ21lbnRcbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBEZWxldGVSb2xlTXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xufT47XG5cblxuZXhwb3J0IHR5cGUgRGVsZXRlUm9sZU11dGF0aW9uID0geyBkZWxldGVSb2xlOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0RlbGV0aW9uUmVzcG9uc2UnIH1cbiAgICAmIFBpY2s8RGVsZXRpb25SZXNwb25zZSwgJ3Jlc3VsdCcgfCAnbWVzc2FnZSc+XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgQXNzaWduUm9sZVRvQWRtaW5pc3RyYXRvck11dGF0aW9uVmFyaWFibGVzID0gRXhhY3Q8e1xuICBhZG1pbmlzdHJhdG9ySWQ6IFNjYWxhcnNbJ0lEJ107XG4gIHJvbGVJZDogU2NhbGFyc1snSUQnXTtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIEFzc2lnblJvbGVUb0FkbWluaXN0cmF0b3JNdXRhdGlvbiA9IHsgYXNzaWduUm9sZVRvQWRtaW5pc3RyYXRvcjogKFxuICAgIHsgX190eXBlbmFtZT86ICdBZG1pbmlzdHJhdG9yJyB9XG4gICAgJiBBZG1pbmlzdHJhdG9yRnJhZ21lbnRcbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBDdXJyZW50VXNlckZyYWdtZW50ID0gKFxuICB7IF9fdHlwZW5hbWU/OiAnQ3VycmVudFVzZXInIH1cbiAgJiBQaWNrPEN1cnJlbnRVc2VyLCAnaWQnIHwgJ2lkZW50aWZpZXInPlxuICAmIHsgY2hhbm5lbHM6IEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQ3VycmVudFVzZXJDaGFubmVsJyB9XG4gICAgJiBQaWNrPEN1cnJlbnRVc2VyQ2hhbm5lbCwgJ2lkJyB8ICdjb2RlJyB8ICd0b2tlbicgfCAncGVybWlzc2lvbnMnPlxuICApPiB9XG4pO1xuXG5leHBvcnQgdHlwZSBBdHRlbXB0TG9naW5NdXRhdGlvblZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgdXNlcm5hbWU6IFNjYWxhcnNbJ1N0cmluZyddO1xuICBwYXNzd29yZDogU2NhbGFyc1snU3RyaW5nJ107XG4gIHJlbWVtYmVyTWU6IFNjYWxhcnNbJ0Jvb2xlYW4nXTtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIEF0dGVtcHRMb2dpbk11dGF0aW9uID0geyBsb2dpbjogKFxuICAgIHsgX190eXBlbmFtZT86ICdDdXJyZW50VXNlcicgfVxuICAgICYgQ3VycmVudFVzZXJGcmFnbWVudFxuICApIHwgKFxuICAgIHsgX190eXBlbmFtZT86ICdJbnZhbGlkQ3JlZGVudGlhbHNFcnJvcicgfVxuICAgICYgRXJyb3JSZXN1bHRfSW52YWxpZENyZWRlbnRpYWxzRXJyb3JfRnJhZ21lbnRcbiAgKSB8IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnTmF0aXZlQXV0aFN0cmF0ZWd5RXJyb3InIH1cbiAgICAmIEVycm9yUmVzdWx0X05hdGl2ZUF1dGhTdHJhdGVneUVycm9yX0ZyYWdtZW50XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgTG9nT3V0TXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7IFtrZXk6IHN0cmluZ106IG5ldmVyOyB9PjtcblxuXG5leHBvcnQgdHlwZSBMb2dPdXRNdXRhdGlvbiA9IHsgbG9nb3V0OiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1N1Y2Nlc3MnIH1cbiAgICAmIFBpY2s8U3VjY2VzcywgJ3N1Y2Nlc3MnPlxuICApIH07XG5cbmV4cG9ydCB0eXBlIEdldEN1cnJlbnRVc2VyUXVlcnlWYXJpYWJsZXMgPSBFeGFjdDx7IFtrZXk6IHN0cmluZ106IG5ldmVyOyB9PjtcblxuXG5leHBvcnQgdHlwZSBHZXRDdXJyZW50VXNlclF1ZXJ5ID0geyBtZT86IE1heWJlPChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQ3VycmVudFVzZXInIH1cbiAgICAmIEN1cnJlbnRVc2VyRnJhZ21lbnRcbiAgKT4gfTtcblxuZXhwb3J0IHR5cGUgUmVxdWVzdFN0YXJ0ZWRNdXRhdGlvblZhcmlhYmxlcyA9IEV4YWN0PHsgW2tleTogc3RyaW5nXTogbmV2ZXI7IH0+O1xuXG5cbmV4cG9ydCB0eXBlIFJlcXVlc3RTdGFydGVkTXV0YXRpb24gPSBQaWNrPE11dGF0aW9uLCAncmVxdWVzdFN0YXJ0ZWQnPjtcblxuZXhwb3J0IHR5cGUgUmVxdWVzdENvbXBsZXRlZE11dGF0aW9uVmFyaWFibGVzID0gRXhhY3Q8eyBba2V5OiBzdHJpbmddOiBuZXZlcjsgfT47XG5cblxuZXhwb3J0IHR5cGUgUmVxdWVzdENvbXBsZXRlZE11dGF0aW9uID0gUGljazxNdXRhdGlvbiwgJ3JlcXVlc3RDb21wbGV0ZWQnPjtcblxuZXhwb3J0IHR5cGUgVXNlclN0YXR1c0ZyYWdtZW50ID0gKFxuICB7IF9fdHlwZW5hbWU/OiAnVXNlclN0YXR1cycgfVxuICAmIFBpY2s8VXNlclN0YXR1cywgJ3VzZXJuYW1lJyB8ICdpc0xvZ2dlZEluJyB8ICdsb2dpblRpbWUnIHwgJ2FjdGl2ZUNoYW5uZWxJZCcgfCAncGVybWlzc2lvbnMnPlxuICAmIHsgY2hhbm5lbHM6IEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQ3VycmVudFVzZXJDaGFubmVsJyB9XG4gICAgJiBQaWNrPEN1cnJlbnRVc2VyQ2hhbm5lbCwgJ2lkJyB8ICdjb2RlJyB8ICd0b2tlbicgfCAncGVybWlzc2lvbnMnPlxuICApPiB9XG4pO1xuXG5leHBvcnQgdHlwZSBTZXRBc0xvZ2dlZEluTXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlucHV0OiBVc2VyU3RhdHVzSW5wdXQ7XG59PjtcblxuXG5leHBvcnQgdHlwZSBTZXRBc0xvZ2dlZEluTXV0YXRpb24gPSB7IHNldEFzTG9nZ2VkSW46IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnVXNlclN0YXR1cycgfVxuICAgICYgVXNlclN0YXR1c0ZyYWdtZW50XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgU2V0QXNMb2dnZWRPdXRNdXRhdGlvblZhcmlhYmxlcyA9IEV4YWN0PHsgW2tleTogc3RyaW5nXTogbmV2ZXI7IH0+O1xuXG5cbmV4cG9ydCB0eXBlIFNldEFzTG9nZ2VkT3V0TXV0YXRpb24gPSB7IHNldEFzTG9nZ2VkT3V0OiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1VzZXJTdGF0dXMnIH1cbiAgICAmIFVzZXJTdGF0dXNGcmFnbWVudFxuICApIH07XG5cbmV4cG9ydCB0eXBlIFNldFVpTGFuZ3VhZ2VNdXRhdGlvblZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgbGFuZ3VhZ2VDb2RlOiBMYW5ndWFnZUNvZGU7XG59PjtcblxuXG5leHBvcnQgdHlwZSBTZXRVaUxhbmd1YWdlTXV0YXRpb24gPSBQaWNrPE11dGF0aW9uLCAnc2V0VWlMYW5ndWFnZSc+O1xuXG5leHBvcnQgdHlwZSBTZXRVaVRoZW1lTXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIHRoZW1lOiBTY2FsYXJzWydTdHJpbmcnXTtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIFNldFVpVGhlbWVNdXRhdGlvbiA9IFBpY2s8TXV0YXRpb24sICdzZXRVaVRoZW1lJz47XG5cbmV4cG9ydCB0eXBlIEdldE5ldHdvcmtTdGF0dXNRdWVyeVZhcmlhYmxlcyA9IEV4YWN0PHsgW2tleTogc3RyaW5nXTogbmV2ZXI7IH0+O1xuXG5cbmV4cG9ydCB0eXBlIEdldE5ldHdvcmtTdGF0dXNRdWVyeSA9IHsgbmV0d29ya1N0YXR1czogKFxuICAgIHsgX190eXBlbmFtZT86ICdOZXR3b3JrU3RhdHVzJyB9XG4gICAgJiBQaWNrPE5ldHdvcmtTdGF0dXMsICdpbkZsaWdodFJlcXVlc3RzJz5cbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBHZXRVc2VyU3RhdHVzUXVlcnlWYXJpYWJsZXMgPSBFeGFjdDx7IFtrZXk6IHN0cmluZ106IG5ldmVyOyB9PjtcblxuXG5leHBvcnQgdHlwZSBHZXRVc2VyU3RhdHVzUXVlcnkgPSB7IHVzZXJTdGF0dXM6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnVXNlclN0YXR1cycgfVxuICAgICYgVXNlclN0YXR1c0ZyYWdtZW50XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgR2V0VWlTdGF0ZVF1ZXJ5VmFyaWFibGVzID0gRXhhY3Q8eyBba2V5OiBzdHJpbmddOiBuZXZlcjsgfT47XG5cblxuZXhwb3J0IHR5cGUgR2V0VWlTdGF0ZVF1ZXJ5ID0geyB1aVN0YXRlOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1VpU3RhdGUnIH1cbiAgICAmIFBpY2s8VWlTdGF0ZSwgJ2xhbmd1YWdlJyB8ICd0aGVtZSc+XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgR2V0Q2xpZW50U3RhdGVRdWVyeVZhcmlhYmxlcyA9IEV4YWN0PHsgW2tleTogc3RyaW5nXTogbmV2ZXI7IH0+O1xuXG5cbmV4cG9ydCB0eXBlIEdldENsaWVudFN0YXRlUXVlcnkgPSB7IG5ldHdvcmtTdGF0dXM6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnTmV0d29ya1N0YXR1cycgfVxuICAgICYgUGljazxOZXR3b3JrU3RhdHVzLCAnaW5GbGlnaHRSZXF1ZXN0cyc+XG4gICksIHVzZXJTdGF0dXM6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnVXNlclN0YXR1cycgfVxuICAgICYgVXNlclN0YXR1c0ZyYWdtZW50XG4gICksIHVpU3RhdGU6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnVWlTdGF0ZScgfVxuICAgICYgUGljazxVaVN0YXRlLCAnbGFuZ3VhZ2UnIHwgJ3RoZW1lJz5cbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBTZXRBY3RpdmVDaGFubmVsTXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGNoYW5uZWxJZDogU2NhbGFyc1snSUQnXTtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIFNldEFjdGl2ZUNoYW5uZWxNdXRhdGlvbiA9IHsgc2V0QWN0aXZlQ2hhbm5lbDogKFxuICAgIHsgX190eXBlbmFtZT86ICdVc2VyU3RhdHVzJyB9XG4gICAgJiBVc2VyU3RhdHVzRnJhZ21lbnRcbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBVcGRhdGVVc2VyQ2hhbm5lbHNNdXRhdGlvblZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgY2hhbm5lbHM6IEFycmF5PEN1cnJlbnRVc2VyQ2hhbm5lbElucHV0PiB8IEN1cnJlbnRVc2VyQ2hhbm5lbElucHV0O1xufT47XG5cblxuZXhwb3J0IHR5cGUgVXBkYXRlVXNlckNoYW5uZWxzTXV0YXRpb24gPSB7IHVwZGF0ZVVzZXJDaGFubmVsczogKFxuICAgIHsgX190eXBlbmFtZT86ICdVc2VyU3RhdHVzJyB9XG4gICAgJiBVc2VyU3RhdHVzRnJhZ21lbnRcbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBHZXRDb2xsZWN0aW9uRmlsdGVyc1F1ZXJ5VmFyaWFibGVzID0gRXhhY3Q8eyBba2V5OiBzdHJpbmddOiBuZXZlcjsgfT47XG5cblxuZXhwb3J0IHR5cGUgR2V0Q29sbGVjdGlvbkZpbHRlcnNRdWVyeSA9IHsgY29sbGVjdGlvbkZpbHRlcnM6IEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQ29uZmlndXJhYmxlT3BlcmF0aW9uRGVmaW5pdGlvbicgfVxuICAgICYgQ29uZmlndXJhYmxlT3BlcmF0aW9uRGVmRnJhZ21lbnRcbiAgKT4gfTtcblxuZXhwb3J0IHR5cGUgQ29sbGVjdGlvbkZyYWdtZW50ID0gKFxuICB7IF9fdHlwZW5hbWU/OiAnQ29sbGVjdGlvbicgfVxuICAmIFBpY2s8Q29sbGVjdGlvbiwgJ2lkJyB8ICdjcmVhdGVkQXQnIHwgJ3VwZGF0ZWRBdCcgfCAnbmFtZScgfCAnc2x1ZycgfCAnZGVzY3JpcHRpb24nIHwgJ2lzUHJpdmF0ZScgfCAnbGFuZ3VhZ2VDb2RlJz5cbiAgJiB7IGZlYXR1cmVkQXNzZXQ/OiBNYXliZTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0Fzc2V0JyB9XG4gICAgJiBBc3NldEZyYWdtZW50XG4gICk+LCBhc3NldHM6IEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQXNzZXQnIH1cbiAgICAmIEFzc2V0RnJhZ21lbnRcbiAgKT4sIGZpbHRlcnM6IEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQ29uZmlndXJhYmxlT3BlcmF0aW9uJyB9XG4gICAgJiBDb25maWd1cmFibGVPcGVyYXRpb25GcmFnbWVudFxuICApPiwgdHJhbnNsYXRpb25zOiBBcnJheTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0NvbGxlY3Rpb25UcmFuc2xhdGlvbicgfVxuICAgICYgUGljazxDb2xsZWN0aW9uVHJhbnNsYXRpb24sICdpZCcgfCAnbGFuZ3VhZ2VDb2RlJyB8ICduYW1lJyB8ICdzbHVnJyB8ICdkZXNjcmlwdGlvbic+XG4gICk+LCBwYXJlbnQ/OiBNYXliZTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0NvbGxlY3Rpb24nIH1cbiAgICAmIFBpY2s8Q29sbGVjdGlvbiwgJ2lkJyB8ICduYW1lJz5cbiAgKT4sIGNoaWxkcmVuPzogTWF5YmU8QXJyYXk8KFxuICAgIHsgX190eXBlbmFtZT86ICdDb2xsZWN0aW9uJyB9XG4gICAgJiBQaWNrPENvbGxlY3Rpb24sICdpZCcgfCAnbmFtZSc+XG4gICk+PiB9XG4pO1xuXG5leHBvcnQgdHlwZSBHZXRDb2xsZWN0aW9uTGlzdFF1ZXJ5VmFyaWFibGVzID0gRXhhY3Q8e1xuICBvcHRpb25zPzogTWF5YmU8Q29sbGVjdGlvbkxpc3RPcHRpb25zPjtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIEdldENvbGxlY3Rpb25MaXN0UXVlcnkgPSB7IGNvbGxlY3Rpb25zOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0NvbGxlY3Rpb25MaXN0JyB9XG4gICAgJiBQaWNrPENvbGxlY3Rpb25MaXN0LCAndG90YWxJdGVtcyc+XG4gICAgJiB7IGl0ZW1zOiBBcnJheTwoXG4gICAgICB7IF9fdHlwZW5hbWU/OiAnQ29sbGVjdGlvbicgfVxuICAgICAgJiBQaWNrPENvbGxlY3Rpb24sICdpZCcgfCAnbmFtZScgfCAnc2x1ZycgfCAnZGVzY3JpcHRpb24nIHwgJ2lzUHJpdmF0ZSc+XG4gICAgICAmIHsgZmVhdHVyZWRBc3NldD86IE1heWJlPChcbiAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0Fzc2V0JyB9XG4gICAgICAgICYgQXNzZXRGcmFnbWVudFxuICAgICAgKT4sIHBhcmVudD86IE1heWJlPChcbiAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0NvbGxlY3Rpb24nIH1cbiAgICAgICAgJiBQaWNrPENvbGxlY3Rpb24sICdpZCc+XG4gICAgICApPiB9XG4gICAgKT4gfVxuICApIH07XG5cbmV4cG9ydCB0eXBlIEdldENvbGxlY3Rpb25RdWVyeVZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG59PjtcblxuXG5leHBvcnQgdHlwZSBHZXRDb2xsZWN0aW9uUXVlcnkgPSB7IGNvbGxlY3Rpb24/OiBNYXliZTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0NvbGxlY3Rpb24nIH1cbiAgICAmIENvbGxlY3Rpb25GcmFnbWVudFxuICApPiB9O1xuXG5leHBvcnQgdHlwZSBDcmVhdGVDb2xsZWN0aW9uTXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlucHV0OiBDcmVhdGVDb2xsZWN0aW9uSW5wdXQ7XG59PjtcblxuXG5leHBvcnQgdHlwZSBDcmVhdGVDb2xsZWN0aW9uTXV0YXRpb24gPSB7IGNyZWF0ZUNvbGxlY3Rpb246IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQ29sbGVjdGlvbicgfVxuICAgICYgQ29sbGVjdGlvbkZyYWdtZW50XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgVXBkYXRlQ29sbGVjdGlvbk11dGF0aW9uVmFyaWFibGVzID0gRXhhY3Q8e1xuICBpbnB1dDogVXBkYXRlQ29sbGVjdGlvbklucHV0O1xufT47XG5cblxuZXhwb3J0IHR5cGUgVXBkYXRlQ29sbGVjdGlvbk11dGF0aW9uID0geyB1cGRhdGVDb2xsZWN0aW9uOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0NvbGxlY3Rpb24nIH1cbiAgICAmIENvbGxlY3Rpb25GcmFnbWVudFxuICApIH07XG5cbmV4cG9ydCB0eXBlIE1vdmVDb2xsZWN0aW9uTXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlucHV0OiBNb3ZlQ29sbGVjdGlvbklucHV0O1xufT47XG5cblxuZXhwb3J0IHR5cGUgTW92ZUNvbGxlY3Rpb25NdXRhdGlvbiA9IHsgbW92ZUNvbGxlY3Rpb246IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQ29sbGVjdGlvbicgfVxuICAgICYgQ29sbGVjdGlvbkZyYWdtZW50XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgRGVsZXRlQ29sbGVjdGlvbk11dGF0aW9uVmFyaWFibGVzID0gRXhhY3Q8e1xuICBpZDogU2NhbGFyc1snSUQnXTtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIERlbGV0ZUNvbGxlY3Rpb25NdXRhdGlvbiA9IHsgZGVsZXRlQ29sbGVjdGlvbjogKFxuICAgIHsgX190eXBlbmFtZT86ICdEZWxldGlvblJlc3BvbnNlJyB9XG4gICAgJiBQaWNrPERlbGV0aW9uUmVzcG9uc2UsICdyZXN1bHQnIHwgJ21lc3NhZ2UnPlxuICApIH07XG5cbmV4cG9ydCB0eXBlIEdldENvbGxlY3Rpb25Db250ZW50c1F1ZXJ5VmFyaWFibGVzID0gRXhhY3Q8e1xuICBpZDogU2NhbGFyc1snSUQnXTtcbiAgb3B0aW9ucz86IE1heWJlPFByb2R1Y3RWYXJpYW50TGlzdE9wdGlvbnM+O1xufT47XG5cblxuZXhwb3J0IHR5cGUgR2V0Q29sbGVjdGlvbkNvbnRlbnRzUXVlcnkgPSB7IGNvbGxlY3Rpb24/OiBNYXliZTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0NvbGxlY3Rpb24nIH1cbiAgICAmIFBpY2s8Q29sbGVjdGlvbiwgJ2lkJyB8ICduYW1lJz5cbiAgICAmIHsgcHJvZHVjdFZhcmlhbnRzOiAoXG4gICAgICB7IF9fdHlwZW5hbWU/OiAnUHJvZHVjdFZhcmlhbnRMaXN0JyB9XG4gICAgICAmIFBpY2s8UHJvZHVjdFZhcmlhbnRMaXN0LCAndG90YWxJdGVtcyc+XG4gICAgICAmIHsgaXRlbXM6IEFycmF5PChcbiAgICAgICAgeyBfX3R5cGVuYW1lPzogJ1Byb2R1Y3RWYXJpYW50JyB9XG4gICAgICAgICYgUGljazxQcm9kdWN0VmFyaWFudCwgJ2lkJyB8ICdwcm9kdWN0SWQnIHwgJ25hbWUnPlxuICAgICAgKT4gfVxuICAgICkgfVxuICApPiB9O1xuXG5leHBvcnQgdHlwZSBBZGRyZXNzRnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdBZGRyZXNzJyB9XG4gICYgUGljazxBZGRyZXNzLCAnaWQnIHwgJ2NyZWF0ZWRBdCcgfCAndXBkYXRlZEF0JyB8ICdmdWxsTmFtZScgfCAnY29tcGFueScgfCAnc3RyZWV0TGluZTEnIHwgJ3N0cmVldExpbmUyJyB8ICdjaXR5JyB8ICdwcm92aW5jZScgfCAncG9zdGFsQ29kZScgfCAncGhvbmVOdW1iZXInIHwgJ2RlZmF1bHRTaGlwcGluZ0FkZHJlc3MnIHwgJ2RlZmF1bHRCaWxsaW5nQWRkcmVzcyc+XG4gICYgeyBjb3VudHJ5OiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0NvdW50cnknIH1cbiAgICAmIFBpY2s8Q291bnRyeSwgJ2lkJyB8ICdjb2RlJyB8ICduYW1lJz5cbiAgKSB9XG4pO1xuXG5leHBvcnQgdHlwZSBDdXN0b21lckZyYWdtZW50ID0gKFxuICB7IF9fdHlwZW5hbWU/OiAnQ3VzdG9tZXInIH1cbiAgJiBQaWNrPEN1c3RvbWVyLCAnaWQnIHwgJ2NyZWF0ZWRBdCcgfCAndXBkYXRlZEF0JyB8ICd0aXRsZScgfCAnZmlyc3ROYW1lJyB8ICdsYXN0TmFtZScgfCAncGhvbmVOdW1iZXInIHwgJ2VtYWlsQWRkcmVzcyc+XG4gICYgeyB1c2VyPzogTWF5YmU8KFxuICAgIHsgX190eXBlbmFtZT86ICdVc2VyJyB9XG4gICAgJiBQaWNrPFVzZXIsICdpZCcgfCAnaWRlbnRpZmllcicgfCAndmVyaWZpZWQnIHwgJ2xhc3RMb2dpbic+XG4gICk+LCBhZGRyZXNzZXM/OiBNYXliZTxBcnJheTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0FkZHJlc3MnIH1cbiAgICAmIEFkZHJlc3NGcmFnbWVudFxuICApPj4gfVxuKTtcblxuZXhwb3J0IHR5cGUgR2V0Q3VzdG9tZXJMaXN0UXVlcnlWYXJpYWJsZXMgPSBFeGFjdDx7XG4gIG9wdGlvbnM/OiBNYXliZTxDdXN0b21lckxpc3RPcHRpb25zPjtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIEdldEN1c3RvbWVyTGlzdFF1ZXJ5ID0geyBjdXN0b21lcnM6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQ3VzdG9tZXJMaXN0JyB9XG4gICAgJiBQaWNrPEN1c3RvbWVyTGlzdCwgJ3RvdGFsSXRlbXMnPlxuICAgICYgeyBpdGVtczogQXJyYXk8KFxuICAgICAgeyBfX3R5cGVuYW1lPzogJ0N1c3RvbWVyJyB9XG4gICAgICAmIFBpY2s8Q3VzdG9tZXIsICdpZCcgfCAnY3JlYXRlZEF0JyB8ICd1cGRhdGVkQXQnIHwgJ3RpdGxlJyB8ICdmaXJzdE5hbWUnIHwgJ2xhc3ROYW1lJyB8ICdlbWFpbEFkZHJlc3MnPlxuICAgICAgJiB7IHVzZXI/OiBNYXliZTwoXG4gICAgICAgIHsgX190eXBlbmFtZT86ICdVc2VyJyB9XG4gICAgICAgICYgUGljazxVc2VyLCAnaWQnIHwgJ3ZlcmlmaWVkJz5cbiAgICAgICk+IH1cbiAgICApPiB9XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgR2V0Q3VzdG9tZXJRdWVyeVZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIG9yZGVyTGlzdE9wdGlvbnM/OiBNYXliZTxPcmRlckxpc3RPcHRpb25zPjtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIEdldEN1c3RvbWVyUXVlcnkgPSB7IGN1c3RvbWVyPzogTWF5YmU8KFxuICAgIHsgX190eXBlbmFtZT86ICdDdXN0b21lcicgfVxuICAgICYgeyBncm91cHM6IEFycmF5PChcbiAgICAgIHsgX190eXBlbmFtZT86ICdDdXN0b21lckdyb3VwJyB9XG4gICAgICAmIFBpY2s8Q3VzdG9tZXJHcm91cCwgJ2lkJyB8ICduYW1lJz5cbiAgICApPiwgb3JkZXJzOiAoXG4gICAgICB7IF9fdHlwZW5hbWU/OiAnT3JkZXJMaXN0JyB9XG4gICAgICAmIFBpY2s8T3JkZXJMaXN0LCAndG90YWxJdGVtcyc+XG4gICAgICAmIHsgaXRlbXM6IEFycmF5PChcbiAgICAgICAgeyBfX3R5cGVuYW1lPzogJ09yZGVyJyB9XG4gICAgICAgICYgUGljazxPcmRlciwgJ2lkJyB8ICdjb2RlJyB8ICdzdGF0ZScgfCAndG90YWwnIHwgJ2N1cnJlbmN5Q29kZScgfCAndXBkYXRlZEF0Jz5cbiAgICAgICk+IH1cbiAgICApIH1cbiAgICAmIEN1c3RvbWVyRnJhZ21lbnRcbiAgKT4gfTtcblxuZXhwb3J0IHR5cGUgQ3JlYXRlQ3VzdG9tZXJNdXRhdGlvblZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgaW5wdXQ6IENyZWF0ZUN1c3RvbWVySW5wdXQ7XG4gIHBhc3N3b3JkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ10+O1xufT47XG5cblxuZXhwb3J0IHR5cGUgQ3JlYXRlQ3VzdG9tZXJNdXRhdGlvbiA9IHsgY3JlYXRlQ3VzdG9tZXI6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQ3VzdG9tZXInIH1cbiAgICAmIEN1c3RvbWVyRnJhZ21lbnRcbiAgKSB8IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnRW1haWxBZGRyZXNzQ29uZmxpY3RFcnJvcicgfVxuICAgICYgRXJyb3JSZXN1bHRfRW1haWxBZGRyZXNzQ29uZmxpY3RFcnJvcl9GcmFnbWVudFxuICApIH07XG5cbmV4cG9ydCB0eXBlIFVwZGF0ZUN1c3RvbWVyTXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlucHV0OiBVcGRhdGVDdXN0b21lcklucHV0O1xufT47XG5cblxuZXhwb3J0IHR5cGUgVXBkYXRlQ3VzdG9tZXJNdXRhdGlvbiA9IHsgdXBkYXRlQ3VzdG9tZXI6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQ3VzdG9tZXInIH1cbiAgICAmIEN1c3RvbWVyRnJhZ21lbnRcbiAgKSB8IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnRW1haWxBZGRyZXNzQ29uZmxpY3RFcnJvcicgfVxuICAgICYgRXJyb3JSZXN1bHRfRW1haWxBZGRyZXNzQ29uZmxpY3RFcnJvcl9GcmFnbWVudFxuICApIH07XG5cbmV4cG9ydCB0eXBlIERlbGV0ZUN1c3RvbWVyTXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xufT47XG5cblxuZXhwb3J0IHR5cGUgRGVsZXRlQ3VzdG9tZXJNdXRhdGlvbiA9IHsgZGVsZXRlQ3VzdG9tZXI6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnRGVsZXRpb25SZXNwb25zZScgfVxuICAgICYgUGljazxEZWxldGlvblJlc3BvbnNlLCAncmVzdWx0JyB8ICdtZXNzYWdlJz5cbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBDcmVhdGVDdXN0b21lckFkZHJlc3NNdXRhdGlvblZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgY3VzdG9tZXJJZDogU2NhbGFyc1snSUQnXTtcbiAgaW5wdXQ6IENyZWF0ZUFkZHJlc3NJbnB1dDtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIENyZWF0ZUN1c3RvbWVyQWRkcmVzc011dGF0aW9uID0geyBjcmVhdGVDdXN0b21lckFkZHJlc3M6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQWRkcmVzcycgfVxuICAgICYgQWRkcmVzc0ZyYWdtZW50XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgVXBkYXRlQ3VzdG9tZXJBZGRyZXNzTXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlucHV0OiBVcGRhdGVBZGRyZXNzSW5wdXQ7XG59PjtcblxuXG5leHBvcnQgdHlwZSBVcGRhdGVDdXN0b21lckFkZHJlc3NNdXRhdGlvbiA9IHsgdXBkYXRlQ3VzdG9tZXJBZGRyZXNzOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0FkZHJlc3MnIH1cbiAgICAmIEFkZHJlc3NGcmFnbWVudFxuICApIH07XG5cbmV4cG9ydCB0eXBlIENyZWF0ZUN1c3RvbWVyR3JvdXBNdXRhdGlvblZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgaW5wdXQ6IENyZWF0ZUN1c3RvbWVyR3JvdXBJbnB1dDtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIENyZWF0ZUN1c3RvbWVyR3JvdXBNdXRhdGlvbiA9IHsgY3JlYXRlQ3VzdG9tZXJHcm91cDogKFxuICAgIHsgX190eXBlbmFtZT86ICdDdXN0b21lckdyb3VwJyB9XG4gICAgJiBQaWNrPEN1c3RvbWVyR3JvdXAsICdpZCcgfCAnY3JlYXRlZEF0JyB8ICd1cGRhdGVkQXQnIHwgJ25hbWUnPlxuICApIH07XG5cbmV4cG9ydCB0eXBlIFVwZGF0ZUN1c3RvbWVyR3JvdXBNdXRhdGlvblZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgaW5wdXQ6IFVwZGF0ZUN1c3RvbWVyR3JvdXBJbnB1dDtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIFVwZGF0ZUN1c3RvbWVyR3JvdXBNdXRhdGlvbiA9IHsgdXBkYXRlQ3VzdG9tZXJHcm91cDogKFxuICAgIHsgX190eXBlbmFtZT86ICdDdXN0b21lckdyb3VwJyB9XG4gICAgJiBQaWNrPEN1c3RvbWVyR3JvdXAsICdpZCcgfCAnY3JlYXRlZEF0JyB8ICd1cGRhdGVkQXQnIHwgJ25hbWUnPlxuICApIH07XG5cbmV4cG9ydCB0eXBlIERlbGV0ZUN1c3RvbWVyR3JvdXBNdXRhdGlvblZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG59PjtcblxuXG5leHBvcnQgdHlwZSBEZWxldGVDdXN0b21lckdyb3VwTXV0YXRpb24gPSB7IGRlbGV0ZUN1c3RvbWVyR3JvdXA6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnRGVsZXRpb25SZXNwb25zZScgfVxuICAgICYgUGljazxEZWxldGlvblJlc3BvbnNlLCAncmVzdWx0JyB8ICdtZXNzYWdlJz5cbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBHZXRDdXN0b21lckdyb3Vwc1F1ZXJ5VmFyaWFibGVzID0gRXhhY3Q8e1xuICBvcHRpb25zPzogTWF5YmU8Q3VzdG9tZXJHcm91cExpc3RPcHRpb25zPjtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIEdldEN1c3RvbWVyR3JvdXBzUXVlcnkgPSB7IGN1c3RvbWVyR3JvdXBzOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0N1c3RvbWVyR3JvdXBMaXN0JyB9XG4gICAgJiBQaWNrPEN1c3RvbWVyR3JvdXBMaXN0LCAndG90YWxJdGVtcyc+XG4gICAgJiB7IGl0ZW1zOiBBcnJheTwoXG4gICAgICB7IF9fdHlwZW5hbWU/OiAnQ3VzdG9tZXJHcm91cCcgfVxuICAgICAgJiBQaWNrPEN1c3RvbWVyR3JvdXAsICdpZCcgfCAnY3JlYXRlZEF0JyB8ICd1cGRhdGVkQXQnIHwgJ25hbWUnPlxuICAgICk+IH1cbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBHZXRDdXN0b21lckdyb3VwV2l0aEN1c3RvbWVyc1F1ZXJ5VmFyaWFibGVzID0gRXhhY3Q8e1xuICBpZDogU2NhbGFyc1snSUQnXTtcbiAgb3B0aW9ucz86IE1heWJlPEN1c3RvbWVyTGlzdE9wdGlvbnM+O1xufT47XG5cblxuZXhwb3J0IHR5cGUgR2V0Q3VzdG9tZXJHcm91cFdpdGhDdXN0b21lcnNRdWVyeSA9IHsgY3VzdG9tZXJHcm91cD86IE1heWJlPChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQ3VzdG9tZXJHcm91cCcgfVxuICAgICYgUGljazxDdXN0b21lckdyb3VwLCAnaWQnIHwgJ2NyZWF0ZWRBdCcgfCAndXBkYXRlZEF0JyB8ICduYW1lJz5cbiAgICAmIHsgY3VzdG9tZXJzOiAoXG4gICAgICB7IF9fdHlwZW5hbWU/OiAnQ3VzdG9tZXJMaXN0JyB9XG4gICAgICAmIFBpY2s8Q3VzdG9tZXJMaXN0LCAndG90YWxJdGVtcyc+XG4gICAgICAmIHsgaXRlbXM6IEFycmF5PChcbiAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0N1c3RvbWVyJyB9XG4gICAgICAgICYgUGljazxDdXN0b21lciwgJ2lkJyB8ICdjcmVhdGVkQXQnIHwgJ3VwZGF0ZWRBdCcgfCAnZW1haWxBZGRyZXNzJyB8ICdmaXJzdE5hbWUnIHwgJ2xhc3ROYW1lJz5cbiAgICAgICk+IH1cbiAgICApIH1cbiAgKT4gfTtcblxuZXhwb3J0IHR5cGUgQWRkQ3VzdG9tZXJzVG9Hcm91cE11dGF0aW9uVmFyaWFibGVzID0gRXhhY3Q8e1xuICBncm91cElkOiBTY2FsYXJzWydJRCddO1xuICBjdXN0b21lcklkczogQXJyYXk8U2NhbGFyc1snSUQnXT4gfCBTY2FsYXJzWydJRCddO1xufT47XG5cblxuZXhwb3J0IHR5cGUgQWRkQ3VzdG9tZXJzVG9Hcm91cE11dGF0aW9uID0geyBhZGRDdXN0b21lcnNUb0dyb3VwOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0N1c3RvbWVyR3JvdXAnIH1cbiAgICAmIFBpY2s8Q3VzdG9tZXJHcm91cCwgJ2lkJyB8ICdjcmVhdGVkQXQnIHwgJ3VwZGF0ZWRBdCcgfCAnbmFtZSc+XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgUmVtb3ZlQ3VzdG9tZXJzRnJvbUdyb3VwTXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGdyb3VwSWQ6IFNjYWxhcnNbJ0lEJ107XG4gIGN1c3RvbWVySWRzOiBBcnJheTxTY2FsYXJzWydJRCddPiB8IFNjYWxhcnNbJ0lEJ107XG59PjtcblxuXG5leHBvcnQgdHlwZSBSZW1vdmVDdXN0b21lcnNGcm9tR3JvdXBNdXRhdGlvbiA9IHsgcmVtb3ZlQ3VzdG9tZXJzRnJvbUdyb3VwOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0N1c3RvbWVyR3JvdXAnIH1cbiAgICAmIFBpY2s8Q3VzdG9tZXJHcm91cCwgJ2lkJyB8ICdjcmVhdGVkQXQnIHwgJ3VwZGF0ZWRBdCcgfCAnbmFtZSc+XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgR2V0Q3VzdG9tZXJIaXN0b3J5UXVlcnlWYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xuICBvcHRpb25zPzogTWF5YmU8SGlzdG9yeUVudHJ5TGlzdE9wdGlvbnM+O1xufT47XG5cblxuZXhwb3J0IHR5cGUgR2V0Q3VzdG9tZXJIaXN0b3J5UXVlcnkgPSB7IGN1c3RvbWVyPzogTWF5YmU8KFxuICAgIHsgX190eXBlbmFtZT86ICdDdXN0b21lcicgfVxuICAgICYgUGljazxDdXN0b21lciwgJ2lkJz5cbiAgICAmIHsgaGlzdG9yeTogKFxuICAgICAgeyBfX3R5cGVuYW1lPzogJ0hpc3RvcnlFbnRyeUxpc3QnIH1cbiAgICAgICYgUGljazxIaXN0b3J5RW50cnlMaXN0LCAndG90YWxJdGVtcyc+XG4gICAgICAmIHsgaXRlbXM6IEFycmF5PChcbiAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0hpc3RvcnlFbnRyeScgfVxuICAgICAgICAmIFBpY2s8SGlzdG9yeUVudHJ5LCAnaWQnIHwgJ3R5cGUnIHwgJ2NyZWF0ZWRBdCcgfCAnaXNQdWJsaWMnIHwgJ2RhdGEnPlxuICAgICAgICAmIHsgYWRtaW5pc3RyYXRvcj86IE1heWJlPChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnQWRtaW5pc3RyYXRvcicgfVxuICAgICAgICAgICYgUGljazxBZG1pbmlzdHJhdG9yLCAnaWQnIHwgJ2ZpcnN0TmFtZScgfCAnbGFzdE5hbWUnPlxuICAgICAgICApPiB9XG4gICAgICApPiB9XG4gICAgKSB9XG4gICk+IH07XG5cbmV4cG9ydCB0eXBlIEFkZE5vdGVUb0N1c3RvbWVyTXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlucHV0OiBBZGROb3RlVG9DdXN0b21lcklucHV0O1xufT47XG5cblxuZXhwb3J0IHR5cGUgQWRkTm90ZVRvQ3VzdG9tZXJNdXRhdGlvbiA9IHsgYWRkTm90ZVRvQ3VzdG9tZXI6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQ3VzdG9tZXInIH1cbiAgICAmIFBpY2s8Q3VzdG9tZXIsICdpZCc+XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgVXBkYXRlQ3VzdG9tZXJOb3RlTXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlucHV0OiBVcGRhdGVDdXN0b21lck5vdGVJbnB1dDtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIFVwZGF0ZUN1c3RvbWVyTm90ZU11dGF0aW9uID0geyB1cGRhdGVDdXN0b21lck5vdGU6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnSGlzdG9yeUVudHJ5JyB9XG4gICAgJiBQaWNrPEhpc3RvcnlFbnRyeSwgJ2lkJyB8ICdkYXRhJyB8ICdpc1B1YmxpYyc+XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgRGVsZXRlQ3VzdG9tZXJOb3RlTXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xufT47XG5cblxuZXhwb3J0IHR5cGUgRGVsZXRlQ3VzdG9tZXJOb3RlTXV0YXRpb24gPSB7IGRlbGV0ZUN1c3RvbWVyTm90ZTogKFxuICAgIHsgX190eXBlbmFtZT86ICdEZWxldGlvblJlc3BvbnNlJyB9XG4gICAgJiBQaWNrPERlbGV0aW9uUmVzcG9uc2UsICdyZXN1bHQnIHwgJ21lc3NhZ2UnPlxuICApIH07XG5cbmV4cG9ydCB0eXBlIEZhY2V0VmFsdWVGcmFnbWVudCA9IChcbiAgeyBfX3R5cGVuYW1lPzogJ0ZhY2V0VmFsdWUnIH1cbiAgJiBQaWNrPEZhY2V0VmFsdWUsICdpZCcgfCAnY3JlYXRlZEF0JyB8ICd1cGRhdGVkQXQnIHwgJ2xhbmd1YWdlQ29kZScgfCAnY29kZScgfCAnbmFtZSc+XG4gICYgeyB0cmFuc2xhdGlvbnM6IEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnRmFjZXRWYWx1ZVRyYW5zbGF0aW9uJyB9XG4gICAgJiBQaWNrPEZhY2V0VmFsdWVUcmFuc2xhdGlvbiwgJ2lkJyB8ICdsYW5ndWFnZUNvZGUnIHwgJ25hbWUnPlxuICApPiwgZmFjZXQ6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnRmFjZXQnIH1cbiAgICAmIFBpY2s8RmFjZXQsICdpZCcgfCAnY3JlYXRlZEF0JyB8ICd1cGRhdGVkQXQnIHwgJ25hbWUnPlxuICApIH1cbik7XG5cbmV4cG9ydCB0eXBlIEZhY2V0V2l0aFZhbHVlc0ZyYWdtZW50ID0gKFxuICB7IF9fdHlwZW5hbWU/OiAnRmFjZXQnIH1cbiAgJiBQaWNrPEZhY2V0LCAnaWQnIHwgJ2NyZWF0ZWRBdCcgfCAndXBkYXRlZEF0JyB8ICdsYW5ndWFnZUNvZGUnIHwgJ2lzUHJpdmF0ZScgfCAnY29kZScgfCAnbmFtZSc+XG4gICYgeyB0cmFuc2xhdGlvbnM6IEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnRmFjZXRUcmFuc2xhdGlvbicgfVxuICAgICYgUGljazxGYWNldFRyYW5zbGF0aW9uLCAnaWQnIHwgJ2xhbmd1YWdlQ29kZScgfCAnbmFtZSc+XG4gICk+LCB2YWx1ZXM6IEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnRmFjZXRWYWx1ZScgfVxuICAgICYgRmFjZXRWYWx1ZUZyYWdtZW50XG4gICk+IH1cbik7XG5cbmV4cG9ydCB0eXBlIENyZWF0ZUZhY2V0TXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlucHV0OiBDcmVhdGVGYWNldElucHV0O1xufT47XG5cblxuZXhwb3J0IHR5cGUgQ3JlYXRlRmFjZXRNdXRhdGlvbiA9IHsgY3JlYXRlRmFjZXQ6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnRmFjZXQnIH1cbiAgICAmIEZhY2V0V2l0aFZhbHVlc0ZyYWdtZW50XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgVXBkYXRlRmFjZXRNdXRhdGlvblZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgaW5wdXQ6IFVwZGF0ZUZhY2V0SW5wdXQ7XG59PjtcblxuXG5leHBvcnQgdHlwZSBVcGRhdGVGYWNldE11dGF0aW9uID0geyB1cGRhdGVGYWNldDogKFxuICAgIHsgX190eXBlbmFtZT86ICdGYWNldCcgfVxuICAgICYgRmFjZXRXaXRoVmFsdWVzRnJhZ21lbnRcbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBEZWxldGVGYWNldE11dGF0aW9uVmFyaWFibGVzID0gRXhhY3Q8e1xuICBpZDogU2NhbGFyc1snSUQnXTtcbiAgZm9yY2U/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ10+O1xufT47XG5cblxuZXhwb3J0IHR5cGUgRGVsZXRlRmFjZXRNdXRhdGlvbiA9IHsgZGVsZXRlRmFjZXQ6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnRGVsZXRpb25SZXNwb25zZScgfVxuICAgICYgUGljazxEZWxldGlvblJlc3BvbnNlLCAncmVzdWx0JyB8ICdtZXNzYWdlJz5cbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBDcmVhdGVGYWNldFZhbHVlc011dGF0aW9uVmFyaWFibGVzID0gRXhhY3Q8e1xuICBpbnB1dDogQXJyYXk8Q3JlYXRlRmFjZXRWYWx1ZUlucHV0PiB8IENyZWF0ZUZhY2V0VmFsdWVJbnB1dDtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIENyZWF0ZUZhY2V0VmFsdWVzTXV0YXRpb24gPSB7IGNyZWF0ZUZhY2V0VmFsdWVzOiBBcnJheTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0ZhY2V0VmFsdWUnIH1cbiAgICAmIEZhY2V0VmFsdWVGcmFnbWVudFxuICApPiB9O1xuXG5leHBvcnQgdHlwZSBVcGRhdGVGYWNldFZhbHVlc011dGF0aW9uVmFyaWFibGVzID0gRXhhY3Q8e1xuICBpbnB1dDogQXJyYXk8VXBkYXRlRmFjZXRWYWx1ZUlucHV0PiB8IFVwZGF0ZUZhY2V0VmFsdWVJbnB1dDtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIFVwZGF0ZUZhY2V0VmFsdWVzTXV0YXRpb24gPSB7IHVwZGF0ZUZhY2V0VmFsdWVzOiBBcnJheTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0ZhY2V0VmFsdWUnIH1cbiAgICAmIEZhY2V0VmFsdWVGcmFnbWVudFxuICApPiB9O1xuXG5leHBvcnQgdHlwZSBEZWxldGVGYWNldFZhbHVlc011dGF0aW9uVmFyaWFibGVzID0gRXhhY3Q8e1xuICBpZHM6IEFycmF5PFNjYWxhcnNbJ0lEJ10+IHwgU2NhbGFyc1snSUQnXTtcbiAgZm9yY2U/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ10+O1xufT47XG5cblxuZXhwb3J0IHR5cGUgRGVsZXRlRmFjZXRWYWx1ZXNNdXRhdGlvbiA9IHsgZGVsZXRlRmFjZXRWYWx1ZXM6IEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnRGVsZXRpb25SZXNwb25zZScgfVxuICAgICYgUGljazxEZWxldGlvblJlc3BvbnNlLCAncmVzdWx0JyB8ICdtZXNzYWdlJz5cbiAgKT4gfTtcblxuZXhwb3J0IHR5cGUgR2V0RmFjZXRMaXN0UXVlcnlWYXJpYWJsZXMgPSBFeGFjdDx7XG4gIG9wdGlvbnM/OiBNYXliZTxGYWNldExpc3RPcHRpb25zPjtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIEdldEZhY2V0TGlzdFF1ZXJ5ID0geyBmYWNldHM6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnRmFjZXRMaXN0JyB9XG4gICAgJiBQaWNrPEZhY2V0TGlzdCwgJ3RvdGFsSXRlbXMnPlxuICAgICYgeyBpdGVtczogQXJyYXk8KFxuICAgICAgeyBfX3R5cGVuYW1lPzogJ0ZhY2V0JyB9XG4gICAgICAmIEZhY2V0V2l0aFZhbHVlc0ZyYWdtZW50XG4gICAgKT4gfVxuICApIH07XG5cbmV4cG9ydCB0eXBlIEdldEZhY2V0V2l0aFZhbHVlc1F1ZXJ5VmFyaWFibGVzID0gRXhhY3Q8e1xuICBpZDogU2NhbGFyc1snSUQnXTtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIEdldEZhY2V0V2l0aFZhbHVlc1F1ZXJ5ID0geyBmYWNldD86IE1heWJlPChcbiAgICB7IF9fdHlwZW5hbWU/OiAnRmFjZXQnIH1cbiAgICAmIEZhY2V0V2l0aFZhbHVlc0ZyYWdtZW50XG4gICk+IH07XG5cbmV4cG9ydCB0eXBlIERpc2NvdW50RnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdEaXNjb3VudCcgfVxuICAmIFBpY2s8RGlzY291bnQsICdhZGp1c3RtZW50U291cmNlJyB8ICdhbW91bnQnIHwgJ2Ftb3VudFdpdGhUYXgnIHwgJ2Rlc2NyaXB0aW9uJyB8ICd0eXBlJz5cbik7XG5cbmV4cG9ydCB0eXBlIFJlZnVuZEZyYWdtZW50ID0gKFxuICB7IF9fdHlwZW5hbWU/OiAnUmVmdW5kJyB9XG4gICYgUGljazxSZWZ1bmQsICdpZCcgfCAnc3RhdGUnIHwgJ2l0ZW1zJyB8ICdzaGlwcGluZycgfCAnYWRqdXN0bWVudCcgfCAndHJhbnNhY3Rpb25JZCcgfCAncGF5bWVudElkJz5cbik7XG5cbmV4cG9ydCB0eXBlIE9yZGVyQWRkcmVzc0ZyYWdtZW50ID0gKFxuICB7IF9fdHlwZW5hbWU/OiAnT3JkZXJBZGRyZXNzJyB9XG4gICYgUGljazxPcmRlckFkZHJlc3MsICdmdWxsTmFtZScgfCAnY29tcGFueScgfCAnc3RyZWV0TGluZTEnIHwgJ3N0cmVldExpbmUyJyB8ICdjaXR5JyB8ICdwcm92aW5jZScgfCAncG9zdGFsQ29kZScgfCAnY291bnRyeScgfCAnY291bnRyeUNvZGUnIHwgJ3Bob25lTnVtYmVyJz5cbik7XG5cbmV4cG9ydCB0eXBlIE9yZGVyRnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdPcmRlcicgfVxuICAmIFBpY2s8T3JkZXIsICdpZCcgfCAnY3JlYXRlZEF0JyB8ICd1cGRhdGVkQXQnIHwgJ29yZGVyUGxhY2VkQXQnIHwgJ2NvZGUnIHwgJ3N0YXRlJyB8ICduZXh0U3RhdGVzJyB8ICd0b3RhbCcgfCAnY3VycmVuY3lDb2RlJz5cbiAgJiB7IGN1c3RvbWVyPzogTWF5YmU8KFxuICAgIHsgX190eXBlbmFtZT86ICdDdXN0b21lcicgfVxuICAgICYgUGljazxDdXN0b21lciwgJ2lkJyB8ICdmaXJzdE5hbWUnIHwgJ2xhc3ROYW1lJz5cbiAgKT4sIHNoaXBwaW5nTGluZXM6IEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnU2hpcHBpbmdMaW5lJyB9XG4gICAgJiB7IHNoaXBwaW5nTWV0aG9kOiAoXG4gICAgICB7IF9fdHlwZW5hbWU/OiAnU2hpcHBpbmdNZXRob2QnIH1cbiAgICAgICYgUGljazxTaGlwcGluZ01ldGhvZCwgJ25hbWUnPlxuICAgICkgfVxuICApPiB9XG4pO1xuXG5leHBvcnQgdHlwZSBGdWxmaWxsbWVudEZyYWdtZW50ID0gKFxuICB7IF9fdHlwZW5hbWU/OiAnRnVsZmlsbG1lbnQnIH1cbiAgJiBQaWNrPEZ1bGZpbGxtZW50LCAnaWQnIHwgJ3N0YXRlJyB8ICduZXh0U3RhdGVzJyB8ICdjcmVhdGVkQXQnIHwgJ3VwZGF0ZWRBdCcgfCAnbWV0aG9kJyB8ICd0cmFja2luZ0NvZGUnPlxuICAmIHsgb3JkZXJJdGVtczogQXJyYXk8KFxuICAgIHsgX190eXBlbmFtZT86ICdPcmRlckl0ZW0nIH1cbiAgICAmIFBpY2s8T3JkZXJJdGVtLCAnaWQnPlxuICApPiB9XG4pO1xuXG5leHBvcnQgdHlwZSBPcmRlckxpbmVGcmFnbWVudCA9IChcbiAgeyBfX3R5cGVuYW1lPzogJ09yZGVyTGluZScgfVxuICAmIFBpY2s8T3JkZXJMaW5lLCAnaWQnIHwgJ3VuaXRQcmljZScgfCAndW5pdFByaWNlV2l0aFRheCcgfCAncHJvcmF0ZWRVbml0UHJpY2UnIHwgJ3Byb3JhdGVkVW5pdFByaWNlV2l0aFRheCcgfCAncXVhbnRpdHknIHwgJ2xpbmVQcmljZScgfCAnbGluZVRheCcgfCAnbGluZVByaWNlV2l0aFRheCcgfCAnZGlzY291bnRlZExpbmVQcmljZScgfCAnZGlzY291bnRlZExpbmVQcmljZVdpdGhUYXgnPlxuICAmIHsgZmVhdHVyZWRBc3NldD86IE1heWJlPChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQXNzZXQnIH1cbiAgICAmIFBpY2s8QXNzZXQsICdwcmV2aWV3Jz5cbiAgKT4sIHByb2R1Y3RWYXJpYW50OiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1Byb2R1Y3RWYXJpYW50JyB9XG4gICAgJiBQaWNrPFByb2R1Y3RWYXJpYW50LCAnaWQnIHwgJ25hbWUnIHwgJ3NrdScgfCAndHJhY2tJbnZlbnRvcnknIHwgJ3N0b2NrT25IYW5kJz5cbiAgKSwgZGlzY291bnRzOiBBcnJheTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0Rpc2NvdW50JyB9XG4gICAgJiBEaXNjb3VudEZyYWdtZW50XG4gICk+LCBpdGVtczogQXJyYXk8KFxuICAgIHsgX190eXBlbmFtZT86ICdPcmRlckl0ZW0nIH1cbiAgICAmIFBpY2s8T3JkZXJJdGVtLCAnaWQnIHwgJ3VuaXRQcmljZScgfCAndW5pdFByaWNlV2l0aFRheCcgfCAndGF4UmF0ZScgfCAncmVmdW5kSWQnIHwgJ2NhbmNlbGxlZCc+XG4gICAgJiB7IGZ1bGZpbGxtZW50PzogTWF5YmU8KFxuICAgICAgeyBfX3R5cGVuYW1lPzogJ0Z1bGZpbGxtZW50JyB9XG4gICAgICAmIEZ1bGZpbGxtZW50RnJhZ21lbnRcbiAgICApPiB9XG4gICk+IH1cbik7XG5cbmV4cG9ydCB0eXBlIE9yZGVyRGV0YWlsRnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdPcmRlcicgfVxuICAmIFBpY2s8T3JkZXIsICdpZCcgfCAnY3JlYXRlZEF0JyB8ICd1cGRhdGVkQXQnIHwgJ2NvZGUnIHwgJ3N0YXRlJyB8ICduZXh0U3RhdGVzJyB8ICdhY3RpdmUnIHwgJ3N1YlRvdGFsJyB8ICdzdWJUb3RhbFdpdGhUYXgnIHwgJ3RvdGFsJyB8ICd0b3RhbFdpdGhUYXgnIHwgJ2N1cnJlbmN5Q29kZScgfCAnc2hpcHBpbmcnIHwgJ3NoaXBwaW5nV2l0aFRheCc+XG4gICYgeyBjdXN0b21lcj86IE1heWJlPChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQ3VzdG9tZXInIH1cbiAgICAmIFBpY2s8Q3VzdG9tZXIsICdpZCcgfCAnZmlyc3ROYW1lJyB8ICdsYXN0TmFtZSc+XG4gICk+LCBsaW5lczogQXJyYXk8KFxuICAgIHsgX190eXBlbmFtZT86ICdPcmRlckxpbmUnIH1cbiAgICAmIE9yZGVyTGluZUZyYWdtZW50XG4gICk+LCBzdXJjaGFyZ2VzOiBBcnJheTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1N1cmNoYXJnZScgfVxuICAgICYgUGljazxTdXJjaGFyZ2UsICdpZCcgfCAnc2t1JyB8ICdkZXNjcmlwdGlvbicgfCAncHJpY2UnIHwgJ3ByaWNlV2l0aFRheCcgfCAndGF4UmF0ZSc+XG4gICk+LCBkaXNjb3VudHM6IEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnRGlzY291bnQnIH1cbiAgICAmIERpc2NvdW50RnJhZ21lbnRcbiAgKT4sIHByb21vdGlvbnM6IEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnUHJvbW90aW9uJyB9XG4gICAgJiBQaWNrPFByb21vdGlvbiwgJ2lkJyB8ICdjb3Vwb25Db2RlJz5cbiAgKT4sIHNoaXBwaW5nTGluZXM6IEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnU2hpcHBpbmdMaW5lJyB9XG4gICAgJiB7IHNoaXBwaW5nTWV0aG9kOiAoXG4gICAgICB7IF9fdHlwZW5hbWU/OiAnU2hpcHBpbmdNZXRob2QnIH1cbiAgICAgICYgUGljazxTaGlwcGluZ01ldGhvZCwgJ2lkJyB8ICdjb2RlJyB8ICduYW1lJyB8ICdmdWxmaWxsbWVudEhhbmRsZXJDb2RlJyB8ICdkZXNjcmlwdGlvbic+XG4gICAgKSB9XG4gICk+LCB0YXhTdW1tYXJ5OiBBcnJheTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ09yZGVyVGF4U3VtbWFyeScgfVxuICAgICYgUGljazxPcmRlclRheFN1bW1hcnksICdkZXNjcmlwdGlvbicgfCAndGF4QmFzZScgfCAndGF4UmF0ZScgfCAndGF4VG90YWwnPlxuICApPiwgc2hpcHBpbmdBZGRyZXNzPzogTWF5YmU8KFxuICAgIHsgX190eXBlbmFtZT86ICdPcmRlckFkZHJlc3MnIH1cbiAgICAmIE9yZGVyQWRkcmVzc0ZyYWdtZW50XG4gICk+LCBiaWxsaW5nQWRkcmVzcz86IE1heWJlPChcbiAgICB7IF9fdHlwZW5hbWU/OiAnT3JkZXJBZGRyZXNzJyB9XG4gICAgJiBPcmRlckFkZHJlc3NGcmFnbWVudFxuICApPiwgcGF5bWVudHM/OiBNYXliZTxBcnJheTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1BheW1lbnQnIH1cbiAgICAmIFBpY2s8UGF5bWVudCwgJ2lkJyB8ICdjcmVhdGVkQXQnIHwgJ3RyYW5zYWN0aW9uSWQnIHwgJ2Ftb3VudCcgfCAnbWV0aG9kJyB8ICdzdGF0ZScgfCAnbmV4dFN0YXRlcycgfCAnZXJyb3JNZXNzYWdlJyB8ICdtZXRhZGF0YSc+XG4gICAgJiB7IHJlZnVuZHM6IEFycmF5PChcbiAgICAgIHsgX190eXBlbmFtZT86ICdSZWZ1bmQnIH1cbiAgICAgICYgUGljazxSZWZ1bmQsICdpZCcgfCAnY3JlYXRlZEF0JyB8ICdzdGF0ZScgfCAnaXRlbXMnIHwgJ2FkanVzdG1lbnQnIHwgJ3RvdGFsJyB8ICdwYXltZW50SWQnIHwgJ3JlYXNvbicgfCAndHJhbnNhY3Rpb25JZCcgfCAnbWV0aG9kJyB8ICdtZXRhZGF0YSc+XG4gICAgICAmIHsgb3JkZXJJdGVtczogQXJyYXk8KFxuICAgICAgICB7IF9fdHlwZW5hbWU/OiAnT3JkZXJJdGVtJyB9XG4gICAgICAgICYgUGljazxPcmRlckl0ZW0sICdpZCc+XG4gICAgICApPiB9XG4gICAgKT4gfVxuICApPj4sIGZ1bGZpbGxtZW50cz86IE1heWJlPEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnRnVsZmlsbG1lbnQnIH1cbiAgICAmIEZ1bGZpbGxtZW50RnJhZ21lbnRcbiAgKT4+LCBtb2RpZmljYXRpb25zOiBBcnJheTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ09yZGVyTW9kaWZpY2F0aW9uJyB9XG4gICAgJiBQaWNrPE9yZGVyTW9kaWZpY2F0aW9uLCAnaWQnIHwgJ2NyZWF0ZWRBdCcgfCAnaXNTZXR0bGVkJyB8ICdwcmljZUNoYW5nZScgfCAnbm90ZSc+XG4gICAgJiB7IHBheW1lbnQ/OiBNYXliZTwoXG4gICAgICB7IF9fdHlwZW5hbWU/OiAnUGF5bWVudCcgfVxuICAgICAgJiBQaWNrPFBheW1lbnQsICdpZCcgfCAnYW1vdW50Jz5cbiAgICApPiwgb3JkZXJJdGVtcz86IE1heWJlPEFycmF5PChcbiAgICAgIHsgX190eXBlbmFtZT86ICdPcmRlckl0ZW0nIH1cbiAgICAgICYgUGljazxPcmRlckl0ZW0sICdpZCc+XG4gICAgKT4+LCByZWZ1bmQ/OiBNYXliZTwoXG4gICAgICB7IF9fdHlwZW5hbWU/OiAnUmVmdW5kJyB9XG4gICAgICAmIFBpY2s8UmVmdW5kLCAnaWQnIHwgJ3BheW1lbnRJZCcgfCAndG90YWwnPlxuICAgICk+LCBzdXJjaGFyZ2VzPzogTWF5YmU8QXJyYXk8KFxuICAgICAgeyBfX3R5cGVuYW1lPzogJ1N1cmNoYXJnZScgfVxuICAgICAgJiBQaWNrPFN1cmNoYXJnZSwgJ2lkJz5cbiAgICApPj4gfVxuICApPiB9XG4pO1xuXG5leHBvcnQgdHlwZSBHZXRPcmRlckxpc3RRdWVyeVZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgb3B0aW9ucz86IE1heWJlPE9yZGVyTGlzdE9wdGlvbnM+O1xufT47XG5cblxuZXhwb3J0IHR5cGUgR2V0T3JkZXJMaXN0UXVlcnkgPSB7IG9yZGVyczogKFxuICAgIHsgX190eXBlbmFtZT86ICdPcmRlckxpc3QnIH1cbiAgICAmIFBpY2s8T3JkZXJMaXN0LCAndG90YWxJdGVtcyc+XG4gICAgJiB7IGl0ZW1zOiBBcnJheTwoXG4gICAgICB7IF9fdHlwZW5hbWU/OiAnT3JkZXInIH1cbiAgICAgICYgT3JkZXJGcmFnbWVudFxuICAgICk+IH1cbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBHZXRPcmRlclF1ZXJ5VmFyaWFibGVzID0gRXhhY3Q8e1xuICBpZDogU2NhbGFyc1snSUQnXTtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIEdldE9yZGVyUXVlcnkgPSB7IG9yZGVyPzogTWF5YmU8KFxuICAgIHsgX190eXBlbmFtZT86ICdPcmRlcicgfVxuICAgICYgT3JkZXJEZXRhaWxGcmFnbWVudFxuICApPiB9O1xuXG5leHBvcnQgdHlwZSBTZXR0bGVQYXltZW50TXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xufT47XG5cblxuZXhwb3J0IHR5cGUgU2V0dGxlUGF5bWVudE11dGF0aW9uID0geyBzZXR0bGVQYXltZW50OiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1BheW1lbnQnIH1cbiAgICAmIFBpY2s8UGF5bWVudCwgJ2lkJyB8ICd0cmFuc2FjdGlvbklkJyB8ICdhbW91bnQnIHwgJ21ldGhvZCcgfCAnc3RhdGUnIHwgJ21ldGFkYXRhJz5cbiAgKSB8IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnU2V0dGxlUGF5bWVudEVycm9yJyB9XG4gICAgJiBQaWNrPFNldHRsZVBheW1lbnRFcnJvciwgJ3BheW1lbnRFcnJvck1lc3NhZ2UnPlxuICAgICYgRXJyb3JSZXN1bHRfU2V0dGxlUGF5bWVudEVycm9yX0ZyYWdtZW50XG4gICkgfCAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1BheW1lbnRTdGF0ZVRyYW5zaXRpb25FcnJvcicgfVxuICAgICYgUGljazxQYXltZW50U3RhdGVUcmFuc2l0aW9uRXJyb3IsICd0cmFuc2l0aW9uRXJyb3InPlxuICAgICYgRXJyb3JSZXN1bHRfUGF5bWVudFN0YXRlVHJhbnNpdGlvbkVycm9yX0ZyYWdtZW50XG4gICkgfCAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ09yZGVyU3RhdGVUcmFuc2l0aW9uRXJyb3InIH1cbiAgICAmIFBpY2s8T3JkZXJTdGF0ZVRyYW5zaXRpb25FcnJvciwgJ3RyYW5zaXRpb25FcnJvcic+XG4gICAgJiBFcnJvclJlc3VsdF9PcmRlclN0YXRlVHJhbnNpdGlvbkVycm9yX0ZyYWdtZW50XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgVHJhbnNpdGlvblBheW1lbnRUb1N0YXRlTXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xuICBzdGF0ZTogU2NhbGFyc1snU3RyaW5nJ107XG59PjtcblxuXG5leHBvcnQgdHlwZSBUcmFuc2l0aW9uUGF5bWVudFRvU3RhdGVNdXRhdGlvbiA9IHsgdHJhbnNpdGlvblBheW1lbnRUb1N0YXRlOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1BheW1lbnQnIH1cbiAgICAmIFBpY2s8UGF5bWVudCwgJ2lkJyB8ICd0cmFuc2FjdGlvbklkJyB8ICdhbW91bnQnIHwgJ21ldGhvZCcgfCAnc3RhdGUnIHwgJ21ldGFkYXRhJz5cbiAgKSB8IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnUGF5bWVudFN0YXRlVHJhbnNpdGlvbkVycm9yJyB9XG4gICAgJiBQaWNrPFBheW1lbnRTdGF0ZVRyYW5zaXRpb25FcnJvciwgJ3RyYW5zaXRpb25FcnJvcic+XG4gICAgJiBFcnJvclJlc3VsdF9QYXltZW50U3RhdGVUcmFuc2l0aW9uRXJyb3JfRnJhZ21lbnRcbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBDcmVhdGVGdWxmaWxsbWVudE11dGF0aW9uVmFyaWFibGVzID0gRXhhY3Q8e1xuICBpbnB1dDogRnVsZmlsbE9yZGVySW5wdXQ7XG59PjtcblxuXG5leHBvcnQgdHlwZSBDcmVhdGVGdWxmaWxsbWVudE11dGF0aW9uID0geyBhZGRGdWxmaWxsbWVudFRvT3JkZXI6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnRnVsZmlsbG1lbnQnIH1cbiAgICAmIEZ1bGZpbGxtZW50RnJhZ21lbnRcbiAgKSB8IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnRW1wdHlPcmRlckxpbmVTZWxlY3Rpb25FcnJvcicgfVxuICAgICYgRXJyb3JSZXN1bHRfRW1wdHlPcmRlckxpbmVTZWxlY3Rpb25FcnJvcl9GcmFnbWVudFxuICApIHwgKFxuICAgIHsgX190eXBlbmFtZT86ICdJdGVtc0FscmVhZHlGdWxmaWxsZWRFcnJvcicgfVxuICAgICYgRXJyb3JSZXN1bHRfSXRlbXNBbHJlYWR5RnVsZmlsbGVkRXJyb3JfRnJhZ21lbnRcbiAgKSB8IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnSW5zdWZmaWNpZW50U3RvY2tPbkhhbmRFcnJvcicgfVxuICAgICYgRXJyb3JSZXN1bHRfSW5zdWZmaWNpZW50U3RvY2tPbkhhbmRFcnJvcl9GcmFnbWVudFxuICApIHwgKFxuICAgIHsgX190eXBlbmFtZT86ICdJbnZhbGlkRnVsZmlsbG1lbnRIYW5kbGVyRXJyb3InIH1cbiAgICAmIEVycm9yUmVzdWx0X0ludmFsaWRGdWxmaWxsbWVudEhhbmRsZXJFcnJvcl9GcmFnbWVudFxuICApIHwgKFxuICAgIHsgX190eXBlbmFtZT86ICdGdWxmaWxsbWVudFN0YXRlVHJhbnNpdGlvbkVycm9yJyB9XG4gICAgJiBFcnJvclJlc3VsdF9GdWxmaWxsbWVudFN0YXRlVHJhbnNpdGlvbkVycm9yX0ZyYWdtZW50XG4gICkgfCAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0NyZWF0ZUZ1bGZpbGxtZW50RXJyb3InIH1cbiAgICAmIEVycm9yUmVzdWx0X0NyZWF0ZUZ1bGZpbGxtZW50RXJyb3JfRnJhZ21lbnRcbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBDYW5jZWxPcmRlck11dGF0aW9uVmFyaWFibGVzID0gRXhhY3Q8e1xuICBpbnB1dDogQ2FuY2VsT3JkZXJJbnB1dDtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIENhbmNlbE9yZGVyTXV0YXRpb24gPSB7IGNhbmNlbE9yZGVyOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ09yZGVyJyB9XG4gICAgJiBPcmRlckRldGFpbEZyYWdtZW50XG4gICkgfCAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0VtcHR5T3JkZXJMaW5lU2VsZWN0aW9uRXJyb3InIH1cbiAgICAmIEVycm9yUmVzdWx0X0VtcHR5T3JkZXJMaW5lU2VsZWN0aW9uRXJyb3JfRnJhZ21lbnRcbiAgKSB8IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnUXVhbnRpdHlUb29HcmVhdEVycm9yJyB9XG4gICAgJiBFcnJvclJlc3VsdF9RdWFudGl0eVRvb0dyZWF0RXJyb3JfRnJhZ21lbnRcbiAgKSB8IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnTXVsdGlwbGVPcmRlckVycm9yJyB9XG4gICAgJiBFcnJvclJlc3VsdF9NdWx0aXBsZU9yZGVyRXJyb3JfRnJhZ21lbnRcbiAgKSB8IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQ2FuY2VsQWN0aXZlT3JkZXJFcnJvcicgfVxuICAgICYgRXJyb3JSZXN1bHRfQ2FuY2VsQWN0aXZlT3JkZXJFcnJvcl9GcmFnbWVudFxuICApIHwgKFxuICAgIHsgX190eXBlbmFtZT86ICdPcmRlclN0YXRlVHJhbnNpdGlvbkVycm9yJyB9XG4gICAgJiBFcnJvclJlc3VsdF9PcmRlclN0YXRlVHJhbnNpdGlvbkVycm9yX0ZyYWdtZW50XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgUmVmdW5kT3JkZXJNdXRhdGlvblZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgaW5wdXQ6IFJlZnVuZE9yZGVySW5wdXQ7XG59PjtcblxuXG5leHBvcnQgdHlwZSBSZWZ1bmRPcmRlck11dGF0aW9uID0geyByZWZ1bmRPcmRlcjogKFxuICAgIHsgX190eXBlbmFtZT86ICdSZWZ1bmQnIH1cbiAgICAmIFJlZnVuZEZyYWdtZW50XG4gICkgfCAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1F1YW50aXR5VG9vR3JlYXRFcnJvcicgfVxuICAgICYgRXJyb3JSZXN1bHRfUXVhbnRpdHlUb29HcmVhdEVycm9yX0ZyYWdtZW50XG4gICkgfCAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ05vdGhpbmdUb1JlZnVuZEVycm9yJyB9XG4gICAgJiBFcnJvclJlc3VsdF9Ob3RoaW5nVG9SZWZ1bmRFcnJvcl9GcmFnbWVudFxuICApIHwgKFxuICAgIHsgX190eXBlbmFtZT86ICdPcmRlclN0YXRlVHJhbnNpdGlvbkVycm9yJyB9XG4gICAgJiBFcnJvclJlc3VsdF9PcmRlclN0YXRlVHJhbnNpdGlvbkVycm9yX0ZyYWdtZW50XG4gICkgfCAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ011bHRpcGxlT3JkZXJFcnJvcicgfVxuICAgICYgRXJyb3JSZXN1bHRfTXVsdGlwbGVPcmRlckVycm9yX0ZyYWdtZW50XG4gICkgfCAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1BheW1lbnRPcmRlck1pc21hdGNoRXJyb3InIH1cbiAgICAmIEVycm9yUmVzdWx0X1BheW1lbnRPcmRlck1pc21hdGNoRXJyb3JfRnJhZ21lbnRcbiAgKSB8IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnUmVmdW5kT3JkZXJTdGF0ZUVycm9yJyB9XG4gICAgJiBFcnJvclJlc3VsdF9SZWZ1bmRPcmRlclN0YXRlRXJyb3JfRnJhZ21lbnRcbiAgKSB8IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQWxyZWFkeVJlZnVuZGVkRXJyb3InIH1cbiAgICAmIEVycm9yUmVzdWx0X0FscmVhZHlSZWZ1bmRlZEVycm9yX0ZyYWdtZW50XG4gICkgfCAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1JlZnVuZFN0YXRlVHJhbnNpdGlvbkVycm9yJyB9XG4gICAgJiBFcnJvclJlc3VsdF9SZWZ1bmRTdGF0ZVRyYW5zaXRpb25FcnJvcl9GcmFnbWVudFxuICApIH07XG5cbmV4cG9ydCB0eXBlIFNldHRsZVJlZnVuZE11dGF0aW9uVmFyaWFibGVzID0gRXhhY3Q8e1xuICBpbnB1dDogU2V0dGxlUmVmdW5kSW5wdXQ7XG59PjtcblxuXG5leHBvcnQgdHlwZSBTZXR0bGVSZWZ1bmRNdXRhdGlvbiA9IHsgc2V0dGxlUmVmdW5kOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1JlZnVuZCcgfVxuICAgICYgUmVmdW5kRnJhZ21lbnRcbiAgKSB8IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnUmVmdW5kU3RhdGVUcmFuc2l0aW9uRXJyb3InIH1cbiAgICAmIEVycm9yUmVzdWx0X1JlZnVuZFN0YXRlVHJhbnNpdGlvbkVycm9yX0ZyYWdtZW50XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgR2V0T3JkZXJIaXN0b3J5UXVlcnlWYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xuICBvcHRpb25zPzogTWF5YmU8SGlzdG9yeUVudHJ5TGlzdE9wdGlvbnM+O1xufT47XG5cblxuZXhwb3J0IHR5cGUgR2V0T3JkZXJIaXN0b3J5UXVlcnkgPSB7IG9yZGVyPzogTWF5YmU8KFxuICAgIHsgX190eXBlbmFtZT86ICdPcmRlcicgfVxuICAgICYgUGljazxPcmRlciwgJ2lkJz5cbiAgICAmIHsgaGlzdG9yeTogKFxuICAgICAgeyBfX3R5cGVuYW1lPzogJ0hpc3RvcnlFbnRyeUxpc3QnIH1cbiAgICAgICYgUGljazxIaXN0b3J5RW50cnlMaXN0LCAndG90YWxJdGVtcyc+XG4gICAgICAmIHsgaXRlbXM6IEFycmF5PChcbiAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0hpc3RvcnlFbnRyeScgfVxuICAgICAgICAmIFBpY2s8SGlzdG9yeUVudHJ5LCAnaWQnIHwgJ3R5cGUnIHwgJ2NyZWF0ZWRBdCcgfCAnaXNQdWJsaWMnIHwgJ2RhdGEnPlxuICAgICAgICAmIHsgYWRtaW5pc3RyYXRvcj86IE1heWJlPChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnQWRtaW5pc3RyYXRvcicgfVxuICAgICAgICAgICYgUGljazxBZG1pbmlzdHJhdG9yLCAnaWQnIHwgJ2ZpcnN0TmFtZScgfCAnbGFzdE5hbWUnPlxuICAgICAgICApPiB9XG4gICAgICApPiB9XG4gICAgKSB9XG4gICk+IH07XG5cbmV4cG9ydCB0eXBlIEFkZE5vdGVUb09yZGVyTXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlucHV0OiBBZGROb3RlVG9PcmRlcklucHV0O1xufT47XG5cblxuZXhwb3J0IHR5cGUgQWRkTm90ZVRvT3JkZXJNdXRhdGlvbiA9IHsgYWRkTm90ZVRvT3JkZXI6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnT3JkZXInIH1cbiAgICAmIFBpY2s8T3JkZXIsICdpZCc+XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgVXBkYXRlT3JkZXJOb3RlTXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlucHV0OiBVcGRhdGVPcmRlck5vdGVJbnB1dDtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIFVwZGF0ZU9yZGVyTm90ZU11dGF0aW9uID0geyB1cGRhdGVPcmRlck5vdGU6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnSGlzdG9yeUVudHJ5JyB9XG4gICAgJiBQaWNrPEhpc3RvcnlFbnRyeSwgJ2lkJyB8ICdkYXRhJyB8ICdpc1B1YmxpYyc+XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgRGVsZXRlT3JkZXJOb3RlTXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xufT47XG5cblxuZXhwb3J0IHR5cGUgRGVsZXRlT3JkZXJOb3RlTXV0YXRpb24gPSB7IGRlbGV0ZU9yZGVyTm90ZTogKFxuICAgIHsgX190eXBlbmFtZT86ICdEZWxldGlvblJlc3BvbnNlJyB9XG4gICAgJiBQaWNrPERlbGV0aW9uUmVzcG9uc2UsICdyZXN1bHQnIHwgJ21lc3NhZ2UnPlxuICApIH07XG5cbmV4cG9ydCB0eXBlIFRyYW5zaXRpb25PcmRlclRvU3RhdGVNdXRhdGlvblZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG4gIHN0YXRlOiBTY2FsYXJzWydTdHJpbmcnXTtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIFRyYW5zaXRpb25PcmRlclRvU3RhdGVNdXRhdGlvbiA9IHsgdHJhbnNpdGlvbk9yZGVyVG9TdGF0ZT86IE1heWJlPChcbiAgICB7IF9fdHlwZW5hbWU/OiAnT3JkZXInIH1cbiAgICAmIE9yZGVyRnJhZ21lbnRcbiAgKSB8IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnT3JkZXJTdGF0ZVRyYW5zaXRpb25FcnJvcicgfVxuICAgICYgUGljazxPcmRlclN0YXRlVHJhbnNpdGlvbkVycm9yLCAndHJhbnNpdGlvbkVycm9yJz5cbiAgICAmIEVycm9yUmVzdWx0X09yZGVyU3RhdGVUcmFuc2l0aW9uRXJyb3JfRnJhZ21lbnRcbiAgKT4gfTtcblxuZXhwb3J0IHR5cGUgVXBkYXRlT3JkZXJDdXN0b21GaWVsZHNNdXRhdGlvblZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgaW5wdXQ6IFVwZGF0ZU9yZGVySW5wdXQ7XG59PjtcblxuXG5leHBvcnQgdHlwZSBVcGRhdGVPcmRlckN1c3RvbUZpZWxkc011dGF0aW9uID0geyBzZXRPcmRlckN1c3RvbUZpZWxkcz86IE1heWJlPChcbiAgICB7IF9fdHlwZW5hbWU/OiAnT3JkZXInIH1cbiAgICAmIE9yZGVyRnJhZ21lbnRcbiAgKT4gfTtcblxuZXhwb3J0IHR5cGUgVHJhbnNpdGlvbkZ1bGZpbGxtZW50VG9TdGF0ZU11dGF0aW9uVmFyaWFibGVzID0gRXhhY3Q8e1xuICBpZDogU2NhbGFyc1snSUQnXTtcbiAgc3RhdGU6IFNjYWxhcnNbJ1N0cmluZyddO1xufT47XG5cblxuZXhwb3J0IHR5cGUgVHJhbnNpdGlvbkZ1bGZpbGxtZW50VG9TdGF0ZU11dGF0aW9uID0geyB0cmFuc2l0aW9uRnVsZmlsbG1lbnRUb1N0YXRlOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0Z1bGZpbGxtZW50JyB9XG4gICAgJiBGdWxmaWxsbWVudEZyYWdtZW50XG4gICkgfCAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0Z1bGZpbGxtZW50U3RhdGVUcmFuc2l0aW9uRXJyb3InIH1cbiAgICAmIFBpY2s8RnVsZmlsbG1lbnRTdGF0ZVRyYW5zaXRpb25FcnJvciwgJ3RyYW5zaXRpb25FcnJvcic+XG4gICAgJiBFcnJvclJlc3VsdF9GdWxmaWxsbWVudFN0YXRlVHJhbnNpdGlvbkVycm9yX0ZyYWdtZW50XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgR2V0T3JkZXJTdW1tYXJ5UXVlcnlWYXJpYWJsZXMgPSBFeGFjdDx7XG4gIHN0YXJ0OiBTY2FsYXJzWydEYXRlVGltZSddO1xuICBlbmQ6IFNjYWxhcnNbJ0RhdGVUaW1lJ107XG59PjtcblxuXG5leHBvcnQgdHlwZSBHZXRPcmRlclN1bW1hcnlRdWVyeSA9IHsgb3JkZXJzOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ09yZGVyTGlzdCcgfVxuICAgICYgUGljazxPcmRlckxpc3QsICd0b3RhbEl0ZW1zJz5cbiAgICAmIHsgaXRlbXM6IEFycmF5PChcbiAgICAgIHsgX190eXBlbmFtZT86ICdPcmRlcicgfVxuICAgICAgJiBQaWNrPE9yZGVyLCAnaWQnIHwgJ3RvdGFsJyB8ICdjdXJyZW5jeUNvZGUnPlxuICAgICk+IH1cbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBNb2RpZnlPcmRlck11dGF0aW9uVmFyaWFibGVzID0gRXhhY3Q8e1xuICBpbnB1dDogTW9kaWZ5T3JkZXJJbnB1dDtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIE1vZGlmeU9yZGVyTXV0YXRpb24gPSB7IG1vZGlmeU9yZGVyOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ09yZGVyJyB9XG4gICAgJiBPcmRlckRldGFpbEZyYWdtZW50XG4gICkgfCAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ05vQ2hhbmdlc1NwZWNpZmllZEVycm9yJyB9XG4gICAgJiBFcnJvclJlc3VsdF9Ob0NoYW5nZXNTcGVjaWZpZWRFcnJvcl9GcmFnbWVudFxuICApIHwgKFxuICAgIHsgX190eXBlbmFtZT86ICdPcmRlck1vZGlmaWNhdGlvblN0YXRlRXJyb3InIH1cbiAgICAmIEVycm9yUmVzdWx0X09yZGVyTW9kaWZpY2F0aW9uU3RhdGVFcnJvcl9GcmFnbWVudFxuICApIHwgKFxuICAgIHsgX190eXBlbmFtZT86ICdQYXltZW50TWV0aG9kTWlzc2luZ0Vycm9yJyB9XG4gICAgJiBFcnJvclJlc3VsdF9QYXltZW50TWV0aG9kTWlzc2luZ0Vycm9yX0ZyYWdtZW50XG4gICkgfCAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1JlZnVuZFBheW1lbnRJZE1pc3NpbmdFcnJvcicgfVxuICAgICYgRXJyb3JSZXN1bHRfUmVmdW5kUGF5bWVudElkTWlzc2luZ0Vycm9yX0ZyYWdtZW50XG4gICkgfCAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ09yZGVyTGltaXRFcnJvcicgfVxuICAgICYgRXJyb3JSZXN1bHRfT3JkZXJMaW1pdEVycm9yX0ZyYWdtZW50XG4gICkgfCAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ05lZ2F0aXZlUXVhbnRpdHlFcnJvcicgfVxuICAgICYgRXJyb3JSZXN1bHRfTmVnYXRpdmVRdWFudGl0eUVycm9yX0ZyYWdtZW50XG4gICkgfCAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0luc3VmZmljaWVudFN0b2NrRXJyb3InIH1cbiAgICAmIEVycm9yUmVzdWx0X0luc3VmZmljaWVudFN0b2NrRXJyb3JfRnJhZ21lbnRcbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBBZGRNYW51YWxQYXltZW50TXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlucHV0OiBNYW51YWxQYXltZW50SW5wdXQ7XG59PjtcblxuXG5leHBvcnQgdHlwZSBBZGRNYW51YWxQYXltZW50TXV0YXRpb24gPSB7IGFkZE1hbnVhbFBheW1lbnRUb09yZGVyOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ09yZGVyJyB9XG4gICAgJiBPcmRlckRldGFpbEZyYWdtZW50XG4gICkgfCAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ01hbnVhbFBheW1lbnRTdGF0ZUVycm9yJyB9XG4gICAgJiBFcnJvclJlc3VsdF9NYW51YWxQYXltZW50U3RhdGVFcnJvcl9GcmFnbWVudFxuICApIH07XG5cbmV4cG9ydCB0eXBlIEFzc2V0RnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdBc3NldCcgfVxuICAmIFBpY2s8QXNzZXQsICdpZCcgfCAnY3JlYXRlZEF0JyB8ICd1cGRhdGVkQXQnIHwgJ25hbWUnIHwgJ2ZpbGVTaXplJyB8ICdtaW1lVHlwZScgfCAndHlwZScgfCAncHJldmlldycgfCAnc291cmNlJyB8ICd3aWR0aCcgfCAnaGVpZ2h0Jz5cbiAgJiB7IGZvY2FsUG9pbnQ/OiBNYXliZTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0Nvb3JkaW5hdGUnIH1cbiAgICAmIFBpY2s8Q29vcmRpbmF0ZSwgJ3gnIHwgJ3knPlxuICApPiB9XG4pO1xuXG5leHBvcnQgdHlwZSBUYWdGcmFnbWVudCA9IChcbiAgeyBfX3R5cGVuYW1lPzogJ1RhZycgfVxuICAmIFBpY2s8VGFnLCAnaWQnIHwgJ3ZhbHVlJz5cbik7XG5cbmV4cG9ydCB0eXBlIFByb2R1Y3RPcHRpb25Hcm91cEZyYWdtZW50ID0gKFxuICB7IF9fdHlwZW5hbWU/OiAnUHJvZHVjdE9wdGlvbkdyb3VwJyB9XG4gICYgUGljazxQcm9kdWN0T3B0aW9uR3JvdXAsICdpZCcgfCAnY29kZScgfCAnbGFuZ3VhZ2VDb2RlJyB8ICduYW1lJz5cbiAgJiB7IHRyYW5zbGF0aW9uczogQXJyYXk8KFxuICAgIHsgX190eXBlbmFtZT86ICdQcm9kdWN0T3B0aW9uR3JvdXBUcmFuc2xhdGlvbicgfVxuICAgICYgUGljazxQcm9kdWN0T3B0aW9uR3JvdXBUcmFuc2xhdGlvbiwgJ2lkJyB8ICdsYW5ndWFnZUNvZGUnIHwgJ25hbWUnPlxuICApPiB9XG4pO1xuXG5leHBvcnQgdHlwZSBQcm9kdWN0T3B0aW9uRnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdQcm9kdWN0T3B0aW9uJyB9XG4gICYgUGljazxQcm9kdWN0T3B0aW9uLCAnaWQnIHwgJ2NvZGUnIHwgJ2xhbmd1YWdlQ29kZScgfCAnbmFtZScgfCAnZ3JvdXBJZCc+XG4gICYgeyB0cmFuc2xhdGlvbnM6IEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnUHJvZHVjdE9wdGlvblRyYW5zbGF0aW9uJyB9XG4gICAgJiBQaWNrPFByb2R1Y3RPcHRpb25UcmFuc2xhdGlvbiwgJ2lkJyB8ICdsYW5ndWFnZUNvZGUnIHwgJ25hbWUnPlxuICApPiB9XG4pO1xuXG5leHBvcnQgdHlwZSBQcm9kdWN0VmFyaWFudEZyYWdtZW50ID0gKFxuICB7IF9fdHlwZW5hbWU/OiAnUHJvZHVjdFZhcmlhbnQnIH1cbiAgJiBQaWNrPFByb2R1Y3RWYXJpYW50LCAnaWQnIHwgJ2NyZWF0ZWRBdCcgfCAndXBkYXRlZEF0JyB8ICdlbmFibGVkJyB8ICdsYW5ndWFnZUNvZGUnIHwgJ25hbWUnIHwgJ3ByaWNlJyB8ICdjdXJyZW5jeUNvZGUnIHwgJ3ByaWNlV2l0aFRheCcgfCAnc3RvY2tPbkhhbmQnIHwgJ3N0b2NrQWxsb2NhdGVkJyB8ICd0cmFja0ludmVudG9yeScgfCAnb3V0T2ZTdG9ja1RocmVzaG9sZCcgfCAndXNlR2xvYmFsT3V0T2ZTdG9ja1RocmVzaG9sZCcgfCAnc2t1Jz5cbiAgJiB7IHRheFJhdGVBcHBsaWVkOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1RheFJhdGUnIH1cbiAgICAmIFBpY2s8VGF4UmF0ZSwgJ2lkJyB8ICduYW1lJyB8ICd2YWx1ZSc+XG4gICksIHRheENhdGVnb3J5OiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1RheENhdGVnb3J5JyB9XG4gICAgJiBQaWNrPFRheENhdGVnb3J5LCAnaWQnIHwgJ25hbWUnPlxuICApLCBvcHRpb25zOiBBcnJheTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1Byb2R1Y3RPcHRpb24nIH1cbiAgICAmIFByb2R1Y3RPcHRpb25GcmFnbWVudFxuICApPiwgZmFjZXRWYWx1ZXM6IEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnRmFjZXRWYWx1ZScgfVxuICAgICYgUGljazxGYWNldFZhbHVlLCAnaWQnIHwgJ2NvZGUnIHwgJ25hbWUnPlxuICAgICYgeyBmYWNldDogKFxuICAgICAgeyBfX3R5cGVuYW1lPzogJ0ZhY2V0JyB9XG4gICAgICAmIFBpY2s8RmFjZXQsICdpZCcgfCAnbmFtZSc+XG4gICAgKSB9XG4gICk+LCBmZWF0dXJlZEFzc2V0PzogTWF5YmU8KFxuICAgIHsgX190eXBlbmFtZT86ICdBc3NldCcgfVxuICAgICYgQXNzZXRGcmFnbWVudFxuICApPiwgYXNzZXRzOiBBcnJheTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0Fzc2V0JyB9XG4gICAgJiBBc3NldEZyYWdtZW50XG4gICk+LCB0cmFuc2xhdGlvbnM6IEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnUHJvZHVjdFZhcmlhbnRUcmFuc2xhdGlvbicgfVxuICAgICYgUGljazxQcm9kdWN0VmFyaWFudFRyYW5zbGF0aW9uLCAnaWQnIHwgJ2xhbmd1YWdlQ29kZScgfCAnbmFtZSc+XG4gICk+LCBjaGFubmVsczogQXJyYXk8KFxuICAgIHsgX190eXBlbmFtZT86ICdDaGFubmVsJyB9XG4gICAgJiBQaWNrPENoYW5uZWwsICdpZCcgfCAnY29kZSc+XG4gICk+IH1cbik7XG5cbmV4cG9ydCB0eXBlIFByb2R1Y3RXaXRoVmFyaWFudHNGcmFnbWVudCA9IChcbiAgeyBfX3R5cGVuYW1lPzogJ1Byb2R1Y3QnIH1cbiAgJiBQaWNrPFByb2R1Y3QsICdpZCcgfCAnY3JlYXRlZEF0JyB8ICd1cGRhdGVkQXQnIHwgJ2VuYWJsZWQnIHwgJ2xhbmd1YWdlQ29kZScgfCAnbmFtZScgfCAnc2x1ZycgfCAnZGVzY3JpcHRpb24nPlxuICAmIHsgZmVhdHVyZWRBc3NldD86IE1heWJlPChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQXNzZXQnIH1cbiAgICAmIEFzc2V0RnJhZ21lbnRcbiAgKT4sIGFzc2V0czogQXJyYXk8KFxuICAgIHsgX190eXBlbmFtZT86ICdBc3NldCcgfVxuICAgICYgQXNzZXRGcmFnbWVudFxuICApPiwgdHJhbnNsYXRpb25zOiBBcnJheTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1Byb2R1Y3RUcmFuc2xhdGlvbicgfVxuICAgICYgUGljazxQcm9kdWN0VHJhbnNsYXRpb24sICdpZCcgfCAnbGFuZ3VhZ2VDb2RlJyB8ICduYW1lJyB8ICdzbHVnJyB8ICdkZXNjcmlwdGlvbic+XG4gICk+LCBvcHRpb25Hcm91cHM6IEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnUHJvZHVjdE9wdGlvbkdyb3VwJyB9XG4gICAgJiBQcm9kdWN0T3B0aW9uR3JvdXBGcmFnbWVudFxuICApPiwgdmFyaWFudHM6IEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnUHJvZHVjdFZhcmlhbnQnIH1cbiAgICAmIFByb2R1Y3RWYXJpYW50RnJhZ21lbnRcbiAgKT4sIGZhY2V0VmFsdWVzOiBBcnJheTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0ZhY2V0VmFsdWUnIH1cbiAgICAmIFBpY2s8RmFjZXRWYWx1ZSwgJ2lkJyB8ICdjb2RlJyB8ICduYW1lJz5cbiAgICAmIHsgZmFjZXQ6IChcbiAgICAgIHsgX190eXBlbmFtZT86ICdGYWNldCcgfVxuICAgICAgJiBQaWNrPEZhY2V0LCAnaWQnIHwgJ25hbWUnPlxuICAgICkgfVxuICApPiwgY2hhbm5lbHM6IEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQ2hhbm5lbCcgfVxuICAgICYgUGljazxDaGFubmVsLCAnaWQnIHwgJ2NvZGUnPlxuICApPiB9XG4pO1xuXG5leHBvcnQgdHlwZSBQcm9kdWN0T3B0aW9uR3JvdXBXaXRoT3B0aW9uc0ZyYWdtZW50ID0gKFxuICB7IF9fdHlwZW5hbWU/OiAnUHJvZHVjdE9wdGlvbkdyb3VwJyB9XG4gICYgUGljazxQcm9kdWN0T3B0aW9uR3JvdXAsICdpZCcgfCAnY3JlYXRlZEF0JyB8ICd1cGRhdGVkQXQnIHwgJ2xhbmd1YWdlQ29kZScgfCAnY29kZScgfCAnbmFtZSc+XG4gICYgeyB0cmFuc2xhdGlvbnM6IEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnUHJvZHVjdE9wdGlvbkdyb3VwVHJhbnNsYXRpb24nIH1cbiAgICAmIFBpY2s8UHJvZHVjdE9wdGlvbkdyb3VwVHJhbnNsYXRpb24sICdpZCcgfCAnbmFtZSc+XG4gICk+LCBvcHRpb25zOiBBcnJheTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1Byb2R1Y3RPcHRpb24nIH1cbiAgICAmIFBpY2s8UHJvZHVjdE9wdGlvbiwgJ2lkJyB8ICdsYW5ndWFnZUNvZGUnIHwgJ25hbWUnIHwgJ2NvZGUnPlxuICAgICYgeyB0cmFuc2xhdGlvbnM6IEFycmF5PChcbiAgICAgIHsgX190eXBlbmFtZT86ICdQcm9kdWN0T3B0aW9uVHJhbnNsYXRpb24nIH1cbiAgICAgICYgUGljazxQcm9kdWN0T3B0aW9uVHJhbnNsYXRpb24sICduYW1lJz5cbiAgICApPiB9XG4gICk+IH1cbik7XG5cbmV4cG9ydCB0eXBlIFVwZGF0ZVByb2R1Y3RNdXRhdGlvblZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgaW5wdXQ6IFVwZGF0ZVByb2R1Y3RJbnB1dDtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIFVwZGF0ZVByb2R1Y3RNdXRhdGlvbiA9IHsgdXBkYXRlUHJvZHVjdDogKFxuICAgIHsgX190eXBlbmFtZT86ICdQcm9kdWN0JyB9XG4gICAgJiBQcm9kdWN0V2l0aFZhcmlhbnRzRnJhZ21lbnRcbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBDcmVhdGVQcm9kdWN0TXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlucHV0OiBDcmVhdGVQcm9kdWN0SW5wdXQ7XG59PjtcblxuXG5leHBvcnQgdHlwZSBDcmVhdGVQcm9kdWN0TXV0YXRpb24gPSB7IGNyZWF0ZVByb2R1Y3Q6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnUHJvZHVjdCcgfVxuICAgICYgUHJvZHVjdFdpdGhWYXJpYW50c0ZyYWdtZW50XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgRGVsZXRlUHJvZHVjdE11dGF0aW9uVmFyaWFibGVzID0gRXhhY3Q8e1xuICBpZDogU2NhbGFyc1snSUQnXTtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIERlbGV0ZVByb2R1Y3RNdXRhdGlvbiA9IHsgZGVsZXRlUHJvZHVjdDogKFxuICAgIHsgX190eXBlbmFtZT86ICdEZWxldGlvblJlc3BvbnNlJyB9XG4gICAgJiBQaWNrPERlbGV0aW9uUmVzcG9uc2UsICdyZXN1bHQnIHwgJ21lc3NhZ2UnPlxuICApIH07XG5cbmV4cG9ydCB0eXBlIENyZWF0ZVByb2R1Y3RWYXJpYW50c011dGF0aW9uVmFyaWFibGVzID0gRXhhY3Q8e1xuICBpbnB1dDogQXJyYXk8Q3JlYXRlUHJvZHVjdFZhcmlhbnRJbnB1dD4gfCBDcmVhdGVQcm9kdWN0VmFyaWFudElucHV0O1xufT47XG5cblxuZXhwb3J0IHR5cGUgQ3JlYXRlUHJvZHVjdFZhcmlhbnRzTXV0YXRpb24gPSB7IGNyZWF0ZVByb2R1Y3RWYXJpYW50czogQXJyYXk8TWF5YmU8KFxuICAgIHsgX190eXBlbmFtZT86ICdQcm9kdWN0VmFyaWFudCcgfVxuICAgICYgUHJvZHVjdFZhcmlhbnRGcmFnbWVudFxuICApPj4gfTtcblxuZXhwb3J0IHR5cGUgVXBkYXRlUHJvZHVjdFZhcmlhbnRzTXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlucHV0OiBBcnJheTxVcGRhdGVQcm9kdWN0VmFyaWFudElucHV0PiB8IFVwZGF0ZVByb2R1Y3RWYXJpYW50SW5wdXQ7XG59PjtcblxuXG5leHBvcnQgdHlwZSBVcGRhdGVQcm9kdWN0VmFyaWFudHNNdXRhdGlvbiA9IHsgdXBkYXRlUHJvZHVjdFZhcmlhbnRzOiBBcnJheTxNYXliZTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1Byb2R1Y3RWYXJpYW50JyB9XG4gICAgJiBQcm9kdWN0VmFyaWFudEZyYWdtZW50XG4gICk+PiB9O1xuXG5leHBvcnQgdHlwZSBDcmVhdGVQcm9kdWN0T3B0aW9uR3JvdXBNdXRhdGlvblZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgaW5wdXQ6IENyZWF0ZVByb2R1Y3RPcHRpb25Hcm91cElucHV0O1xufT47XG5cblxuZXhwb3J0IHR5cGUgQ3JlYXRlUHJvZHVjdE9wdGlvbkdyb3VwTXV0YXRpb24gPSB7IGNyZWF0ZVByb2R1Y3RPcHRpb25Hcm91cDogKFxuICAgIHsgX190eXBlbmFtZT86ICdQcm9kdWN0T3B0aW9uR3JvdXAnIH1cbiAgICAmIFByb2R1Y3RPcHRpb25Hcm91cFdpdGhPcHRpb25zRnJhZ21lbnRcbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBHZXRQcm9kdWN0T3B0aW9uR3JvdXBRdWVyeVZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG59PjtcblxuXG5leHBvcnQgdHlwZSBHZXRQcm9kdWN0T3B0aW9uR3JvdXBRdWVyeSA9IHsgcHJvZHVjdE9wdGlvbkdyb3VwPzogTWF5YmU8KFxuICAgIHsgX190eXBlbmFtZT86ICdQcm9kdWN0T3B0aW9uR3JvdXAnIH1cbiAgICAmIFByb2R1Y3RPcHRpb25Hcm91cFdpdGhPcHRpb25zRnJhZ21lbnRcbiAgKT4gfTtcblxuZXhwb3J0IHR5cGUgQWRkT3B0aW9uVG9Hcm91cE11dGF0aW9uVmFyaWFibGVzID0gRXhhY3Q8e1xuICBpbnB1dDogQ3JlYXRlUHJvZHVjdE9wdGlvbklucHV0O1xufT47XG5cblxuZXhwb3J0IHR5cGUgQWRkT3B0aW9uVG9Hcm91cE11dGF0aW9uID0geyBjcmVhdGVQcm9kdWN0T3B0aW9uOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1Byb2R1Y3RPcHRpb24nIH1cbiAgICAmIFBpY2s8UHJvZHVjdE9wdGlvbiwgJ2lkJyB8ICdjcmVhdGVkQXQnIHwgJ3VwZGF0ZWRBdCcgfCAnbmFtZScgfCAnY29kZScgfCAnZ3JvdXBJZCc+XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgQWRkT3B0aW9uR3JvdXBUb1Byb2R1Y3RNdXRhdGlvblZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgcHJvZHVjdElkOiBTY2FsYXJzWydJRCddO1xuICBvcHRpb25Hcm91cElkOiBTY2FsYXJzWydJRCddO1xufT47XG5cblxuZXhwb3J0IHR5cGUgQWRkT3B0aW9uR3JvdXBUb1Byb2R1Y3RNdXRhdGlvbiA9IHsgYWRkT3B0aW9uR3JvdXBUb1Byb2R1Y3Q6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnUHJvZHVjdCcgfVxuICAgICYgUGljazxQcm9kdWN0LCAnaWQnIHwgJ2NyZWF0ZWRBdCcgfCAndXBkYXRlZEF0Jz5cbiAgICAmIHsgb3B0aW9uR3JvdXBzOiBBcnJheTwoXG4gICAgICB7IF9fdHlwZW5hbWU/OiAnUHJvZHVjdE9wdGlvbkdyb3VwJyB9XG4gICAgICAmIFBpY2s8UHJvZHVjdE9wdGlvbkdyb3VwLCAnaWQnIHwgJ2NyZWF0ZWRBdCcgfCAndXBkYXRlZEF0JyB8ICdjb2RlJz5cbiAgICAgICYgeyBvcHRpb25zOiBBcnJheTwoXG4gICAgICAgIHsgX190eXBlbmFtZT86ICdQcm9kdWN0T3B0aW9uJyB9XG4gICAgICAgICYgUGljazxQcm9kdWN0T3B0aW9uLCAnaWQnIHwgJ2NyZWF0ZWRBdCcgfCAndXBkYXRlZEF0JyB8ICdjb2RlJz5cbiAgICAgICk+IH1cbiAgICApPiB9XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgUmVtb3ZlT3B0aW9uR3JvdXBGcm9tUHJvZHVjdE11dGF0aW9uVmFyaWFibGVzID0gRXhhY3Q8e1xuICBwcm9kdWN0SWQ6IFNjYWxhcnNbJ0lEJ107XG4gIG9wdGlvbkdyb3VwSWQ6IFNjYWxhcnNbJ0lEJ107XG59PjtcblxuXG5leHBvcnQgdHlwZSBSZW1vdmVPcHRpb25Hcm91cEZyb21Qcm9kdWN0TXV0YXRpb24gPSB7IHJlbW92ZU9wdGlvbkdyb3VwRnJvbVByb2R1Y3Q6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnUHJvZHVjdCcgfVxuICAgICYgUGljazxQcm9kdWN0LCAnaWQnIHwgJ2NyZWF0ZWRBdCcgfCAndXBkYXRlZEF0Jz5cbiAgICAmIHsgb3B0aW9uR3JvdXBzOiBBcnJheTwoXG4gICAgICB7IF9fdHlwZW5hbWU/OiAnUHJvZHVjdE9wdGlvbkdyb3VwJyB9XG4gICAgICAmIFBpY2s8UHJvZHVjdE9wdGlvbkdyb3VwLCAnaWQnIHwgJ2NyZWF0ZWRBdCcgfCAndXBkYXRlZEF0JyB8ICdjb2RlJz5cbiAgICAgICYgeyBvcHRpb25zOiBBcnJheTwoXG4gICAgICAgIHsgX190eXBlbmFtZT86ICdQcm9kdWN0T3B0aW9uJyB9XG4gICAgICAgICYgUGljazxQcm9kdWN0T3B0aW9uLCAnaWQnIHwgJ2NyZWF0ZWRBdCcgfCAndXBkYXRlZEF0JyB8ICdjb2RlJz5cbiAgICAgICk+IH1cbiAgICApPiB9XG4gICkgfCAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1Byb2R1Y3RPcHRpb25JblVzZUVycm9yJyB9XG4gICAgJiBFcnJvclJlc3VsdF9Qcm9kdWN0T3B0aW9uSW5Vc2VFcnJvcl9GcmFnbWVudFxuICApIH07XG5cbmV4cG9ydCB0eXBlIEdldFByb2R1Y3RXaXRoVmFyaWFudHNRdWVyeVZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG59PjtcblxuXG5leHBvcnQgdHlwZSBHZXRQcm9kdWN0V2l0aFZhcmlhbnRzUXVlcnkgPSB7IHByb2R1Y3Q/OiBNYXliZTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1Byb2R1Y3QnIH1cbiAgICAmIFByb2R1Y3RXaXRoVmFyaWFudHNGcmFnbWVudFxuICApPiB9O1xuXG5leHBvcnQgdHlwZSBHZXRQcm9kdWN0U2ltcGxlUXVlcnlWYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xufT47XG5cblxuZXhwb3J0IHR5cGUgR2V0UHJvZHVjdFNpbXBsZVF1ZXJ5ID0geyBwcm9kdWN0PzogTWF5YmU8KFxuICAgIHsgX190eXBlbmFtZT86ICdQcm9kdWN0JyB9XG4gICAgJiBQaWNrPFByb2R1Y3QsICdpZCcgfCAnbmFtZSc+XG4gICAgJiB7IGZlYXR1cmVkQXNzZXQ/OiBNYXliZTwoXG4gICAgICB7IF9fdHlwZW5hbWU/OiAnQXNzZXQnIH1cbiAgICAgICYgQXNzZXRGcmFnbWVudFxuICAgICk+IH1cbiAgKT4gfTtcblxuZXhwb3J0IHR5cGUgR2V0UHJvZHVjdExpc3RRdWVyeVZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgb3B0aW9ucz86IE1heWJlPFByb2R1Y3RMaXN0T3B0aW9ucz47XG59PjtcblxuXG5leHBvcnQgdHlwZSBHZXRQcm9kdWN0TGlzdFF1ZXJ5ID0geyBwcm9kdWN0czogKFxuICAgIHsgX190eXBlbmFtZT86ICdQcm9kdWN0TGlzdCcgfVxuICAgICYgUGljazxQcm9kdWN0TGlzdCwgJ3RvdGFsSXRlbXMnPlxuICAgICYgeyBpdGVtczogQXJyYXk8KFxuICAgICAgeyBfX3R5cGVuYW1lPzogJ1Byb2R1Y3QnIH1cbiAgICAgICYgUGljazxQcm9kdWN0LCAnaWQnIHwgJ2NyZWF0ZWRBdCcgfCAndXBkYXRlZEF0JyB8ICdlbmFibGVkJyB8ICdsYW5ndWFnZUNvZGUnIHwgJ25hbWUnIHwgJ3NsdWcnPlxuICAgICAgJiB7IGZlYXR1cmVkQXNzZXQ/OiBNYXliZTwoXG4gICAgICAgIHsgX190eXBlbmFtZT86ICdBc3NldCcgfVxuICAgICAgICAmIFBpY2s8QXNzZXQsICdpZCcgfCAnY3JlYXRlZEF0JyB8ICd1cGRhdGVkQXQnIHwgJ3ByZXZpZXcnPlxuICAgICAgKT4gfVxuICAgICk+IH1cbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBHZXRQcm9kdWN0T3B0aW9uR3JvdXBzUXVlcnlWYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGZpbHRlclRlcm0/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXT47XG59PjtcblxuXG5leHBvcnQgdHlwZSBHZXRQcm9kdWN0T3B0aW9uR3JvdXBzUXVlcnkgPSB7IHByb2R1Y3RPcHRpb25Hcm91cHM6IEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnUHJvZHVjdE9wdGlvbkdyb3VwJyB9XG4gICAgJiBQaWNrPFByb2R1Y3RPcHRpb25Hcm91cCwgJ2lkJyB8ICdjcmVhdGVkQXQnIHwgJ3VwZGF0ZWRBdCcgfCAnbGFuZ3VhZ2VDb2RlJyB8ICdjb2RlJyB8ICduYW1lJz5cbiAgICAmIHsgb3B0aW9uczogQXJyYXk8KFxuICAgICAgeyBfX3R5cGVuYW1lPzogJ1Byb2R1Y3RPcHRpb24nIH1cbiAgICAgICYgUGljazxQcm9kdWN0T3B0aW9uLCAnaWQnIHwgJ2NyZWF0ZWRBdCcgfCAndXBkYXRlZEF0JyB8ICdsYW5ndWFnZUNvZGUnIHwgJ2NvZGUnIHwgJ25hbWUnPlxuICAgICk+IH1cbiAgKT4gfTtcblxuZXhwb3J0IHR5cGUgR2V0QXNzZXRMaXN0UXVlcnlWYXJpYWJsZXMgPSBFeGFjdDx7XG4gIG9wdGlvbnM/OiBNYXliZTxBc3NldExpc3RPcHRpb25zPjtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIEdldEFzc2V0TGlzdFF1ZXJ5ID0geyBhc3NldHM6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQXNzZXRMaXN0JyB9XG4gICAgJiBQaWNrPEFzc2V0TGlzdCwgJ3RvdGFsSXRlbXMnPlxuICAgICYgeyBpdGVtczogQXJyYXk8KFxuICAgICAgeyBfX3R5cGVuYW1lPzogJ0Fzc2V0JyB9XG4gICAgICAmIHsgdGFnczogQXJyYXk8KFxuICAgICAgICB7IF9fdHlwZW5hbWU/OiAnVGFnJyB9XG4gICAgICAgICYgVGFnRnJhZ21lbnRcbiAgICAgICk+IH1cbiAgICAgICYgQXNzZXRGcmFnbWVudFxuICAgICk+IH1cbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBHZXRBc3NldFF1ZXJ5VmFyaWFibGVzID0gRXhhY3Q8e1xuICBpZDogU2NhbGFyc1snSUQnXTtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIEdldEFzc2V0UXVlcnkgPSB7IGFzc2V0PzogTWF5YmU8KFxuICAgIHsgX190eXBlbmFtZT86ICdBc3NldCcgfVxuICAgICYgeyB0YWdzOiBBcnJheTwoXG4gICAgICB7IF9fdHlwZW5hbWU/OiAnVGFnJyB9XG4gICAgICAmIFRhZ0ZyYWdtZW50XG4gICAgKT4gfVxuICAgICYgQXNzZXRGcmFnbWVudFxuICApPiB9O1xuXG5leHBvcnQgdHlwZSBDcmVhdGVBc3NldHNNdXRhdGlvblZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgaW5wdXQ6IEFycmF5PENyZWF0ZUFzc2V0SW5wdXQ+IHwgQ3JlYXRlQXNzZXRJbnB1dDtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIENyZWF0ZUFzc2V0c011dGF0aW9uID0geyBjcmVhdGVBc3NldHM6IEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQXNzZXQnIH1cbiAgICAmIHsgdGFnczogQXJyYXk8KFxuICAgICAgeyBfX3R5cGVuYW1lPzogJ1RhZycgfVxuICAgICAgJiBUYWdGcmFnbWVudFxuICAgICk+IH1cbiAgICAmIEFzc2V0RnJhZ21lbnRcbiAgKSB8IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnTWltZVR5cGVFcnJvcicgfVxuICAgICYgUGljazxNaW1lVHlwZUVycm9yLCAnbWVzc2FnZSc+XG4gICk+IH07XG5cbmV4cG9ydCB0eXBlIFVwZGF0ZUFzc2V0TXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlucHV0OiBVcGRhdGVBc3NldElucHV0O1xufT47XG5cblxuZXhwb3J0IHR5cGUgVXBkYXRlQXNzZXRNdXRhdGlvbiA9IHsgdXBkYXRlQXNzZXQ6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQXNzZXQnIH1cbiAgICAmIHsgdGFnczogQXJyYXk8KFxuICAgICAgeyBfX3R5cGVuYW1lPzogJ1RhZycgfVxuICAgICAgJiBUYWdGcmFnbWVudFxuICAgICk+IH1cbiAgICAmIEFzc2V0RnJhZ21lbnRcbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBEZWxldGVBc3NldHNNdXRhdGlvblZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgaW5wdXQ6IERlbGV0ZUFzc2V0c0lucHV0O1xufT47XG5cblxuZXhwb3J0IHR5cGUgRGVsZXRlQXNzZXRzTXV0YXRpb24gPSB7IGRlbGV0ZUFzc2V0czogKFxuICAgIHsgX190eXBlbmFtZT86ICdEZWxldGlvblJlc3BvbnNlJyB9XG4gICAgJiBQaWNrPERlbGV0aW9uUmVzcG9uc2UsICdyZXN1bHQnIHwgJ21lc3NhZ2UnPlxuICApIH07XG5cbmV4cG9ydCB0eXBlIFNlYXJjaFByb2R1Y3RzUXVlcnlWYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlucHV0OiBTZWFyY2hJbnB1dDtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIFNlYXJjaFByb2R1Y3RzUXVlcnkgPSB7IHNlYXJjaDogKFxuICAgIHsgX190eXBlbmFtZT86ICdTZWFyY2hSZXNwb25zZScgfVxuICAgICYgUGljazxTZWFyY2hSZXNwb25zZSwgJ3RvdGFsSXRlbXMnPlxuICAgICYgeyBpdGVtczogQXJyYXk8KFxuICAgICAgeyBfX3R5cGVuYW1lPzogJ1NlYXJjaFJlc3VsdCcgfVxuICAgICAgJiBQaWNrPFNlYXJjaFJlc3VsdCwgJ2VuYWJsZWQnIHwgJ3Byb2R1Y3RJZCcgfCAncHJvZHVjdE5hbWUnIHwgJ3Byb2R1Y3RWYXJpYW50SWQnIHwgJ3Byb2R1Y3RWYXJpYW50TmFtZScgfCAnc2t1JyB8ICdjaGFubmVsSWRzJz5cbiAgICAgICYgeyBwcm9kdWN0QXNzZXQ/OiBNYXliZTwoXG4gICAgICAgIHsgX190eXBlbmFtZT86ICdTZWFyY2hSZXN1bHRBc3NldCcgfVxuICAgICAgICAmIFBpY2s8U2VhcmNoUmVzdWx0QXNzZXQsICdpZCcgfCAncHJldmlldyc+XG4gICAgICAgICYgeyBmb2NhbFBvaW50PzogTWF5YmU8KFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdDb29yZGluYXRlJyB9XG4gICAgICAgICAgJiBQaWNrPENvb3JkaW5hdGUsICd4JyB8ICd5Jz5cbiAgICAgICAgKT4gfVxuICAgICAgKT4sIHByb2R1Y3RWYXJpYW50QXNzZXQ/OiBNYXliZTwoXG4gICAgICAgIHsgX190eXBlbmFtZT86ICdTZWFyY2hSZXN1bHRBc3NldCcgfVxuICAgICAgICAmIFBpY2s8U2VhcmNoUmVzdWx0QXNzZXQsICdpZCcgfCAncHJldmlldyc+XG4gICAgICAgICYgeyBmb2NhbFBvaW50PzogTWF5YmU8KFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdDb29yZGluYXRlJyB9XG4gICAgICAgICAgJiBQaWNrPENvb3JkaW5hdGUsICd4JyB8ICd5Jz5cbiAgICAgICAgKT4gfVxuICAgICAgKT4gfVxuICAgICk+LCBmYWNldFZhbHVlczogQXJyYXk8KFxuICAgICAgeyBfX3R5cGVuYW1lPzogJ0ZhY2V0VmFsdWVSZXN1bHQnIH1cbiAgICAgICYgUGljazxGYWNldFZhbHVlUmVzdWx0LCAnY291bnQnPlxuICAgICAgJiB7IGZhY2V0VmFsdWU6IChcbiAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0ZhY2V0VmFsdWUnIH1cbiAgICAgICAgJiBQaWNrPEZhY2V0VmFsdWUsICdpZCcgfCAnY3JlYXRlZEF0JyB8ICd1cGRhdGVkQXQnIHwgJ25hbWUnPlxuICAgICAgICAmIHsgZmFjZXQ6IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnRmFjZXQnIH1cbiAgICAgICAgICAmIFBpY2s8RmFjZXQsICdpZCcgfCAnY3JlYXRlZEF0JyB8ICd1cGRhdGVkQXQnIHwgJ25hbWUnPlxuICAgICAgICApIH1cbiAgICAgICkgfVxuICAgICk+IH1cbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBQcm9kdWN0U2VsZWN0b3JTZWFyY2hRdWVyeVZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgdGVybTogU2NhbGFyc1snU3RyaW5nJ107XG4gIHRha2U6IFNjYWxhcnNbJ0ludCddO1xufT47XG5cblxuZXhwb3J0IHR5cGUgUHJvZHVjdFNlbGVjdG9yU2VhcmNoUXVlcnkgPSB7IHNlYXJjaDogKFxuICAgIHsgX190eXBlbmFtZT86ICdTZWFyY2hSZXNwb25zZScgfVxuICAgICYgeyBpdGVtczogQXJyYXk8KFxuICAgICAgeyBfX3R5cGVuYW1lPzogJ1NlYXJjaFJlc3VsdCcgfVxuICAgICAgJiBQaWNrPFNlYXJjaFJlc3VsdCwgJ3Byb2R1Y3RWYXJpYW50SWQnIHwgJ3Byb2R1Y3RWYXJpYW50TmFtZScgfCAnc2t1Jz5cbiAgICAgICYgeyBwcm9kdWN0QXNzZXQ/OiBNYXliZTwoXG4gICAgICAgIHsgX190eXBlbmFtZT86ICdTZWFyY2hSZXN1bHRBc3NldCcgfVxuICAgICAgICAmIFBpY2s8U2VhcmNoUmVzdWx0QXNzZXQsICdpZCcgfCAncHJldmlldyc+XG4gICAgICAgICYgeyBmb2NhbFBvaW50PzogTWF5YmU8KFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdDb29yZGluYXRlJyB9XG4gICAgICAgICAgJiBQaWNrPENvb3JkaW5hdGUsICd4JyB8ICd5Jz5cbiAgICAgICAgKT4gfVxuICAgICAgKT4sIHByaWNlOiB7IF9fdHlwZW5hbWU/OiAnUHJpY2VSYW5nZScgfSB8IChcbiAgICAgICAgeyBfX3R5cGVuYW1lPzogJ1NpbmdsZVByaWNlJyB9XG4gICAgICAgICYgUGljazxTaW5nbGVQcmljZSwgJ3ZhbHVlJz5cbiAgICAgICksIHByaWNlV2l0aFRheDogeyBfX3R5cGVuYW1lPzogJ1ByaWNlUmFuZ2UnIH0gfCAoXG4gICAgICAgIHsgX190eXBlbmFtZT86ICdTaW5nbGVQcmljZScgfVxuICAgICAgICAmIFBpY2s8U2luZ2xlUHJpY2UsICd2YWx1ZSc+XG4gICAgICApIH1cbiAgICApPiB9XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgVXBkYXRlUHJvZHVjdE9wdGlvbk11dGF0aW9uVmFyaWFibGVzID0gRXhhY3Q8e1xuICBpbnB1dDogVXBkYXRlUHJvZHVjdE9wdGlvbklucHV0O1xufT47XG5cblxuZXhwb3J0IHR5cGUgVXBkYXRlUHJvZHVjdE9wdGlvbk11dGF0aW9uID0geyB1cGRhdGVQcm9kdWN0T3B0aW9uOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1Byb2R1Y3RPcHRpb24nIH1cbiAgICAmIFByb2R1Y3RPcHRpb25GcmFnbWVudFxuICApIH07XG5cbmV4cG9ydCB0eXBlIERlbGV0ZVByb2R1Y3RWYXJpYW50TXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xufT47XG5cblxuZXhwb3J0IHR5cGUgRGVsZXRlUHJvZHVjdFZhcmlhbnRNdXRhdGlvbiA9IHsgZGVsZXRlUHJvZHVjdFZhcmlhbnQ6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnRGVsZXRpb25SZXNwb25zZScgfVxuICAgICYgUGljazxEZWxldGlvblJlc3BvbnNlLCAncmVzdWx0JyB8ICdtZXNzYWdlJz5cbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBHZXRQcm9kdWN0VmFyaWFudE9wdGlvbnNRdWVyeVZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG59PjtcblxuXG5leHBvcnQgdHlwZSBHZXRQcm9kdWN0VmFyaWFudE9wdGlvbnNRdWVyeSA9IHsgcHJvZHVjdD86IE1heWJlPChcbiAgICB7IF9fdHlwZW5hbWU/OiAnUHJvZHVjdCcgfVxuICAgICYgUGljazxQcm9kdWN0LCAnaWQnIHwgJ2NyZWF0ZWRBdCcgfCAndXBkYXRlZEF0JyB8ICduYW1lJz5cbiAgICAmIHsgb3B0aW9uR3JvdXBzOiBBcnJheTwoXG4gICAgICB7IF9fdHlwZW5hbWU/OiAnUHJvZHVjdE9wdGlvbkdyb3VwJyB9XG4gICAgICAmIFBpY2s8UHJvZHVjdE9wdGlvbkdyb3VwLCAnaWQnIHwgJ25hbWUnIHwgJ2NvZGUnPlxuICAgICAgJiB7IG9wdGlvbnM6IEFycmF5PChcbiAgICAgICAgeyBfX3R5cGVuYW1lPzogJ1Byb2R1Y3RPcHRpb24nIH1cbiAgICAgICAgJiBQcm9kdWN0T3B0aW9uRnJhZ21lbnRcbiAgICAgICk+IH1cbiAgICApPiwgdmFyaWFudHM6IEFycmF5PChcbiAgICAgIHsgX190eXBlbmFtZT86ICdQcm9kdWN0VmFyaWFudCcgfVxuICAgICAgJiBQaWNrPFByb2R1Y3RWYXJpYW50LCAnaWQnIHwgJ2NyZWF0ZWRBdCcgfCAndXBkYXRlZEF0JyB8ICdlbmFibGVkJyB8ICduYW1lJyB8ICdza3UnIHwgJ3ByaWNlJyB8ICdzdG9ja09uSGFuZCc+XG4gICAgICAmIHsgb3B0aW9uczogQXJyYXk8KFxuICAgICAgICB7IF9fdHlwZW5hbWU/OiAnUHJvZHVjdE9wdGlvbicgfVxuICAgICAgICAmIFBpY2s8UHJvZHVjdE9wdGlvbiwgJ2lkJyB8ICdjcmVhdGVkQXQnIHwgJ3VwZGF0ZWRBdCcgfCAnbmFtZScgfCAnY29kZScgfCAnZ3JvdXBJZCc+XG4gICAgICApPiB9XG4gICAgKT4gfVxuICApPiB9O1xuXG5leHBvcnQgdHlwZSBBc3NpZ25Qcm9kdWN0c1RvQ2hhbm5lbE11dGF0aW9uVmFyaWFibGVzID0gRXhhY3Q8e1xuICBpbnB1dDogQXNzaWduUHJvZHVjdHNUb0NoYW5uZWxJbnB1dDtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIEFzc2lnblByb2R1Y3RzVG9DaGFubmVsTXV0YXRpb24gPSB7IGFzc2lnblByb2R1Y3RzVG9DaGFubmVsOiBBcnJheTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1Byb2R1Y3QnIH1cbiAgICAmIFBpY2s8UHJvZHVjdCwgJ2lkJz5cbiAgICAmIHsgY2hhbm5lbHM6IEFycmF5PChcbiAgICAgIHsgX190eXBlbmFtZT86ICdDaGFubmVsJyB9XG4gICAgICAmIFBpY2s8Q2hhbm5lbCwgJ2lkJyB8ICdjb2RlJz5cbiAgICApPiB9XG4gICk+IH07XG5cbmV4cG9ydCB0eXBlIEFzc2lnblZhcmlhbnRzVG9DaGFubmVsTXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlucHV0OiBBc3NpZ25Qcm9kdWN0VmFyaWFudHNUb0NoYW5uZWxJbnB1dDtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIEFzc2lnblZhcmlhbnRzVG9DaGFubmVsTXV0YXRpb24gPSB7IGFzc2lnblByb2R1Y3RWYXJpYW50c1RvQ2hhbm5lbDogQXJyYXk8KFxuICAgIHsgX190eXBlbmFtZT86ICdQcm9kdWN0VmFyaWFudCcgfVxuICAgICYgUGljazxQcm9kdWN0VmFyaWFudCwgJ2lkJz5cbiAgICAmIHsgY2hhbm5lbHM6IEFycmF5PChcbiAgICAgIHsgX190eXBlbmFtZT86ICdDaGFubmVsJyB9XG4gICAgICAmIFBpY2s8Q2hhbm5lbCwgJ2lkJyB8ICdjb2RlJz5cbiAgICApPiB9XG4gICk+IH07XG5cbmV4cG9ydCB0eXBlIFJlbW92ZVByb2R1Y3RzRnJvbUNoYW5uZWxNdXRhdGlvblZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgaW5wdXQ6IFJlbW92ZVByb2R1Y3RzRnJvbUNoYW5uZWxJbnB1dDtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIFJlbW92ZVByb2R1Y3RzRnJvbUNoYW5uZWxNdXRhdGlvbiA9IHsgcmVtb3ZlUHJvZHVjdHNGcm9tQ2hhbm5lbDogQXJyYXk8KFxuICAgIHsgX190eXBlbmFtZT86ICdQcm9kdWN0JyB9XG4gICAgJiBQaWNrPFByb2R1Y3QsICdpZCc+XG4gICAgJiB7IGNoYW5uZWxzOiBBcnJheTwoXG4gICAgICB7IF9fdHlwZW5hbWU/OiAnQ2hhbm5lbCcgfVxuICAgICAgJiBQaWNrPENoYW5uZWwsICdpZCcgfCAnY29kZSc+XG4gICAgKT4gfVxuICApPiB9O1xuXG5leHBvcnQgdHlwZSBSZW1vdmVWYXJpYW50c0Zyb21DaGFubmVsTXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlucHV0OiBSZW1vdmVQcm9kdWN0VmFyaWFudHNGcm9tQ2hhbm5lbElucHV0O1xufT47XG5cblxuZXhwb3J0IHR5cGUgUmVtb3ZlVmFyaWFudHNGcm9tQ2hhbm5lbE11dGF0aW9uID0geyByZW1vdmVQcm9kdWN0VmFyaWFudHNGcm9tQ2hhbm5lbDogQXJyYXk8KFxuICAgIHsgX190eXBlbmFtZT86ICdQcm9kdWN0VmFyaWFudCcgfVxuICAgICYgUGljazxQcm9kdWN0VmFyaWFudCwgJ2lkJz5cbiAgICAmIHsgY2hhbm5lbHM6IEFycmF5PChcbiAgICAgIHsgX190eXBlbmFtZT86ICdDaGFubmVsJyB9XG4gICAgICAmIFBpY2s8Q2hhbm5lbCwgJ2lkJyB8ICdjb2RlJz5cbiAgICApPiB9XG4gICk+IH07XG5cbmV4cG9ydCB0eXBlIEdldFByb2R1Y3RWYXJpYW50UXVlcnlWYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xufT47XG5cblxuZXhwb3J0IHR5cGUgR2V0UHJvZHVjdFZhcmlhbnRRdWVyeSA9IHsgcHJvZHVjdFZhcmlhbnQ/OiBNYXliZTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1Byb2R1Y3RWYXJpYW50JyB9XG4gICAgJiBQaWNrPFByb2R1Y3RWYXJpYW50LCAnaWQnIHwgJ25hbWUnIHwgJ3NrdSc+XG4gICAgJiB7IGZlYXR1cmVkQXNzZXQ/OiBNYXliZTwoXG4gICAgICB7IF9fdHlwZW5hbWU/OiAnQXNzZXQnIH1cbiAgICAgICYgUGljazxBc3NldCwgJ2lkJyB8ICdwcmV2aWV3Jz5cbiAgICAgICYgeyBmb2NhbFBvaW50PzogTWF5YmU8KFxuICAgICAgICB7IF9fdHlwZW5hbWU/OiAnQ29vcmRpbmF0ZScgfVxuICAgICAgICAmIFBpY2s8Q29vcmRpbmF0ZSwgJ3gnIHwgJ3knPlxuICAgICAgKT4gfVxuICAgICk+LCBwcm9kdWN0OiAoXG4gICAgICB7IF9fdHlwZW5hbWU/OiAnUHJvZHVjdCcgfVxuICAgICAgJiBQaWNrPFByb2R1Y3QsICdpZCc+XG4gICAgICAmIHsgZmVhdHVyZWRBc3NldD86IE1heWJlPChcbiAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0Fzc2V0JyB9XG4gICAgICAgICYgUGljazxBc3NldCwgJ2lkJyB8ICdwcmV2aWV3Jz5cbiAgICAgICAgJiB7IGZvY2FsUG9pbnQ/OiBNYXliZTwoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0Nvb3JkaW5hdGUnIH1cbiAgICAgICAgICAmIFBpY2s8Q29vcmRpbmF0ZSwgJ3gnIHwgJ3knPlxuICAgICAgICApPiB9XG4gICAgICApPiB9XG4gICAgKSB9XG4gICk+IH07XG5cbmV4cG9ydCB0eXBlIEdldFByb2R1Y3RWYXJpYW50TGlzdFF1ZXJ5VmFyaWFibGVzID0gRXhhY3Q8e1xuICBvcHRpb25zOiBQcm9kdWN0VmFyaWFudExpc3RPcHRpb25zO1xufT47XG5cblxuZXhwb3J0IHR5cGUgR2V0UHJvZHVjdFZhcmlhbnRMaXN0UXVlcnkgPSB7IHByb2R1Y3RWYXJpYW50czogKFxuICAgIHsgX190eXBlbmFtZT86ICdQcm9kdWN0VmFyaWFudExpc3QnIH1cbiAgICAmIFBpY2s8UHJvZHVjdFZhcmlhbnRMaXN0LCAndG90YWxJdGVtcyc+XG4gICAgJiB7IGl0ZW1zOiBBcnJheTwoXG4gICAgICB7IF9fdHlwZW5hbWU/OiAnUHJvZHVjdFZhcmlhbnQnIH1cbiAgICAgICYgUGljazxQcm9kdWN0VmFyaWFudCwgJ2lkJyB8ICduYW1lJyB8ICdza3UnPlxuICAgICAgJiB7IGZlYXR1cmVkQXNzZXQ/OiBNYXliZTwoXG4gICAgICAgIHsgX190eXBlbmFtZT86ICdBc3NldCcgfVxuICAgICAgICAmIFBpY2s8QXNzZXQsICdpZCcgfCAncHJldmlldyc+XG4gICAgICAgICYgeyBmb2NhbFBvaW50PzogTWF5YmU8KFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdDb29yZGluYXRlJyB9XG4gICAgICAgICAgJiBQaWNrPENvb3JkaW5hdGUsICd4JyB8ICd5Jz5cbiAgICAgICAgKT4gfVxuICAgICAgKT4sIHByb2R1Y3Q6IChcbiAgICAgICAgeyBfX3R5cGVuYW1lPzogJ1Byb2R1Y3QnIH1cbiAgICAgICAgJiBQaWNrPFByb2R1Y3QsICdpZCc+XG4gICAgICAgICYgeyBmZWF0dXJlZEFzc2V0PzogTWF5YmU8KFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdBc3NldCcgfVxuICAgICAgICAgICYgUGljazxBc3NldCwgJ2lkJyB8ICdwcmV2aWV3Jz5cbiAgICAgICAgICAmIHsgZm9jYWxQb2ludD86IE1heWJlPChcbiAgICAgICAgICAgIHsgX190eXBlbmFtZT86ICdDb29yZGluYXRlJyB9XG4gICAgICAgICAgICAmIFBpY2s8Q29vcmRpbmF0ZSwgJ3gnIHwgJ3knPlxuICAgICAgICAgICk+IH1cbiAgICAgICAgKT4gfVxuICAgICAgKSB9XG4gICAgKT4gfVxuICApIH07XG5cbmV4cG9ydCB0eXBlIEdldFRhZ0xpc3RRdWVyeVZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgb3B0aW9ucz86IE1heWJlPFRhZ0xpc3RPcHRpb25zPjtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIEdldFRhZ0xpc3RRdWVyeSA9IHsgdGFnczogKFxuICAgIHsgX190eXBlbmFtZT86ICdUYWdMaXN0JyB9XG4gICAgJiBQaWNrPFRhZ0xpc3QsICd0b3RhbEl0ZW1zJz5cbiAgICAmIHsgaXRlbXM6IEFycmF5PChcbiAgICAgIHsgX190eXBlbmFtZT86ICdUYWcnIH1cbiAgICAgICYgVGFnRnJhZ21lbnRcbiAgICApPiB9XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgR2V0VGFnUXVlcnlWYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xufT47XG5cblxuZXhwb3J0IHR5cGUgR2V0VGFnUXVlcnkgPSB7IHRhZzogKFxuICAgIHsgX190eXBlbmFtZT86ICdUYWcnIH1cbiAgICAmIFRhZ0ZyYWdtZW50XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgQ3JlYXRlVGFnTXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlucHV0OiBDcmVhdGVUYWdJbnB1dDtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIENyZWF0ZVRhZ011dGF0aW9uID0geyBjcmVhdGVUYWc6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnVGFnJyB9XG4gICAgJiBUYWdGcmFnbWVudFxuICApIH07XG5cbmV4cG9ydCB0eXBlIFVwZGF0ZVRhZ011dGF0aW9uVmFyaWFibGVzID0gRXhhY3Q8e1xuICBpbnB1dDogVXBkYXRlVGFnSW5wdXQ7XG59PjtcblxuXG5leHBvcnQgdHlwZSBVcGRhdGVUYWdNdXRhdGlvbiA9IHsgdXBkYXRlVGFnOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1RhZycgfVxuICAgICYgVGFnRnJhZ21lbnRcbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBEZWxldGVUYWdNdXRhdGlvblZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG59PjtcblxuXG5leHBvcnQgdHlwZSBEZWxldGVUYWdNdXRhdGlvbiA9IHsgZGVsZXRlVGFnOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0RlbGV0aW9uUmVzcG9uc2UnIH1cbiAgICAmIFBpY2s8RGVsZXRpb25SZXNwb25zZSwgJ21lc3NhZ2UnIHwgJ3Jlc3VsdCc+XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgUHJvbW90aW9uRnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdQcm9tb3Rpb24nIH1cbiAgJiBQaWNrPFByb21vdGlvbiwgJ2lkJyB8ICdjcmVhdGVkQXQnIHwgJ3VwZGF0ZWRBdCcgfCAnbmFtZScgfCAnZW5hYmxlZCcgfCAnY291cG9uQ29kZScgfCAncGVyQ3VzdG9tZXJVc2FnZUxpbWl0JyB8ICdzdGFydHNBdCcgfCAnZW5kc0F0Jz5cbiAgJiB7IGNvbmRpdGlvbnM6IEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQ29uZmlndXJhYmxlT3BlcmF0aW9uJyB9XG4gICAgJiBDb25maWd1cmFibGVPcGVyYXRpb25GcmFnbWVudFxuICApPiwgYWN0aW9uczogQXJyYXk8KFxuICAgIHsgX190eXBlbmFtZT86ICdDb25maWd1cmFibGVPcGVyYXRpb24nIH1cbiAgICAmIENvbmZpZ3VyYWJsZU9wZXJhdGlvbkZyYWdtZW50XG4gICk+IH1cbik7XG5cbmV4cG9ydCB0eXBlIEdldFByb21vdGlvbkxpc3RRdWVyeVZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgb3B0aW9ucz86IE1heWJlPFByb21vdGlvbkxpc3RPcHRpb25zPjtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIEdldFByb21vdGlvbkxpc3RRdWVyeSA9IHsgcHJvbW90aW9uczogKFxuICAgIHsgX190eXBlbmFtZT86ICdQcm9tb3Rpb25MaXN0JyB9XG4gICAgJiBQaWNrPFByb21vdGlvbkxpc3QsICd0b3RhbEl0ZW1zJz5cbiAgICAmIHsgaXRlbXM6IEFycmF5PChcbiAgICAgIHsgX190eXBlbmFtZT86ICdQcm9tb3Rpb24nIH1cbiAgICAgICYgUHJvbW90aW9uRnJhZ21lbnRcbiAgICApPiB9XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgR2V0UHJvbW90aW9uUXVlcnlWYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xufT47XG5cblxuZXhwb3J0IHR5cGUgR2V0UHJvbW90aW9uUXVlcnkgPSB7IHByb21vdGlvbj86IE1heWJlPChcbiAgICB7IF9fdHlwZW5hbWU/OiAnUHJvbW90aW9uJyB9XG4gICAgJiBQcm9tb3Rpb25GcmFnbWVudFxuICApPiB9O1xuXG5leHBvcnQgdHlwZSBHZXRBZGp1c3RtZW50T3BlcmF0aW9uc1F1ZXJ5VmFyaWFibGVzID0gRXhhY3Q8eyBba2V5OiBzdHJpbmddOiBuZXZlcjsgfT47XG5cblxuZXhwb3J0IHR5cGUgR2V0QWRqdXN0bWVudE9wZXJhdGlvbnNRdWVyeSA9IHsgcHJvbW90aW9uQ29uZGl0aW9uczogQXJyYXk8KFxuICAgIHsgX190eXBlbmFtZT86ICdDb25maWd1cmFibGVPcGVyYXRpb25EZWZpbml0aW9uJyB9XG4gICAgJiBDb25maWd1cmFibGVPcGVyYXRpb25EZWZGcmFnbWVudFxuICApPiwgcHJvbW90aW9uQWN0aW9uczogQXJyYXk8KFxuICAgIHsgX190eXBlbmFtZT86ICdDb25maWd1cmFibGVPcGVyYXRpb25EZWZpbml0aW9uJyB9XG4gICAgJiBDb25maWd1cmFibGVPcGVyYXRpb25EZWZGcmFnbWVudFxuICApPiB9O1xuXG5leHBvcnQgdHlwZSBDcmVhdGVQcm9tb3Rpb25NdXRhdGlvblZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgaW5wdXQ6IENyZWF0ZVByb21vdGlvbklucHV0O1xufT47XG5cblxuZXhwb3J0IHR5cGUgQ3JlYXRlUHJvbW90aW9uTXV0YXRpb24gPSB7IGNyZWF0ZVByb21vdGlvbjogKFxuICAgIHsgX190eXBlbmFtZT86ICdQcm9tb3Rpb24nIH1cbiAgICAmIFByb21vdGlvbkZyYWdtZW50XG4gICkgfCAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ01pc3NpbmdDb25kaXRpb25zRXJyb3InIH1cbiAgICAmIEVycm9yUmVzdWx0X01pc3NpbmdDb25kaXRpb25zRXJyb3JfRnJhZ21lbnRcbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBVcGRhdGVQcm9tb3Rpb25NdXRhdGlvblZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgaW5wdXQ6IFVwZGF0ZVByb21vdGlvbklucHV0O1xufT47XG5cblxuZXhwb3J0IHR5cGUgVXBkYXRlUHJvbW90aW9uTXV0YXRpb24gPSB7IHVwZGF0ZVByb21vdGlvbjogKFxuICAgIHsgX190eXBlbmFtZT86ICdQcm9tb3Rpb24nIH1cbiAgICAmIFByb21vdGlvbkZyYWdtZW50XG4gICkgfCB7IF9fdHlwZW5hbWU/OiAnTWlzc2luZ0NvbmRpdGlvbnNFcnJvcicgfSB9O1xuXG5leHBvcnQgdHlwZSBEZWxldGVQcm9tb3Rpb25NdXRhdGlvblZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG59PjtcblxuXG5leHBvcnQgdHlwZSBEZWxldGVQcm9tb3Rpb25NdXRhdGlvbiA9IHsgZGVsZXRlUHJvbW90aW9uOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0RlbGV0aW9uUmVzcG9uc2UnIH1cbiAgICAmIFBpY2s8RGVsZXRpb25SZXNwb25zZSwgJ3Jlc3VsdCcgfCAnbWVzc2FnZSc+XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgQ291bnRyeUZyYWdtZW50ID0gKFxuICB7IF9fdHlwZW5hbWU/OiAnQ291bnRyeScgfVxuICAmIFBpY2s8Q291bnRyeSwgJ2lkJyB8ICdjcmVhdGVkQXQnIHwgJ3VwZGF0ZWRBdCcgfCAnY29kZScgfCAnbmFtZScgfCAnZW5hYmxlZCc+XG4gICYgeyB0cmFuc2xhdGlvbnM6IEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQ291bnRyeVRyYW5zbGF0aW9uJyB9XG4gICAgJiBQaWNrPENvdW50cnlUcmFuc2xhdGlvbiwgJ2lkJyB8ICdsYW5ndWFnZUNvZGUnIHwgJ25hbWUnPlxuICApPiB9XG4pO1xuXG5leHBvcnQgdHlwZSBHZXRDb3VudHJ5TGlzdFF1ZXJ5VmFyaWFibGVzID0gRXhhY3Q8e1xuICBvcHRpb25zPzogTWF5YmU8Q291bnRyeUxpc3RPcHRpb25zPjtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIEdldENvdW50cnlMaXN0UXVlcnkgPSB7IGNvdW50cmllczogKFxuICAgIHsgX190eXBlbmFtZT86ICdDb3VudHJ5TGlzdCcgfVxuICAgICYgUGljazxDb3VudHJ5TGlzdCwgJ3RvdGFsSXRlbXMnPlxuICAgICYgeyBpdGVtczogQXJyYXk8KFxuICAgICAgeyBfX3R5cGVuYW1lPzogJ0NvdW50cnknIH1cbiAgICAgICYgUGljazxDb3VudHJ5LCAnaWQnIHwgJ2NvZGUnIHwgJ25hbWUnIHwgJ2VuYWJsZWQnPlxuICAgICk+IH1cbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBHZXRBdmFpbGFibGVDb3VudHJpZXNRdWVyeVZhcmlhYmxlcyA9IEV4YWN0PHsgW2tleTogc3RyaW5nXTogbmV2ZXI7IH0+O1xuXG5cbmV4cG9ydCB0eXBlIEdldEF2YWlsYWJsZUNvdW50cmllc1F1ZXJ5ID0geyBjb3VudHJpZXM6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQ291bnRyeUxpc3QnIH1cbiAgICAmIHsgaXRlbXM6IEFycmF5PChcbiAgICAgIHsgX190eXBlbmFtZT86ICdDb3VudHJ5JyB9XG4gICAgICAmIFBpY2s8Q291bnRyeSwgJ2lkJyB8ICdjb2RlJyB8ICduYW1lJyB8ICdlbmFibGVkJz5cbiAgICApPiB9XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgR2V0Q291bnRyeVF1ZXJ5VmFyaWFibGVzID0gRXhhY3Q8e1xuICBpZDogU2NhbGFyc1snSUQnXTtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIEdldENvdW50cnlRdWVyeSA9IHsgY291bnRyeT86IE1heWJlPChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQ291bnRyeScgfVxuICAgICYgQ291bnRyeUZyYWdtZW50XG4gICk+IH07XG5cbmV4cG9ydCB0eXBlIENyZWF0ZUNvdW50cnlNdXRhdGlvblZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgaW5wdXQ6IENyZWF0ZUNvdW50cnlJbnB1dDtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIENyZWF0ZUNvdW50cnlNdXRhdGlvbiA9IHsgY3JlYXRlQ291bnRyeTogKFxuICAgIHsgX190eXBlbmFtZT86ICdDb3VudHJ5JyB9XG4gICAgJiBDb3VudHJ5RnJhZ21lbnRcbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBVcGRhdGVDb3VudHJ5TXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlucHV0OiBVcGRhdGVDb3VudHJ5SW5wdXQ7XG59PjtcblxuXG5leHBvcnQgdHlwZSBVcGRhdGVDb3VudHJ5TXV0YXRpb24gPSB7IHVwZGF0ZUNvdW50cnk6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQ291bnRyeScgfVxuICAgICYgQ291bnRyeUZyYWdtZW50XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgRGVsZXRlQ291bnRyeU11dGF0aW9uVmFyaWFibGVzID0gRXhhY3Q8e1xuICBpZDogU2NhbGFyc1snSUQnXTtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIERlbGV0ZUNvdW50cnlNdXRhdGlvbiA9IHsgZGVsZXRlQ291bnRyeTogKFxuICAgIHsgX190eXBlbmFtZT86ICdEZWxldGlvblJlc3BvbnNlJyB9XG4gICAgJiBQaWNrPERlbGV0aW9uUmVzcG9uc2UsICdyZXN1bHQnIHwgJ21lc3NhZ2UnPlxuICApIH07XG5cbmV4cG9ydCB0eXBlIFpvbmVGcmFnbWVudCA9IChcbiAgeyBfX3R5cGVuYW1lPzogJ1pvbmUnIH1cbiAgJiBQaWNrPFpvbmUsICdpZCcgfCAnbmFtZSc+XG4gICYgeyBtZW1iZXJzOiBBcnJheTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0NvdW50cnknIH1cbiAgICAmIENvdW50cnlGcmFnbWVudFxuICApPiB9XG4pO1xuXG5leHBvcnQgdHlwZSBHZXRab25lc1F1ZXJ5VmFyaWFibGVzID0gRXhhY3Q8eyBba2V5OiBzdHJpbmddOiBuZXZlcjsgfT47XG5cblxuZXhwb3J0IHR5cGUgR2V0Wm9uZXNRdWVyeSA9IHsgem9uZXM6IEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnWm9uZScgfVxuICAgICYgUGljazxab25lLCAnaWQnIHwgJ2NyZWF0ZWRBdCcgfCAndXBkYXRlZEF0JyB8ICduYW1lJz5cbiAgICAmIHsgbWVtYmVyczogQXJyYXk8KFxuICAgICAgeyBfX3R5cGVuYW1lPzogJ0NvdW50cnknIH1cbiAgICAgICYgUGljazxDb3VudHJ5LCAnY3JlYXRlZEF0JyB8ICd1cGRhdGVkQXQnIHwgJ2lkJyB8ICduYW1lJyB8ICdjb2RlJyB8ICdlbmFibGVkJz5cbiAgICApPiB9XG4gICk+IH07XG5cbmV4cG9ydCB0eXBlIEdldFpvbmVRdWVyeVZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG59PjtcblxuXG5leHBvcnQgdHlwZSBHZXRab25lUXVlcnkgPSB7IHpvbmU/OiBNYXliZTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1pvbmUnIH1cbiAgICAmIFpvbmVGcmFnbWVudFxuICApPiB9O1xuXG5leHBvcnQgdHlwZSBDcmVhdGVab25lTXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlucHV0OiBDcmVhdGVab25lSW5wdXQ7XG59PjtcblxuXG5leHBvcnQgdHlwZSBDcmVhdGVab25lTXV0YXRpb24gPSB7IGNyZWF0ZVpvbmU6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnWm9uZScgfVxuICAgICYgWm9uZUZyYWdtZW50XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgVXBkYXRlWm9uZU11dGF0aW9uVmFyaWFibGVzID0gRXhhY3Q8e1xuICBpbnB1dDogVXBkYXRlWm9uZUlucHV0O1xufT47XG5cblxuZXhwb3J0IHR5cGUgVXBkYXRlWm9uZU11dGF0aW9uID0geyB1cGRhdGVab25lOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1pvbmUnIH1cbiAgICAmIFpvbmVGcmFnbWVudFxuICApIH07XG5cbmV4cG9ydCB0eXBlIERlbGV0ZVpvbmVNdXRhdGlvblZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG59PjtcblxuXG5leHBvcnQgdHlwZSBEZWxldGVab25lTXV0YXRpb24gPSB7IGRlbGV0ZVpvbmU6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnRGVsZXRpb25SZXNwb25zZScgfVxuICAgICYgUGljazxEZWxldGlvblJlc3BvbnNlLCAnbWVzc2FnZScgfCAncmVzdWx0Jz5cbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBBZGRNZW1iZXJzVG9ab25lTXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIHpvbmVJZDogU2NhbGFyc1snSUQnXTtcbiAgbWVtYmVySWRzOiBBcnJheTxTY2FsYXJzWydJRCddPiB8IFNjYWxhcnNbJ0lEJ107XG59PjtcblxuXG5leHBvcnQgdHlwZSBBZGRNZW1iZXJzVG9ab25lTXV0YXRpb24gPSB7IGFkZE1lbWJlcnNUb1pvbmU6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnWm9uZScgfVxuICAgICYgWm9uZUZyYWdtZW50XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgUmVtb3ZlTWVtYmVyc0Zyb21ab25lTXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIHpvbmVJZDogU2NhbGFyc1snSUQnXTtcbiAgbWVtYmVySWRzOiBBcnJheTxTY2FsYXJzWydJRCddPiB8IFNjYWxhcnNbJ0lEJ107XG59PjtcblxuXG5leHBvcnQgdHlwZSBSZW1vdmVNZW1iZXJzRnJvbVpvbmVNdXRhdGlvbiA9IHsgcmVtb3ZlTWVtYmVyc0Zyb21ab25lOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1pvbmUnIH1cbiAgICAmIFpvbmVGcmFnbWVudFxuICApIH07XG5cbmV4cG9ydCB0eXBlIFRheENhdGVnb3J5RnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdUYXhDYXRlZ29yeScgfVxuICAmIFBpY2s8VGF4Q2F0ZWdvcnksICdpZCcgfCAnY3JlYXRlZEF0JyB8ICd1cGRhdGVkQXQnIHwgJ25hbWUnIHwgJ2lzRGVmYXVsdCc+XG4pO1xuXG5leHBvcnQgdHlwZSBHZXRUYXhDYXRlZ29yaWVzUXVlcnlWYXJpYWJsZXMgPSBFeGFjdDx7IFtrZXk6IHN0cmluZ106IG5ldmVyOyB9PjtcblxuXG5leHBvcnQgdHlwZSBHZXRUYXhDYXRlZ29yaWVzUXVlcnkgPSB7IHRheENhdGVnb3JpZXM6IEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnVGF4Q2F0ZWdvcnknIH1cbiAgICAmIFRheENhdGVnb3J5RnJhZ21lbnRcbiAgKT4gfTtcblxuZXhwb3J0IHR5cGUgR2V0VGF4Q2F0ZWdvcnlRdWVyeVZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG59PjtcblxuXG5leHBvcnQgdHlwZSBHZXRUYXhDYXRlZ29yeVF1ZXJ5ID0geyB0YXhDYXRlZ29yeT86IE1heWJlPChcbiAgICB7IF9fdHlwZW5hbWU/OiAnVGF4Q2F0ZWdvcnknIH1cbiAgICAmIFRheENhdGVnb3J5RnJhZ21lbnRcbiAgKT4gfTtcblxuZXhwb3J0IHR5cGUgQ3JlYXRlVGF4Q2F0ZWdvcnlNdXRhdGlvblZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgaW5wdXQ6IENyZWF0ZVRheENhdGVnb3J5SW5wdXQ7XG59PjtcblxuXG5leHBvcnQgdHlwZSBDcmVhdGVUYXhDYXRlZ29yeU11dGF0aW9uID0geyBjcmVhdGVUYXhDYXRlZ29yeTogKFxuICAgIHsgX190eXBlbmFtZT86ICdUYXhDYXRlZ29yeScgfVxuICAgICYgVGF4Q2F0ZWdvcnlGcmFnbWVudFxuICApIH07XG5cbmV4cG9ydCB0eXBlIFVwZGF0ZVRheENhdGVnb3J5TXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlucHV0OiBVcGRhdGVUYXhDYXRlZ29yeUlucHV0O1xufT47XG5cblxuZXhwb3J0IHR5cGUgVXBkYXRlVGF4Q2F0ZWdvcnlNdXRhdGlvbiA9IHsgdXBkYXRlVGF4Q2F0ZWdvcnk6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnVGF4Q2F0ZWdvcnknIH1cbiAgICAmIFRheENhdGVnb3J5RnJhZ21lbnRcbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBEZWxldGVUYXhDYXRlZ29yeU11dGF0aW9uVmFyaWFibGVzID0gRXhhY3Q8e1xuICBpZDogU2NhbGFyc1snSUQnXTtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIERlbGV0ZVRheENhdGVnb3J5TXV0YXRpb24gPSB7IGRlbGV0ZVRheENhdGVnb3J5OiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0RlbGV0aW9uUmVzcG9uc2UnIH1cbiAgICAmIFBpY2s8RGVsZXRpb25SZXNwb25zZSwgJ3Jlc3VsdCcgfCAnbWVzc2FnZSc+XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgVGF4UmF0ZUZyYWdtZW50ID0gKFxuICB7IF9fdHlwZW5hbWU/OiAnVGF4UmF0ZScgfVxuICAmIFBpY2s8VGF4UmF0ZSwgJ2lkJyB8ICdjcmVhdGVkQXQnIHwgJ3VwZGF0ZWRBdCcgfCAnbmFtZScgfCAnZW5hYmxlZCcgfCAndmFsdWUnPlxuICAmIHsgY2F0ZWdvcnk6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnVGF4Q2F0ZWdvcnknIH1cbiAgICAmIFBpY2s8VGF4Q2F0ZWdvcnksICdpZCcgfCAnbmFtZSc+XG4gICksIHpvbmU6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnWm9uZScgfVxuICAgICYgUGljazxab25lLCAnaWQnIHwgJ25hbWUnPlxuICApLCBjdXN0b21lckdyb3VwPzogTWF5YmU8KFxuICAgIHsgX190eXBlbmFtZT86ICdDdXN0b21lckdyb3VwJyB9XG4gICAgJiBQaWNrPEN1c3RvbWVyR3JvdXAsICdpZCcgfCAnbmFtZSc+XG4gICk+IH1cbik7XG5cbmV4cG9ydCB0eXBlIEdldFRheFJhdGVMaXN0UXVlcnlWYXJpYWJsZXMgPSBFeGFjdDx7XG4gIG9wdGlvbnM/OiBNYXliZTxUYXhSYXRlTGlzdE9wdGlvbnM+O1xufT47XG5cblxuZXhwb3J0IHR5cGUgR2V0VGF4UmF0ZUxpc3RRdWVyeSA9IHsgdGF4UmF0ZXM6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnVGF4UmF0ZUxpc3QnIH1cbiAgICAmIFBpY2s8VGF4UmF0ZUxpc3QsICd0b3RhbEl0ZW1zJz5cbiAgICAmIHsgaXRlbXM6IEFycmF5PChcbiAgICAgIHsgX190eXBlbmFtZT86ICdUYXhSYXRlJyB9XG4gICAgICAmIFRheFJhdGVGcmFnbWVudFxuICAgICk+IH1cbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBHZXRUYXhSYXRlUXVlcnlWYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xufT47XG5cblxuZXhwb3J0IHR5cGUgR2V0VGF4UmF0ZVF1ZXJ5ID0geyB0YXhSYXRlPzogTWF5YmU8KFxuICAgIHsgX190eXBlbmFtZT86ICdUYXhSYXRlJyB9XG4gICAgJiBUYXhSYXRlRnJhZ21lbnRcbiAgKT4gfTtcblxuZXhwb3J0IHR5cGUgQ3JlYXRlVGF4UmF0ZU11dGF0aW9uVmFyaWFibGVzID0gRXhhY3Q8e1xuICBpbnB1dDogQ3JlYXRlVGF4UmF0ZUlucHV0O1xufT47XG5cblxuZXhwb3J0IHR5cGUgQ3JlYXRlVGF4UmF0ZU11dGF0aW9uID0geyBjcmVhdGVUYXhSYXRlOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1RheFJhdGUnIH1cbiAgICAmIFRheFJhdGVGcmFnbWVudFxuICApIH07XG5cbmV4cG9ydCB0eXBlIFVwZGF0ZVRheFJhdGVNdXRhdGlvblZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgaW5wdXQ6IFVwZGF0ZVRheFJhdGVJbnB1dDtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIFVwZGF0ZVRheFJhdGVNdXRhdGlvbiA9IHsgdXBkYXRlVGF4UmF0ZTogKFxuICAgIHsgX190eXBlbmFtZT86ICdUYXhSYXRlJyB9XG4gICAgJiBUYXhSYXRlRnJhZ21lbnRcbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBEZWxldGVUYXhSYXRlTXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xufT47XG5cblxuZXhwb3J0IHR5cGUgRGVsZXRlVGF4UmF0ZU11dGF0aW9uID0geyBkZWxldGVUYXhSYXRlOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0RlbGV0aW9uUmVzcG9uc2UnIH1cbiAgICAmIFBpY2s8RGVsZXRpb25SZXNwb25zZSwgJ3Jlc3VsdCcgfCAnbWVzc2FnZSc+XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgQ2hhbm5lbEZyYWdtZW50ID0gKFxuICB7IF9fdHlwZW5hbWU/OiAnQ2hhbm5lbCcgfVxuICAmIFBpY2s8Q2hhbm5lbCwgJ2lkJyB8ICdjcmVhdGVkQXQnIHwgJ3VwZGF0ZWRBdCcgfCAnY29kZScgfCAndG9rZW4nIHwgJ3ByaWNlc0luY2x1ZGVUYXgnIHwgJ2N1cnJlbmN5Q29kZScgfCAnZGVmYXVsdExhbmd1YWdlQ29kZSc+XG4gICYgeyBkZWZhdWx0U2hpcHBpbmdab25lPzogTWF5YmU8KFxuICAgIHsgX190eXBlbmFtZT86ICdab25lJyB9XG4gICAgJiBQaWNrPFpvbmUsICdpZCcgfCAnbmFtZSc+XG4gICk+LCBkZWZhdWx0VGF4Wm9uZT86IE1heWJlPChcbiAgICB7IF9fdHlwZW5hbWU/OiAnWm9uZScgfVxuICAgICYgUGljazxab25lLCAnaWQnIHwgJ25hbWUnPlxuICApPiB9XG4pO1xuXG5leHBvcnQgdHlwZSBHZXRDaGFubmVsc1F1ZXJ5VmFyaWFibGVzID0gRXhhY3Q8eyBba2V5OiBzdHJpbmddOiBuZXZlcjsgfT47XG5cblxuZXhwb3J0IHR5cGUgR2V0Q2hhbm5lbHNRdWVyeSA9IHsgY2hhbm5lbHM6IEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQ2hhbm5lbCcgfVxuICAgICYgQ2hhbm5lbEZyYWdtZW50XG4gICk+IH07XG5cbmV4cG9ydCB0eXBlIEdldENoYW5uZWxRdWVyeVZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG59PjtcblxuXG5leHBvcnQgdHlwZSBHZXRDaGFubmVsUXVlcnkgPSB7IGNoYW5uZWw/OiBNYXliZTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0NoYW5uZWwnIH1cbiAgICAmIENoYW5uZWxGcmFnbWVudFxuICApPiB9O1xuXG5leHBvcnQgdHlwZSBHZXRBY3RpdmVDaGFubmVsUXVlcnlWYXJpYWJsZXMgPSBFeGFjdDx7IFtrZXk6IHN0cmluZ106IG5ldmVyOyB9PjtcblxuXG5leHBvcnQgdHlwZSBHZXRBY3RpdmVDaGFubmVsUXVlcnkgPSB7IGFjdGl2ZUNoYW5uZWw6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQ2hhbm5lbCcgfVxuICAgICYgQ2hhbm5lbEZyYWdtZW50XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgQ3JlYXRlQ2hhbm5lbE11dGF0aW9uVmFyaWFibGVzID0gRXhhY3Q8e1xuICBpbnB1dDogQ3JlYXRlQ2hhbm5lbElucHV0O1xufT47XG5cblxuZXhwb3J0IHR5cGUgQ3JlYXRlQ2hhbm5lbE11dGF0aW9uID0geyBjcmVhdGVDaGFubmVsOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0NoYW5uZWwnIH1cbiAgICAmIENoYW5uZWxGcmFnbWVudFxuICApIHwgKFxuICAgIHsgX190eXBlbmFtZT86ICdMYW5ndWFnZU5vdEF2YWlsYWJsZUVycm9yJyB9XG4gICAgJiBFcnJvclJlc3VsdF9MYW5ndWFnZU5vdEF2YWlsYWJsZUVycm9yX0ZyYWdtZW50XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgVXBkYXRlQ2hhbm5lbE11dGF0aW9uVmFyaWFibGVzID0gRXhhY3Q8e1xuICBpbnB1dDogVXBkYXRlQ2hhbm5lbElucHV0O1xufT47XG5cblxuZXhwb3J0IHR5cGUgVXBkYXRlQ2hhbm5lbE11dGF0aW9uID0geyB1cGRhdGVDaGFubmVsOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0NoYW5uZWwnIH1cbiAgICAmIENoYW5uZWxGcmFnbWVudFxuICApIHwgKFxuICAgIHsgX190eXBlbmFtZT86ICdMYW5ndWFnZU5vdEF2YWlsYWJsZUVycm9yJyB9XG4gICAgJiBFcnJvclJlc3VsdF9MYW5ndWFnZU5vdEF2YWlsYWJsZUVycm9yX0ZyYWdtZW50XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgRGVsZXRlQ2hhbm5lbE11dGF0aW9uVmFyaWFibGVzID0gRXhhY3Q8e1xuICBpZDogU2NhbGFyc1snSUQnXTtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIERlbGV0ZUNoYW5uZWxNdXRhdGlvbiA9IHsgZGVsZXRlQ2hhbm5lbDogKFxuICAgIHsgX190eXBlbmFtZT86ICdEZWxldGlvblJlc3BvbnNlJyB9XG4gICAgJiBQaWNrPERlbGV0aW9uUmVzcG9uc2UsICdyZXN1bHQnIHwgJ21lc3NhZ2UnPlxuICApIH07XG5cbmV4cG9ydCB0eXBlIFBheW1lbnRNZXRob2RGcmFnbWVudCA9IChcbiAgeyBfX3R5cGVuYW1lPzogJ1BheW1lbnRNZXRob2QnIH1cbiAgJiBQaWNrPFBheW1lbnRNZXRob2QsICdpZCcgfCAnY3JlYXRlZEF0JyB8ICd1cGRhdGVkQXQnIHwgJ25hbWUnIHwgJ2NvZGUnIHwgJ2Rlc2NyaXB0aW9uJyB8ICdlbmFibGVkJz5cbiAgJiB7IGNoZWNrZXI/OiBNYXliZTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0NvbmZpZ3VyYWJsZU9wZXJhdGlvbicgfVxuICAgICYgQ29uZmlndXJhYmxlT3BlcmF0aW9uRnJhZ21lbnRcbiAgKT4sIGhhbmRsZXI6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQ29uZmlndXJhYmxlT3BlcmF0aW9uJyB9XG4gICAgJiBDb25maWd1cmFibGVPcGVyYXRpb25GcmFnbWVudFxuICApIH1cbik7XG5cbmV4cG9ydCB0eXBlIEdldFBheW1lbnRNZXRob2RMaXN0UXVlcnlWYXJpYWJsZXMgPSBFeGFjdDx7XG4gIG9wdGlvbnM6IFBheW1lbnRNZXRob2RMaXN0T3B0aW9ucztcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIEdldFBheW1lbnRNZXRob2RMaXN0UXVlcnkgPSB7IHBheW1lbnRNZXRob2RzOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1BheW1lbnRNZXRob2RMaXN0JyB9XG4gICAgJiBQaWNrPFBheW1lbnRNZXRob2RMaXN0LCAndG90YWxJdGVtcyc+XG4gICAgJiB7IGl0ZW1zOiBBcnJheTwoXG4gICAgICB7IF9fdHlwZW5hbWU/OiAnUGF5bWVudE1ldGhvZCcgfVxuICAgICAgJiBQYXltZW50TWV0aG9kRnJhZ21lbnRcbiAgICApPiB9XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgR2V0UGF5bWVudE1ldGhvZE9wZXJhdGlvbnNRdWVyeVZhcmlhYmxlcyA9IEV4YWN0PHsgW2tleTogc3RyaW5nXTogbmV2ZXI7IH0+O1xuXG5cbmV4cG9ydCB0eXBlIEdldFBheW1lbnRNZXRob2RPcGVyYXRpb25zUXVlcnkgPSB7IHBheW1lbnRNZXRob2RFbGlnaWJpbGl0eUNoZWNrZXJzOiBBcnJheTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0NvbmZpZ3VyYWJsZU9wZXJhdGlvbkRlZmluaXRpb24nIH1cbiAgICAmIENvbmZpZ3VyYWJsZU9wZXJhdGlvbkRlZkZyYWdtZW50XG4gICk+LCBwYXltZW50TWV0aG9kSGFuZGxlcnM6IEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQ29uZmlndXJhYmxlT3BlcmF0aW9uRGVmaW5pdGlvbicgfVxuICAgICYgQ29uZmlndXJhYmxlT3BlcmF0aW9uRGVmRnJhZ21lbnRcbiAgKT4gfTtcblxuZXhwb3J0IHR5cGUgR2V0UGF5bWVudE1ldGhvZFF1ZXJ5VmFyaWFibGVzID0gRXhhY3Q8e1xuICBpZDogU2NhbGFyc1snSUQnXTtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIEdldFBheW1lbnRNZXRob2RRdWVyeSA9IHsgcGF5bWVudE1ldGhvZD86IE1heWJlPChcbiAgICB7IF9fdHlwZW5hbWU/OiAnUGF5bWVudE1ldGhvZCcgfVxuICAgICYgUGF5bWVudE1ldGhvZEZyYWdtZW50XG4gICk+IH07XG5cbmV4cG9ydCB0eXBlIENyZWF0ZVBheW1lbnRNZXRob2RNdXRhdGlvblZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgaW5wdXQ6IENyZWF0ZVBheW1lbnRNZXRob2RJbnB1dDtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIENyZWF0ZVBheW1lbnRNZXRob2RNdXRhdGlvbiA9IHsgY3JlYXRlUGF5bWVudE1ldGhvZDogKFxuICAgIHsgX190eXBlbmFtZT86ICdQYXltZW50TWV0aG9kJyB9XG4gICAgJiBQYXltZW50TWV0aG9kRnJhZ21lbnRcbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBVcGRhdGVQYXltZW50TWV0aG9kTXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlucHV0OiBVcGRhdGVQYXltZW50TWV0aG9kSW5wdXQ7XG59PjtcblxuXG5leHBvcnQgdHlwZSBVcGRhdGVQYXltZW50TWV0aG9kTXV0YXRpb24gPSB7IHVwZGF0ZVBheW1lbnRNZXRob2Q6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnUGF5bWVudE1ldGhvZCcgfVxuICAgICYgUGF5bWVudE1ldGhvZEZyYWdtZW50XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgRGVsZXRlUGF5bWVudE1ldGhvZE11dGF0aW9uVmFyaWFibGVzID0gRXhhY3Q8e1xuICBpZDogU2NhbGFyc1snSUQnXTtcbiAgZm9yY2U/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ10+O1xufT47XG5cblxuZXhwb3J0IHR5cGUgRGVsZXRlUGF5bWVudE1ldGhvZE11dGF0aW9uID0geyBkZWxldGVQYXltZW50TWV0aG9kOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0RlbGV0aW9uUmVzcG9uc2UnIH1cbiAgICAmIFBpY2s8RGVsZXRpb25SZXNwb25zZSwgJ3Jlc3VsdCcgfCAnbWVzc2FnZSc+XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgR2xvYmFsU2V0dGluZ3NGcmFnbWVudCA9IChcbiAgeyBfX3R5cGVuYW1lPzogJ0dsb2JhbFNldHRpbmdzJyB9XG4gICYgUGljazxHbG9iYWxTZXR0aW5ncywgJ2lkJyB8ICdhdmFpbGFibGVMYW5ndWFnZXMnIHwgJ3RyYWNrSW52ZW50b3J5JyB8ICdvdXRPZlN0b2NrVGhyZXNob2xkJz5cbiAgJiB7IHNlcnZlckNvbmZpZzogKFxuICAgIHsgX190eXBlbmFtZT86ICdTZXJ2ZXJDb25maWcnIH1cbiAgICAmIHsgcGVybWlzc2lvbnM6IEFycmF5PChcbiAgICAgIHsgX190eXBlbmFtZT86ICdQZXJtaXNzaW9uRGVmaW5pdGlvbicgfVxuICAgICAgJiBQaWNrPFBlcm1pc3Npb25EZWZpbml0aW9uLCAnbmFtZScgfCAnZGVzY3JpcHRpb24nIHwgJ2Fzc2lnbmFibGUnPlxuICAgICk+LCBvcmRlclByb2Nlc3M6IEFycmF5PChcbiAgICAgIHsgX190eXBlbmFtZT86ICdPcmRlclByb2Nlc3NTdGF0ZScgfVxuICAgICAgJiBQaWNrPE9yZGVyUHJvY2Vzc1N0YXRlLCAnbmFtZSc+XG4gICAgKT4gfVxuICApIH1cbik7XG5cbmV4cG9ydCB0eXBlIEdldEdsb2JhbFNldHRpbmdzUXVlcnlWYXJpYWJsZXMgPSBFeGFjdDx7IFtrZXk6IHN0cmluZ106IG5ldmVyOyB9PjtcblxuXG5leHBvcnQgdHlwZSBHZXRHbG9iYWxTZXR0aW5nc1F1ZXJ5ID0geyBnbG9iYWxTZXR0aW5nczogKFxuICAgIHsgX190eXBlbmFtZT86ICdHbG9iYWxTZXR0aW5ncycgfVxuICAgICYgR2xvYmFsU2V0dGluZ3NGcmFnbWVudFxuICApIH07XG5cbmV4cG9ydCB0eXBlIFVwZGF0ZUdsb2JhbFNldHRpbmdzTXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlucHV0OiBVcGRhdGVHbG9iYWxTZXR0aW5nc0lucHV0O1xufT47XG5cblxuZXhwb3J0IHR5cGUgVXBkYXRlR2xvYmFsU2V0dGluZ3NNdXRhdGlvbiA9IHsgdXBkYXRlR2xvYmFsU2V0dGluZ3M6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnR2xvYmFsU2V0dGluZ3MnIH1cbiAgICAmIEdsb2JhbFNldHRpbmdzRnJhZ21lbnRcbiAgKSB8IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQ2hhbm5lbERlZmF1bHRMYW5ndWFnZUVycm9yJyB9XG4gICAgJiBFcnJvclJlc3VsdF9DaGFubmVsRGVmYXVsdExhbmd1YWdlRXJyb3JfRnJhZ21lbnRcbiAgKSB9O1xuXG50eXBlIEN1c3RvbUZpZWxkQ29uZmlnX1N0cmluZ0N1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50ID0gKFxuICB7IF9fdHlwZW5hbWU/OiAnU3RyaW5nQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgJiBQaWNrPFN0cmluZ0N1c3RvbUZpZWxkQ29uZmlnLCAnbmFtZScgfCAndHlwZScgfCAnbGlzdCcgfCAncmVhZG9ubHknPlxuICAmIHsgZGVzY3JpcHRpb24/OiBNYXliZTxBcnJheTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0xvY2FsaXplZFN0cmluZycgfVxuICAgICYgUGljazxMb2NhbGl6ZWRTdHJpbmcsICdsYW5ndWFnZUNvZGUnIHwgJ3ZhbHVlJz5cbiAgKT4+LCBsYWJlbD86IE1heWJlPEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnTG9jYWxpemVkU3RyaW5nJyB9XG4gICAgJiBQaWNrPExvY2FsaXplZFN0cmluZywgJ2xhbmd1YWdlQ29kZScgfCAndmFsdWUnPlxuICApPj4gfVxuKTtcblxudHlwZSBDdXN0b21GaWVsZENvbmZpZ19Mb2NhbGVTdHJpbmdDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudCA9IChcbiAgeyBfX3R5cGVuYW1lPzogJ0xvY2FsZVN0cmluZ0N1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICYgUGljazxMb2NhbGVTdHJpbmdDdXN0b21GaWVsZENvbmZpZywgJ25hbWUnIHwgJ3R5cGUnIHwgJ2xpc3QnIHwgJ3JlYWRvbmx5Jz5cbiAgJiB7IGRlc2NyaXB0aW9uPzogTWF5YmU8QXJyYXk8KFxuICAgIHsgX190eXBlbmFtZT86ICdMb2NhbGl6ZWRTdHJpbmcnIH1cbiAgICAmIFBpY2s8TG9jYWxpemVkU3RyaW5nLCAnbGFuZ3VhZ2VDb2RlJyB8ICd2YWx1ZSc+XG4gICk+PiwgbGFiZWw/OiBNYXliZTxBcnJheTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0xvY2FsaXplZFN0cmluZycgfVxuICAgICYgUGljazxMb2NhbGl6ZWRTdHJpbmcsICdsYW5ndWFnZUNvZGUnIHwgJ3ZhbHVlJz5cbiAgKT4+IH1cbik7XG5cbnR5cGUgQ3VzdG9tRmllbGRDb25maWdfSW50Q3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdJbnRDdXN0b21GaWVsZENvbmZpZycgfVxuICAmIFBpY2s8SW50Q3VzdG9tRmllbGRDb25maWcsICduYW1lJyB8ICd0eXBlJyB8ICdsaXN0JyB8ICdyZWFkb25seSc+XG4gICYgeyBkZXNjcmlwdGlvbj86IE1heWJlPEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnTG9jYWxpemVkU3RyaW5nJyB9XG4gICAgJiBQaWNrPExvY2FsaXplZFN0cmluZywgJ2xhbmd1YWdlQ29kZScgfCAndmFsdWUnPlxuICApPj4sIGxhYmVsPzogTWF5YmU8QXJyYXk8KFxuICAgIHsgX190eXBlbmFtZT86ICdMb2NhbGl6ZWRTdHJpbmcnIH1cbiAgICAmIFBpY2s8TG9jYWxpemVkU3RyaW5nLCAnbGFuZ3VhZ2VDb2RlJyB8ICd2YWx1ZSc+XG4gICk+PiB9XG4pO1xuXG50eXBlIEN1c3RvbUZpZWxkQ29uZmlnX0Zsb2F0Q3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdGbG9hdEN1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICYgUGljazxGbG9hdEN1c3RvbUZpZWxkQ29uZmlnLCAnbmFtZScgfCAndHlwZScgfCAnbGlzdCcgfCAncmVhZG9ubHknPlxuICAmIHsgZGVzY3JpcHRpb24/OiBNYXliZTxBcnJheTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0xvY2FsaXplZFN0cmluZycgfVxuICAgICYgUGljazxMb2NhbGl6ZWRTdHJpbmcsICdsYW5ndWFnZUNvZGUnIHwgJ3ZhbHVlJz5cbiAgKT4+LCBsYWJlbD86IE1heWJlPEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnTG9jYWxpemVkU3RyaW5nJyB9XG4gICAgJiBQaWNrPExvY2FsaXplZFN0cmluZywgJ2xhbmd1YWdlQ29kZScgfCAndmFsdWUnPlxuICApPj4gfVxuKTtcblxudHlwZSBDdXN0b21GaWVsZENvbmZpZ19Cb29sZWFuQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdCb29sZWFuQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgJiBQaWNrPEJvb2xlYW5DdXN0b21GaWVsZENvbmZpZywgJ25hbWUnIHwgJ3R5cGUnIHwgJ2xpc3QnIHwgJ3JlYWRvbmx5Jz5cbiAgJiB7IGRlc2NyaXB0aW9uPzogTWF5YmU8QXJyYXk8KFxuICAgIHsgX190eXBlbmFtZT86ICdMb2NhbGl6ZWRTdHJpbmcnIH1cbiAgICAmIFBpY2s8TG9jYWxpemVkU3RyaW5nLCAnbGFuZ3VhZ2VDb2RlJyB8ICd2YWx1ZSc+XG4gICk+PiwgbGFiZWw/OiBNYXliZTxBcnJheTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0xvY2FsaXplZFN0cmluZycgfVxuICAgICYgUGljazxMb2NhbGl6ZWRTdHJpbmcsICdsYW5ndWFnZUNvZGUnIHwgJ3ZhbHVlJz5cbiAgKT4+IH1cbik7XG5cbnR5cGUgQ3VzdG9tRmllbGRDb25maWdfRGF0ZVRpbWVDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudCA9IChcbiAgeyBfX3R5cGVuYW1lPzogJ0RhdGVUaW1lQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgJiBQaWNrPERhdGVUaW1lQ3VzdG9tRmllbGRDb25maWcsICduYW1lJyB8ICd0eXBlJyB8ICdsaXN0JyB8ICdyZWFkb25seSc+XG4gICYgeyBkZXNjcmlwdGlvbj86IE1heWJlPEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnTG9jYWxpemVkU3RyaW5nJyB9XG4gICAgJiBQaWNrPExvY2FsaXplZFN0cmluZywgJ2xhbmd1YWdlQ29kZScgfCAndmFsdWUnPlxuICApPj4sIGxhYmVsPzogTWF5YmU8QXJyYXk8KFxuICAgIHsgX190eXBlbmFtZT86ICdMb2NhbGl6ZWRTdHJpbmcnIH1cbiAgICAmIFBpY2s8TG9jYWxpemVkU3RyaW5nLCAnbGFuZ3VhZ2VDb2RlJyB8ICd2YWx1ZSc+XG4gICk+PiB9XG4pO1xuXG50eXBlIEN1c3RvbUZpZWxkQ29uZmlnX1JlbGF0aW9uQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdSZWxhdGlvbkN1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICYgUGljazxSZWxhdGlvbkN1c3RvbUZpZWxkQ29uZmlnLCAnbmFtZScgfCAndHlwZScgfCAnbGlzdCcgfCAncmVhZG9ubHknPlxuICAmIHsgZGVzY3JpcHRpb24/OiBNYXliZTxBcnJheTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0xvY2FsaXplZFN0cmluZycgfVxuICAgICYgUGljazxMb2NhbGl6ZWRTdHJpbmcsICdsYW5ndWFnZUNvZGUnIHwgJ3ZhbHVlJz5cbiAgKT4+LCBsYWJlbD86IE1heWJlPEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnTG9jYWxpemVkU3RyaW5nJyB9XG4gICAgJiBQaWNrPExvY2FsaXplZFN0cmluZywgJ2xhbmd1YWdlQ29kZScgfCAndmFsdWUnPlxuICApPj4gfVxuKTtcblxuZXhwb3J0IHR5cGUgQ3VzdG9tRmllbGRDb25maWdGcmFnbWVudCA9IEN1c3RvbUZpZWxkQ29uZmlnX1N0cmluZ0N1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50IHwgQ3VzdG9tRmllbGRDb25maWdfTG9jYWxlU3RyaW5nQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnQgfCBDdXN0b21GaWVsZENvbmZpZ19JbnRDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudCB8IEN1c3RvbUZpZWxkQ29uZmlnX0Zsb2F0Q3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnQgfCBDdXN0b21GaWVsZENvbmZpZ19Cb29sZWFuQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnQgfCBDdXN0b21GaWVsZENvbmZpZ19EYXRlVGltZUN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50IHwgQ3VzdG9tRmllbGRDb25maWdfUmVsYXRpb25DdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudDtcblxuZXhwb3J0IHR5cGUgU3RyaW5nQ3VzdG9tRmllbGRGcmFnbWVudCA9IChcbiAgeyBfX3R5cGVuYW1lPzogJ1N0cmluZ0N1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICYgUGljazxTdHJpbmdDdXN0b21GaWVsZENvbmZpZywgJ3BhdHRlcm4nPlxuICAmIHsgb3B0aW9ucz86IE1heWJlPEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnU3RyaW5nRmllbGRPcHRpb24nIH1cbiAgICAmIFBpY2s8U3RyaW5nRmllbGRPcHRpb24sICd2YWx1ZSc+XG4gICAgJiB7IGxhYmVsPzogTWF5YmU8QXJyYXk8KFxuICAgICAgeyBfX3R5cGVuYW1lPzogJ0xvY2FsaXplZFN0cmluZycgfVxuICAgICAgJiBQaWNrPExvY2FsaXplZFN0cmluZywgJ2xhbmd1YWdlQ29kZScgfCAndmFsdWUnPlxuICAgICk+PiB9XG4gICk+PiB9XG4gICYgQ3VzdG9tRmllbGRDb25maWdfU3RyaW5nQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbik7XG5cbmV4cG9ydCB0eXBlIExvY2FsZVN0cmluZ0N1c3RvbUZpZWxkRnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdMb2NhbGVTdHJpbmdDdXN0b21GaWVsZENvbmZpZycgfVxuICAmIFBpY2s8TG9jYWxlU3RyaW5nQ3VzdG9tRmllbGRDb25maWcsICdwYXR0ZXJuJz5cbiAgJiBDdXN0b21GaWVsZENvbmZpZ19Mb2NhbGVTdHJpbmdDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuKTtcblxuZXhwb3J0IHR5cGUgQm9vbGVhbkN1c3RvbUZpZWxkRnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdCb29sZWFuQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgJiBDdXN0b21GaWVsZENvbmZpZ19Cb29sZWFuQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbik7XG5cbmV4cG9ydCB0eXBlIEludEN1c3RvbUZpZWxkRnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdJbnRDdXN0b21GaWVsZENvbmZpZycgfVxuICAmIHsgaW50TWluOiBJbnRDdXN0b21GaWVsZENvbmZpZ1snbWluJ10sIGludE1heDogSW50Q3VzdG9tRmllbGRDb25maWdbJ21heCddLCBpbnRTdGVwOiBJbnRDdXN0b21GaWVsZENvbmZpZ1snc3RlcCddIH1cbiAgJiBDdXN0b21GaWVsZENvbmZpZ19JbnRDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuKTtcblxuZXhwb3J0IHR5cGUgRmxvYXRDdXN0b21GaWVsZEZyYWdtZW50ID0gKFxuICB7IF9fdHlwZW5hbWU/OiAnRmxvYXRDdXN0b21GaWVsZENvbmZpZycgfVxuICAmIHsgZmxvYXRNaW46IEZsb2F0Q3VzdG9tRmllbGRDb25maWdbJ21pbiddLCBmbG9hdE1heDogRmxvYXRDdXN0b21GaWVsZENvbmZpZ1snbWF4J10sIGZsb2F0U3RlcDogRmxvYXRDdXN0b21GaWVsZENvbmZpZ1snc3RlcCddIH1cbiAgJiBDdXN0b21GaWVsZENvbmZpZ19GbG9hdEN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4pO1xuXG5leHBvcnQgdHlwZSBEYXRlVGltZUN1c3RvbUZpZWxkRnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdEYXRlVGltZUN1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICYgeyBkYXRldGltZU1pbjogRGF0ZVRpbWVDdXN0b21GaWVsZENvbmZpZ1snbWluJ10sIGRhdGV0aW1lTWF4OiBEYXRlVGltZUN1c3RvbUZpZWxkQ29uZmlnWydtYXgnXSwgZGF0ZXRpbWVTdGVwOiBEYXRlVGltZUN1c3RvbUZpZWxkQ29uZmlnWydzdGVwJ10gfVxuICAmIEN1c3RvbUZpZWxkQ29uZmlnX0RhdGVUaW1lQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbik7XG5cbmV4cG9ydCB0eXBlIFJlbGF0aW9uQ3VzdG9tRmllbGRGcmFnbWVudCA9IChcbiAgeyBfX3R5cGVuYW1lPzogJ1JlbGF0aW9uQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgJiBQaWNrPFJlbGF0aW9uQ3VzdG9tRmllbGRDb25maWcsICdlbnRpdHknIHwgJ3NjYWxhckZpZWxkcyc+XG4gICYgQ3VzdG9tRmllbGRDb25maWdfUmVsYXRpb25DdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuKTtcblxudHlwZSBDdXN0b21GaWVsZHNfU3RyaW5nQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdTdHJpbmdDdXN0b21GaWVsZENvbmZpZycgfVxuICAmIFN0cmluZ0N1c3RvbUZpZWxkRnJhZ21lbnRcbik7XG5cbnR5cGUgQ3VzdG9tRmllbGRzX0xvY2FsZVN0cmluZ0N1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50ID0gKFxuICB7IF9fdHlwZW5hbWU/OiAnTG9jYWxlU3RyaW5nQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgJiBMb2NhbGVTdHJpbmdDdXN0b21GaWVsZEZyYWdtZW50XG4pO1xuXG50eXBlIEN1c3RvbUZpZWxkc19JbnRDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudCA9IChcbiAgeyBfX3R5cGVuYW1lPzogJ0ludEN1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICYgSW50Q3VzdG9tRmllbGRGcmFnbWVudFxuKTtcblxudHlwZSBDdXN0b21GaWVsZHNfRmxvYXRDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudCA9IChcbiAgeyBfX3R5cGVuYW1lPzogJ0Zsb2F0Q3VzdG9tRmllbGRDb25maWcnIH1cbiAgJiBGbG9hdEN1c3RvbUZpZWxkRnJhZ21lbnRcbik7XG5cbnR5cGUgQ3VzdG9tRmllbGRzX0Jvb2xlYW5DdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudCA9IChcbiAgeyBfX3R5cGVuYW1lPzogJ0Jvb2xlYW5DdXN0b21GaWVsZENvbmZpZycgfVxuICAmIEJvb2xlYW5DdXN0b21GaWVsZEZyYWdtZW50XG4pO1xuXG50eXBlIEN1c3RvbUZpZWxkc19EYXRlVGltZUN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50ID0gKFxuICB7IF9fdHlwZW5hbWU/OiAnRGF0ZVRpbWVDdXN0b21GaWVsZENvbmZpZycgfVxuICAmIERhdGVUaW1lQ3VzdG9tRmllbGRGcmFnbWVudFxuKTtcblxudHlwZSBDdXN0b21GaWVsZHNfUmVsYXRpb25DdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudCA9IChcbiAgeyBfX3R5cGVuYW1lPzogJ1JlbGF0aW9uQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgJiBSZWxhdGlvbkN1c3RvbUZpZWxkRnJhZ21lbnRcbik7XG5cbmV4cG9ydCB0eXBlIEN1c3RvbUZpZWxkc0ZyYWdtZW50ID0gQ3VzdG9tRmllbGRzX1N0cmluZ0N1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50IHwgQ3VzdG9tRmllbGRzX0xvY2FsZVN0cmluZ0N1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50IHwgQ3VzdG9tRmllbGRzX0ludEN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50IHwgQ3VzdG9tRmllbGRzX0Zsb2F0Q3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnQgfCBDdXN0b21GaWVsZHNfQm9vbGVhbkN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50IHwgQ3VzdG9tRmllbGRzX0RhdGVUaW1lQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnQgfCBDdXN0b21GaWVsZHNfUmVsYXRpb25DdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudDtcblxuZXhwb3J0IHR5cGUgR2V0U2VydmVyQ29uZmlnUXVlcnlWYXJpYWJsZXMgPSBFeGFjdDx7IFtrZXk6IHN0cmluZ106IG5ldmVyOyB9PjtcblxuXG5leHBvcnQgdHlwZSBHZXRTZXJ2ZXJDb25maWdRdWVyeSA9IHsgZ2xvYmFsU2V0dGluZ3M6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnR2xvYmFsU2V0dGluZ3MnIH1cbiAgICAmIFBpY2s8R2xvYmFsU2V0dGluZ3MsICdpZCc+XG4gICAgJiB7IHNlcnZlckNvbmZpZzogKFxuICAgICAgeyBfX3R5cGVuYW1lPzogJ1NlcnZlckNvbmZpZycgfVxuICAgICAgJiBQaWNrPFNlcnZlckNvbmZpZywgJ3Blcm1pdHRlZEFzc2V0VHlwZXMnPlxuICAgICAgJiB7IG9yZGVyUHJvY2VzczogQXJyYXk8KFxuICAgICAgICB7IF9fdHlwZW5hbWU/OiAnT3JkZXJQcm9jZXNzU3RhdGUnIH1cbiAgICAgICAgJiBQaWNrPE9yZGVyUHJvY2Vzc1N0YXRlLCAnbmFtZScgfCAndG8nPlxuICAgICAgKT4sIHBlcm1pc3Npb25zOiBBcnJheTwoXG4gICAgICAgIHsgX190eXBlbmFtZT86ICdQZXJtaXNzaW9uRGVmaW5pdGlvbicgfVxuICAgICAgICAmIFBpY2s8UGVybWlzc2lvbkRlZmluaXRpb24sICduYW1lJyB8ICdkZXNjcmlwdGlvbicgfCAnYXNzaWduYWJsZSc+XG4gICAgICApPiwgY3VzdG9tRmllbGRDb25maWc6IChcbiAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0N1c3RvbUZpZWxkcycgfVxuICAgICAgICAmIHsgQWRkcmVzczogQXJyYXk8KFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdTdHJpbmdDdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX1N0cmluZ0N1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0xvY2FsZVN0cmluZ0N1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfTG9jYWxlU3RyaW5nQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnSW50Q3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19JbnRDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApIHwgKFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdGbG9hdEN1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfRmxvYXRDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApIHwgKFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdCb29sZWFuQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19Cb29sZWFuQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnRGF0ZVRpbWVDdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX0RhdGVUaW1lQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnUmVsYXRpb25DdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX1JlbGF0aW9uQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKT4sIEFkbWluaXN0cmF0b3I6IEFycmF5PChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnU3RyaW5nQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19TdHJpbmdDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApIHwgKFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdMb2NhbGVTdHJpbmdDdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX0xvY2FsZVN0cmluZ0N1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0ludEN1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfSW50Q3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnRmxvYXRDdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX0Zsb2F0Q3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnQm9vbGVhbkN1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfQm9vbGVhbkN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0RhdGVUaW1lQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19EYXRlVGltZUN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ1JlbGF0aW9uQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19SZWxhdGlvbkN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICk+LCBBc3NldDogQXJyYXk8KFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdTdHJpbmdDdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX1N0cmluZ0N1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0xvY2FsZVN0cmluZ0N1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfTG9jYWxlU3RyaW5nQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnSW50Q3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19JbnRDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApIHwgKFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdGbG9hdEN1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfRmxvYXRDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApIHwgKFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdCb29sZWFuQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19Cb29sZWFuQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnRGF0ZVRpbWVDdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX0RhdGVUaW1lQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnUmVsYXRpb25DdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX1JlbGF0aW9uQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKT4sIENoYW5uZWw6IEFycmF5PChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnU3RyaW5nQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19TdHJpbmdDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApIHwgKFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdMb2NhbGVTdHJpbmdDdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX0xvY2FsZVN0cmluZ0N1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0ludEN1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfSW50Q3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnRmxvYXRDdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX0Zsb2F0Q3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnQm9vbGVhbkN1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfQm9vbGVhbkN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0RhdGVUaW1lQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19EYXRlVGltZUN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ1JlbGF0aW9uQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19SZWxhdGlvbkN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICk+LCBDb2xsZWN0aW9uOiBBcnJheTwoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ1N0cmluZ0N1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfU3RyaW5nQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnTG9jYWxlU3RyaW5nQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19Mb2NhbGVTdHJpbmdDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApIHwgKFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdJbnRDdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX0ludEN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0Zsb2F0Q3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19GbG9hdEN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0Jvb2xlYW5DdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX0Jvb2xlYW5DdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApIHwgKFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdEYXRlVGltZUN1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfRGF0ZVRpbWVDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApIHwgKFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdSZWxhdGlvbkN1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfUmVsYXRpb25DdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApPiwgQ3VzdG9tZXI6IEFycmF5PChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnU3RyaW5nQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19TdHJpbmdDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApIHwgKFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdMb2NhbGVTdHJpbmdDdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX0xvY2FsZVN0cmluZ0N1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0ludEN1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfSW50Q3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnRmxvYXRDdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX0Zsb2F0Q3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnQm9vbGVhbkN1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfQm9vbGVhbkN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0RhdGVUaW1lQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19EYXRlVGltZUN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ1JlbGF0aW9uQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19SZWxhdGlvbkN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICk+LCBGYWNldDogQXJyYXk8KFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdTdHJpbmdDdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX1N0cmluZ0N1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0xvY2FsZVN0cmluZ0N1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfTG9jYWxlU3RyaW5nQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnSW50Q3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19JbnRDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApIHwgKFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdGbG9hdEN1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfRmxvYXRDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApIHwgKFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdCb29sZWFuQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19Cb29sZWFuQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnRGF0ZVRpbWVDdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX0RhdGVUaW1lQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnUmVsYXRpb25DdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX1JlbGF0aW9uQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKT4sIEZhY2V0VmFsdWU6IEFycmF5PChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnU3RyaW5nQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19TdHJpbmdDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApIHwgKFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdMb2NhbGVTdHJpbmdDdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX0xvY2FsZVN0cmluZ0N1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0ludEN1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfSW50Q3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnRmxvYXRDdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX0Zsb2F0Q3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnQm9vbGVhbkN1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfQm9vbGVhbkN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0RhdGVUaW1lQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19EYXRlVGltZUN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ1JlbGF0aW9uQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19SZWxhdGlvbkN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICk+LCBGdWxmaWxsbWVudDogQXJyYXk8KFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdTdHJpbmdDdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX1N0cmluZ0N1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0xvY2FsZVN0cmluZ0N1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfTG9jYWxlU3RyaW5nQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnSW50Q3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19JbnRDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApIHwgKFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdGbG9hdEN1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfRmxvYXRDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApIHwgKFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdCb29sZWFuQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19Cb29sZWFuQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnRGF0ZVRpbWVDdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX0RhdGVUaW1lQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnUmVsYXRpb25DdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX1JlbGF0aW9uQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKT4sIEdsb2JhbFNldHRpbmdzOiBBcnJheTwoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ1N0cmluZ0N1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfU3RyaW5nQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnTG9jYWxlU3RyaW5nQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19Mb2NhbGVTdHJpbmdDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApIHwgKFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdJbnRDdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX0ludEN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0Zsb2F0Q3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19GbG9hdEN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0Jvb2xlYW5DdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX0Jvb2xlYW5DdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApIHwgKFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdEYXRlVGltZUN1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfRGF0ZVRpbWVDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApIHwgKFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdSZWxhdGlvbkN1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfUmVsYXRpb25DdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApPiwgT3JkZXI6IEFycmF5PChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnU3RyaW5nQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19TdHJpbmdDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApIHwgKFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdMb2NhbGVTdHJpbmdDdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX0xvY2FsZVN0cmluZ0N1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0ludEN1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfSW50Q3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnRmxvYXRDdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX0Zsb2F0Q3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnQm9vbGVhbkN1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfQm9vbGVhbkN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0RhdGVUaW1lQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19EYXRlVGltZUN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ1JlbGF0aW9uQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19SZWxhdGlvbkN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICk+LCBPcmRlckxpbmU6IEFycmF5PChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnU3RyaW5nQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19TdHJpbmdDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApIHwgKFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdMb2NhbGVTdHJpbmdDdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX0xvY2FsZVN0cmluZ0N1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0ludEN1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfSW50Q3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnRmxvYXRDdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX0Zsb2F0Q3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnQm9vbGVhbkN1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfQm9vbGVhbkN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0RhdGVUaW1lQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19EYXRlVGltZUN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ1JlbGF0aW9uQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19SZWxhdGlvbkN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICk+LCBQcm9kdWN0OiBBcnJheTwoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ1N0cmluZ0N1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfU3RyaW5nQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnTG9jYWxlU3RyaW5nQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19Mb2NhbGVTdHJpbmdDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApIHwgKFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdJbnRDdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX0ludEN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0Zsb2F0Q3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19GbG9hdEN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0Jvb2xlYW5DdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX0Jvb2xlYW5DdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApIHwgKFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdEYXRlVGltZUN1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfRGF0ZVRpbWVDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApIHwgKFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdSZWxhdGlvbkN1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfUmVsYXRpb25DdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApPiwgUHJvZHVjdE9wdGlvbjogQXJyYXk8KFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdTdHJpbmdDdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX1N0cmluZ0N1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0xvY2FsZVN0cmluZ0N1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfTG9jYWxlU3RyaW5nQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnSW50Q3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19JbnRDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApIHwgKFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdGbG9hdEN1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfRmxvYXRDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApIHwgKFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdCb29sZWFuQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19Cb29sZWFuQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnRGF0ZVRpbWVDdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX0RhdGVUaW1lQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnUmVsYXRpb25DdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX1JlbGF0aW9uQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKT4sIFByb2R1Y3RPcHRpb25Hcm91cDogQXJyYXk8KFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdTdHJpbmdDdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX1N0cmluZ0N1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0xvY2FsZVN0cmluZ0N1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfTG9jYWxlU3RyaW5nQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnSW50Q3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19JbnRDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApIHwgKFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdGbG9hdEN1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfRmxvYXRDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApIHwgKFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdCb29sZWFuQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19Cb29sZWFuQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnRGF0ZVRpbWVDdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX0RhdGVUaW1lQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnUmVsYXRpb25DdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX1JlbGF0aW9uQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKT4sIFByb2R1Y3RWYXJpYW50OiBBcnJheTwoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ1N0cmluZ0N1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfU3RyaW5nQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnTG9jYWxlU3RyaW5nQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19Mb2NhbGVTdHJpbmdDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApIHwgKFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdJbnRDdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX0ludEN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0Zsb2F0Q3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19GbG9hdEN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0Jvb2xlYW5DdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX0Jvb2xlYW5DdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApIHwgKFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdEYXRlVGltZUN1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfRGF0ZVRpbWVDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApIHwgKFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdSZWxhdGlvbkN1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfUmVsYXRpb25DdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApPiwgU2hpcHBpbmdNZXRob2Q6IEFycmF5PChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnU3RyaW5nQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19TdHJpbmdDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApIHwgKFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdMb2NhbGVTdHJpbmdDdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX0xvY2FsZVN0cmluZ0N1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0ludEN1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfSW50Q3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnRmxvYXRDdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX0Zsb2F0Q3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnQm9vbGVhbkN1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfQm9vbGVhbkN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0RhdGVUaW1lQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19EYXRlVGltZUN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ1JlbGF0aW9uQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19SZWxhdGlvbkN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICk+LCBVc2VyOiBBcnJheTwoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ1N0cmluZ0N1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfU3RyaW5nQ3VzdG9tRmllbGRDb25maWdfRnJhZ21lbnRcbiAgICAgICAgKSB8IChcbiAgICAgICAgICB7IF9fdHlwZW5hbWU/OiAnTG9jYWxlU3RyaW5nQ3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19Mb2NhbGVTdHJpbmdDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApIHwgKFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdJbnRDdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX0ludEN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0Zsb2F0Q3VzdG9tRmllbGRDb25maWcnIH1cbiAgICAgICAgICAmIEN1c3RvbUZpZWxkc19GbG9hdEN1c3RvbUZpZWxkQ29uZmlnX0ZyYWdtZW50XG4gICAgICAgICkgfCAoXG4gICAgICAgICAgeyBfX3R5cGVuYW1lPzogJ0Jvb2xlYW5DdXN0b21GaWVsZENvbmZpZycgfVxuICAgICAgICAgICYgQ3VzdG9tRmllbGRzX0Jvb2xlYW5DdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApIHwgKFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdEYXRlVGltZUN1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfRGF0ZVRpbWVDdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApIHwgKFxuICAgICAgICAgIHsgX190eXBlbmFtZT86ICdSZWxhdGlvbkN1c3RvbUZpZWxkQ29uZmlnJyB9XG4gICAgICAgICAgJiBDdXN0b21GaWVsZHNfUmVsYXRpb25DdXN0b21GaWVsZENvbmZpZ19GcmFnbWVudFxuICAgICAgICApPiB9XG4gICAgICApIH1cbiAgICApIH1cbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBKb2JJbmZvRnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdKb2InIH1cbiAgJiBQaWNrPEpvYiwgJ2lkJyB8ICdjcmVhdGVkQXQnIHwgJ3N0YXJ0ZWRBdCcgfCAnc2V0dGxlZEF0JyB8ICdxdWV1ZU5hbWUnIHwgJ3N0YXRlJyB8ICdpc1NldHRsZWQnIHwgJ3Byb2dyZXNzJyB8ICdkdXJhdGlvbicgfCAnZGF0YScgfCAncmVzdWx0JyB8ICdlcnJvcic+XG4pO1xuXG5leHBvcnQgdHlwZSBHZXRKb2JJbmZvUXVlcnlWYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlkOiBTY2FsYXJzWydJRCddO1xufT47XG5cblxuZXhwb3J0IHR5cGUgR2V0Sm9iSW5mb1F1ZXJ5ID0geyBqb2I/OiBNYXliZTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0pvYicgfVxuICAgICYgSm9iSW5mb0ZyYWdtZW50XG4gICk+IH07XG5cbmV4cG9ydCB0eXBlIEdldEFsbEpvYnNRdWVyeVZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgb3B0aW9ucz86IE1heWJlPEpvYkxpc3RPcHRpb25zPjtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIEdldEFsbEpvYnNRdWVyeSA9IHsgam9iczogKFxuICAgIHsgX190eXBlbmFtZT86ICdKb2JMaXN0JyB9XG4gICAgJiBQaWNrPEpvYkxpc3QsICd0b3RhbEl0ZW1zJz5cbiAgICAmIHsgaXRlbXM6IEFycmF5PChcbiAgICAgIHsgX190eXBlbmFtZT86ICdKb2InIH1cbiAgICAgICYgSm9iSW5mb0ZyYWdtZW50XG4gICAgKT4gfVxuICApIH07XG5cbmV4cG9ydCB0eXBlIEdldEpvYnNCeUlkUXVlcnlWYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlkczogQXJyYXk8U2NhbGFyc1snSUQnXT4gfCBTY2FsYXJzWydJRCddO1xufT47XG5cblxuZXhwb3J0IHR5cGUgR2V0Sm9ic0J5SWRRdWVyeSA9IHsgam9ic0J5SWQ6IEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnSm9iJyB9XG4gICAgJiBKb2JJbmZvRnJhZ21lbnRcbiAgKT4gfTtcblxuZXhwb3J0IHR5cGUgR2V0Sm9iUXVldWVMaXN0UXVlcnlWYXJpYWJsZXMgPSBFeGFjdDx7IFtrZXk6IHN0cmluZ106IG5ldmVyOyB9PjtcblxuXG5leHBvcnQgdHlwZSBHZXRKb2JRdWV1ZUxpc3RRdWVyeSA9IHsgam9iUXVldWVzOiBBcnJheTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0pvYlF1ZXVlJyB9XG4gICAgJiBQaWNrPEpvYlF1ZXVlLCAnbmFtZScgfCAncnVubmluZyc+XG4gICk+IH07XG5cbmV4cG9ydCB0eXBlIENhbmNlbEpvYk11dGF0aW9uVmFyaWFibGVzID0gRXhhY3Q8e1xuICBpZDogU2NhbGFyc1snSUQnXTtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIENhbmNlbEpvYk11dGF0aW9uID0geyBjYW5jZWxKb2I6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnSm9iJyB9XG4gICAgJiBKb2JJbmZvRnJhZ21lbnRcbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBSZWluZGV4TXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7IFtrZXk6IHN0cmluZ106IG5ldmVyOyB9PjtcblxuXG5leHBvcnQgdHlwZSBSZWluZGV4TXV0YXRpb24gPSB7IHJlaW5kZXg6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnSm9iJyB9XG4gICAgJiBKb2JJbmZvRnJhZ21lbnRcbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBDb25maWd1cmFibGVPcGVyYXRpb25GcmFnbWVudCA9IChcbiAgeyBfX3R5cGVuYW1lPzogJ0NvbmZpZ3VyYWJsZU9wZXJhdGlvbicgfVxuICAmIFBpY2s8Q29uZmlndXJhYmxlT3BlcmF0aW9uLCAnY29kZSc+XG4gICYgeyBhcmdzOiBBcnJheTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0NvbmZpZ0FyZycgfVxuICAgICYgUGljazxDb25maWdBcmcsICduYW1lJyB8ICd2YWx1ZSc+XG4gICk+IH1cbik7XG5cbmV4cG9ydCB0eXBlIENvbmZpZ3VyYWJsZU9wZXJhdGlvbkRlZkZyYWdtZW50ID0gKFxuICB7IF9fdHlwZW5hbWU/OiAnQ29uZmlndXJhYmxlT3BlcmF0aW9uRGVmaW5pdGlvbicgfVxuICAmIFBpY2s8Q29uZmlndXJhYmxlT3BlcmF0aW9uRGVmaW5pdGlvbiwgJ2NvZGUnIHwgJ2Rlc2NyaXB0aW9uJz5cbiAgJiB7IGFyZ3M6IEFycmF5PChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQ29uZmlnQXJnRGVmaW5pdGlvbicgfVxuICAgICYgUGljazxDb25maWdBcmdEZWZpbml0aW9uLCAnbmFtZScgfCAndHlwZScgfCAncmVxdWlyZWQnIHwgJ2RlZmF1bHRWYWx1ZScgfCAnbGlzdCcgfCAndWknIHwgJ2xhYmVsJz5cbiAgKT4gfVxuKTtcblxudHlwZSBFcnJvclJlc3VsdF9NaW1lVHlwZUVycm9yX0ZyYWdtZW50ID0gKFxuICB7IF9fdHlwZW5hbWU/OiAnTWltZVR5cGVFcnJvcicgfVxuICAmIFBpY2s8TWltZVR5cGVFcnJvciwgJ2Vycm9yQ29kZScgfCAnbWVzc2FnZSc+XG4pO1xuXG50eXBlIEVycm9yUmVzdWx0X0xhbmd1YWdlTm90QXZhaWxhYmxlRXJyb3JfRnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdMYW5ndWFnZU5vdEF2YWlsYWJsZUVycm9yJyB9XG4gICYgUGljazxMYW5ndWFnZU5vdEF2YWlsYWJsZUVycm9yLCAnZXJyb3JDb2RlJyB8ICdtZXNzYWdlJz5cbik7XG5cbnR5cGUgRXJyb3JSZXN1bHRfQ2hhbm5lbERlZmF1bHRMYW5ndWFnZUVycm9yX0ZyYWdtZW50ID0gKFxuICB7IF9fdHlwZW5hbWU/OiAnQ2hhbm5lbERlZmF1bHRMYW5ndWFnZUVycm9yJyB9XG4gICYgUGljazxDaGFubmVsRGVmYXVsdExhbmd1YWdlRXJyb3IsICdlcnJvckNvZGUnIHwgJ21lc3NhZ2UnPlxuKTtcblxudHlwZSBFcnJvclJlc3VsdF9TZXR0bGVQYXltZW50RXJyb3JfRnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdTZXR0bGVQYXltZW50RXJyb3InIH1cbiAgJiBQaWNrPFNldHRsZVBheW1lbnRFcnJvciwgJ2Vycm9yQ29kZScgfCAnbWVzc2FnZSc+XG4pO1xuXG50eXBlIEVycm9yUmVzdWx0X0VtcHR5T3JkZXJMaW5lU2VsZWN0aW9uRXJyb3JfRnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdFbXB0eU9yZGVyTGluZVNlbGVjdGlvbkVycm9yJyB9XG4gICYgUGljazxFbXB0eU9yZGVyTGluZVNlbGVjdGlvbkVycm9yLCAnZXJyb3JDb2RlJyB8ICdtZXNzYWdlJz5cbik7XG5cbnR5cGUgRXJyb3JSZXN1bHRfSXRlbXNBbHJlYWR5RnVsZmlsbGVkRXJyb3JfRnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdJdGVtc0FscmVhZHlGdWxmaWxsZWRFcnJvcicgfVxuICAmIFBpY2s8SXRlbXNBbHJlYWR5RnVsZmlsbGVkRXJyb3IsICdlcnJvckNvZGUnIHwgJ21lc3NhZ2UnPlxuKTtcblxudHlwZSBFcnJvclJlc3VsdF9JbnZhbGlkRnVsZmlsbG1lbnRIYW5kbGVyRXJyb3JfRnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdJbnZhbGlkRnVsZmlsbG1lbnRIYW5kbGVyRXJyb3InIH1cbiAgJiBQaWNrPEludmFsaWRGdWxmaWxsbWVudEhhbmRsZXJFcnJvciwgJ2Vycm9yQ29kZScgfCAnbWVzc2FnZSc+XG4pO1xuXG50eXBlIEVycm9yUmVzdWx0X0NyZWF0ZUZ1bGZpbGxtZW50RXJyb3JfRnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdDcmVhdGVGdWxmaWxsbWVudEVycm9yJyB9XG4gICYgUGljazxDcmVhdGVGdWxmaWxsbWVudEVycm9yLCAnZXJyb3JDb2RlJyB8ICdtZXNzYWdlJz5cbik7XG5cbnR5cGUgRXJyb3JSZXN1bHRfSW5zdWZmaWNpZW50U3RvY2tPbkhhbmRFcnJvcl9GcmFnbWVudCA9IChcbiAgeyBfX3R5cGVuYW1lPzogJ0luc3VmZmljaWVudFN0b2NrT25IYW5kRXJyb3InIH1cbiAgJiBQaWNrPEluc3VmZmljaWVudFN0b2NrT25IYW5kRXJyb3IsICdlcnJvckNvZGUnIHwgJ21lc3NhZ2UnPlxuKTtcblxudHlwZSBFcnJvclJlc3VsdF9NdWx0aXBsZU9yZGVyRXJyb3JfRnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdNdWx0aXBsZU9yZGVyRXJyb3InIH1cbiAgJiBQaWNrPE11bHRpcGxlT3JkZXJFcnJvciwgJ2Vycm9yQ29kZScgfCAnbWVzc2FnZSc+XG4pO1xuXG50eXBlIEVycm9yUmVzdWx0X0NhbmNlbEFjdGl2ZU9yZGVyRXJyb3JfRnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdDYW5jZWxBY3RpdmVPcmRlckVycm9yJyB9XG4gICYgUGljazxDYW5jZWxBY3RpdmVPcmRlckVycm9yLCAnZXJyb3JDb2RlJyB8ICdtZXNzYWdlJz5cbik7XG5cbnR5cGUgRXJyb3JSZXN1bHRfUGF5bWVudE9yZGVyTWlzbWF0Y2hFcnJvcl9GcmFnbWVudCA9IChcbiAgeyBfX3R5cGVuYW1lPzogJ1BheW1lbnRPcmRlck1pc21hdGNoRXJyb3InIH1cbiAgJiBQaWNrPFBheW1lbnRPcmRlck1pc21hdGNoRXJyb3IsICdlcnJvckNvZGUnIHwgJ21lc3NhZ2UnPlxuKTtcblxudHlwZSBFcnJvclJlc3VsdF9SZWZ1bmRPcmRlclN0YXRlRXJyb3JfRnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdSZWZ1bmRPcmRlclN0YXRlRXJyb3InIH1cbiAgJiBQaWNrPFJlZnVuZE9yZGVyU3RhdGVFcnJvciwgJ2Vycm9yQ29kZScgfCAnbWVzc2FnZSc+XG4pO1xuXG50eXBlIEVycm9yUmVzdWx0X05vdGhpbmdUb1JlZnVuZEVycm9yX0ZyYWdtZW50ID0gKFxuICB7IF9fdHlwZW5hbWU/OiAnTm90aGluZ1RvUmVmdW5kRXJyb3InIH1cbiAgJiBQaWNrPE5vdGhpbmdUb1JlZnVuZEVycm9yLCAnZXJyb3JDb2RlJyB8ICdtZXNzYWdlJz5cbik7XG5cbnR5cGUgRXJyb3JSZXN1bHRfQWxyZWFkeVJlZnVuZGVkRXJyb3JfRnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdBbHJlYWR5UmVmdW5kZWRFcnJvcicgfVxuICAmIFBpY2s8QWxyZWFkeVJlZnVuZGVkRXJyb3IsICdlcnJvckNvZGUnIHwgJ21lc3NhZ2UnPlxuKTtcblxudHlwZSBFcnJvclJlc3VsdF9RdWFudGl0eVRvb0dyZWF0RXJyb3JfRnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdRdWFudGl0eVRvb0dyZWF0RXJyb3InIH1cbiAgJiBQaWNrPFF1YW50aXR5VG9vR3JlYXRFcnJvciwgJ2Vycm9yQ29kZScgfCAnbWVzc2FnZSc+XG4pO1xuXG50eXBlIEVycm9yUmVzdWx0X1JlZnVuZFN0YXRlVHJhbnNpdGlvbkVycm9yX0ZyYWdtZW50ID0gKFxuICB7IF9fdHlwZW5hbWU/OiAnUmVmdW5kU3RhdGVUcmFuc2l0aW9uRXJyb3InIH1cbiAgJiBQaWNrPFJlZnVuZFN0YXRlVHJhbnNpdGlvbkVycm9yLCAnZXJyb3JDb2RlJyB8ICdtZXNzYWdlJz5cbik7XG5cbnR5cGUgRXJyb3JSZXN1bHRfUGF5bWVudFN0YXRlVHJhbnNpdGlvbkVycm9yX0ZyYWdtZW50ID0gKFxuICB7IF9fdHlwZW5hbWU/OiAnUGF5bWVudFN0YXRlVHJhbnNpdGlvbkVycm9yJyB9XG4gICYgUGljazxQYXltZW50U3RhdGVUcmFuc2l0aW9uRXJyb3IsICdlcnJvckNvZGUnIHwgJ21lc3NhZ2UnPlxuKTtcblxudHlwZSBFcnJvclJlc3VsdF9GdWxmaWxsbWVudFN0YXRlVHJhbnNpdGlvbkVycm9yX0ZyYWdtZW50ID0gKFxuICB7IF9fdHlwZW5hbWU/OiAnRnVsZmlsbG1lbnRTdGF0ZVRyYW5zaXRpb25FcnJvcicgfVxuICAmIFBpY2s8RnVsZmlsbG1lbnRTdGF0ZVRyYW5zaXRpb25FcnJvciwgJ2Vycm9yQ29kZScgfCAnbWVzc2FnZSc+XG4pO1xuXG50eXBlIEVycm9yUmVzdWx0X09yZGVyTW9kaWZpY2F0aW9uU3RhdGVFcnJvcl9GcmFnbWVudCA9IChcbiAgeyBfX3R5cGVuYW1lPzogJ09yZGVyTW9kaWZpY2F0aW9uU3RhdGVFcnJvcicgfVxuICAmIFBpY2s8T3JkZXJNb2RpZmljYXRpb25TdGF0ZUVycm9yLCAnZXJyb3JDb2RlJyB8ICdtZXNzYWdlJz5cbik7XG5cbnR5cGUgRXJyb3JSZXN1bHRfTm9DaGFuZ2VzU3BlY2lmaWVkRXJyb3JfRnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdOb0NoYW5nZXNTcGVjaWZpZWRFcnJvcicgfVxuICAmIFBpY2s8Tm9DaGFuZ2VzU3BlY2lmaWVkRXJyb3IsICdlcnJvckNvZGUnIHwgJ21lc3NhZ2UnPlxuKTtcblxudHlwZSBFcnJvclJlc3VsdF9QYXltZW50TWV0aG9kTWlzc2luZ0Vycm9yX0ZyYWdtZW50ID0gKFxuICB7IF9fdHlwZW5hbWU/OiAnUGF5bWVudE1ldGhvZE1pc3NpbmdFcnJvcicgfVxuICAmIFBpY2s8UGF5bWVudE1ldGhvZE1pc3NpbmdFcnJvciwgJ2Vycm9yQ29kZScgfCAnbWVzc2FnZSc+XG4pO1xuXG50eXBlIEVycm9yUmVzdWx0X1JlZnVuZFBheW1lbnRJZE1pc3NpbmdFcnJvcl9GcmFnbWVudCA9IChcbiAgeyBfX3R5cGVuYW1lPzogJ1JlZnVuZFBheW1lbnRJZE1pc3NpbmdFcnJvcicgfVxuICAmIFBpY2s8UmVmdW5kUGF5bWVudElkTWlzc2luZ0Vycm9yLCAnZXJyb3JDb2RlJyB8ICdtZXNzYWdlJz5cbik7XG5cbnR5cGUgRXJyb3JSZXN1bHRfTWFudWFsUGF5bWVudFN0YXRlRXJyb3JfRnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdNYW51YWxQYXltZW50U3RhdGVFcnJvcicgfVxuICAmIFBpY2s8TWFudWFsUGF5bWVudFN0YXRlRXJyb3IsICdlcnJvckNvZGUnIHwgJ21lc3NhZ2UnPlxuKTtcblxudHlwZSBFcnJvclJlc3VsdF9Qcm9kdWN0T3B0aW9uSW5Vc2VFcnJvcl9GcmFnbWVudCA9IChcbiAgeyBfX3R5cGVuYW1lPzogJ1Byb2R1Y3RPcHRpb25JblVzZUVycm9yJyB9XG4gICYgUGljazxQcm9kdWN0T3B0aW9uSW5Vc2VFcnJvciwgJ2Vycm9yQ29kZScgfCAnbWVzc2FnZSc+XG4pO1xuXG50eXBlIEVycm9yUmVzdWx0X01pc3NpbmdDb25kaXRpb25zRXJyb3JfRnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdNaXNzaW5nQ29uZGl0aW9uc0Vycm9yJyB9XG4gICYgUGljazxNaXNzaW5nQ29uZGl0aW9uc0Vycm9yLCAnZXJyb3JDb2RlJyB8ICdtZXNzYWdlJz5cbik7XG5cbnR5cGUgRXJyb3JSZXN1bHRfTmF0aXZlQXV0aFN0cmF0ZWd5RXJyb3JfRnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdOYXRpdmVBdXRoU3RyYXRlZ3lFcnJvcicgfVxuICAmIFBpY2s8TmF0aXZlQXV0aFN0cmF0ZWd5RXJyb3IsICdlcnJvckNvZGUnIHwgJ21lc3NhZ2UnPlxuKTtcblxudHlwZSBFcnJvclJlc3VsdF9JbnZhbGlkQ3JlZGVudGlhbHNFcnJvcl9GcmFnbWVudCA9IChcbiAgeyBfX3R5cGVuYW1lPzogJ0ludmFsaWRDcmVkZW50aWFsc0Vycm9yJyB9XG4gICYgUGljazxJbnZhbGlkQ3JlZGVudGlhbHNFcnJvciwgJ2Vycm9yQ29kZScgfCAnbWVzc2FnZSc+XG4pO1xuXG50eXBlIEVycm9yUmVzdWx0X09yZGVyU3RhdGVUcmFuc2l0aW9uRXJyb3JfRnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdPcmRlclN0YXRlVHJhbnNpdGlvbkVycm9yJyB9XG4gICYgUGljazxPcmRlclN0YXRlVHJhbnNpdGlvbkVycm9yLCAnZXJyb3JDb2RlJyB8ICdtZXNzYWdlJz5cbik7XG5cbnR5cGUgRXJyb3JSZXN1bHRfRW1haWxBZGRyZXNzQ29uZmxpY3RFcnJvcl9GcmFnbWVudCA9IChcbiAgeyBfX3R5cGVuYW1lPzogJ0VtYWlsQWRkcmVzc0NvbmZsaWN0RXJyb3InIH1cbiAgJiBQaWNrPEVtYWlsQWRkcmVzc0NvbmZsaWN0RXJyb3IsICdlcnJvckNvZGUnIHwgJ21lc3NhZ2UnPlxuKTtcblxudHlwZSBFcnJvclJlc3VsdF9PcmRlckxpbWl0RXJyb3JfRnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdPcmRlckxpbWl0RXJyb3InIH1cbiAgJiBQaWNrPE9yZGVyTGltaXRFcnJvciwgJ2Vycm9yQ29kZScgfCAnbWVzc2FnZSc+XG4pO1xuXG50eXBlIEVycm9yUmVzdWx0X05lZ2F0aXZlUXVhbnRpdHlFcnJvcl9GcmFnbWVudCA9IChcbiAgeyBfX3R5cGVuYW1lPzogJ05lZ2F0aXZlUXVhbnRpdHlFcnJvcicgfVxuICAmIFBpY2s8TmVnYXRpdmVRdWFudGl0eUVycm9yLCAnZXJyb3JDb2RlJyB8ICdtZXNzYWdlJz5cbik7XG5cbnR5cGUgRXJyb3JSZXN1bHRfSW5zdWZmaWNpZW50U3RvY2tFcnJvcl9GcmFnbWVudCA9IChcbiAgeyBfX3R5cGVuYW1lPzogJ0luc3VmZmljaWVudFN0b2NrRXJyb3InIH1cbiAgJiBQaWNrPEluc3VmZmljaWVudFN0b2NrRXJyb3IsICdlcnJvckNvZGUnIHwgJ21lc3NhZ2UnPlxuKTtcblxuZXhwb3J0IHR5cGUgRXJyb3JSZXN1bHRGcmFnbWVudCA9IEVycm9yUmVzdWx0X01pbWVUeXBlRXJyb3JfRnJhZ21lbnQgfCBFcnJvclJlc3VsdF9MYW5ndWFnZU5vdEF2YWlsYWJsZUVycm9yX0ZyYWdtZW50IHwgRXJyb3JSZXN1bHRfQ2hhbm5lbERlZmF1bHRMYW5ndWFnZUVycm9yX0ZyYWdtZW50IHwgRXJyb3JSZXN1bHRfU2V0dGxlUGF5bWVudEVycm9yX0ZyYWdtZW50IHwgRXJyb3JSZXN1bHRfRW1wdHlPcmRlckxpbmVTZWxlY3Rpb25FcnJvcl9GcmFnbWVudCB8IEVycm9yUmVzdWx0X0l0ZW1zQWxyZWFkeUZ1bGZpbGxlZEVycm9yX0ZyYWdtZW50IHwgRXJyb3JSZXN1bHRfSW52YWxpZEZ1bGZpbGxtZW50SGFuZGxlckVycm9yX0ZyYWdtZW50IHwgRXJyb3JSZXN1bHRfQ3JlYXRlRnVsZmlsbG1lbnRFcnJvcl9GcmFnbWVudCB8IEVycm9yUmVzdWx0X0luc3VmZmljaWVudFN0b2NrT25IYW5kRXJyb3JfRnJhZ21lbnQgfCBFcnJvclJlc3VsdF9NdWx0aXBsZU9yZGVyRXJyb3JfRnJhZ21lbnQgfCBFcnJvclJlc3VsdF9DYW5jZWxBY3RpdmVPcmRlckVycm9yX0ZyYWdtZW50IHwgRXJyb3JSZXN1bHRfUGF5bWVudE9yZGVyTWlzbWF0Y2hFcnJvcl9GcmFnbWVudCB8IEVycm9yUmVzdWx0X1JlZnVuZE9yZGVyU3RhdGVFcnJvcl9GcmFnbWVudCB8IEVycm9yUmVzdWx0X05vdGhpbmdUb1JlZnVuZEVycm9yX0ZyYWdtZW50IHwgRXJyb3JSZXN1bHRfQWxyZWFkeVJlZnVuZGVkRXJyb3JfRnJhZ21lbnQgfCBFcnJvclJlc3VsdF9RdWFudGl0eVRvb0dyZWF0RXJyb3JfRnJhZ21lbnQgfCBFcnJvclJlc3VsdF9SZWZ1bmRTdGF0ZVRyYW5zaXRpb25FcnJvcl9GcmFnbWVudCB8IEVycm9yUmVzdWx0X1BheW1lbnRTdGF0ZVRyYW5zaXRpb25FcnJvcl9GcmFnbWVudCB8IEVycm9yUmVzdWx0X0Z1bGZpbGxtZW50U3RhdGVUcmFuc2l0aW9uRXJyb3JfRnJhZ21lbnQgfCBFcnJvclJlc3VsdF9PcmRlck1vZGlmaWNhdGlvblN0YXRlRXJyb3JfRnJhZ21lbnQgfCBFcnJvclJlc3VsdF9Ob0NoYW5nZXNTcGVjaWZpZWRFcnJvcl9GcmFnbWVudCB8IEVycm9yUmVzdWx0X1BheW1lbnRNZXRob2RNaXNzaW5nRXJyb3JfRnJhZ21lbnQgfCBFcnJvclJlc3VsdF9SZWZ1bmRQYXltZW50SWRNaXNzaW5nRXJyb3JfRnJhZ21lbnQgfCBFcnJvclJlc3VsdF9NYW51YWxQYXltZW50U3RhdGVFcnJvcl9GcmFnbWVudCB8IEVycm9yUmVzdWx0X1Byb2R1Y3RPcHRpb25JblVzZUVycm9yX0ZyYWdtZW50IHwgRXJyb3JSZXN1bHRfTWlzc2luZ0NvbmRpdGlvbnNFcnJvcl9GcmFnbWVudCB8IEVycm9yUmVzdWx0X05hdGl2ZUF1dGhTdHJhdGVneUVycm9yX0ZyYWdtZW50IHwgRXJyb3JSZXN1bHRfSW52YWxpZENyZWRlbnRpYWxzRXJyb3JfRnJhZ21lbnQgfCBFcnJvclJlc3VsdF9PcmRlclN0YXRlVHJhbnNpdGlvbkVycm9yX0ZyYWdtZW50IHwgRXJyb3JSZXN1bHRfRW1haWxBZGRyZXNzQ29uZmxpY3RFcnJvcl9GcmFnbWVudCB8IEVycm9yUmVzdWx0X09yZGVyTGltaXRFcnJvcl9GcmFnbWVudCB8IEVycm9yUmVzdWx0X05lZ2F0aXZlUXVhbnRpdHlFcnJvcl9GcmFnbWVudCB8IEVycm9yUmVzdWx0X0luc3VmZmljaWVudFN0b2NrRXJyb3JfRnJhZ21lbnQ7XG5cbmV4cG9ydCB0eXBlIFNoaXBwaW5nTWV0aG9kRnJhZ21lbnQgPSAoXG4gIHsgX190eXBlbmFtZT86ICdTaGlwcGluZ01ldGhvZCcgfVxuICAmIFBpY2s8U2hpcHBpbmdNZXRob2QsICdpZCcgfCAnY3JlYXRlZEF0JyB8ICd1cGRhdGVkQXQnIHwgJ2NvZGUnIHwgJ25hbWUnIHwgJ2Rlc2NyaXB0aW9uJyB8ICdmdWxmaWxsbWVudEhhbmRsZXJDb2RlJz5cbiAgJiB7IGNoZWNrZXI6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnQ29uZmlndXJhYmxlT3BlcmF0aW9uJyB9XG4gICAgJiBDb25maWd1cmFibGVPcGVyYXRpb25GcmFnbWVudFxuICApLCBjYWxjdWxhdG9yOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0NvbmZpZ3VyYWJsZU9wZXJhdGlvbicgfVxuICAgICYgQ29uZmlndXJhYmxlT3BlcmF0aW9uRnJhZ21lbnRcbiAgKSwgdHJhbnNsYXRpb25zOiBBcnJheTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1NoaXBwaW5nTWV0aG9kVHJhbnNsYXRpb24nIH1cbiAgICAmIFBpY2s8U2hpcHBpbmdNZXRob2RUcmFuc2xhdGlvbiwgJ2lkJyB8ICdsYW5ndWFnZUNvZGUnIHwgJ25hbWUnIHwgJ2Rlc2NyaXB0aW9uJz5cbiAgKT4gfVxuKTtcblxuZXhwb3J0IHR5cGUgR2V0U2hpcHBpbmdNZXRob2RMaXN0UXVlcnlWYXJpYWJsZXMgPSBFeGFjdDx7XG4gIG9wdGlvbnM/OiBNYXliZTxTaGlwcGluZ01ldGhvZExpc3RPcHRpb25zPjtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIEdldFNoaXBwaW5nTWV0aG9kTGlzdFF1ZXJ5ID0geyBzaGlwcGluZ01ldGhvZHM6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnU2hpcHBpbmdNZXRob2RMaXN0JyB9XG4gICAgJiBQaWNrPFNoaXBwaW5nTWV0aG9kTGlzdCwgJ3RvdGFsSXRlbXMnPlxuICAgICYgeyBpdGVtczogQXJyYXk8KFxuICAgICAgeyBfX3R5cGVuYW1lPzogJ1NoaXBwaW5nTWV0aG9kJyB9XG4gICAgICAmIFNoaXBwaW5nTWV0aG9kRnJhZ21lbnRcbiAgICApPiB9XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgR2V0U2hpcHBpbmdNZXRob2RRdWVyeVZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG59PjtcblxuXG5leHBvcnQgdHlwZSBHZXRTaGlwcGluZ01ldGhvZFF1ZXJ5ID0geyBzaGlwcGluZ01ldGhvZD86IE1heWJlPChcbiAgICB7IF9fdHlwZW5hbWU/OiAnU2hpcHBpbmdNZXRob2QnIH1cbiAgICAmIFNoaXBwaW5nTWV0aG9kRnJhZ21lbnRcbiAgKT4gfTtcblxuZXhwb3J0IHR5cGUgR2V0U2hpcHBpbmdNZXRob2RPcGVyYXRpb25zUXVlcnlWYXJpYWJsZXMgPSBFeGFjdDx7IFtrZXk6IHN0cmluZ106IG5ldmVyOyB9PjtcblxuXG5leHBvcnQgdHlwZSBHZXRTaGlwcGluZ01ldGhvZE9wZXJhdGlvbnNRdWVyeSA9IHsgc2hpcHBpbmdFbGlnaWJpbGl0eUNoZWNrZXJzOiBBcnJheTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0NvbmZpZ3VyYWJsZU9wZXJhdGlvbkRlZmluaXRpb24nIH1cbiAgICAmIENvbmZpZ3VyYWJsZU9wZXJhdGlvbkRlZkZyYWdtZW50XG4gICk+LCBzaGlwcGluZ0NhbGN1bGF0b3JzOiBBcnJheTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0NvbmZpZ3VyYWJsZU9wZXJhdGlvbkRlZmluaXRpb24nIH1cbiAgICAmIENvbmZpZ3VyYWJsZU9wZXJhdGlvbkRlZkZyYWdtZW50XG4gICk+LCBmdWxmaWxsbWVudEhhbmRsZXJzOiBBcnJheTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ0NvbmZpZ3VyYWJsZU9wZXJhdGlvbkRlZmluaXRpb24nIH1cbiAgICAmIENvbmZpZ3VyYWJsZU9wZXJhdGlvbkRlZkZyYWdtZW50XG4gICk+IH07XG5cbmV4cG9ydCB0eXBlIENyZWF0ZVNoaXBwaW5nTWV0aG9kTXV0YXRpb25WYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGlucHV0OiBDcmVhdGVTaGlwcGluZ01ldGhvZElucHV0O1xufT47XG5cblxuZXhwb3J0IHR5cGUgQ3JlYXRlU2hpcHBpbmdNZXRob2RNdXRhdGlvbiA9IHsgY3JlYXRlU2hpcHBpbmdNZXRob2Q6IChcbiAgICB7IF9fdHlwZW5hbWU/OiAnU2hpcHBpbmdNZXRob2QnIH1cbiAgICAmIFNoaXBwaW5nTWV0aG9kRnJhZ21lbnRcbiAgKSB9O1xuXG5leHBvcnQgdHlwZSBVcGRhdGVTaGlwcGluZ01ldGhvZE11dGF0aW9uVmFyaWFibGVzID0gRXhhY3Q8e1xuICBpbnB1dDogVXBkYXRlU2hpcHBpbmdNZXRob2RJbnB1dDtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIFVwZGF0ZVNoaXBwaW5nTWV0aG9kTXV0YXRpb24gPSB7IHVwZGF0ZVNoaXBwaW5nTWV0aG9kOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1NoaXBwaW5nTWV0aG9kJyB9XG4gICAgJiBTaGlwcGluZ01ldGhvZEZyYWdtZW50XG4gICkgfTtcblxuZXhwb3J0IHR5cGUgRGVsZXRlU2hpcHBpbmdNZXRob2RNdXRhdGlvblZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ107XG59PjtcblxuXG5leHBvcnQgdHlwZSBEZWxldGVTaGlwcGluZ01ldGhvZE11dGF0aW9uID0geyBkZWxldGVTaGlwcGluZ01ldGhvZDogKFxuICAgIHsgX190eXBlbmFtZT86ICdEZWxldGlvblJlc3BvbnNlJyB9XG4gICAgJiBQaWNrPERlbGV0aW9uUmVzcG9uc2UsICdyZXN1bHQnIHwgJ21lc3NhZ2UnPlxuICApIH07XG5cbmV4cG9ydCB0eXBlIFRlc3RTaGlwcGluZ01ldGhvZFF1ZXJ5VmFyaWFibGVzID0gRXhhY3Q8e1xuICBpbnB1dDogVGVzdFNoaXBwaW5nTWV0aG9kSW5wdXQ7XG59PjtcblxuXG5leHBvcnQgdHlwZSBUZXN0U2hpcHBpbmdNZXRob2RRdWVyeSA9IHsgdGVzdFNoaXBwaW5nTWV0aG9kOiAoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1Rlc3RTaGlwcGluZ01ldGhvZFJlc3VsdCcgfVxuICAgICYgUGljazxUZXN0U2hpcHBpbmdNZXRob2RSZXN1bHQsICdlbGlnaWJsZSc+XG4gICAgJiB7IHF1b3RlPzogTWF5YmU8KFxuICAgICAgeyBfX3R5cGVuYW1lPzogJ1Rlc3RTaGlwcGluZ01ldGhvZFF1b3RlJyB9XG4gICAgICAmIFBpY2s8VGVzdFNoaXBwaW5nTWV0aG9kUXVvdGUsICdwcmljZScgfCAncHJpY2VXaXRoVGF4JyB8ICdtZXRhZGF0YSc+XG4gICAgKT4gfVxuICApIH07XG5cbmV4cG9ydCB0eXBlIFRlc3RFbGlnaWJsZVNoaXBwaW5nTWV0aG9kc1F1ZXJ5VmFyaWFibGVzID0gRXhhY3Q8e1xuICBpbnB1dDogVGVzdEVsaWdpYmxlU2hpcHBpbmdNZXRob2RzSW5wdXQ7XG59PjtcblxuXG5leHBvcnQgdHlwZSBUZXN0RWxpZ2libGVTaGlwcGluZ01ldGhvZHNRdWVyeSA9IHsgdGVzdEVsaWdpYmxlU2hpcHBpbmdNZXRob2RzOiBBcnJheTwoXG4gICAgeyBfX3R5cGVuYW1lPzogJ1NoaXBwaW5nTWV0aG9kUXVvdGUnIH1cbiAgICAmIFBpY2s8U2hpcHBpbmdNZXRob2RRdW90ZSwgJ2lkJyB8ICduYW1lJyB8ICdjb2RlJyB8ICdkZXNjcmlwdGlvbicgfCAncHJpY2UnIHwgJ3ByaWNlV2l0aFRheCcgfCAnbWV0YWRhdGEnPlxuICApPiB9O1xuXG50eXBlIERpc2NyaW1pbmF0ZVVuaW9uPFQsIFU+ID0gVCBleHRlbmRzIFUgPyBUIDogbmV2ZXI7XG5cbmV4cG9ydCBuYW1lc3BhY2UgUm9sZSB7XG4gIGV4cG9ydCB0eXBlIEZyYWdtZW50ID0gUm9sZUZyYWdtZW50O1xuICBleHBvcnQgdHlwZSBDaGFubmVscyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxSb2xlRnJhZ21lbnRbJ2NoYW5uZWxzJ10+KVtudW1iZXJdPjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBBZG1pbmlzdHJhdG9yIHtcbiAgZXhwb3J0IHR5cGUgRnJhZ21lbnQgPSBBZG1pbmlzdHJhdG9yRnJhZ21lbnQ7XG4gIGV4cG9ydCB0eXBlIFVzZXIgPSAoTm9uTnVsbGFibGU8QWRtaW5pc3RyYXRvckZyYWdtZW50Wyd1c2VyJ10+KTtcbiAgZXhwb3J0IHR5cGUgUm9sZXMgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEFkbWluaXN0cmF0b3JGcmFnbWVudFsndXNlciddPilbJ3JvbGVzJ10+KVtudW1iZXJdPjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBHZXRBZG1pbmlzdHJhdG9ycyB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IEdldEFkbWluaXN0cmF0b3JzUXVlcnlWYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIFF1ZXJ5ID0gR2V0QWRtaW5pc3RyYXRvcnNRdWVyeTtcbiAgZXhwb3J0IHR5cGUgQWRtaW5pc3RyYXRvcnMgPSAoTm9uTnVsbGFibGU8R2V0QWRtaW5pc3RyYXRvcnNRdWVyeVsnYWRtaW5pc3RyYXRvcnMnXT4pO1xuICBleHBvcnQgdHlwZSBJdGVtcyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8R2V0QWRtaW5pc3RyYXRvcnNRdWVyeVsnYWRtaW5pc3RyYXRvcnMnXT4pWydpdGVtcyddPilbbnVtYmVyXT47XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgR2V0QWN0aXZlQWRtaW5pc3RyYXRvciB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IEdldEFjdGl2ZUFkbWluaXN0cmF0b3JRdWVyeVZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgUXVlcnkgPSBHZXRBY3RpdmVBZG1pbmlzdHJhdG9yUXVlcnk7XG4gIGV4cG9ydCB0eXBlIEFjdGl2ZUFkbWluaXN0cmF0b3IgPSAoTm9uTnVsbGFibGU8R2V0QWN0aXZlQWRtaW5pc3RyYXRvclF1ZXJ5WydhY3RpdmVBZG1pbmlzdHJhdG9yJ10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBHZXRBZG1pbmlzdHJhdG9yIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gR2V0QWRtaW5pc3RyYXRvclF1ZXJ5VmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBRdWVyeSA9IEdldEFkbWluaXN0cmF0b3JRdWVyeTtcbiAgZXhwb3J0IHR5cGUgQWRtaW5pc3RyYXRvciA9IChOb25OdWxsYWJsZTxHZXRBZG1pbmlzdHJhdG9yUXVlcnlbJ2FkbWluaXN0cmF0b3InXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIENyZWF0ZUFkbWluaXN0cmF0b3Ige1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBDcmVhdGVBZG1pbmlzdHJhdG9yTXV0YXRpb25WYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIE11dGF0aW9uID0gQ3JlYXRlQWRtaW5pc3RyYXRvck11dGF0aW9uO1xuICBleHBvcnQgdHlwZSBDcmVhdGVBZG1pbmlzdHJhdG9yID0gKE5vbk51bGxhYmxlPENyZWF0ZUFkbWluaXN0cmF0b3JNdXRhdGlvblsnY3JlYXRlQWRtaW5pc3RyYXRvciddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgVXBkYXRlQWRtaW5pc3RyYXRvciB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IFVwZGF0ZUFkbWluaXN0cmF0b3JNdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBVcGRhdGVBZG1pbmlzdHJhdG9yTXV0YXRpb247XG4gIGV4cG9ydCB0eXBlIFVwZGF0ZUFkbWluaXN0cmF0b3IgPSAoTm9uTnVsbGFibGU8VXBkYXRlQWRtaW5pc3RyYXRvck11dGF0aW9uWyd1cGRhdGVBZG1pbmlzdHJhdG9yJ10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBVcGRhdGVBY3RpdmVBZG1pbmlzdHJhdG9yIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gVXBkYXRlQWN0aXZlQWRtaW5pc3RyYXRvck11dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IFVwZGF0ZUFjdGl2ZUFkbWluaXN0cmF0b3JNdXRhdGlvbjtcbiAgZXhwb3J0IHR5cGUgVXBkYXRlQWN0aXZlQWRtaW5pc3RyYXRvciA9IChOb25OdWxsYWJsZTxVcGRhdGVBY3RpdmVBZG1pbmlzdHJhdG9yTXV0YXRpb25bJ3VwZGF0ZUFjdGl2ZUFkbWluaXN0cmF0b3InXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIERlbGV0ZUFkbWluaXN0cmF0b3Ige1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBEZWxldGVBZG1pbmlzdHJhdG9yTXV0YXRpb25WYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIE11dGF0aW9uID0gRGVsZXRlQWRtaW5pc3RyYXRvck11dGF0aW9uO1xuICBleHBvcnQgdHlwZSBEZWxldGVBZG1pbmlzdHJhdG9yID0gKE5vbk51bGxhYmxlPERlbGV0ZUFkbWluaXN0cmF0b3JNdXRhdGlvblsnZGVsZXRlQWRtaW5pc3RyYXRvciddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgR2V0Um9sZXMge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBHZXRSb2xlc1F1ZXJ5VmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBRdWVyeSA9IEdldFJvbGVzUXVlcnk7XG4gIGV4cG9ydCB0eXBlIFJvbGVzID0gKE5vbk51bGxhYmxlPEdldFJvbGVzUXVlcnlbJ3JvbGVzJ10+KTtcbiAgZXhwb3J0IHR5cGUgSXRlbXMgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldFJvbGVzUXVlcnlbJ3JvbGVzJ10+KVsnaXRlbXMnXT4pW251bWJlcl0+O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEdldFJvbGUge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBHZXRSb2xlUXVlcnlWYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIFF1ZXJ5ID0gR2V0Um9sZVF1ZXJ5O1xuICBleHBvcnQgdHlwZSBSb2xlID0gKE5vbk51bGxhYmxlPEdldFJvbGVRdWVyeVsncm9sZSddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgQ3JlYXRlUm9sZSB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IENyZWF0ZVJvbGVNdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBDcmVhdGVSb2xlTXV0YXRpb247XG4gIGV4cG9ydCB0eXBlIENyZWF0ZVJvbGUgPSAoTm9uTnVsbGFibGU8Q3JlYXRlUm9sZU11dGF0aW9uWydjcmVhdGVSb2xlJ10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBVcGRhdGVSb2xlIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gVXBkYXRlUm9sZU11dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IFVwZGF0ZVJvbGVNdXRhdGlvbjtcbiAgZXhwb3J0IHR5cGUgVXBkYXRlUm9sZSA9IChOb25OdWxsYWJsZTxVcGRhdGVSb2xlTXV0YXRpb25bJ3VwZGF0ZVJvbGUnXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIERlbGV0ZVJvbGUge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBEZWxldGVSb2xlTXV0YXRpb25WYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIE11dGF0aW9uID0gRGVsZXRlUm9sZU11dGF0aW9uO1xuICBleHBvcnQgdHlwZSBEZWxldGVSb2xlID0gKE5vbk51bGxhYmxlPERlbGV0ZVJvbGVNdXRhdGlvblsnZGVsZXRlUm9sZSddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgQXNzaWduUm9sZVRvQWRtaW5pc3RyYXRvciB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IEFzc2lnblJvbGVUb0FkbWluaXN0cmF0b3JNdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBBc3NpZ25Sb2xlVG9BZG1pbmlzdHJhdG9yTXV0YXRpb247XG4gIGV4cG9ydCB0eXBlIEFzc2lnblJvbGVUb0FkbWluaXN0cmF0b3IgPSAoTm9uTnVsbGFibGU8QXNzaWduUm9sZVRvQWRtaW5pc3RyYXRvck11dGF0aW9uWydhc3NpZ25Sb2xlVG9BZG1pbmlzdHJhdG9yJ10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBDdXJyZW50VXNlciB7XG4gIGV4cG9ydCB0eXBlIEZyYWdtZW50ID0gQ3VycmVudFVzZXJGcmFnbWVudDtcbiAgZXhwb3J0IHR5cGUgQ2hhbm5lbHMgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8Q3VycmVudFVzZXJGcmFnbWVudFsnY2hhbm5lbHMnXT4pW251bWJlcl0+O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEF0dGVtcHRMb2dpbiB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IEF0dGVtcHRMb2dpbk11dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IEF0dGVtcHRMb2dpbk11dGF0aW9uO1xuICBleHBvcnQgdHlwZSBMb2dpbiA9IChOb25OdWxsYWJsZTxBdHRlbXB0TG9naW5NdXRhdGlvblsnbG9naW4nXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIExvZ091dCB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IExvZ091dE11dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IExvZ091dE11dGF0aW9uO1xuICBleHBvcnQgdHlwZSBMb2dvdXQgPSAoTm9uTnVsbGFibGU8TG9nT3V0TXV0YXRpb25bJ2xvZ291dCddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgR2V0Q3VycmVudFVzZXIge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBHZXRDdXJyZW50VXNlclF1ZXJ5VmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBRdWVyeSA9IEdldEN1cnJlbnRVc2VyUXVlcnk7XG4gIGV4cG9ydCB0eXBlIE1lID0gKE5vbk51bGxhYmxlPEdldEN1cnJlbnRVc2VyUXVlcnlbJ21lJ10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBSZXF1ZXN0U3RhcnRlZCB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IFJlcXVlc3RTdGFydGVkTXV0YXRpb25WYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIE11dGF0aW9uID0gUmVxdWVzdFN0YXJ0ZWRNdXRhdGlvbjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBSZXF1ZXN0Q29tcGxldGVkIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gUmVxdWVzdENvbXBsZXRlZE11dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IFJlcXVlc3RDb21wbGV0ZWRNdXRhdGlvbjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBVc2VyU3RhdHVzIHtcbiAgZXhwb3J0IHR5cGUgRnJhZ21lbnQgPSBVc2VyU3RhdHVzRnJhZ21lbnQ7XG4gIGV4cG9ydCB0eXBlIENoYW5uZWxzID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPFVzZXJTdGF0dXNGcmFnbWVudFsnY2hhbm5lbHMnXT4pW251bWJlcl0+O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFNldEFzTG9nZ2VkSW4ge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBTZXRBc0xvZ2dlZEluTXV0YXRpb25WYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIE11dGF0aW9uID0gU2V0QXNMb2dnZWRJbk11dGF0aW9uO1xuICBleHBvcnQgdHlwZSBTZXRBc0xvZ2dlZEluID0gKE5vbk51bGxhYmxlPFNldEFzTG9nZ2VkSW5NdXRhdGlvblsnc2V0QXNMb2dnZWRJbiddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgU2V0QXNMb2dnZWRPdXQge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBTZXRBc0xvZ2dlZE91dE11dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IFNldEFzTG9nZ2VkT3V0TXV0YXRpb247XG4gIGV4cG9ydCB0eXBlIFNldEFzTG9nZ2VkT3V0ID0gKE5vbk51bGxhYmxlPFNldEFzTG9nZ2VkT3V0TXV0YXRpb25bJ3NldEFzTG9nZ2VkT3V0J10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBTZXRVaUxhbmd1YWdlIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gU2V0VWlMYW5ndWFnZU11dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IFNldFVpTGFuZ3VhZ2VNdXRhdGlvbjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBTZXRVaVRoZW1lIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gU2V0VWlUaGVtZU11dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IFNldFVpVGhlbWVNdXRhdGlvbjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBHZXROZXR3b3JrU3RhdHVzIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gR2V0TmV0d29ya1N0YXR1c1F1ZXJ5VmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBRdWVyeSA9IEdldE5ldHdvcmtTdGF0dXNRdWVyeTtcbiAgZXhwb3J0IHR5cGUgTmV0d29ya1N0YXR1cyA9IChOb25OdWxsYWJsZTxHZXROZXR3b3JrU3RhdHVzUXVlcnlbJ25ldHdvcmtTdGF0dXMnXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEdldFVzZXJTdGF0dXMge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBHZXRVc2VyU3RhdHVzUXVlcnlWYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIFF1ZXJ5ID0gR2V0VXNlclN0YXR1c1F1ZXJ5O1xuICBleHBvcnQgdHlwZSBVc2VyU3RhdHVzID0gKE5vbk51bGxhYmxlPEdldFVzZXJTdGF0dXNRdWVyeVsndXNlclN0YXR1cyddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgR2V0VWlTdGF0ZSB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IEdldFVpU3RhdGVRdWVyeVZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgUXVlcnkgPSBHZXRVaVN0YXRlUXVlcnk7XG4gIGV4cG9ydCB0eXBlIFVpU3RhdGUgPSAoTm9uTnVsbGFibGU8R2V0VWlTdGF0ZVF1ZXJ5Wyd1aVN0YXRlJ10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBHZXRDbGllbnRTdGF0ZSB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IEdldENsaWVudFN0YXRlUXVlcnlWYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIFF1ZXJ5ID0gR2V0Q2xpZW50U3RhdGVRdWVyeTtcbiAgZXhwb3J0IHR5cGUgTmV0d29ya1N0YXR1cyA9IChOb25OdWxsYWJsZTxHZXRDbGllbnRTdGF0ZVF1ZXJ5WyduZXR3b3JrU3RhdHVzJ10+KTtcbiAgZXhwb3J0IHR5cGUgVXNlclN0YXR1cyA9IChOb25OdWxsYWJsZTxHZXRDbGllbnRTdGF0ZVF1ZXJ5Wyd1c2VyU3RhdHVzJ10+KTtcbiAgZXhwb3J0IHR5cGUgVWlTdGF0ZSA9IChOb25OdWxsYWJsZTxHZXRDbGllbnRTdGF0ZVF1ZXJ5Wyd1aVN0YXRlJ10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBTZXRBY3RpdmVDaGFubmVsIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gU2V0QWN0aXZlQ2hhbm5lbE11dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IFNldEFjdGl2ZUNoYW5uZWxNdXRhdGlvbjtcbiAgZXhwb3J0IHR5cGUgU2V0QWN0aXZlQ2hhbm5lbCA9IChOb25OdWxsYWJsZTxTZXRBY3RpdmVDaGFubmVsTXV0YXRpb25bJ3NldEFjdGl2ZUNoYW5uZWwnXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFVwZGF0ZVVzZXJDaGFubmVscyB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IFVwZGF0ZVVzZXJDaGFubmVsc011dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IFVwZGF0ZVVzZXJDaGFubmVsc011dGF0aW9uO1xuICBleHBvcnQgdHlwZSBVcGRhdGVVc2VyQ2hhbm5lbHMgPSAoTm9uTnVsbGFibGU8VXBkYXRlVXNlckNoYW5uZWxzTXV0YXRpb25bJ3VwZGF0ZVVzZXJDaGFubmVscyddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgR2V0Q29sbGVjdGlvbkZpbHRlcnMge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBHZXRDb2xsZWN0aW9uRmlsdGVyc1F1ZXJ5VmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBRdWVyeSA9IEdldENvbGxlY3Rpb25GaWx0ZXJzUXVlcnk7XG4gIGV4cG9ydCB0eXBlIENvbGxlY3Rpb25GaWx0ZXJzID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldENvbGxlY3Rpb25GaWx0ZXJzUXVlcnlbJ2NvbGxlY3Rpb25GaWx0ZXJzJ10+KVtudW1iZXJdPjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBDb2xsZWN0aW9uIHtcbiAgZXhwb3J0IHR5cGUgRnJhZ21lbnQgPSBDb2xsZWN0aW9uRnJhZ21lbnQ7XG4gIGV4cG9ydCB0eXBlIEZlYXR1cmVkQXNzZXQgPSAoTm9uTnVsbGFibGU8Q29sbGVjdGlvbkZyYWdtZW50WydmZWF0dXJlZEFzc2V0J10+KTtcbiAgZXhwb3J0IHR5cGUgQXNzZXRzID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPENvbGxlY3Rpb25GcmFnbWVudFsnYXNzZXRzJ10+KVtudW1iZXJdPjtcbiAgZXhwb3J0IHR5cGUgRmlsdGVycyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxDb2xsZWN0aW9uRnJhZ21lbnRbJ2ZpbHRlcnMnXT4pW251bWJlcl0+O1xuICBleHBvcnQgdHlwZSBUcmFuc2xhdGlvbnMgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8Q29sbGVjdGlvbkZyYWdtZW50Wyd0cmFuc2xhdGlvbnMnXT4pW251bWJlcl0+O1xuICBleHBvcnQgdHlwZSBQYXJlbnQgPSAoTm9uTnVsbGFibGU8Q29sbGVjdGlvbkZyYWdtZW50WydwYXJlbnQnXT4pO1xuICBleHBvcnQgdHlwZSBDaGlsZHJlbiA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxDb2xsZWN0aW9uRnJhZ21lbnRbJ2NoaWxkcmVuJ10+KVtudW1iZXJdPjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBHZXRDb2xsZWN0aW9uTGlzdCB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IEdldENvbGxlY3Rpb25MaXN0UXVlcnlWYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIFF1ZXJ5ID0gR2V0Q29sbGVjdGlvbkxpc3RRdWVyeTtcbiAgZXhwb3J0IHR5cGUgQ29sbGVjdGlvbnMgPSAoTm9uTnVsbGFibGU8R2V0Q29sbGVjdGlvbkxpc3RRdWVyeVsnY29sbGVjdGlvbnMnXT4pO1xuICBleHBvcnQgdHlwZSBJdGVtcyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8R2V0Q29sbGVjdGlvbkxpc3RRdWVyeVsnY29sbGVjdGlvbnMnXT4pWydpdGVtcyddPilbbnVtYmVyXT47XG4gIGV4cG9ydCB0eXBlIEZlYXR1cmVkQXNzZXQgPSAoTm9uTnVsbGFibGU8Tm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxHZXRDb2xsZWN0aW9uTGlzdFF1ZXJ5Wydjb2xsZWN0aW9ucyddPilbJ2l0ZW1zJ10+KVtudW1iZXJdPlsnZmVhdHVyZWRBc3NldCddPik7XG4gIGV4cG9ydCB0eXBlIFBhcmVudCA9IChOb25OdWxsYWJsZTxOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldENvbGxlY3Rpb25MaXN0UXVlcnlbJ2NvbGxlY3Rpb25zJ10+KVsnaXRlbXMnXT4pW251bWJlcl0+WydwYXJlbnQnXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEdldENvbGxlY3Rpb24ge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBHZXRDb2xsZWN0aW9uUXVlcnlWYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIFF1ZXJ5ID0gR2V0Q29sbGVjdGlvblF1ZXJ5O1xuICBleHBvcnQgdHlwZSBDb2xsZWN0aW9uID0gKE5vbk51bGxhYmxlPEdldENvbGxlY3Rpb25RdWVyeVsnY29sbGVjdGlvbiddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgQ3JlYXRlQ29sbGVjdGlvbiB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IENyZWF0ZUNvbGxlY3Rpb25NdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBDcmVhdGVDb2xsZWN0aW9uTXV0YXRpb247XG4gIGV4cG9ydCB0eXBlIENyZWF0ZUNvbGxlY3Rpb24gPSAoTm9uTnVsbGFibGU8Q3JlYXRlQ29sbGVjdGlvbk11dGF0aW9uWydjcmVhdGVDb2xsZWN0aW9uJ10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBVcGRhdGVDb2xsZWN0aW9uIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gVXBkYXRlQ29sbGVjdGlvbk11dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IFVwZGF0ZUNvbGxlY3Rpb25NdXRhdGlvbjtcbiAgZXhwb3J0IHR5cGUgVXBkYXRlQ29sbGVjdGlvbiA9IChOb25OdWxsYWJsZTxVcGRhdGVDb2xsZWN0aW9uTXV0YXRpb25bJ3VwZGF0ZUNvbGxlY3Rpb24nXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIE1vdmVDb2xsZWN0aW9uIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gTW92ZUNvbGxlY3Rpb25NdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBNb3ZlQ29sbGVjdGlvbk11dGF0aW9uO1xuICBleHBvcnQgdHlwZSBNb3ZlQ29sbGVjdGlvbiA9IChOb25OdWxsYWJsZTxNb3ZlQ29sbGVjdGlvbk11dGF0aW9uWydtb3ZlQ29sbGVjdGlvbiddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgRGVsZXRlQ29sbGVjdGlvbiB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IERlbGV0ZUNvbGxlY3Rpb25NdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBEZWxldGVDb2xsZWN0aW9uTXV0YXRpb247XG4gIGV4cG9ydCB0eXBlIERlbGV0ZUNvbGxlY3Rpb24gPSAoTm9uTnVsbGFibGU8RGVsZXRlQ29sbGVjdGlvbk11dGF0aW9uWydkZWxldGVDb2xsZWN0aW9uJ10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBHZXRDb2xsZWN0aW9uQ29udGVudHMge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBHZXRDb2xsZWN0aW9uQ29udGVudHNRdWVyeVZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgUXVlcnkgPSBHZXRDb2xsZWN0aW9uQ29udGVudHNRdWVyeTtcbiAgZXhwb3J0IHR5cGUgQ29sbGVjdGlvbiA9IChOb25OdWxsYWJsZTxHZXRDb2xsZWN0aW9uQ29udGVudHNRdWVyeVsnY29sbGVjdGlvbiddPik7XG4gIGV4cG9ydCB0eXBlIFByb2R1Y3RWYXJpYW50cyA9IChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8R2V0Q29sbGVjdGlvbkNvbnRlbnRzUXVlcnlbJ2NvbGxlY3Rpb24nXT4pWydwcm9kdWN0VmFyaWFudHMnXT4pO1xuICBleHBvcnQgdHlwZSBJdGVtcyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldENvbGxlY3Rpb25Db250ZW50c1F1ZXJ5Wydjb2xsZWN0aW9uJ10+KVsncHJvZHVjdFZhcmlhbnRzJ10+KVsnaXRlbXMnXT4pW251bWJlcl0+O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEFkZHJlc3Mge1xuICBleHBvcnQgdHlwZSBGcmFnbWVudCA9IEFkZHJlc3NGcmFnbWVudDtcbiAgZXhwb3J0IHR5cGUgQ291bnRyeSA9IChOb25OdWxsYWJsZTxBZGRyZXNzRnJhZ21lbnRbJ2NvdW50cnknXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEN1c3RvbWVyIHtcbiAgZXhwb3J0IHR5cGUgRnJhZ21lbnQgPSBDdXN0b21lckZyYWdtZW50O1xuICBleHBvcnQgdHlwZSBVc2VyID0gKE5vbk51bGxhYmxlPEN1c3RvbWVyRnJhZ21lbnRbJ3VzZXInXT4pO1xuICBleHBvcnQgdHlwZSBBZGRyZXNzZXMgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8Q3VzdG9tZXJGcmFnbWVudFsnYWRkcmVzc2VzJ10+KVtudW1iZXJdPjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBHZXRDdXN0b21lckxpc3Qge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBHZXRDdXN0b21lckxpc3RRdWVyeVZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgUXVlcnkgPSBHZXRDdXN0b21lckxpc3RRdWVyeTtcbiAgZXhwb3J0IHR5cGUgQ3VzdG9tZXJzID0gKE5vbk51bGxhYmxlPEdldEN1c3RvbWVyTGlzdFF1ZXJ5WydjdXN0b21lcnMnXT4pO1xuICBleHBvcnQgdHlwZSBJdGVtcyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8R2V0Q3VzdG9tZXJMaXN0UXVlcnlbJ2N1c3RvbWVycyddPilbJ2l0ZW1zJ10+KVtudW1iZXJdPjtcbiAgZXhwb3J0IHR5cGUgVXNlciA9IChOb25OdWxsYWJsZTxOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldEN1c3RvbWVyTGlzdFF1ZXJ5WydjdXN0b21lcnMnXT4pWydpdGVtcyddPilbbnVtYmVyXT5bJ3VzZXInXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEdldEN1c3RvbWVyIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gR2V0Q3VzdG9tZXJRdWVyeVZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgUXVlcnkgPSBHZXRDdXN0b21lclF1ZXJ5O1xuICBleHBvcnQgdHlwZSBDdXN0b21lciA9IChOb25OdWxsYWJsZTxHZXRDdXN0b21lclF1ZXJ5WydjdXN0b21lciddPik7XG4gIGV4cG9ydCB0eXBlIEdyb3VwcyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8R2V0Q3VzdG9tZXJRdWVyeVsnY3VzdG9tZXInXT4pWydncm91cHMnXT4pW251bWJlcl0+O1xuICBleHBvcnQgdHlwZSBPcmRlcnMgPSAoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldEN1c3RvbWVyUXVlcnlbJ2N1c3RvbWVyJ10+KVsnb3JkZXJzJ10+KTtcbiAgZXhwb3J0IHR5cGUgSXRlbXMgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxHZXRDdXN0b21lclF1ZXJ5WydjdXN0b21lciddPilbJ29yZGVycyddPilbJ2l0ZW1zJ10+KVtudW1iZXJdPjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBDcmVhdGVDdXN0b21lciB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IENyZWF0ZUN1c3RvbWVyTXV0YXRpb25WYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIE11dGF0aW9uID0gQ3JlYXRlQ3VzdG9tZXJNdXRhdGlvbjtcbiAgZXhwb3J0IHR5cGUgQ3JlYXRlQ3VzdG9tZXIgPSAoTm9uTnVsbGFibGU8Q3JlYXRlQ3VzdG9tZXJNdXRhdGlvblsnY3JlYXRlQ3VzdG9tZXInXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFVwZGF0ZUN1c3RvbWVyIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gVXBkYXRlQ3VzdG9tZXJNdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBVcGRhdGVDdXN0b21lck11dGF0aW9uO1xuICBleHBvcnQgdHlwZSBVcGRhdGVDdXN0b21lciA9IChOb25OdWxsYWJsZTxVcGRhdGVDdXN0b21lck11dGF0aW9uWyd1cGRhdGVDdXN0b21lciddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgRGVsZXRlQ3VzdG9tZXIge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBEZWxldGVDdXN0b21lck11dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IERlbGV0ZUN1c3RvbWVyTXV0YXRpb247XG4gIGV4cG9ydCB0eXBlIERlbGV0ZUN1c3RvbWVyID0gKE5vbk51bGxhYmxlPERlbGV0ZUN1c3RvbWVyTXV0YXRpb25bJ2RlbGV0ZUN1c3RvbWVyJ10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBDcmVhdGVDdXN0b21lckFkZHJlc3Mge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBDcmVhdGVDdXN0b21lckFkZHJlc3NNdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBDcmVhdGVDdXN0b21lckFkZHJlc3NNdXRhdGlvbjtcbiAgZXhwb3J0IHR5cGUgQ3JlYXRlQ3VzdG9tZXJBZGRyZXNzID0gKE5vbk51bGxhYmxlPENyZWF0ZUN1c3RvbWVyQWRkcmVzc011dGF0aW9uWydjcmVhdGVDdXN0b21lckFkZHJlc3MnXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFVwZGF0ZUN1c3RvbWVyQWRkcmVzcyB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IFVwZGF0ZUN1c3RvbWVyQWRkcmVzc011dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IFVwZGF0ZUN1c3RvbWVyQWRkcmVzc011dGF0aW9uO1xuICBleHBvcnQgdHlwZSBVcGRhdGVDdXN0b21lckFkZHJlc3MgPSAoTm9uTnVsbGFibGU8VXBkYXRlQ3VzdG9tZXJBZGRyZXNzTXV0YXRpb25bJ3VwZGF0ZUN1c3RvbWVyQWRkcmVzcyddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgQ3JlYXRlQ3VzdG9tZXJHcm91cCB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IENyZWF0ZUN1c3RvbWVyR3JvdXBNdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBDcmVhdGVDdXN0b21lckdyb3VwTXV0YXRpb247XG4gIGV4cG9ydCB0eXBlIENyZWF0ZUN1c3RvbWVyR3JvdXAgPSAoTm9uTnVsbGFibGU8Q3JlYXRlQ3VzdG9tZXJHcm91cE11dGF0aW9uWydjcmVhdGVDdXN0b21lckdyb3VwJ10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBVcGRhdGVDdXN0b21lckdyb3VwIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gVXBkYXRlQ3VzdG9tZXJHcm91cE11dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IFVwZGF0ZUN1c3RvbWVyR3JvdXBNdXRhdGlvbjtcbiAgZXhwb3J0IHR5cGUgVXBkYXRlQ3VzdG9tZXJHcm91cCA9IChOb25OdWxsYWJsZTxVcGRhdGVDdXN0b21lckdyb3VwTXV0YXRpb25bJ3VwZGF0ZUN1c3RvbWVyR3JvdXAnXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIERlbGV0ZUN1c3RvbWVyR3JvdXAge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBEZWxldGVDdXN0b21lckdyb3VwTXV0YXRpb25WYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIE11dGF0aW9uID0gRGVsZXRlQ3VzdG9tZXJHcm91cE11dGF0aW9uO1xuICBleHBvcnQgdHlwZSBEZWxldGVDdXN0b21lckdyb3VwID0gKE5vbk51bGxhYmxlPERlbGV0ZUN1c3RvbWVyR3JvdXBNdXRhdGlvblsnZGVsZXRlQ3VzdG9tZXJHcm91cCddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgR2V0Q3VzdG9tZXJHcm91cHMge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBHZXRDdXN0b21lckdyb3Vwc1F1ZXJ5VmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBRdWVyeSA9IEdldEN1c3RvbWVyR3JvdXBzUXVlcnk7XG4gIGV4cG9ydCB0eXBlIEN1c3RvbWVyR3JvdXBzID0gKE5vbk51bGxhYmxlPEdldEN1c3RvbWVyR3JvdXBzUXVlcnlbJ2N1c3RvbWVyR3JvdXBzJ10+KTtcbiAgZXhwb3J0IHR5cGUgSXRlbXMgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldEN1c3RvbWVyR3JvdXBzUXVlcnlbJ2N1c3RvbWVyR3JvdXBzJ10+KVsnaXRlbXMnXT4pW251bWJlcl0+O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEdldEN1c3RvbWVyR3JvdXBXaXRoQ3VzdG9tZXJzIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gR2V0Q3VzdG9tZXJHcm91cFdpdGhDdXN0b21lcnNRdWVyeVZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgUXVlcnkgPSBHZXRDdXN0b21lckdyb3VwV2l0aEN1c3RvbWVyc1F1ZXJ5O1xuICBleHBvcnQgdHlwZSBDdXN0b21lckdyb3VwID0gKE5vbk51bGxhYmxlPEdldEN1c3RvbWVyR3JvdXBXaXRoQ3VzdG9tZXJzUXVlcnlbJ2N1c3RvbWVyR3JvdXAnXT4pO1xuICBleHBvcnQgdHlwZSBDdXN0b21lcnMgPSAoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldEN1c3RvbWVyR3JvdXBXaXRoQ3VzdG9tZXJzUXVlcnlbJ2N1c3RvbWVyR3JvdXAnXT4pWydjdXN0b21lcnMnXT4pO1xuICBleHBvcnQgdHlwZSBJdGVtcyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldEN1c3RvbWVyR3JvdXBXaXRoQ3VzdG9tZXJzUXVlcnlbJ2N1c3RvbWVyR3JvdXAnXT4pWydjdXN0b21lcnMnXT4pWydpdGVtcyddPilbbnVtYmVyXT47XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgQWRkQ3VzdG9tZXJzVG9Hcm91cCB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IEFkZEN1c3RvbWVyc1RvR3JvdXBNdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBBZGRDdXN0b21lcnNUb0dyb3VwTXV0YXRpb247XG4gIGV4cG9ydCB0eXBlIEFkZEN1c3RvbWVyc1RvR3JvdXAgPSAoTm9uTnVsbGFibGU8QWRkQ3VzdG9tZXJzVG9Hcm91cE11dGF0aW9uWydhZGRDdXN0b21lcnNUb0dyb3VwJ10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBSZW1vdmVDdXN0b21lcnNGcm9tR3JvdXAge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBSZW1vdmVDdXN0b21lcnNGcm9tR3JvdXBNdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBSZW1vdmVDdXN0b21lcnNGcm9tR3JvdXBNdXRhdGlvbjtcbiAgZXhwb3J0IHR5cGUgUmVtb3ZlQ3VzdG9tZXJzRnJvbUdyb3VwID0gKE5vbk51bGxhYmxlPFJlbW92ZUN1c3RvbWVyc0Zyb21Hcm91cE11dGF0aW9uWydyZW1vdmVDdXN0b21lcnNGcm9tR3JvdXAnXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEdldEN1c3RvbWVySGlzdG9yeSB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IEdldEN1c3RvbWVySGlzdG9yeVF1ZXJ5VmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBRdWVyeSA9IEdldEN1c3RvbWVySGlzdG9yeVF1ZXJ5O1xuICBleHBvcnQgdHlwZSBDdXN0b21lciA9IChOb25OdWxsYWJsZTxHZXRDdXN0b21lckhpc3RvcnlRdWVyeVsnY3VzdG9tZXInXT4pO1xuICBleHBvcnQgdHlwZSBIaXN0b3J5ID0gKE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxHZXRDdXN0b21lckhpc3RvcnlRdWVyeVsnY3VzdG9tZXInXT4pWydoaXN0b3J5J10+KTtcbiAgZXhwb3J0IHR5cGUgSXRlbXMgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxHZXRDdXN0b21lckhpc3RvcnlRdWVyeVsnY3VzdG9tZXInXT4pWydoaXN0b3J5J10+KVsnaXRlbXMnXT4pW251bWJlcl0+O1xuICBleHBvcnQgdHlwZSBBZG1pbmlzdHJhdG9yID0gKE5vbk51bGxhYmxlPE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldEN1c3RvbWVySGlzdG9yeVF1ZXJ5WydjdXN0b21lciddPilbJ2hpc3RvcnknXT4pWydpdGVtcyddPilbbnVtYmVyXT5bJ2FkbWluaXN0cmF0b3InXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEFkZE5vdGVUb0N1c3RvbWVyIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gQWRkTm90ZVRvQ3VzdG9tZXJNdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBBZGROb3RlVG9DdXN0b21lck11dGF0aW9uO1xuICBleHBvcnQgdHlwZSBBZGROb3RlVG9DdXN0b21lciA9IChOb25OdWxsYWJsZTxBZGROb3RlVG9DdXN0b21lck11dGF0aW9uWydhZGROb3RlVG9DdXN0b21lciddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgVXBkYXRlQ3VzdG9tZXJOb3RlIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gVXBkYXRlQ3VzdG9tZXJOb3RlTXV0YXRpb25WYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIE11dGF0aW9uID0gVXBkYXRlQ3VzdG9tZXJOb3RlTXV0YXRpb247XG4gIGV4cG9ydCB0eXBlIFVwZGF0ZUN1c3RvbWVyTm90ZSA9IChOb25OdWxsYWJsZTxVcGRhdGVDdXN0b21lck5vdGVNdXRhdGlvblsndXBkYXRlQ3VzdG9tZXJOb3RlJ10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBEZWxldGVDdXN0b21lck5vdGUge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBEZWxldGVDdXN0b21lck5vdGVNdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBEZWxldGVDdXN0b21lck5vdGVNdXRhdGlvbjtcbiAgZXhwb3J0IHR5cGUgRGVsZXRlQ3VzdG9tZXJOb3RlID0gKE5vbk51bGxhYmxlPERlbGV0ZUN1c3RvbWVyTm90ZU11dGF0aW9uWydkZWxldGVDdXN0b21lck5vdGUnXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEZhY2V0VmFsdWUge1xuICBleHBvcnQgdHlwZSBGcmFnbWVudCA9IEZhY2V0VmFsdWVGcmFnbWVudDtcbiAgZXhwb3J0IHR5cGUgVHJhbnNsYXRpb25zID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEZhY2V0VmFsdWVGcmFnbWVudFsndHJhbnNsYXRpb25zJ10+KVtudW1iZXJdPjtcbiAgZXhwb3J0IHR5cGUgRmFjZXQgPSAoTm9uTnVsbGFibGU8RmFjZXRWYWx1ZUZyYWdtZW50WydmYWNldCddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgRmFjZXRXaXRoVmFsdWVzIHtcbiAgZXhwb3J0IHR5cGUgRnJhZ21lbnQgPSBGYWNldFdpdGhWYWx1ZXNGcmFnbWVudDtcbiAgZXhwb3J0IHR5cGUgVHJhbnNsYXRpb25zID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEZhY2V0V2l0aFZhbHVlc0ZyYWdtZW50Wyd0cmFuc2xhdGlvbnMnXT4pW251bWJlcl0+O1xuICBleHBvcnQgdHlwZSBWYWx1ZXMgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8RmFjZXRXaXRoVmFsdWVzRnJhZ21lbnRbJ3ZhbHVlcyddPilbbnVtYmVyXT47XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgQ3JlYXRlRmFjZXQge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBDcmVhdGVGYWNldE11dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IENyZWF0ZUZhY2V0TXV0YXRpb247XG4gIGV4cG9ydCB0eXBlIENyZWF0ZUZhY2V0ID0gKE5vbk51bGxhYmxlPENyZWF0ZUZhY2V0TXV0YXRpb25bJ2NyZWF0ZUZhY2V0J10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBVcGRhdGVGYWNldCB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IFVwZGF0ZUZhY2V0TXV0YXRpb25WYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIE11dGF0aW9uID0gVXBkYXRlRmFjZXRNdXRhdGlvbjtcbiAgZXhwb3J0IHR5cGUgVXBkYXRlRmFjZXQgPSAoTm9uTnVsbGFibGU8VXBkYXRlRmFjZXRNdXRhdGlvblsndXBkYXRlRmFjZXQnXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIERlbGV0ZUZhY2V0IHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gRGVsZXRlRmFjZXRNdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBEZWxldGVGYWNldE11dGF0aW9uO1xuICBleHBvcnQgdHlwZSBEZWxldGVGYWNldCA9IChOb25OdWxsYWJsZTxEZWxldGVGYWNldE11dGF0aW9uWydkZWxldGVGYWNldCddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgQ3JlYXRlRmFjZXRWYWx1ZXMge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBDcmVhdGVGYWNldFZhbHVlc011dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IENyZWF0ZUZhY2V0VmFsdWVzTXV0YXRpb247XG4gIGV4cG9ydCB0eXBlIENyZWF0ZUZhY2V0VmFsdWVzID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPENyZWF0ZUZhY2V0VmFsdWVzTXV0YXRpb25bJ2NyZWF0ZUZhY2V0VmFsdWVzJ10+KVtudW1iZXJdPjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBVcGRhdGVGYWNldFZhbHVlcyB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IFVwZGF0ZUZhY2V0VmFsdWVzTXV0YXRpb25WYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIE11dGF0aW9uID0gVXBkYXRlRmFjZXRWYWx1ZXNNdXRhdGlvbjtcbiAgZXhwb3J0IHR5cGUgVXBkYXRlRmFjZXRWYWx1ZXMgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8VXBkYXRlRmFjZXRWYWx1ZXNNdXRhdGlvblsndXBkYXRlRmFjZXRWYWx1ZXMnXT4pW251bWJlcl0+O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIERlbGV0ZUZhY2V0VmFsdWVzIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gRGVsZXRlRmFjZXRWYWx1ZXNNdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBEZWxldGVGYWNldFZhbHVlc011dGF0aW9uO1xuICBleHBvcnQgdHlwZSBEZWxldGVGYWNldFZhbHVlcyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxEZWxldGVGYWNldFZhbHVlc011dGF0aW9uWydkZWxldGVGYWNldFZhbHVlcyddPilbbnVtYmVyXT47XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgR2V0RmFjZXRMaXN0IHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gR2V0RmFjZXRMaXN0UXVlcnlWYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIFF1ZXJ5ID0gR2V0RmFjZXRMaXN0UXVlcnk7XG4gIGV4cG9ydCB0eXBlIEZhY2V0cyA9IChOb25OdWxsYWJsZTxHZXRGYWNldExpc3RRdWVyeVsnZmFjZXRzJ10+KTtcbiAgZXhwb3J0IHR5cGUgSXRlbXMgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldEZhY2V0TGlzdFF1ZXJ5WydmYWNldHMnXT4pWydpdGVtcyddPilbbnVtYmVyXT47XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgR2V0RmFjZXRXaXRoVmFsdWVzIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gR2V0RmFjZXRXaXRoVmFsdWVzUXVlcnlWYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIFF1ZXJ5ID0gR2V0RmFjZXRXaXRoVmFsdWVzUXVlcnk7XG4gIGV4cG9ydCB0eXBlIEZhY2V0ID0gKE5vbk51bGxhYmxlPEdldEZhY2V0V2l0aFZhbHVlc1F1ZXJ5WydmYWNldCddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgRGlzY291bnQge1xuICBleHBvcnQgdHlwZSBGcmFnbWVudCA9IERpc2NvdW50RnJhZ21lbnQ7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgUmVmdW5kIHtcbiAgZXhwb3J0IHR5cGUgRnJhZ21lbnQgPSBSZWZ1bmRGcmFnbWVudDtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBPcmRlckFkZHJlc3Mge1xuICBleHBvcnQgdHlwZSBGcmFnbWVudCA9IE9yZGVyQWRkcmVzc0ZyYWdtZW50O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIE9yZGVyIHtcbiAgZXhwb3J0IHR5cGUgRnJhZ21lbnQgPSBPcmRlckZyYWdtZW50O1xuICBleHBvcnQgdHlwZSBDdXN0b21lciA9IChOb25OdWxsYWJsZTxPcmRlckZyYWdtZW50WydjdXN0b21lciddPik7XG4gIGV4cG9ydCB0eXBlIFNoaXBwaW5nTGluZXMgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8T3JkZXJGcmFnbWVudFsnc2hpcHBpbmdMaW5lcyddPilbbnVtYmVyXT47XG4gIGV4cG9ydCB0eXBlIFNoaXBwaW5nTWV0aG9kID0gKE5vbk51bGxhYmxlPE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxPcmRlckZyYWdtZW50WydzaGlwcGluZ0xpbmVzJ10+KVtudW1iZXJdPlsnc2hpcHBpbmdNZXRob2QnXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEZ1bGZpbGxtZW50IHtcbiAgZXhwb3J0IHR5cGUgRnJhZ21lbnQgPSBGdWxmaWxsbWVudEZyYWdtZW50O1xuICBleHBvcnQgdHlwZSBPcmRlckl0ZW1zID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEZ1bGZpbGxtZW50RnJhZ21lbnRbJ29yZGVySXRlbXMnXT4pW251bWJlcl0+O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIE9yZGVyTGluZSB7XG4gIGV4cG9ydCB0eXBlIEZyYWdtZW50ID0gT3JkZXJMaW5lRnJhZ21lbnQ7XG4gIGV4cG9ydCB0eXBlIEZlYXR1cmVkQXNzZXQgPSAoTm9uTnVsbGFibGU8T3JkZXJMaW5lRnJhZ21lbnRbJ2ZlYXR1cmVkQXNzZXQnXT4pO1xuICBleHBvcnQgdHlwZSBQcm9kdWN0VmFyaWFudCA9IChOb25OdWxsYWJsZTxPcmRlckxpbmVGcmFnbWVudFsncHJvZHVjdFZhcmlhbnQnXT4pO1xuICBleHBvcnQgdHlwZSBEaXNjb3VudHMgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8T3JkZXJMaW5lRnJhZ21lbnRbJ2Rpc2NvdW50cyddPilbbnVtYmVyXT47XG4gIGV4cG9ydCB0eXBlIEl0ZW1zID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPE9yZGVyTGluZUZyYWdtZW50WydpdGVtcyddPilbbnVtYmVyXT47XG4gIGV4cG9ydCB0eXBlIEZ1bGZpbGxtZW50ID0gKE5vbk51bGxhYmxlPE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxPcmRlckxpbmVGcmFnbWVudFsnaXRlbXMnXT4pW251bWJlcl0+WydmdWxmaWxsbWVudCddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgT3JkZXJEZXRhaWwge1xuICBleHBvcnQgdHlwZSBGcmFnbWVudCA9IE9yZGVyRGV0YWlsRnJhZ21lbnQ7XG4gIGV4cG9ydCB0eXBlIEN1c3RvbWVyID0gKE5vbk51bGxhYmxlPE9yZGVyRGV0YWlsRnJhZ21lbnRbJ2N1c3RvbWVyJ10+KTtcbiAgZXhwb3J0IHR5cGUgTGluZXMgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8T3JkZXJEZXRhaWxGcmFnbWVudFsnbGluZXMnXT4pW251bWJlcl0+O1xuICBleHBvcnQgdHlwZSBTdXJjaGFyZ2VzID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPE9yZGVyRGV0YWlsRnJhZ21lbnRbJ3N1cmNoYXJnZXMnXT4pW251bWJlcl0+O1xuICBleHBvcnQgdHlwZSBEaXNjb3VudHMgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8T3JkZXJEZXRhaWxGcmFnbWVudFsnZGlzY291bnRzJ10+KVtudW1iZXJdPjtcbiAgZXhwb3J0IHR5cGUgUHJvbW90aW9ucyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxPcmRlckRldGFpbEZyYWdtZW50Wydwcm9tb3Rpb25zJ10+KVtudW1iZXJdPjtcbiAgZXhwb3J0IHR5cGUgU2hpcHBpbmdMaW5lcyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxPcmRlckRldGFpbEZyYWdtZW50WydzaGlwcGluZ0xpbmVzJ10+KVtudW1iZXJdPjtcbiAgZXhwb3J0IHR5cGUgU2hpcHBpbmdNZXRob2QgPSAoTm9uTnVsbGFibGU8Tm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPE9yZGVyRGV0YWlsRnJhZ21lbnRbJ3NoaXBwaW5nTGluZXMnXT4pW251bWJlcl0+WydzaGlwcGluZ01ldGhvZCddPik7XG4gIGV4cG9ydCB0eXBlIFRheFN1bW1hcnkgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8T3JkZXJEZXRhaWxGcmFnbWVudFsndGF4U3VtbWFyeSddPilbbnVtYmVyXT47XG4gIGV4cG9ydCB0eXBlIFNoaXBwaW5nQWRkcmVzcyA9IChOb25OdWxsYWJsZTxPcmRlckRldGFpbEZyYWdtZW50WydzaGlwcGluZ0FkZHJlc3MnXT4pO1xuICBleHBvcnQgdHlwZSBCaWxsaW5nQWRkcmVzcyA9IChOb25OdWxsYWJsZTxPcmRlckRldGFpbEZyYWdtZW50WydiaWxsaW5nQWRkcmVzcyddPik7XG4gIGV4cG9ydCB0eXBlIFBheW1lbnRzID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPE9yZGVyRGV0YWlsRnJhZ21lbnRbJ3BheW1lbnRzJ10+KVtudW1iZXJdPjtcbiAgZXhwb3J0IHR5cGUgUmVmdW5kcyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8T3JkZXJEZXRhaWxGcmFnbWVudFsncGF5bWVudHMnXT4pW251bWJlcl0+WydyZWZ1bmRzJ10+KVtudW1iZXJdPjtcbiAgZXhwb3J0IHR5cGUgT3JkZXJJdGVtcyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8Tm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPE9yZGVyRGV0YWlsRnJhZ21lbnRbJ3BheW1lbnRzJ10+KVtudW1iZXJdPlsncmVmdW5kcyddPilbbnVtYmVyXT5bJ29yZGVySXRlbXMnXT4pW251bWJlcl0+O1xuICBleHBvcnQgdHlwZSBGdWxmaWxsbWVudHMgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8T3JkZXJEZXRhaWxGcmFnbWVudFsnZnVsZmlsbG1lbnRzJ10+KVtudW1iZXJdPjtcbiAgZXhwb3J0IHR5cGUgTW9kaWZpY2F0aW9ucyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxPcmRlckRldGFpbEZyYWdtZW50Wydtb2RpZmljYXRpb25zJ10+KVtudW1iZXJdPjtcbiAgZXhwb3J0IHR5cGUgUGF5bWVudCA9IChOb25OdWxsYWJsZTxOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8T3JkZXJEZXRhaWxGcmFnbWVudFsnbW9kaWZpY2F0aW9ucyddPilbbnVtYmVyXT5bJ3BheW1lbnQnXT4pO1xuICBleHBvcnQgdHlwZSBfT3JkZXJJdGVtcyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8T3JkZXJEZXRhaWxGcmFnbWVudFsnbW9kaWZpY2F0aW9ucyddPilbbnVtYmVyXT5bJ29yZGVySXRlbXMnXT4pW251bWJlcl0+O1xuICBleHBvcnQgdHlwZSBSZWZ1bmQgPSAoTm9uTnVsbGFibGU8Tm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPE9yZGVyRGV0YWlsRnJhZ21lbnRbJ21vZGlmaWNhdGlvbnMnXT4pW251bWJlcl0+WydyZWZ1bmQnXT4pO1xuICBleHBvcnQgdHlwZSBfU3VyY2hhcmdlcyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8T3JkZXJEZXRhaWxGcmFnbWVudFsnbW9kaWZpY2F0aW9ucyddPilbbnVtYmVyXT5bJ3N1cmNoYXJnZXMnXT4pW251bWJlcl0+O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEdldE9yZGVyTGlzdCB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IEdldE9yZGVyTGlzdFF1ZXJ5VmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBRdWVyeSA9IEdldE9yZGVyTGlzdFF1ZXJ5O1xuICBleHBvcnQgdHlwZSBPcmRlcnMgPSAoTm9uTnVsbGFibGU8R2V0T3JkZXJMaXN0UXVlcnlbJ29yZGVycyddPik7XG4gIGV4cG9ydCB0eXBlIEl0ZW1zID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxHZXRPcmRlckxpc3RRdWVyeVsnb3JkZXJzJ10+KVsnaXRlbXMnXT4pW251bWJlcl0+O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEdldE9yZGVyIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gR2V0T3JkZXJRdWVyeVZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgUXVlcnkgPSBHZXRPcmRlclF1ZXJ5O1xuICBleHBvcnQgdHlwZSBPcmRlciA9IChOb25OdWxsYWJsZTxHZXRPcmRlclF1ZXJ5WydvcmRlciddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgU2V0dGxlUGF5bWVudCB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IFNldHRsZVBheW1lbnRNdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBTZXR0bGVQYXltZW50TXV0YXRpb247XG4gIGV4cG9ydCB0eXBlIFNldHRsZVBheW1lbnQgPSAoTm9uTnVsbGFibGU8U2V0dGxlUGF5bWVudE11dGF0aW9uWydzZXR0bGVQYXltZW50J10+KTtcbiAgZXhwb3J0IHR5cGUgUGF5bWVudElubGluZUZyYWdtZW50ID0gKERpc2NyaW1pbmF0ZVVuaW9uPChOb25OdWxsYWJsZTxTZXR0bGVQYXltZW50TXV0YXRpb25bJ3NldHRsZVBheW1lbnQnXT4pLCB7IF9fdHlwZW5hbWU/OiAnUGF5bWVudCcgfT4pO1xuICBleHBvcnQgdHlwZSBTZXR0bGVQYXltZW50RXJyb3JJbmxpbmVGcmFnbWVudCA9IChEaXNjcmltaW5hdGVVbmlvbjwoTm9uTnVsbGFibGU8U2V0dGxlUGF5bWVudE11dGF0aW9uWydzZXR0bGVQYXltZW50J10+KSwgeyBfX3R5cGVuYW1lPzogJ1NldHRsZVBheW1lbnRFcnJvcicgfT4pO1xuICBleHBvcnQgdHlwZSBQYXltZW50U3RhdGVUcmFuc2l0aW9uRXJyb3JJbmxpbmVGcmFnbWVudCA9IChEaXNjcmltaW5hdGVVbmlvbjwoTm9uTnVsbGFibGU8U2V0dGxlUGF5bWVudE11dGF0aW9uWydzZXR0bGVQYXltZW50J10+KSwgeyBfX3R5cGVuYW1lPzogJ1BheW1lbnRTdGF0ZVRyYW5zaXRpb25FcnJvcicgfT4pO1xuICBleHBvcnQgdHlwZSBPcmRlclN0YXRlVHJhbnNpdGlvbkVycm9ySW5saW5lRnJhZ21lbnQgPSAoRGlzY3JpbWluYXRlVW5pb248KE5vbk51bGxhYmxlPFNldHRsZVBheW1lbnRNdXRhdGlvblsnc2V0dGxlUGF5bWVudCddPiksIHsgX190eXBlbmFtZT86ICdPcmRlclN0YXRlVHJhbnNpdGlvbkVycm9yJyB9Pik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgVHJhbnNpdGlvblBheW1lbnRUb1N0YXRlIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gVHJhbnNpdGlvblBheW1lbnRUb1N0YXRlTXV0YXRpb25WYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIE11dGF0aW9uID0gVHJhbnNpdGlvblBheW1lbnRUb1N0YXRlTXV0YXRpb247XG4gIGV4cG9ydCB0eXBlIFRyYW5zaXRpb25QYXltZW50VG9TdGF0ZSA9IChOb25OdWxsYWJsZTxUcmFuc2l0aW9uUGF5bWVudFRvU3RhdGVNdXRhdGlvblsndHJhbnNpdGlvblBheW1lbnRUb1N0YXRlJ10+KTtcbiAgZXhwb3J0IHR5cGUgUGF5bWVudElubGluZUZyYWdtZW50ID0gKERpc2NyaW1pbmF0ZVVuaW9uPChOb25OdWxsYWJsZTxUcmFuc2l0aW9uUGF5bWVudFRvU3RhdGVNdXRhdGlvblsndHJhbnNpdGlvblBheW1lbnRUb1N0YXRlJ10+KSwgeyBfX3R5cGVuYW1lPzogJ1BheW1lbnQnIH0+KTtcbiAgZXhwb3J0IHR5cGUgUGF5bWVudFN0YXRlVHJhbnNpdGlvbkVycm9ySW5saW5lRnJhZ21lbnQgPSAoRGlzY3JpbWluYXRlVW5pb248KE5vbk51bGxhYmxlPFRyYW5zaXRpb25QYXltZW50VG9TdGF0ZU11dGF0aW9uWyd0cmFuc2l0aW9uUGF5bWVudFRvU3RhdGUnXT4pLCB7IF9fdHlwZW5hbWU/OiAnUGF5bWVudFN0YXRlVHJhbnNpdGlvbkVycm9yJyB9Pik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgQ3JlYXRlRnVsZmlsbG1lbnQge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBDcmVhdGVGdWxmaWxsbWVudE11dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IENyZWF0ZUZ1bGZpbGxtZW50TXV0YXRpb247XG4gIGV4cG9ydCB0eXBlIEFkZEZ1bGZpbGxtZW50VG9PcmRlciA9IChOb25OdWxsYWJsZTxDcmVhdGVGdWxmaWxsbWVudE11dGF0aW9uWydhZGRGdWxmaWxsbWVudFRvT3JkZXInXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIENhbmNlbE9yZGVyIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gQ2FuY2VsT3JkZXJNdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBDYW5jZWxPcmRlck11dGF0aW9uO1xuICBleHBvcnQgdHlwZSBDYW5jZWxPcmRlciA9IChOb25OdWxsYWJsZTxDYW5jZWxPcmRlck11dGF0aW9uWydjYW5jZWxPcmRlciddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgUmVmdW5kT3JkZXIge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBSZWZ1bmRPcmRlck11dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IFJlZnVuZE9yZGVyTXV0YXRpb247XG4gIGV4cG9ydCB0eXBlIFJlZnVuZE9yZGVyID0gKE5vbk51bGxhYmxlPFJlZnVuZE9yZGVyTXV0YXRpb25bJ3JlZnVuZE9yZGVyJ10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBTZXR0bGVSZWZ1bmQge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBTZXR0bGVSZWZ1bmRNdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBTZXR0bGVSZWZ1bmRNdXRhdGlvbjtcbiAgZXhwb3J0IHR5cGUgU2V0dGxlUmVmdW5kID0gKE5vbk51bGxhYmxlPFNldHRsZVJlZnVuZE11dGF0aW9uWydzZXR0bGVSZWZ1bmQnXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEdldE9yZGVySGlzdG9yeSB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IEdldE9yZGVySGlzdG9yeVF1ZXJ5VmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBRdWVyeSA9IEdldE9yZGVySGlzdG9yeVF1ZXJ5O1xuICBleHBvcnQgdHlwZSBPcmRlciA9IChOb25OdWxsYWJsZTxHZXRPcmRlckhpc3RvcnlRdWVyeVsnb3JkZXInXT4pO1xuICBleHBvcnQgdHlwZSBIaXN0b3J5ID0gKE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxHZXRPcmRlckhpc3RvcnlRdWVyeVsnb3JkZXInXT4pWydoaXN0b3J5J10+KTtcbiAgZXhwb3J0IHR5cGUgSXRlbXMgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxHZXRPcmRlckhpc3RvcnlRdWVyeVsnb3JkZXInXT4pWydoaXN0b3J5J10+KVsnaXRlbXMnXT4pW251bWJlcl0+O1xuICBleHBvcnQgdHlwZSBBZG1pbmlzdHJhdG9yID0gKE5vbk51bGxhYmxlPE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldE9yZGVySGlzdG9yeVF1ZXJ5WydvcmRlciddPilbJ2hpc3RvcnknXT4pWydpdGVtcyddPilbbnVtYmVyXT5bJ2FkbWluaXN0cmF0b3InXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEFkZE5vdGVUb09yZGVyIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gQWRkTm90ZVRvT3JkZXJNdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBBZGROb3RlVG9PcmRlck11dGF0aW9uO1xuICBleHBvcnQgdHlwZSBBZGROb3RlVG9PcmRlciA9IChOb25OdWxsYWJsZTxBZGROb3RlVG9PcmRlck11dGF0aW9uWydhZGROb3RlVG9PcmRlciddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgVXBkYXRlT3JkZXJOb3RlIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gVXBkYXRlT3JkZXJOb3RlTXV0YXRpb25WYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIE11dGF0aW9uID0gVXBkYXRlT3JkZXJOb3RlTXV0YXRpb247XG4gIGV4cG9ydCB0eXBlIFVwZGF0ZU9yZGVyTm90ZSA9IChOb25OdWxsYWJsZTxVcGRhdGVPcmRlck5vdGVNdXRhdGlvblsndXBkYXRlT3JkZXJOb3RlJ10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBEZWxldGVPcmRlck5vdGUge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBEZWxldGVPcmRlck5vdGVNdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBEZWxldGVPcmRlck5vdGVNdXRhdGlvbjtcbiAgZXhwb3J0IHR5cGUgRGVsZXRlT3JkZXJOb3RlID0gKE5vbk51bGxhYmxlPERlbGV0ZU9yZGVyTm90ZU11dGF0aW9uWydkZWxldGVPcmRlck5vdGUnXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFRyYW5zaXRpb25PcmRlclRvU3RhdGUge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBUcmFuc2l0aW9uT3JkZXJUb1N0YXRlTXV0YXRpb25WYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIE11dGF0aW9uID0gVHJhbnNpdGlvbk9yZGVyVG9TdGF0ZU11dGF0aW9uO1xuICBleHBvcnQgdHlwZSBUcmFuc2l0aW9uT3JkZXJUb1N0YXRlID0gKE5vbk51bGxhYmxlPFRyYW5zaXRpb25PcmRlclRvU3RhdGVNdXRhdGlvblsndHJhbnNpdGlvbk9yZGVyVG9TdGF0ZSddPik7XG4gIGV4cG9ydCB0eXBlIE9yZGVyU3RhdGVUcmFuc2l0aW9uRXJyb3JJbmxpbmVGcmFnbWVudCA9IChEaXNjcmltaW5hdGVVbmlvbjwoTm9uTnVsbGFibGU8VHJhbnNpdGlvbk9yZGVyVG9TdGF0ZU11dGF0aW9uWyd0cmFuc2l0aW9uT3JkZXJUb1N0YXRlJ10+KSwgeyBfX3R5cGVuYW1lPzogJ09yZGVyU3RhdGVUcmFuc2l0aW9uRXJyb3InIH0+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBVcGRhdGVPcmRlckN1c3RvbUZpZWxkcyB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IFVwZGF0ZU9yZGVyQ3VzdG9tRmllbGRzTXV0YXRpb25WYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIE11dGF0aW9uID0gVXBkYXRlT3JkZXJDdXN0b21GaWVsZHNNdXRhdGlvbjtcbiAgZXhwb3J0IHR5cGUgU2V0T3JkZXJDdXN0b21GaWVsZHMgPSAoTm9uTnVsbGFibGU8VXBkYXRlT3JkZXJDdXN0b21GaWVsZHNNdXRhdGlvblsnc2V0T3JkZXJDdXN0b21GaWVsZHMnXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFRyYW5zaXRpb25GdWxmaWxsbWVudFRvU3RhdGUge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBUcmFuc2l0aW9uRnVsZmlsbG1lbnRUb1N0YXRlTXV0YXRpb25WYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIE11dGF0aW9uID0gVHJhbnNpdGlvbkZ1bGZpbGxtZW50VG9TdGF0ZU11dGF0aW9uO1xuICBleHBvcnQgdHlwZSBUcmFuc2l0aW9uRnVsZmlsbG1lbnRUb1N0YXRlID0gKE5vbk51bGxhYmxlPFRyYW5zaXRpb25GdWxmaWxsbWVudFRvU3RhdGVNdXRhdGlvblsndHJhbnNpdGlvbkZ1bGZpbGxtZW50VG9TdGF0ZSddPik7XG4gIGV4cG9ydCB0eXBlIEZ1bGZpbGxtZW50U3RhdGVUcmFuc2l0aW9uRXJyb3JJbmxpbmVGcmFnbWVudCA9IChEaXNjcmltaW5hdGVVbmlvbjwoTm9uTnVsbGFibGU8VHJhbnNpdGlvbkZ1bGZpbGxtZW50VG9TdGF0ZU11dGF0aW9uWyd0cmFuc2l0aW9uRnVsZmlsbG1lbnRUb1N0YXRlJ10+KSwgeyBfX3R5cGVuYW1lPzogJ0Z1bGZpbGxtZW50U3RhdGVUcmFuc2l0aW9uRXJyb3InIH0+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBHZXRPcmRlclN1bW1hcnkge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBHZXRPcmRlclN1bW1hcnlRdWVyeVZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgUXVlcnkgPSBHZXRPcmRlclN1bW1hcnlRdWVyeTtcbiAgZXhwb3J0IHR5cGUgT3JkZXJzID0gKE5vbk51bGxhYmxlPEdldE9yZGVyU3VtbWFyeVF1ZXJ5WydvcmRlcnMnXT4pO1xuICBleHBvcnQgdHlwZSBJdGVtcyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8R2V0T3JkZXJTdW1tYXJ5UXVlcnlbJ29yZGVycyddPilbJ2l0ZW1zJ10+KVtudW1iZXJdPjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBNb2RpZnlPcmRlciB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IE1vZGlmeU9yZGVyTXV0YXRpb25WYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIE11dGF0aW9uID0gTW9kaWZ5T3JkZXJNdXRhdGlvbjtcbiAgZXhwb3J0IHR5cGUgTW9kaWZ5T3JkZXIgPSAoTm9uTnVsbGFibGU8TW9kaWZ5T3JkZXJNdXRhdGlvblsnbW9kaWZ5T3JkZXInXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEFkZE1hbnVhbFBheW1lbnQge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBBZGRNYW51YWxQYXltZW50TXV0YXRpb25WYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIE11dGF0aW9uID0gQWRkTWFudWFsUGF5bWVudE11dGF0aW9uO1xuICBleHBvcnQgdHlwZSBBZGRNYW51YWxQYXltZW50VG9PcmRlciA9IChOb25OdWxsYWJsZTxBZGRNYW51YWxQYXltZW50TXV0YXRpb25bJ2FkZE1hbnVhbFBheW1lbnRUb09yZGVyJ10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBBc3NldCB7XG4gIGV4cG9ydCB0eXBlIEZyYWdtZW50ID0gQXNzZXRGcmFnbWVudDtcbiAgZXhwb3J0IHR5cGUgRm9jYWxQb2ludCA9IChOb25OdWxsYWJsZTxBc3NldEZyYWdtZW50Wydmb2NhbFBvaW50J10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBUYWcge1xuICBleHBvcnQgdHlwZSBGcmFnbWVudCA9IFRhZ0ZyYWdtZW50O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFByb2R1Y3RPcHRpb25Hcm91cCB7XG4gIGV4cG9ydCB0eXBlIEZyYWdtZW50ID0gUHJvZHVjdE9wdGlvbkdyb3VwRnJhZ21lbnQ7XG4gIGV4cG9ydCB0eXBlIFRyYW5zbGF0aW9ucyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxQcm9kdWN0T3B0aW9uR3JvdXBGcmFnbWVudFsndHJhbnNsYXRpb25zJ10+KVtudW1iZXJdPjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBQcm9kdWN0T3B0aW9uIHtcbiAgZXhwb3J0IHR5cGUgRnJhZ21lbnQgPSBQcm9kdWN0T3B0aW9uRnJhZ21lbnQ7XG4gIGV4cG9ydCB0eXBlIFRyYW5zbGF0aW9ucyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxQcm9kdWN0T3B0aW9uRnJhZ21lbnRbJ3RyYW5zbGF0aW9ucyddPilbbnVtYmVyXT47XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgUHJvZHVjdFZhcmlhbnQge1xuICBleHBvcnQgdHlwZSBGcmFnbWVudCA9IFByb2R1Y3RWYXJpYW50RnJhZ21lbnQ7XG4gIGV4cG9ydCB0eXBlIFRheFJhdGVBcHBsaWVkID0gKE5vbk51bGxhYmxlPFByb2R1Y3RWYXJpYW50RnJhZ21lbnRbJ3RheFJhdGVBcHBsaWVkJ10+KTtcbiAgZXhwb3J0IHR5cGUgVGF4Q2F0ZWdvcnkgPSAoTm9uTnVsbGFibGU8UHJvZHVjdFZhcmlhbnRGcmFnbWVudFsndGF4Q2F0ZWdvcnknXT4pO1xuICBleHBvcnQgdHlwZSBPcHRpb25zID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPFByb2R1Y3RWYXJpYW50RnJhZ21lbnRbJ29wdGlvbnMnXT4pW251bWJlcl0+O1xuICBleHBvcnQgdHlwZSBGYWNldFZhbHVlcyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxQcm9kdWN0VmFyaWFudEZyYWdtZW50WydmYWNldFZhbHVlcyddPilbbnVtYmVyXT47XG4gIGV4cG9ydCB0eXBlIEZhY2V0ID0gKE5vbk51bGxhYmxlPE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxQcm9kdWN0VmFyaWFudEZyYWdtZW50WydmYWNldFZhbHVlcyddPilbbnVtYmVyXT5bJ2ZhY2V0J10+KTtcbiAgZXhwb3J0IHR5cGUgRmVhdHVyZWRBc3NldCA9IChOb25OdWxsYWJsZTxQcm9kdWN0VmFyaWFudEZyYWdtZW50WydmZWF0dXJlZEFzc2V0J10+KTtcbiAgZXhwb3J0IHR5cGUgQXNzZXRzID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPFByb2R1Y3RWYXJpYW50RnJhZ21lbnRbJ2Fzc2V0cyddPilbbnVtYmVyXT47XG4gIGV4cG9ydCB0eXBlIFRyYW5zbGF0aW9ucyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxQcm9kdWN0VmFyaWFudEZyYWdtZW50Wyd0cmFuc2xhdGlvbnMnXT4pW251bWJlcl0+O1xuICBleHBvcnQgdHlwZSBDaGFubmVscyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxQcm9kdWN0VmFyaWFudEZyYWdtZW50WydjaGFubmVscyddPilbbnVtYmVyXT47XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgUHJvZHVjdFdpdGhWYXJpYW50cyB7XG4gIGV4cG9ydCB0eXBlIEZyYWdtZW50ID0gUHJvZHVjdFdpdGhWYXJpYW50c0ZyYWdtZW50O1xuICBleHBvcnQgdHlwZSBGZWF0dXJlZEFzc2V0ID0gKE5vbk51bGxhYmxlPFByb2R1Y3RXaXRoVmFyaWFudHNGcmFnbWVudFsnZmVhdHVyZWRBc3NldCddPik7XG4gIGV4cG9ydCB0eXBlIEFzc2V0cyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxQcm9kdWN0V2l0aFZhcmlhbnRzRnJhZ21lbnRbJ2Fzc2V0cyddPilbbnVtYmVyXT47XG4gIGV4cG9ydCB0eXBlIFRyYW5zbGF0aW9ucyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxQcm9kdWN0V2l0aFZhcmlhbnRzRnJhZ21lbnRbJ3RyYW5zbGF0aW9ucyddPilbbnVtYmVyXT47XG4gIGV4cG9ydCB0eXBlIE9wdGlvbkdyb3VwcyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxQcm9kdWN0V2l0aFZhcmlhbnRzRnJhZ21lbnRbJ29wdGlvbkdyb3VwcyddPilbbnVtYmVyXT47XG4gIGV4cG9ydCB0eXBlIFZhcmlhbnRzID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPFByb2R1Y3RXaXRoVmFyaWFudHNGcmFnbWVudFsndmFyaWFudHMnXT4pW251bWJlcl0+O1xuICBleHBvcnQgdHlwZSBGYWNldFZhbHVlcyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxQcm9kdWN0V2l0aFZhcmlhbnRzRnJhZ21lbnRbJ2ZhY2V0VmFsdWVzJ10+KVtudW1iZXJdPjtcbiAgZXhwb3J0IHR5cGUgRmFjZXQgPSAoTm9uTnVsbGFibGU8Tm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPFByb2R1Y3RXaXRoVmFyaWFudHNGcmFnbWVudFsnZmFjZXRWYWx1ZXMnXT4pW251bWJlcl0+WydmYWNldCddPik7XG4gIGV4cG9ydCB0eXBlIENoYW5uZWxzID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPFByb2R1Y3RXaXRoVmFyaWFudHNGcmFnbWVudFsnY2hhbm5lbHMnXT4pW251bWJlcl0+O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFByb2R1Y3RPcHRpb25Hcm91cFdpdGhPcHRpb25zIHtcbiAgZXhwb3J0IHR5cGUgRnJhZ21lbnQgPSBQcm9kdWN0T3B0aW9uR3JvdXBXaXRoT3B0aW9uc0ZyYWdtZW50O1xuICBleHBvcnQgdHlwZSBUcmFuc2xhdGlvbnMgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8UHJvZHVjdE9wdGlvbkdyb3VwV2l0aE9wdGlvbnNGcmFnbWVudFsndHJhbnNsYXRpb25zJ10+KVtudW1iZXJdPjtcbiAgZXhwb3J0IHR5cGUgT3B0aW9ucyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxQcm9kdWN0T3B0aW9uR3JvdXBXaXRoT3B0aW9uc0ZyYWdtZW50WydvcHRpb25zJ10+KVtudW1iZXJdPjtcbiAgZXhwb3J0IHR5cGUgX1RyYW5zbGF0aW9ucyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8UHJvZHVjdE9wdGlvbkdyb3VwV2l0aE9wdGlvbnNGcmFnbWVudFsnb3B0aW9ucyddPilbbnVtYmVyXT5bJ3RyYW5zbGF0aW9ucyddPilbbnVtYmVyXT47XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgVXBkYXRlUHJvZHVjdCB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IFVwZGF0ZVByb2R1Y3RNdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBVcGRhdGVQcm9kdWN0TXV0YXRpb247XG4gIGV4cG9ydCB0eXBlIFVwZGF0ZVByb2R1Y3QgPSAoTm9uTnVsbGFibGU8VXBkYXRlUHJvZHVjdE11dGF0aW9uWyd1cGRhdGVQcm9kdWN0J10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBDcmVhdGVQcm9kdWN0IHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gQ3JlYXRlUHJvZHVjdE11dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IENyZWF0ZVByb2R1Y3RNdXRhdGlvbjtcbiAgZXhwb3J0IHR5cGUgQ3JlYXRlUHJvZHVjdCA9IChOb25OdWxsYWJsZTxDcmVhdGVQcm9kdWN0TXV0YXRpb25bJ2NyZWF0ZVByb2R1Y3QnXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIERlbGV0ZVByb2R1Y3Qge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBEZWxldGVQcm9kdWN0TXV0YXRpb25WYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIE11dGF0aW9uID0gRGVsZXRlUHJvZHVjdE11dGF0aW9uO1xuICBleHBvcnQgdHlwZSBEZWxldGVQcm9kdWN0ID0gKE5vbk51bGxhYmxlPERlbGV0ZVByb2R1Y3RNdXRhdGlvblsnZGVsZXRlUHJvZHVjdCddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgQ3JlYXRlUHJvZHVjdFZhcmlhbnRzIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gQ3JlYXRlUHJvZHVjdFZhcmlhbnRzTXV0YXRpb25WYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIE11dGF0aW9uID0gQ3JlYXRlUHJvZHVjdFZhcmlhbnRzTXV0YXRpb247XG4gIGV4cG9ydCB0eXBlIENyZWF0ZVByb2R1Y3RWYXJpYW50cyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxDcmVhdGVQcm9kdWN0VmFyaWFudHNNdXRhdGlvblsnY3JlYXRlUHJvZHVjdFZhcmlhbnRzJ10+KVtudW1iZXJdPjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBVcGRhdGVQcm9kdWN0VmFyaWFudHMge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBVcGRhdGVQcm9kdWN0VmFyaWFudHNNdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBVcGRhdGVQcm9kdWN0VmFyaWFudHNNdXRhdGlvbjtcbiAgZXhwb3J0IHR5cGUgVXBkYXRlUHJvZHVjdFZhcmlhbnRzID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPFVwZGF0ZVByb2R1Y3RWYXJpYW50c011dGF0aW9uWyd1cGRhdGVQcm9kdWN0VmFyaWFudHMnXT4pW251bWJlcl0+O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIENyZWF0ZVByb2R1Y3RPcHRpb25Hcm91cCB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IENyZWF0ZVByb2R1Y3RPcHRpb25Hcm91cE11dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IENyZWF0ZVByb2R1Y3RPcHRpb25Hcm91cE11dGF0aW9uO1xuICBleHBvcnQgdHlwZSBDcmVhdGVQcm9kdWN0T3B0aW9uR3JvdXAgPSAoTm9uTnVsbGFibGU8Q3JlYXRlUHJvZHVjdE9wdGlvbkdyb3VwTXV0YXRpb25bJ2NyZWF0ZVByb2R1Y3RPcHRpb25Hcm91cCddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgR2V0UHJvZHVjdE9wdGlvbkdyb3VwIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gR2V0UHJvZHVjdE9wdGlvbkdyb3VwUXVlcnlWYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIFF1ZXJ5ID0gR2V0UHJvZHVjdE9wdGlvbkdyb3VwUXVlcnk7XG4gIGV4cG9ydCB0eXBlIFByb2R1Y3RPcHRpb25Hcm91cCA9IChOb25OdWxsYWJsZTxHZXRQcm9kdWN0T3B0aW9uR3JvdXBRdWVyeVsncHJvZHVjdE9wdGlvbkdyb3VwJ10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBBZGRPcHRpb25Ub0dyb3VwIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gQWRkT3B0aW9uVG9Hcm91cE11dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IEFkZE9wdGlvblRvR3JvdXBNdXRhdGlvbjtcbiAgZXhwb3J0IHR5cGUgQ3JlYXRlUHJvZHVjdE9wdGlvbiA9IChOb25OdWxsYWJsZTxBZGRPcHRpb25Ub0dyb3VwTXV0YXRpb25bJ2NyZWF0ZVByb2R1Y3RPcHRpb24nXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEFkZE9wdGlvbkdyb3VwVG9Qcm9kdWN0IHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gQWRkT3B0aW9uR3JvdXBUb1Byb2R1Y3RNdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBBZGRPcHRpb25Hcm91cFRvUHJvZHVjdE11dGF0aW9uO1xuICBleHBvcnQgdHlwZSBBZGRPcHRpb25Hcm91cFRvUHJvZHVjdCA9IChOb25OdWxsYWJsZTxBZGRPcHRpb25Hcm91cFRvUHJvZHVjdE11dGF0aW9uWydhZGRPcHRpb25Hcm91cFRvUHJvZHVjdCddPik7XG4gIGV4cG9ydCB0eXBlIE9wdGlvbkdyb3VwcyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8QWRkT3B0aW9uR3JvdXBUb1Byb2R1Y3RNdXRhdGlvblsnYWRkT3B0aW9uR3JvdXBUb1Byb2R1Y3QnXT4pWydvcHRpb25Hcm91cHMnXT4pW251bWJlcl0+O1xuICBleHBvcnQgdHlwZSBPcHRpb25zID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8QWRkT3B0aW9uR3JvdXBUb1Byb2R1Y3RNdXRhdGlvblsnYWRkT3B0aW9uR3JvdXBUb1Byb2R1Y3QnXT4pWydvcHRpb25Hcm91cHMnXT4pW251bWJlcl0+WydvcHRpb25zJ10+KVtudW1iZXJdPjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBSZW1vdmVPcHRpb25Hcm91cEZyb21Qcm9kdWN0IHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gUmVtb3ZlT3B0aW9uR3JvdXBGcm9tUHJvZHVjdE11dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IFJlbW92ZU9wdGlvbkdyb3VwRnJvbVByb2R1Y3RNdXRhdGlvbjtcbiAgZXhwb3J0IHR5cGUgUmVtb3ZlT3B0aW9uR3JvdXBGcm9tUHJvZHVjdCA9IChOb25OdWxsYWJsZTxSZW1vdmVPcHRpb25Hcm91cEZyb21Qcm9kdWN0TXV0YXRpb25bJ3JlbW92ZU9wdGlvbkdyb3VwRnJvbVByb2R1Y3QnXT4pO1xuICBleHBvcnQgdHlwZSBQcm9kdWN0SW5saW5lRnJhZ21lbnQgPSAoRGlzY3JpbWluYXRlVW5pb248KE5vbk51bGxhYmxlPFJlbW92ZU9wdGlvbkdyb3VwRnJvbVByb2R1Y3RNdXRhdGlvblsncmVtb3ZlT3B0aW9uR3JvdXBGcm9tUHJvZHVjdCddPiksIHsgX190eXBlbmFtZT86ICdQcm9kdWN0JyB9Pik7XG4gIGV4cG9ydCB0eXBlIE9wdGlvbkdyb3VwcyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoRGlzY3JpbWluYXRlVW5pb248KE5vbk51bGxhYmxlPFJlbW92ZU9wdGlvbkdyb3VwRnJvbVByb2R1Y3RNdXRhdGlvblsncmVtb3ZlT3B0aW9uR3JvdXBGcm9tUHJvZHVjdCddPiksIHsgX190eXBlbmFtZT86ICdQcm9kdWN0JyB9PilbJ29wdGlvbkdyb3VwcyddPilbbnVtYmVyXT47XG4gIGV4cG9ydCB0eXBlIE9wdGlvbnMgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8Tm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChEaXNjcmltaW5hdGVVbmlvbjwoTm9uTnVsbGFibGU8UmVtb3ZlT3B0aW9uR3JvdXBGcm9tUHJvZHVjdE11dGF0aW9uWydyZW1vdmVPcHRpb25Hcm91cEZyb21Qcm9kdWN0J10+KSwgeyBfX3R5cGVuYW1lPzogJ1Byb2R1Y3QnIH0+KVsnb3B0aW9uR3JvdXBzJ10+KVtudW1iZXJdPlsnb3B0aW9ucyddPilbbnVtYmVyXT47XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgR2V0UHJvZHVjdFdpdGhWYXJpYW50cyB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IEdldFByb2R1Y3RXaXRoVmFyaWFudHNRdWVyeVZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgUXVlcnkgPSBHZXRQcm9kdWN0V2l0aFZhcmlhbnRzUXVlcnk7XG4gIGV4cG9ydCB0eXBlIFByb2R1Y3QgPSAoTm9uTnVsbGFibGU8R2V0UHJvZHVjdFdpdGhWYXJpYW50c1F1ZXJ5Wydwcm9kdWN0J10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBHZXRQcm9kdWN0U2ltcGxlIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gR2V0UHJvZHVjdFNpbXBsZVF1ZXJ5VmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBRdWVyeSA9IEdldFByb2R1Y3RTaW1wbGVRdWVyeTtcbiAgZXhwb3J0IHR5cGUgUHJvZHVjdCA9IChOb25OdWxsYWJsZTxHZXRQcm9kdWN0U2ltcGxlUXVlcnlbJ3Byb2R1Y3QnXT4pO1xuICBleHBvcnQgdHlwZSBGZWF0dXJlZEFzc2V0ID0gKE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxHZXRQcm9kdWN0U2ltcGxlUXVlcnlbJ3Byb2R1Y3QnXT4pWydmZWF0dXJlZEFzc2V0J10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBHZXRQcm9kdWN0TGlzdCB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IEdldFByb2R1Y3RMaXN0UXVlcnlWYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIFF1ZXJ5ID0gR2V0UHJvZHVjdExpc3RRdWVyeTtcbiAgZXhwb3J0IHR5cGUgUHJvZHVjdHMgPSAoTm9uTnVsbGFibGU8R2V0UHJvZHVjdExpc3RRdWVyeVsncHJvZHVjdHMnXT4pO1xuICBleHBvcnQgdHlwZSBJdGVtcyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8R2V0UHJvZHVjdExpc3RRdWVyeVsncHJvZHVjdHMnXT4pWydpdGVtcyddPilbbnVtYmVyXT47XG4gIGV4cG9ydCB0eXBlIEZlYXR1cmVkQXNzZXQgPSAoTm9uTnVsbGFibGU8Tm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxHZXRQcm9kdWN0TGlzdFF1ZXJ5Wydwcm9kdWN0cyddPilbJ2l0ZW1zJ10+KVtudW1iZXJdPlsnZmVhdHVyZWRBc3NldCddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgR2V0UHJvZHVjdE9wdGlvbkdyb3VwcyB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IEdldFByb2R1Y3RPcHRpb25Hcm91cHNRdWVyeVZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgUXVlcnkgPSBHZXRQcm9kdWN0T3B0aW9uR3JvdXBzUXVlcnk7XG4gIGV4cG9ydCB0eXBlIFByb2R1Y3RPcHRpb25Hcm91cHMgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8R2V0UHJvZHVjdE9wdGlvbkdyb3Vwc1F1ZXJ5Wydwcm9kdWN0T3B0aW9uR3JvdXBzJ10+KVtudW1iZXJdPjtcbiAgZXhwb3J0IHR5cGUgT3B0aW9ucyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8R2V0UHJvZHVjdE9wdGlvbkdyb3Vwc1F1ZXJ5Wydwcm9kdWN0T3B0aW9uR3JvdXBzJ10+KVtudW1iZXJdPlsnb3B0aW9ucyddPilbbnVtYmVyXT47XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgR2V0QXNzZXRMaXN0IHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gR2V0QXNzZXRMaXN0UXVlcnlWYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIFF1ZXJ5ID0gR2V0QXNzZXRMaXN0UXVlcnk7XG4gIGV4cG9ydCB0eXBlIEFzc2V0cyA9IChOb25OdWxsYWJsZTxHZXRBc3NldExpc3RRdWVyeVsnYXNzZXRzJ10+KTtcbiAgZXhwb3J0IHR5cGUgSXRlbXMgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldEFzc2V0TGlzdFF1ZXJ5Wydhc3NldHMnXT4pWydpdGVtcyddPilbbnVtYmVyXT47XG4gIGV4cG9ydCB0eXBlIFRhZ3MgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8Tm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxHZXRBc3NldExpc3RRdWVyeVsnYXNzZXRzJ10+KVsnaXRlbXMnXT4pW251bWJlcl0+Wyd0YWdzJ10+KVtudW1iZXJdPjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBHZXRBc3NldCB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IEdldEFzc2V0UXVlcnlWYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIFF1ZXJ5ID0gR2V0QXNzZXRRdWVyeTtcbiAgZXhwb3J0IHR5cGUgQXNzZXQgPSAoTm9uTnVsbGFibGU8R2V0QXNzZXRRdWVyeVsnYXNzZXQnXT4pO1xuICBleHBvcnQgdHlwZSBUYWdzID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxHZXRBc3NldFF1ZXJ5Wydhc3NldCddPilbJ3RhZ3MnXT4pW251bWJlcl0+O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIENyZWF0ZUFzc2V0cyB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IENyZWF0ZUFzc2V0c011dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IENyZWF0ZUFzc2V0c011dGF0aW9uO1xuICBleHBvcnQgdHlwZSBDcmVhdGVBc3NldHMgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8Q3JlYXRlQXNzZXRzTXV0YXRpb25bJ2NyZWF0ZUFzc2V0cyddPilbbnVtYmVyXT47XG4gIGV4cG9ydCB0eXBlIEFzc2V0SW5saW5lRnJhZ21lbnQgPSAoRGlzY3JpbWluYXRlVW5pb248Tm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPENyZWF0ZUFzc2V0c011dGF0aW9uWydjcmVhdGVBc3NldHMnXT4pW251bWJlcl0+LCB7IF9fdHlwZW5hbWU/OiAnQXNzZXQnIH0+KTtcbiAgZXhwb3J0IHR5cGUgVGFncyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoRGlzY3JpbWluYXRlVW5pb248Tm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPENyZWF0ZUFzc2V0c011dGF0aW9uWydjcmVhdGVBc3NldHMnXT4pW251bWJlcl0+LCB7IF9fdHlwZW5hbWU/OiAnQXNzZXQnIH0+KVsndGFncyddPilbbnVtYmVyXT47XG4gIGV4cG9ydCB0eXBlIEVycm9yUmVzdWx0SW5saW5lRnJhZ21lbnQgPSAoRGlzY3JpbWluYXRlVW5pb248Tm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPENyZWF0ZUFzc2V0c011dGF0aW9uWydjcmVhdGVBc3NldHMnXT4pW251bWJlcl0+LCB7IF9fdHlwZW5hbWU/OiAnRXJyb3JSZXN1bHQnIH0+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBVcGRhdGVBc3NldCB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IFVwZGF0ZUFzc2V0TXV0YXRpb25WYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIE11dGF0aW9uID0gVXBkYXRlQXNzZXRNdXRhdGlvbjtcbiAgZXhwb3J0IHR5cGUgVXBkYXRlQXNzZXQgPSAoTm9uTnVsbGFibGU8VXBkYXRlQXNzZXRNdXRhdGlvblsndXBkYXRlQXNzZXQnXT4pO1xuICBleHBvcnQgdHlwZSBUYWdzID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxVcGRhdGVBc3NldE11dGF0aW9uWyd1cGRhdGVBc3NldCddPilbJ3RhZ3MnXT4pW251bWJlcl0+O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIERlbGV0ZUFzc2V0cyB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IERlbGV0ZUFzc2V0c011dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IERlbGV0ZUFzc2V0c011dGF0aW9uO1xuICBleHBvcnQgdHlwZSBEZWxldGVBc3NldHMgPSAoTm9uTnVsbGFibGU8RGVsZXRlQXNzZXRzTXV0YXRpb25bJ2RlbGV0ZUFzc2V0cyddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgU2VhcmNoUHJvZHVjdHMge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBTZWFyY2hQcm9kdWN0c1F1ZXJ5VmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBRdWVyeSA9IFNlYXJjaFByb2R1Y3RzUXVlcnk7XG4gIGV4cG9ydCB0eXBlIFNlYXJjaCA9IChOb25OdWxsYWJsZTxTZWFyY2hQcm9kdWN0c1F1ZXJ5WydzZWFyY2gnXT4pO1xuICBleHBvcnQgdHlwZSBJdGVtcyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8U2VhcmNoUHJvZHVjdHNRdWVyeVsnc2VhcmNoJ10+KVsnaXRlbXMnXT4pW251bWJlcl0+O1xuICBleHBvcnQgdHlwZSBQcm9kdWN0QXNzZXQgPSAoTm9uTnVsbGFibGU8Tm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxTZWFyY2hQcm9kdWN0c1F1ZXJ5WydzZWFyY2gnXT4pWydpdGVtcyddPilbbnVtYmVyXT5bJ3Byb2R1Y3RBc3NldCddPik7XG4gIGV4cG9ydCB0eXBlIEZvY2FsUG9pbnQgPSAoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8U2VhcmNoUHJvZHVjdHNRdWVyeVsnc2VhcmNoJ10+KVsnaXRlbXMnXT4pW251bWJlcl0+Wydwcm9kdWN0QXNzZXQnXT4pWydmb2NhbFBvaW50J10+KTtcbiAgZXhwb3J0IHR5cGUgUHJvZHVjdFZhcmlhbnRBc3NldCA9IChOb25OdWxsYWJsZTxOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPFNlYXJjaFByb2R1Y3RzUXVlcnlbJ3NlYXJjaCddPilbJ2l0ZW1zJ10+KVtudW1iZXJdPlsncHJvZHVjdFZhcmlhbnRBc3NldCddPik7XG4gIGV4cG9ydCB0eXBlIF9Gb2NhbFBvaW50ID0gKE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPFNlYXJjaFByb2R1Y3RzUXVlcnlbJ3NlYXJjaCddPilbJ2l0ZW1zJ10+KVtudW1iZXJdPlsncHJvZHVjdFZhcmlhbnRBc3NldCddPilbJ2ZvY2FsUG9pbnQnXT4pO1xuICBleHBvcnQgdHlwZSBGYWNldFZhbHVlcyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8U2VhcmNoUHJvZHVjdHNRdWVyeVsnc2VhcmNoJ10+KVsnZmFjZXRWYWx1ZXMnXT4pW251bWJlcl0+O1xuICBleHBvcnQgdHlwZSBGYWNldFZhbHVlID0gKE5vbk51bGxhYmxlPE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8U2VhcmNoUHJvZHVjdHNRdWVyeVsnc2VhcmNoJ10+KVsnZmFjZXRWYWx1ZXMnXT4pW251bWJlcl0+WydmYWNldFZhbHVlJ10+KTtcbiAgZXhwb3J0IHR5cGUgRmFjZXQgPSAoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8U2VhcmNoUHJvZHVjdHNRdWVyeVsnc2VhcmNoJ10+KVsnZmFjZXRWYWx1ZXMnXT4pW251bWJlcl0+WydmYWNldFZhbHVlJ10+KVsnZmFjZXQnXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFByb2R1Y3RTZWxlY3RvclNlYXJjaCB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IFByb2R1Y3RTZWxlY3RvclNlYXJjaFF1ZXJ5VmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBRdWVyeSA9IFByb2R1Y3RTZWxlY3RvclNlYXJjaFF1ZXJ5O1xuICBleHBvcnQgdHlwZSBTZWFyY2ggPSAoTm9uTnVsbGFibGU8UHJvZHVjdFNlbGVjdG9yU2VhcmNoUXVlcnlbJ3NlYXJjaCddPik7XG4gIGV4cG9ydCB0eXBlIEl0ZW1zID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxQcm9kdWN0U2VsZWN0b3JTZWFyY2hRdWVyeVsnc2VhcmNoJ10+KVsnaXRlbXMnXT4pW251bWJlcl0+O1xuICBleHBvcnQgdHlwZSBQcm9kdWN0QXNzZXQgPSAoTm9uTnVsbGFibGU8Tm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxQcm9kdWN0U2VsZWN0b3JTZWFyY2hRdWVyeVsnc2VhcmNoJ10+KVsnaXRlbXMnXT4pW251bWJlcl0+Wydwcm9kdWN0QXNzZXQnXT4pO1xuICBleHBvcnQgdHlwZSBGb2NhbFBvaW50ID0gKE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPFByb2R1Y3RTZWxlY3RvclNlYXJjaFF1ZXJ5WydzZWFyY2gnXT4pWydpdGVtcyddPilbbnVtYmVyXT5bJ3Byb2R1Y3RBc3NldCddPilbJ2ZvY2FsUG9pbnQnXT4pO1xuICBleHBvcnQgdHlwZSBQcmljZSA9IChOb25OdWxsYWJsZTxOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPFByb2R1Y3RTZWxlY3RvclNlYXJjaFF1ZXJ5WydzZWFyY2gnXT4pWydpdGVtcyddPilbbnVtYmVyXT5bJ3ByaWNlJ10+KTtcbiAgZXhwb3J0IHR5cGUgU2luZ2xlUHJpY2VJbmxpbmVGcmFnbWVudCA9IChEaXNjcmltaW5hdGVVbmlvbjwoTm9uTnVsbGFibGU8Tm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxQcm9kdWN0U2VsZWN0b3JTZWFyY2hRdWVyeVsnc2VhcmNoJ10+KVsnaXRlbXMnXT4pW251bWJlcl0+WydwcmljZSddPiksIHsgX190eXBlbmFtZT86ICdTaW5nbGVQcmljZScgfT4pO1xuICBleHBvcnQgdHlwZSBQcmljZVdpdGhUYXggPSAoTm9uTnVsbGFibGU8Tm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxQcm9kdWN0U2VsZWN0b3JTZWFyY2hRdWVyeVsnc2VhcmNoJ10+KVsnaXRlbXMnXT4pW251bWJlcl0+WydwcmljZVdpdGhUYXgnXT4pO1xuICBleHBvcnQgdHlwZSBfU2luZ2xlUHJpY2VJbmxpbmVGcmFnbWVudCA9IChEaXNjcmltaW5hdGVVbmlvbjwoTm9uTnVsbGFibGU8Tm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxQcm9kdWN0U2VsZWN0b3JTZWFyY2hRdWVyeVsnc2VhcmNoJ10+KVsnaXRlbXMnXT4pW251bWJlcl0+WydwcmljZVdpdGhUYXgnXT4pLCB7IF9fdHlwZW5hbWU/OiAnU2luZ2xlUHJpY2UnIH0+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBVcGRhdGVQcm9kdWN0T3B0aW9uIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gVXBkYXRlUHJvZHVjdE9wdGlvbk11dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IFVwZGF0ZVByb2R1Y3RPcHRpb25NdXRhdGlvbjtcbiAgZXhwb3J0IHR5cGUgVXBkYXRlUHJvZHVjdE9wdGlvbiA9IChOb25OdWxsYWJsZTxVcGRhdGVQcm9kdWN0T3B0aW9uTXV0YXRpb25bJ3VwZGF0ZVByb2R1Y3RPcHRpb24nXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIERlbGV0ZVByb2R1Y3RWYXJpYW50IHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gRGVsZXRlUHJvZHVjdFZhcmlhbnRNdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBEZWxldGVQcm9kdWN0VmFyaWFudE11dGF0aW9uO1xuICBleHBvcnQgdHlwZSBEZWxldGVQcm9kdWN0VmFyaWFudCA9IChOb25OdWxsYWJsZTxEZWxldGVQcm9kdWN0VmFyaWFudE11dGF0aW9uWydkZWxldGVQcm9kdWN0VmFyaWFudCddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgR2V0UHJvZHVjdFZhcmlhbnRPcHRpb25zIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gR2V0UHJvZHVjdFZhcmlhbnRPcHRpb25zUXVlcnlWYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIFF1ZXJ5ID0gR2V0UHJvZHVjdFZhcmlhbnRPcHRpb25zUXVlcnk7XG4gIGV4cG9ydCB0eXBlIFByb2R1Y3QgPSAoTm9uTnVsbGFibGU8R2V0UHJvZHVjdFZhcmlhbnRPcHRpb25zUXVlcnlbJ3Byb2R1Y3QnXT4pO1xuICBleHBvcnQgdHlwZSBPcHRpb25Hcm91cHMgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldFByb2R1Y3RWYXJpYW50T3B0aW9uc1F1ZXJ5Wydwcm9kdWN0J10+KVsnb3B0aW9uR3JvdXBzJ10+KVtudW1iZXJdPjtcbiAgZXhwb3J0IHR5cGUgT3B0aW9ucyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldFByb2R1Y3RWYXJpYW50T3B0aW9uc1F1ZXJ5Wydwcm9kdWN0J10+KVsnb3B0aW9uR3JvdXBzJ10+KVtudW1iZXJdPlsnb3B0aW9ucyddPilbbnVtYmVyXT47XG4gIGV4cG9ydCB0eXBlIFZhcmlhbnRzID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxHZXRQcm9kdWN0VmFyaWFudE9wdGlvbnNRdWVyeVsncHJvZHVjdCddPilbJ3ZhcmlhbnRzJ10+KVtudW1iZXJdPjtcbiAgZXhwb3J0IHR5cGUgX09wdGlvbnMgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8Tm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxHZXRQcm9kdWN0VmFyaWFudE9wdGlvbnNRdWVyeVsncHJvZHVjdCddPilbJ3ZhcmlhbnRzJ10+KVtudW1iZXJdPlsnb3B0aW9ucyddPilbbnVtYmVyXT47XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgQXNzaWduUHJvZHVjdHNUb0NoYW5uZWwge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBBc3NpZ25Qcm9kdWN0c1RvQ2hhbm5lbE11dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IEFzc2lnblByb2R1Y3RzVG9DaGFubmVsTXV0YXRpb247XG4gIGV4cG9ydCB0eXBlIEFzc2lnblByb2R1Y3RzVG9DaGFubmVsID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEFzc2lnblByb2R1Y3RzVG9DaGFubmVsTXV0YXRpb25bJ2Fzc2lnblByb2R1Y3RzVG9DaGFubmVsJ10+KVtudW1iZXJdPjtcbiAgZXhwb3J0IHR5cGUgQ2hhbm5lbHMgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8Tm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEFzc2lnblByb2R1Y3RzVG9DaGFubmVsTXV0YXRpb25bJ2Fzc2lnblByb2R1Y3RzVG9DaGFubmVsJ10+KVtudW1iZXJdPlsnY2hhbm5lbHMnXT4pW251bWJlcl0+O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEFzc2lnblZhcmlhbnRzVG9DaGFubmVsIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gQXNzaWduVmFyaWFudHNUb0NoYW5uZWxNdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBBc3NpZ25WYXJpYW50c1RvQ2hhbm5lbE11dGF0aW9uO1xuICBleHBvcnQgdHlwZSBBc3NpZ25Qcm9kdWN0VmFyaWFudHNUb0NoYW5uZWwgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8QXNzaWduVmFyaWFudHNUb0NoYW5uZWxNdXRhdGlvblsnYXNzaWduUHJvZHVjdFZhcmlhbnRzVG9DaGFubmVsJ10+KVtudW1iZXJdPjtcbiAgZXhwb3J0IHR5cGUgQ2hhbm5lbHMgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8Tm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEFzc2lnblZhcmlhbnRzVG9DaGFubmVsTXV0YXRpb25bJ2Fzc2lnblByb2R1Y3RWYXJpYW50c1RvQ2hhbm5lbCddPilbbnVtYmVyXT5bJ2NoYW5uZWxzJ10+KVtudW1iZXJdPjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBSZW1vdmVQcm9kdWN0c0Zyb21DaGFubmVsIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gUmVtb3ZlUHJvZHVjdHNGcm9tQ2hhbm5lbE11dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IFJlbW92ZVByb2R1Y3RzRnJvbUNoYW5uZWxNdXRhdGlvbjtcbiAgZXhwb3J0IHR5cGUgUmVtb3ZlUHJvZHVjdHNGcm9tQ2hhbm5lbCA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxSZW1vdmVQcm9kdWN0c0Zyb21DaGFubmVsTXV0YXRpb25bJ3JlbW92ZVByb2R1Y3RzRnJvbUNoYW5uZWwnXT4pW251bWJlcl0+O1xuICBleHBvcnQgdHlwZSBDaGFubmVscyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8UmVtb3ZlUHJvZHVjdHNGcm9tQ2hhbm5lbE11dGF0aW9uWydyZW1vdmVQcm9kdWN0c0Zyb21DaGFubmVsJ10+KVtudW1iZXJdPlsnY2hhbm5lbHMnXT4pW251bWJlcl0+O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFJlbW92ZVZhcmlhbnRzRnJvbUNoYW5uZWwge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBSZW1vdmVWYXJpYW50c0Zyb21DaGFubmVsTXV0YXRpb25WYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIE11dGF0aW9uID0gUmVtb3ZlVmFyaWFudHNGcm9tQ2hhbm5lbE11dGF0aW9uO1xuICBleHBvcnQgdHlwZSBSZW1vdmVQcm9kdWN0VmFyaWFudHNGcm9tQ2hhbm5lbCA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxSZW1vdmVWYXJpYW50c0Zyb21DaGFubmVsTXV0YXRpb25bJ3JlbW92ZVByb2R1Y3RWYXJpYW50c0Zyb21DaGFubmVsJ10+KVtudW1iZXJdPjtcbiAgZXhwb3J0IHR5cGUgQ2hhbm5lbHMgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8Tm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPFJlbW92ZVZhcmlhbnRzRnJvbUNoYW5uZWxNdXRhdGlvblsncmVtb3ZlUHJvZHVjdFZhcmlhbnRzRnJvbUNoYW5uZWwnXT4pW251bWJlcl0+WydjaGFubmVscyddPilbbnVtYmVyXT47XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgR2V0UHJvZHVjdFZhcmlhbnQge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBHZXRQcm9kdWN0VmFyaWFudFF1ZXJ5VmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBRdWVyeSA9IEdldFByb2R1Y3RWYXJpYW50UXVlcnk7XG4gIGV4cG9ydCB0eXBlIFByb2R1Y3RWYXJpYW50ID0gKE5vbk51bGxhYmxlPEdldFByb2R1Y3RWYXJpYW50UXVlcnlbJ3Byb2R1Y3RWYXJpYW50J10+KTtcbiAgZXhwb3J0IHR5cGUgRmVhdHVyZWRBc3NldCA9IChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8R2V0UHJvZHVjdFZhcmlhbnRRdWVyeVsncHJvZHVjdFZhcmlhbnQnXT4pWydmZWF0dXJlZEFzc2V0J10+KTtcbiAgZXhwb3J0IHR5cGUgRm9jYWxQb2ludCA9IChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldFByb2R1Y3RWYXJpYW50UXVlcnlbJ3Byb2R1Y3RWYXJpYW50J10+KVsnZmVhdHVyZWRBc3NldCddPilbJ2ZvY2FsUG9pbnQnXT4pO1xuICBleHBvcnQgdHlwZSBQcm9kdWN0ID0gKE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxHZXRQcm9kdWN0VmFyaWFudFF1ZXJ5Wydwcm9kdWN0VmFyaWFudCddPilbJ3Byb2R1Y3QnXT4pO1xuICBleHBvcnQgdHlwZSBfRmVhdHVyZWRBc3NldCA9IChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldFByb2R1Y3RWYXJpYW50UXVlcnlbJ3Byb2R1Y3RWYXJpYW50J10+KVsncHJvZHVjdCddPilbJ2ZlYXR1cmVkQXNzZXQnXT4pO1xuICBleHBvcnQgdHlwZSBfRm9jYWxQb2ludCA9IChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxHZXRQcm9kdWN0VmFyaWFudFF1ZXJ5Wydwcm9kdWN0VmFyaWFudCddPilbJ3Byb2R1Y3QnXT4pWydmZWF0dXJlZEFzc2V0J10+KVsnZm9jYWxQb2ludCddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgR2V0UHJvZHVjdFZhcmlhbnRMaXN0IHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gR2V0UHJvZHVjdFZhcmlhbnRMaXN0UXVlcnlWYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIFF1ZXJ5ID0gR2V0UHJvZHVjdFZhcmlhbnRMaXN0UXVlcnk7XG4gIGV4cG9ydCB0eXBlIFByb2R1Y3RWYXJpYW50cyA9IChOb25OdWxsYWJsZTxHZXRQcm9kdWN0VmFyaWFudExpc3RRdWVyeVsncHJvZHVjdFZhcmlhbnRzJ10+KTtcbiAgZXhwb3J0IHR5cGUgSXRlbXMgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldFByb2R1Y3RWYXJpYW50TGlzdFF1ZXJ5Wydwcm9kdWN0VmFyaWFudHMnXT4pWydpdGVtcyddPilbbnVtYmVyXT47XG4gIGV4cG9ydCB0eXBlIEZlYXR1cmVkQXNzZXQgPSAoTm9uTnVsbGFibGU8Tm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxHZXRQcm9kdWN0VmFyaWFudExpc3RRdWVyeVsncHJvZHVjdFZhcmlhbnRzJ10+KVsnaXRlbXMnXT4pW251bWJlcl0+WydmZWF0dXJlZEFzc2V0J10+KTtcbiAgZXhwb3J0IHR5cGUgRm9jYWxQb2ludCA9IChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8Tm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxHZXRQcm9kdWN0VmFyaWFudExpc3RRdWVyeVsncHJvZHVjdFZhcmlhbnRzJ10+KVsnaXRlbXMnXT4pW251bWJlcl0+WydmZWF0dXJlZEFzc2V0J10+KVsnZm9jYWxQb2ludCddPik7XG4gIGV4cG9ydCB0eXBlIFByb2R1Y3QgPSAoTm9uTnVsbGFibGU8Tm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxHZXRQcm9kdWN0VmFyaWFudExpc3RRdWVyeVsncHJvZHVjdFZhcmlhbnRzJ10+KVsnaXRlbXMnXT4pW251bWJlcl0+Wydwcm9kdWN0J10+KTtcbiAgZXhwb3J0IHR5cGUgX0ZlYXR1cmVkQXNzZXQgPSAoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8R2V0UHJvZHVjdFZhcmlhbnRMaXN0UXVlcnlbJ3Byb2R1Y3RWYXJpYW50cyddPilbJ2l0ZW1zJ10+KVtudW1iZXJdPlsncHJvZHVjdCddPilbJ2ZlYXR1cmVkQXNzZXQnXT4pO1xuICBleHBvcnQgdHlwZSBfRm9jYWxQb2ludCA9IChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8R2V0UHJvZHVjdFZhcmlhbnRMaXN0UXVlcnlbJ3Byb2R1Y3RWYXJpYW50cyddPilbJ2l0ZW1zJ10+KVtudW1iZXJdPlsncHJvZHVjdCddPilbJ2ZlYXR1cmVkQXNzZXQnXT4pWydmb2NhbFBvaW50J10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBHZXRUYWdMaXN0IHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gR2V0VGFnTGlzdFF1ZXJ5VmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBRdWVyeSA9IEdldFRhZ0xpc3RRdWVyeTtcbiAgZXhwb3J0IHR5cGUgVGFncyA9IChOb25OdWxsYWJsZTxHZXRUYWdMaXN0UXVlcnlbJ3RhZ3MnXT4pO1xuICBleHBvcnQgdHlwZSBJdGVtcyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8R2V0VGFnTGlzdFF1ZXJ5Wyd0YWdzJ10+KVsnaXRlbXMnXT4pW251bWJlcl0+O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEdldFRhZyB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IEdldFRhZ1F1ZXJ5VmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBRdWVyeSA9IEdldFRhZ1F1ZXJ5O1xuICBleHBvcnQgdHlwZSBUYWcgPSAoTm9uTnVsbGFibGU8R2V0VGFnUXVlcnlbJ3RhZyddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgQ3JlYXRlVGFnIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gQ3JlYXRlVGFnTXV0YXRpb25WYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIE11dGF0aW9uID0gQ3JlYXRlVGFnTXV0YXRpb247XG4gIGV4cG9ydCB0eXBlIENyZWF0ZVRhZyA9IChOb25OdWxsYWJsZTxDcmVhdGVUYWdNdXRhdGlvblsnY3JlYXRlVGFnJ10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBVcGRhdGVUYWcge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBVcGRhdGVUYWdNdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBVcGRhdGVUYWdNdXRhdGlvbjtcbiAgZXhwb3J0IHR5cGUgVXBkYXRlVGFnID0gKE5vbk51bGxhYmxlPFVwZGF0ZVRhZ011dGF0aW9uWyd1cGRhdGVUYWcnXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIERlbGV0ZVRhZyB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IERlbGV0ZVRhZ011dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IERlbGV0ZVRhZ011dGF0aW9uO1xuICBleHBvcnQgdHlwZSBEZWxldGVUYWcgPSAoTm9uTnVsbGFibGU8RGVsZXRlVGFnTXV0YXRpb25bJ2RlbGV0ZVRhZyddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgUHJvbW90aW9uIHtcbiAgZXhwb3J0IHR5cGUgRnJhZ21lbnQgPSBQcm9tb3Rpb25GcmFnbWVudDtcbiAgZXhwb3J0IHR5cGUgQ29uZGl0aW9ucyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxQcm9tb3Rpb25GcmFnbWVudFsnY29uZGl0aW9ucyddPilbbnVtYmVyXT47XG4gIGV4cG9ydCB0eXBlIEFjdGlvbnMgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8UHJvbW90aW9uRnJhZ21lbnRbJ2FjdGlvbnMnXT4pW251bWJlcl0+O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEdldFByb21vdGlvbkxpc3Qge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBHZXRQcm9tb3Rpb25MaXN0UXVlcnlWYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIFF1ZXJ5ID0gR2V0UHJvbW90aW9uTGlzdFF1ZXJ5O1xuICBleHBvcnQgdHlwZSBQcm9tb3Rpb25zID0gKE5vbk51bGxhYmxlPEdldFByb21vdGlvbkxpc3RRdWVyeVsncHJvbW90aW9ucyddPik7XG4gIGV4cG9ydCB0eXBlIEl0ZW1zID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxHZXRQcm9tb3Rpb25MaXN0UXVlcnlbJ3Byb21vdGlvbnMnXT4pWydpdGVtcyddPilbbnVtYmVyXT47XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgR2V0UHJvbW90aW9uIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gR2V0UHJvbW90aW9uUXVlcnlWYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIFF1ZXJ5ID0gR2V0UHJvbW90aW9uUXVlcnk7XG4gIGV4cG9ydCB0eXBlIFByb21vdGlvbiA9IChOb25OdWxsYWJsZTxHZXRQcm9tb3Rpb25RdWVyeVsncHJvbW90aW9uJ10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBHZXRBZGp1c3RtZW50T3BlcmF0aW9ucyB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IEdldEFkanVzdG1lbnRPcGVyYXRpb25zUXVlcnlWYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIFF1ZXJ5ID0gR2V0QWRqdXN0bWVudE9wZXJhdGlvbnNRdWVyeTtcbiAgZXhwb3J0IHR5cGUgUHJvbW90aW9uQ29uZGl0aW9ucyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxHZXRBZGp1c3RtZW50T3BlcmF0aW9uc1F1ZXJ5Wydwcm9tb3Rpb25Db25kaXRpb25zJ10+KVtudW1iZXJdPjtcbiAgZXhwb3J0IHR5cGUgUHJvbW90aW9uQWN0aW9ucyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxHZXRBZGp1c3RtZW50T3BlcmF0aW9uc1F1ZXJ5Wydwcm9tb3Rpb25BY3Rpb25zJ10+KVtudW1iZXJdPjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBDcmVhdGVQcm9tb3Rpb24ge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBDcmVhdGVQcm9tb3Rpb25NdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBDcmVhdGVQcm9tb3Rpb25NdXRhdGlvbjtcbiAgZXhwb3J0IHR5cGUgQ3JlYXRlUHJvbW90aW9uID0gKE5vbk51bGxhYmxlPENyZWF0ZVByb21vdGlvbk11dGF0aW9uWydjcmVhdGVQcm9tb3Rpb24nXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFVwZGF0ZVByb21vdGlvbiB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IFVwZGF0ZVByb21vdGlvbk11dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IFVwZGF0ZVByb21vdGlvbk11dGF0aW9uO1xuICBleHBvcnQgdHlwZSBVcGRhdGVQcm9tb3Rpb24gPSAoTm9uTnVsbGFibGU8VXBkYXRlUHJvbW90aW9uTXV0YXRpb25bJ3VwZGF0ZVByb21vdGlvbiddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgRGVsZXRlUHJvbW90aW9uIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gRGVsZXRlUHJvbW90aW9uTXV0YXRpb25WYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIE11dGF0aW9uID0gRGVsZXRlUHJvbW90aW9uTXV0YXRpb247XG4gIGV4cG9ydCB0eXBlIERlbGV0ZVByb21vdGlvbiA9IChOb25OdWxsYWJsZTxEZWxldGVQcm9tb3Rpb25NdXRhdGlvblsnZGVsZXRlUHJvbW90aW9uJ10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBDb3VudHJ5IHtcbiAgZXhwb3J0IHR5cGUgRnJhZ21lbnQgPSBDb3VudHJ5RnJhZ21lbnQ7XG4gIGV4cG9ydCB0eXBlIFRyYW5zbGF0aW9ucyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxDb3VudHJ5RnJhZ21lbnRbJ3RyYW5zbGF0aW9ucyddPilbbnVtYmVyXT47XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgR2V0Q291bnRyeUxpc3Qge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBHZXRDb3VudHJ5TGlzdFF1ZXJ5VmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBRdWVyeSA9IEdldENvdW50cnlMaXN0UXVlcnk7XG4gIGV4cG9ydCB0eXBlIENvdW50cmllcyA9IChOb25OdWxsYWJsZTxHZXRDb3VudHJ5TGlzdFF1ZXJ5Wydjb3VudHJpZXMnXT4pO1xuICBleHBvcnQgdHlwZSBJdGVtcyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8R2V0Q291bnRyeUxpc3RRdWVyeVsnY291bnRyaWVzJ10+KVsnaXRlbXMnXT4pW251bWJlcl0+O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEdldEF2YWlsYWJsZUNvdW50cmllcyB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IEdldEF2YWlsYWJsZUNvdW50cmllc1F1ZXJ5VmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBRdWVyeSA9IEdldEF2YWlsYWJsZUNvdW50cmllc1F1ZXJ5O1xuICBleHBvcnQgdHlwZSBDb3VudHJpZXMgPSAoTm9uTnVsbGFibGU8R2V0QXZhaWxhYmxlQ291bnRyaWVzUXVlcnlbJ2NvdW50cmllcyddPik7XG4gIGV4cG9ydCB0eXBlIEl0ZW1zID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxHZXRBdmFpbGFibGVDb3VudHJpZXNRdWVyeVsnY291bnRyaWVzJ10+KVsnaXRlbXMnXT4pW251bWJlcl0+O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEdldENvdW50cnkge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBHZXRDb3VudHJ5UXVlcnlWYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIFF1ZXJ5ID0gR2V0Q291bnRyeVF1ZXJ5O1xuICBleHBvcnQgdHlwZSBDb3VudHJ5ID0gKE5vbk51bGxhYmxlPEdldENvdW50cnlRdWVyeVsnY291bnRyeSddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgQ3JlYXRlQ291bnRyeSB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IENyZWF0ZUNvdW50cnlNdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBDcmVhdGVDb3VudHJ5TXV0YXRpb247XG4gIGV4cG9ydCB0eXBlIENyZWF0ZUNvdW50cnkgPSAoTm9uTnVsbGFibGU8Q3JlYXRlQ291bnRyeU11dGF0aW9uWydjcmVhdGVDb3VudHJ5J10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBVcGRhdGVDb3VudHJ5IHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gVXBkYXRlQ291bnRyeU11dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IFVwZGF0ZUNvdW50cnlNdXRhdGlvbjtcbiAgZXhwb3J0IHR5cGUgVXBkYXRlQ291bnRyeSA9IChOb25OdWxsYWJsZTxVcGRhdGVDb3VudHJ5TXV0YXRpb25bJ3VwZGF0ZUNvdW50cnknXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIERlbGV0ZUNvdW50cnkge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBEZWxldGVDb3VudHJ5TXV0YXRpb25WYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIE11dGF0aW9uID0gRGVsZXRlQ291bnRyeU11dGF0aW9uO1xuICBleHBvcnQgdHlwZSBEZWxldGVDb3VudHJ5ID0gKE5vbk51bGxhYmxlPERlbGV0ZUNvdW50cnlNdXRhdGlvblsnZGVsZXRlQ291bnRyeSddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgWm9uZSB7XG4gIGV4cG9ydCB0eXBlIEZyYWdtZW50ID0gWm9uZUZyYWdtZW50O1xuICBleHBvcnQgdHlwZSBNZW1iZXJzID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPFpvbmVGcmFnbWVudFsnbWVtYmVycyddPilbbnVtYmVyXT47XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgR2V0Wm9uZXMge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBHZXRab25lc1F1ZXJ5VmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBRdWVyeSA9IEdldFpvbmVzUXVlcnk7XG4gIGV4cG9ydCB0eXBlIFpvbmVzID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldFpvbmVzUXVlcnlbJ3pvbmVzJ10+KVtudW1iZXJdPjtcbiAgZXhwb3J0IHR5cGUgTWVtYmVycyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8R2V0Wm9uZXNRdWVyeVsnem9uZXMnXT4pW251bWJlcl0+WydtZW1iZXJzJ10+KVtudW1iZXJdPjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBHZXRab25lIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gR2V0Wm9uZVF1ZXJ5VmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBRdWVyeSA9IEdldFpvbmVRdWVyeTtcbiAgZXhwb3J0IHR5cGUgWm9uZSA9IChOb25OdWxsYWJsZTxHZXRab25lUXVlcnlbJ3pvbmUnXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIENyZWF0ZVpvbmUge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBDcmVhdGVab25lTXV0YXRpb25WYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIE11dGF0aW9uID0gQ3JlYXRlWm9uZU11dGF0aW9uO1xuICBleHBvcnQgdHlwZSBDcmVhdGVab25lID0gKE5vbk51bGxhYmxlPENyZWF0ZVpvbmVNdXRhdGlvblsnY3JlYXRlWm9uZSddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgVXBkYXRlWm9uZSB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IFVwZGF0ZVpvbmVNdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBVcGRhdGVab25lTXV0YXRpb247XG4gIGV4cG9ydCB0eXBlIFVwZGF0ZVpvbmUgPSAoTm9uTnVsbGFibGU8VXBkYXRlWm9uZU11dGF0aW9uWyd1cGRhdGVab25lJ10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBEZWxldGVab25lIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gRGVsZXRlWm9uZU11dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IERlbGV0ZVpvbmVNdXRhdGlvbjtcbiAgZXhwb3J0IHR5cGUgRGVsZXRlWm9uZSA9IChOb25OdWxsYWJsZTxEZWxldGVab25lTXV0YXRpb25bJ2RlbGV0ZVpvbmUnXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEFkZE1lbWJlcnNUb1pvbmUge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBBZGRNZW1iZXJzVG9ab25lTXV0YXRpb25WYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIE11dGF0aW9uID0gQWRkTWVtYmVyc1RvWm9uZU11dGF0aW9uO1xuICBleHBvcnQgdHlwZSBBZGRNZW1iZXJzVG9ab25lID0gKE5vbk51bGxhYmxlPEFkZE1lbWJlcnNUb1pvbmVNdXRhdGlvblsnYWRkTWVtYmVyc1RvWm9uZSddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgUmVtb3ZlTWVtYmVyc0Zyb21ab25lIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gUmVtb3ZlTWVtYmVyc0Zyb21ab25lTXV0YXRpb25WYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIE11dGF0aW9uID0gUmVtb3ZlTWVtYmVyc0Zyb21ab25lTXV0YXRpb247XG4gIGV4cG9ydCB0eXBlIFJlbW92ZU1lbWJlcnNGcm9tWm9uZSA9IChOb25OdWxsYWJsZTxSZW1vdmVNZW1iZXJzRnJvbVpvbmVNdXRhdGlvblsncmVtb3ZlTWVtYmVyc0Zyb21ab25lJ10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBUYXhDYXRlZ29yeSB7XG4gIGV4cG9ydCB0eXBlIEZyYWdtZW50ID0gVGF4Q2F0ZWdvcnlGcmFnbWVudDtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBHZXRUYXhDYXRlZ29yaWVzIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gR2V0VGF4Q2F0ZWdvcmllc1F1ZXJ5VmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBRdWVyeSA9IEdldFRheENhdGVnb3JpZXNRdWVyeTtcbiAgZXhwb3J0IHR5cGUgVGF4Q2F0ZWdvcmllcyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxHZXRUYXhDYXRlZ29yaWVzUXVlcnlbJ3RheENhdGVnb3JpZXMnXT4pW251bWJlcl0+O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEdldFRheENhdGVnb3J5IHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gR2V0VGF4Q2F0ZWdvcnlRdWVyeVZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgUXVlcnkgPSBHZXRUYXhDYXRlZ29yeVF1ZXJ5O1xuICBleHBvcnQgdHlwZSBUYXhDYXRlZ29yeSA9IChOb25OdWxsYWJsZTxHZXRUYXhDYXRlZ29yeVF1ZXJ5Wyd0YXhDYXRlZ29yeSddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgQ3JlYXRlVGF4Q2F0ZWdvcnkge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBDcmVhdGVUYXhDYXRlZ29yeU11dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IENyZWF0ZVRheENhdGVnb3J5TXV0YXRpb247XG4gIGV4cG9ydCB0eXBlIENyZWF0ZVRheENhdGVnb3J5ID0gKE5vbk51bGxhYmxlPENyZWF0ZVRheENhdGVnb3J5TXV0YXRpb25bJ2NyZWF0ZVRheENhdGVnb3J5J10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBVcGRhdGVUYXhDYXRlZ29yeSB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IFVwZGF0ZVRheENhdGVnb3J5TXV0YXRpb25WYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIE11dGF0aW9uID0gVXBkYXRlVGF4Q2F0ZWdvcnlNdXRhdGlvbjtcbiAgZXhwb3J0IHR5cGUgVXBkYXRlVGF4Q2F0ZWdvcnkgPSAoTm9uTnVsbGFibGU8VXBkYXRlVGF4Q2F0ZWdvcnlNdXRhdGlvblsndXBkYXRlVGF4Q2F0ZWdvcnknXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIERlbGV0ZVRheENhdGVnb3J5IHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gRGVsZXRlVGF4Q2F0ZWdvcnlNdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBEZWxldGVUYXhDYXRlZ29yeU11dGF0aW9uO1xuICBleHBvcnQgdHlwZSBEZWxldGVUYXhDYXRlZ29yeSA9IChOb25OdWxsYWJsZTxEZWxldGVUYXhDYXRlZ29yeU11dGF0aW9uWydkZWxldGVUYXhDYXRlZ29yeSddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgVGF4UmF0ZSB7XG4gIGV4cG9ydCB0eXBlIEZyYWdtZW50ID0gVGF4UmF0ZUZyYWdtZW50O1xuICBleHBvcnQgdHlwZSBDYXRlZ29yeSA9IChOb25OdWxsYWJsZTxUYXhSYXRlRnJhZ21lbnRbJ2NhdGVnb3J5J10+KTtcbiAgZXhwb3J0IHR5cGUgWm9uZSA9IChOb25OdWxsYWJsZTxUYXhSYXRlRnJhZ21lbnRbJ3pvbmUnXT4pO1xuICBleHBvcnQgdHlwZSBDdXN0b21lckdyb3VwID0gKE5vbk51bGxhYmxlPFRheFJhdGVGcmFnbWVudFsnY3VzdG9tZXJHcm91cCddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgR2V0VGF4UmF0ZUxpc3Qge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBHZXRUYXhSYXRlTGlzdFF1ZXJ5VmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBRdWVyeSA9IEdldFRheFJhdGVMaXN0UXVlcnk7XG4gIGV4cG9ydCB0eXBlIFRheFJhdGVzID0gKE5vbk51bGxhYmxlPEdldFRheFJhdGVMaXN0UXVlcnlbJ3RheFJhdGVzJ10+KTtcbiAgZXhwb3J0IHR5cGUgSXRlbXMgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldFRheFJhdGVMaXN0UXVlcnlbJ3RheFJhdGVzJ10+KVsnaXRlbXMnXT4pW251bWJlcl0+O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEdldFRheFJhdGUge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBHZXRUYXhSYXRlUXVlcnlWYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIFF1ZXJ5ID0gR2V0VGF4UmF0ZVF1ZXJ5O1xuICBleHBvcnQgdHlwZSBUYXhSYXRlID0gKE5vbk51bGxhYmxlPEdldFRheFJhdGVRdWVyeVsndGF4UmF0ZSddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgQ3JlYXRlVGF4UmF0ZSB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IENyZWF0ZVRheFJhdGVNdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBDcmVhdGVUYXhSYXRlTXV0YXRpb247XG4gIGV4cG9ydCB0eXBlIENyZWF0ZVRheFJhdGUgPSAoTm9uTnVsbGFibGU8Q3JlYXRlVGF4UmF0ZU11dGF0aW9uWydjcmVhdGVUYXhSYXRlJ10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBVcGRhdGVUYXhSYXRlIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gVXBkYXRlVGF4UmF0ZU11dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IFVwZGF0ZVRheFJhdGVNdXRhdGlvbjtcbiAgZXhwb3J0IHR5cGUgVXBkYXRlVGF4UmF0ZSA9IChOb25OdWxsYWJsZTxVcGRhdGVUYXhSYXRlTXV0YXRpb25bJ3VwZGF0ZVRheFJhdGUnXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIERlbGV0ZVRheFJhdGUge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBEZWxldGVUYXhSYXRlTXV0YXRpb25WYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIE11dGF0aW9uID0gRGVsZXRlVGF4UmF0ZU11dGF0aW9uO1xuICBleHBvcnQgdHlwZSBEZWxldGVUYXhSYXRlID0gKE5vbk51bGxhYmxlPERlbGV0ZVRheFJhdGVNdXRhdGlvblsnZGVsZXRlVGF4UmF0ZSddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgQ2hhbm5lbCB7XG4gIGV4cG9ydCB0eXBlIEZyYWdtZW50ID0gQ2hhbm5lbEZyYWdtZW50O1xuICBleHBvcnQgdHlwZSBEZWZhdWx0U2hpcHBpbmdab25lID0gKE5vbk51bGxhYmxlPENoYW5uZWxGcmFnbWVudFsnZGVmYXVsdFNoaXBwaW5nWm9uZSddPik7XG4gIGV4cG9ydCB0eXBlIERlZmF1bHRUYXhab25lID0gKE5vbk51bGxhYmxlPENoYW5uZWxGcmFnbWVudFsnZGVmYXVsdFRheFpvbmUnXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEdldENoYW5uZWxzIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gR2V0Q2hhbm5lbHNRdWVyeVZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgUXVlcnkgPSBHZXRDaGFubmVsc1F1ZXJ5O1xuICBleHBvcnQgdHlwZSBDaGFubmVscyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxHZXRDaGFubmVsc1F1ZXJ5WydjaGFubmVscyddPilbbnVtYmVyXT47XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgR2V0Q2hhbm5lbCB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IEdldENoYW5uZWxRdWVyeVZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgUXVlcnkgPSBHZXRDaGFubmVsUXVlcnk7XG4gIGV4cG9ydCB0eXBlIENoYW5uZWwgPSAoTm9uTnVsbGFibGU8R2V0Q2hhbm5lbFF1ZXJ5WydjaGFubmVsJ10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBHZXRBY3RpdmVDaGFubmVsIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gR2V0QWN0aXZlQ2hhbm5lbFF1ZXJ5VmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBRdWVyeSA9IEdldEFjdGl2ZUNoYW5uZWxRdWVyeTtcbiAgZXhwb3J0IHR5cGUgQWN0aXZlQ2hhbm5lbCA9IChOb25OdWxsYWJsZTxHZXRBY3RpdmVDaGFubmVsUXVlcnlbJ2FjdGl2ZUNoYW5uZWwnXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIENyZWF0ZUNoYW5uZWwge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBDcmVhdGVDaGFubmVsTXV0YXRpb25WYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIE11dGF0aW9uID0gQ3JlYXRlQ2hhbm5lbE11dGF0aW9uO1xuICBleHBvcnQgdHlwZSBDcmVhdGVDaGFubmVsID0gKE5vbk51bGxhYmxlPENyZWF0ZUNoYW5uZWxNdXRhdGlvblsnY3JlYXRlQ2hhbm5lbCddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgVXBkYXRlQ2hhbm5lbCB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IFVwZGF0ZUNoYW5uZWxNdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBVcGRhdGVDaGFubmVsTXV0YXRpb247XG4gIGV4cG9ydCB0eXBlIFVwZGF0ZUNoYW5uZWwgPSAoTm9uTnVsbGFibGU8VXBkYXRlQ2hhbm5lbE11dGF0aW9uWyd1cGRhdGVDaGFubmVsJ10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBEZWxldGVDaGFubmVsIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gRGVsZXRlQ2hhbm5lbE11dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IERlbGV0ZUNoYW5uZWxNdXRhdGlvbjtcbiAgZXhwb3J0IHR5cGUgRGVsZXRlQ2hhbm5lbCA9IChOb25OdWxsYWJsZTxEZWxldGVDaGFubmVsTXV0YXRpb25bJ2RlbGV0ZUNoYW5uZWwnXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFBheW1lbnRNZXRob2Qge1xuICBleHBvcnQgdHlwZSBGcmFnbWVudCA9IFBheW1lbnRNZXRob2RGcmFnbWVudDtcbiAgZXhwb3J0IHR5cGUgQ2hlY2tlciA9IChOb25OdWxsYWJsZTxQYXltZW50TWV0aG9kRnJhZ21lbnRbJ2NoZWNrZXInXT4pO1xuICBleHBvcnQgdHlwZSBIYW5kbGVyID0gKE5vbk51bGxhYmxlPFBheW1lbnRNZXRob2RGcmFnbWVudFsnaGFuZGxlciddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgR2V0UGF5bWVudE1ldGhvZExpc3Qge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBHZXRQYXltZW50TWV0aG9kTGlzdFF1ZXJ5VmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBRdWVyeSA9IEdldFBheW1lbnRNZXRob2RMaXN0UXVlcnk7XG4gIGV4cG9ydCB0eXBlIFBheW1lbnRNZXRob2RzID0gKE5vbk51bGxhYmxlPEdldFBheW1lbnRNZXRob2RMaXN0UXVlcnlbJ3BheW1lbnRNZXRob2RzJ10+KTtcbiAgZXhwb3J0IHR5cGUgSXRlbXMgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldFBheW1lbnRNZXRob2RMaXN0UXVlcnlbJ3BheW1lbnRNZXRob2RzJ10+KVsnaXRlbXMnXT4pW251bWJlcl0+O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEdldFBheW1lbnRNZXRob2RPcGVyYXRpb25zIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gR2V0UGF5bWVudE1ldGhvZE9wZXJhdGlvbnNRdWVyeVZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgUXVlcnkgPSBHZXRQYXltZW50TWV0aG9kT3BlcmF0aW9uc1F1ZXJ5O1xuICBleHBvcnQgdHlwZSBQYXltZW50TWV0aG9kRWxpZ2liaWxpdHlDaGVja2VycyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxHZXRQYXltZW50TWV0aG9kT3BlcmF0aW9uc1F1ZXJ5WydwYXltZW50TWV0aG9kRWxpZ2liaWxpdHlDaGVja2VycyddPilbbnVtYmVyXT47XG4gIGV4cG9ydCB0eXBlIFBheW1lbnRNZXRob2RIYW5kbGVycyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxHZXRQYXltZW50TWV0aG9kT3BlcmF0aW9uc1F1ZXJ5WydwYXltZW50TWV0aG9kSGFuZGxlcnMnXT4pW251bWJlcl0+O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEdldFBheW1lbnRNZXRob2Qge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBHZXRQYXltZW50TWV0aG9kUXVlcnlWYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIFF1ZXJ5ID0gR2V0UGF5bWVudE1ldGhvZFF1ZXJ5O1xuICBleHBvcnQgdHlwZSBQYXltZW50TWV0aG9kID0gKE5vbk51bGxhYmxlPEdldFBheW1lbnRNZXRob2RRdWVyeVsncGF5bWVudE1ldGhvZCddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgQ3JlYXRlUGF5bWVudE1ldGhvZCB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IENyZWF0ZVBheW1lbnRNZXRob2RNdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBDcmVhdGVQYXltZW50TWV0aG9kTXV0YXRpb247XG4gIGV4cG9ydCB0eXBlIENyZWF0ZVBheW1lbnRNZXRob2QgPSAoTm9uTnVsbGFibGU8Q3JlYXRlUGF5bWVudE1ldGhvZE11dGF0aW9uWydjcmVhdGVQYXltZW50TWV0aG9kJ10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBVcGRhdGVQYXltZW50TWV0aG9kIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gVXBkYXRlUGF5bWVudE1ldGhvZE11dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IFVwZGF0ZVBheW1lbnRNZXRob2RNdXRhdGlvbjtcbiAgZXhwb3J0IHR5cGUgVXBkYXRlUGF5bWVudE1ldGhvZCA9IChOb25OdWxsYWJsZTxVcGRhdGVQYXltZW50TWV0aG9kTXV0YXRpb25bJ3VwZGF0ZVBheW1lbnRNZXRob2QnXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIERlbGV0ZVBheW1lbnRNZXRob2Qge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBEZWxldGVQYXltZW50TWV0aG9kTXV0YXRpb25WYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIE11dGF0aW9uID0gRGVsZXRlUGF5bWVudE1ldGhvZE11dGF0aW9uO1xuICBleHBvcnQgdHlwZSBEZWxldGVQYXltZW50TWV0aG9kID0gKE5vbk51bGxhYmxlPERlbGV0ZVBheW1lbnRNZXRob2RNdXRhdGlvblsnZGVsZXRlUGF5bWVudE1ldGhvZCddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgR2xvYmFsU2V0dGluZ3Mge1xuICBleHBvcnQgdHlwZSBGcmFnbWVudCA9IEdsb2JhbFNldHRpbmdzRnJhZ21lbnQ7XG4gIGV4cG9ydCB0eXBlIFNlcnZlckNvbmZpZyA9IChOb25OdWxsYWJsZTxHbG9iYWxTZXR0aW5nc0ZyYWdtZW50WydzZXJ2ZXJDb25maWcnXT4pO1xuICBleHBvcnQgdHlwZSBQZXJtaXNzaW9ucyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8R2xvYmFsU2V0dGluZ3NGcmFnbWVudFsnc2VydmVyQ29uZmlnJ10+KVsncGVybWlzc2lvbnMnXT4pW251bWJlcl0+O1xuICBleHBvcnQgdHlwZSBPcmRlclByb2Nlc3MgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdsb2JhbFNldHRpbmdzRnJhZ21lbnRbJ3NlcnZlckNvbmZpZyddPilbJ29yZGVyUHJvY2VzcyddPilbbnVtYmVyXT47XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgR2V0R2xvYmFsU2V0dGluZ3Mge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBHZXRHbG9iYWxTZXR0aW5nc1F1ZXJ5VmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBRdWVyeSA9IEdldEdsb2JhbFNldHRpbmdzUXVlcnk7XG4gIGV4cG9ydCB0eXBlIEdsb2JhbFNldHRpbmdzID0gKE5vbk51bGxhYmxlPEdldEdsb2JhbFNldHRpbmdzUXVlcnlbJ2dsb2JhbFNldHRpbmdzJ10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBVcGRhdGVHbG9iYWxTZXR0aW5ncyB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IFVwZGF0ZUdsb2JhbFNldHRpbmdzTXV0YXRpb25WYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIE11dGF0aW9uID0gVXBkYXRlR2xvYmFsU2V0dGluZ3NNdXRhdGlvbjtcbiAgZXhwb3J0IHR5cGUgVXBkYXRlR2xvYmFsU2V0dGluZ3MgPSAoTm9uTnVsbGFibGU8VXBkYXRlR2xvYmFsU2V0dGluZ3NNdXRhdGlvblsndXBkYXRlR2xvYmFsU2V0dGluZ3MnXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEN1c3RvbUZpZWxkQ29uZmlnIHtcbiAgZXhwb3J0IHR5cGUgRnJhZ21lbnQgPSBDdXN0b21GaWVsZENvbmZpZ0ZyYWdtZW50O1xuICBleHBvcnQgdHlwZSBEZXNjcmlwdGlvbiA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxDdXN0b21GaWVsZENvbmZpZ0ZyYWdtZW50WydkZXNjcmlwdGlvbiddPilbbnVtYmVyXT47XG4gIGV4cG9ydCB0eXBlIExhYmVsID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEN1c3RvbUZpZWxkQ29uZmlnRnJhZ21lbnRbJ2xhYmVsJ10+KVtudW1iZXJdPjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBTdHJpbmdDdXN0b21GaWVsZCB7XG4gIGV4cG9ydCB0eXBlIEZyYWdtZW50ID0gU3RyaW5nQ3VzdG9tRmllbGRGcmFnbWVudDtcbiAgZXhwb3J0IHR5cGUgT3B0aW9ucyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxTdHJpbmdDdXN0b21GaWVsZEZyYWdtZW50WydvcHRpb25zJ10+KVtudW1iZXJdPjtcbiAgZXhwb3J0IHR5cGUgTGFiZWwgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8Tm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPFN0cmluZ0N1c3RvbUZpZWxkRnJhZ21lbnRbJ29wdGlvbnMnXT4pW251bWJlcl0+WydsYWJlbCddPilbbnVtYmVyXT47XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgTG9jYWxlU3RyaW5nQ3VzdG9tRmllbGQge1xuICBleHBvcnQgdHlwZSBGcmFnbWVudCA9IExvY2FsZVN0cmluZ0N1c3RvbUZpZWxkRnJhZ21lbnQ7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgQm9vbGVhbkN1c3RvbUZpZWxkIHtcbiAgZXhwb3J0IHR5cGUgRnJhZ21lbnQgPSBCb29sZWFuQ3VzdG9tRmllbGRGcmFnbWVudDtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBJbnRDdXN0b21GaWVsZCB7XG4gIGV4cG9ydCB0eXBlIEZyYWdtZW50ID0gSW50Q3VzdG9tRmllbGRGcmFnbWVudDtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBGbG9hdEN1c3RvbUZpZWxkIHtcbiAgZXhwb3J0IHR5cGUgRnJhZ21lbnQgPSBGbG9hdEN1c3RvbUZpZWxkRnJhZ21lbnQ7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgRGF0ZVRpbWVDdXN0b21GaWVsZCB7XG4gIGV4cG9ydCB0eXBlIEZyYWdtZW50ID0gRGF0ZVRpbWVDdXN0b21GaWVsZEZyYWdtZW50O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFJlbGF0aW9uQ3VzdG9tRmllbGQge1xuICBleHBvcnQgdHlwZSBGcmFnbWVudCA9IFJlbGF0aW9uQ3VzdG9tRmllbGRGcmFnbWVudDtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBDdXN0b21GaWVsZHMge1xuICBleHBvcnQgdHlwZSBGcmFnbWVudCA9IEN1c3RvbUZpZWxkc0ZyYWdtZW50O1xuICBleHBvcnQgdHlwZSBTdHJpbmdDdXN0b21GaWVsZENvbmZpZ0lubGluZUZyYWdtZW50ID0gKERpc2NyaW1pbmF0ZVVuaW9uPEN1c3RvbUZpZWxkc0ZyYWdtZW50LCB7IF9fdHlwZW5hbWU/OiAnU3RyaW5nQ3VzdG9tRmllbGRDb25maWcnIH0+KTtcbiAgZXhwb3J0IHR5cGUgTG9jYWxlU3RyaW5nQ3VzdG9tRmllbGRDb25maWdJbmxpbmVGcmFnbWVudCA9IChEaXNjcmltaW5hdGVVbmlvbjxDdXN0b21GaWVsZHNGcmFnbWVudCwgeyBfX3R5cGVuYW1lPzogJ0xvY2FsZVN0cmluZ0N1c3RvbUZpZWxkQ29uZmlnJyB9Pik7XG4gIGV4cG9ydCB0eXBlIEJvb2xlYW5DdXN0b21GaWVsZENvbmZpZ0lubGluZUZyYWdtZW50ID0gKERpc2NyaW1pbmF0ZVVuaW9uPEN1c3RvbUZpZWxkc0ZyYWdtZW50LCB7IF9fdHlwZW5hbWU/OiAnQm9vbGVhbkN1c3RvbUZpZWxkQ29uZmlnJyB9Pik7XG4gIGV4cG9ydCB0eXBlIEludEN1c3RvbUZpZWxkQ29uZmlnSW5saW5lRnJhZ21lbnQgPSAoRGlzY3JpbWluYXRlVW5pb248Q3VzdG9tRmllbGRzRnJhZ21lbnQsIHsgX190eXBlbmFtZT86ICdJbnRDdXN0b21GaWVsZENvbmZpZycgfT4pO1xuICBleHBvcnQgdHlwZSBGbG9hdEN1c3RvbUZpZWxkQ29uZmlnSW5saW5lRnJhZ21lbnQgPSAoRGlzY3JpbWluYXRlVW5pb248Q3VzdG9tRmllbGRzRnJhZ21lbnQsIHsgX190eXBlbmFtZT86ICdGbG9hdEN1c3RvbUZpZWxkQ29uZmlnJyB9Pik7XG4gIGV4cG9ydCB0eXBlIERhdGVUaW1lQ3VzdG9tRmllbGRDb25maWdJbmxpbmVGcmFnbWVudCA9IChEaXNjcmltaW5hdGVVbmlvbjxDdXN0b21GaWVsZHNGcmFnbWVudCwgeyBfX3R5cGVuYW1lPzogJ0RhdGVUaW1lQ3VzdG9tRmllbGRDb25maWcnIH0+KTtcbiAgZXhwb3J0IHR5cGUgUmVsYXRpb25DdXN0b21GaWVsZENvbmZpZ0lubGluZUZyYWdtZW50ID0gKERpc2NyaW1pbmF0ZVVuaW9uPEN1c3RvbUZpZWxkc0ZyYWdtZW50LCB7IF9fdHlwZW5hbWU/OiAnUmVsYXRpb25DdXN0b21GaWVsZENvbmZpZycgfT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEdldFNlcnZlckNvbmZpZyB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IEdldFNlcnZlckNvbmZpZ1F1ZXJ5VmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBRdWVyeSA9IEdldFNlcnZlckNvbmZpZ1F1ZXJ5O1xuICBleHBvcnQgdHlwZSBHbG9iYWxTZXR0aW5ncyA9IChOb25OdWxsYWJsZTxHZXRTZXJ2ZXJDb25maWdRdWVyeVsnZ2xvYmFsU2V0dGluZ3MnXT4pO1xuICBleHBvcnQgdHlwZSBTZXJ2ZXJDb25maWcgPSAoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldFNlcnZlckNvbmZpZ1F1ZXJ5WydnbG9iYWxTZXR0aW5ncyddPilbJ3NlcnZlckNvbmZpZyddPik7XG4gIGV4cG9ydCB0eXBlIE9yZGVyUHJvY2VzcyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldFNlcnZlckNvbmZpZ1F1ZXJ5WydnbG9iYWxTZXR0aW5ncyddPilbJ3NlcnZlckNvbmZpZyddPilbJ29yZGVyUHJvY2VzcyddPilbbnVtYmVyXT47XG4gIGV4cG9ydCB0eXBlIFBlcm1pc3Npb25zID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8R2V0U2VydmVyQ29uZmlnUXVlcnlbJ2dsb2JhbFNldHRpbmdzJ10+KVsnc2VydmVyQ29uZmlnJ10+KVsncGVybWlzc2lvbnMnXT4pW251bWJlcl0+O1xuICBleHBvcnQgdHlwZSBDdXN0b21GaWVsZENvbmZpZyA9IChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldFNlcnZlckNvbmZpZ1F1ZXJ5WydnbG9iYWxTZXR0aW5ncyddPilbJ3NlcnZlckNvbmZpZyddPilbJ2N1c3RvbUZpZWxkQ29uZmlnJ10+KTtcbiAgZXhwb3J0IHR5cGUgQWRkcmVzcyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxHZXRTZXJ2ZXJDb25maWdRdWVyeVsnZ2xvYmFsU2V0dGluZ3MnXT4pWydzZXJ2ZXJDb25maWcnXT4pWydjdXN0b21GaWVsZENvbmZpZyddPilbJ0FkZHJlc3MnXT4pW251bWJlcl0+O1xuICBleHBvcnQgdHlwZSBBZG1pbmlzdHJhdG9yID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldFNlcnZlckNvbmZpZ1F1ZXJ5WydnbG9iYWxTZXR0aW5ncyddPilbJ3NlcnZlckNvbmZpZyddPilbJ2N1c3RvbUZpZWxkQ29uZmlnJ10+KVsnQWRtaW5pc3RyYXRvciddPilbbnVtYmVyXT47XG4gIGV4cG9ydCB0eXBlIEFzc2V0ID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldFNlcnZlckNvbmZpZ1F1ZXJ5WydnbG9iYWxTZXR0aW5ncyddPilbJ3NlcnZlckNvbmZpZyddPilbJ2N1c3RvbUZpZWxkQ29uZmlnJ10+KVsnQXNzZXQnXT4pW251bWJlcl0+O1xuICBleHBvcnQgdHlwZSBDaGFubmVsID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldFNlcnZlckNvbmZpZ1F1ZXJ5WydnbG9iYWxTZXR0aW5ncyddPilbJ3NlcnZlckNvbmZpZyddPilbJ2N1c3RvbUZpZWxkQ29uZmlnJ10+KVsnQ2hhbm5lbCddPilbbnVtYmVyXT47XG4gIGV4cG9ydCB0eXBlIENvbGxlY3Rpb24gPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8R2V0U2VydmVyQ29uZmlnUXVlcnlbJ2dsb2JhbFNldHRpbmdzJ10+KVsnc2VydmVyQ29uZmlnJ10+KVsnY3VzdG9tRmllbGRDb25maWcnXT4pWydDb2xsZWN0aW9uJ10+KVtudW1iZXJdPjtcbiAgZXhwb3J0IHR5cGUgQ3VzdG9tZXIgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8R2V0U2VydmVyQ29uZmlnUXVlcnlbJ2dsb2JhbFNldHRpbmdzJ10+KVsnc2VydmVyQ29uZmlnJ10+KVsnY3VzdG9tRmllbGRDb25maWcnXT4pWydDdXN0b21lciddPilbbnVtYmVyXT47XG4gIGV4cG9ydCB0eXBlIEZhY2V0ID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldFNlcnZlckNvbmZpZ1F1ZXJ5WydnbG9iYWxTZXR0aW5ncyddPilbJ3NlcnZlckNvbmZpZyddPilbJ2N1c3RvbUZpZWxkQ29uZmlnJ10+KVsnRmFjZXQnXT4pW251bWJlcl0+O1xuICBleHBvcnQgdHlwZSBGYWNldFZhbHVlID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldFNlcnZlckNvbmZpZ1F1ZXJ5WydnbG9iYWxTZXR0aW5ncyddPilbJ3NlcnZlckNvbmZpZyddPilbJ2N1c3RvbUZpZWxkQ29uZmlnJ10+KVsnRmFjZXRWYWx1ZSddPilbbnVtYmVyXT47XG4gIGV4cG9ydCB0eXBlIEZ1bGZpbGxtZW50ID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldFNlcnZlckNvbmZpZ1F1ZXJ5WydnbG9iYWxTZXR0aW5ncyddPilbJ3NlcnZlckNvbmZpZyddPilbJ2N1c3RvbUZpZWxkQ29uZmlnJ10+KVsnRnVsZmlsbG1lbnQnXT4pW251bWJlcl0+O1xuICBleHBvcnQgdHlwZSBfR2xvYmFsU2V0dGluZ3MgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8R2V0U2VydmVyQ29uZmlnUXVlcnlbJ2dsb2JhbFNldHRpbmdzJ10+KVsnc2VydmVyQ29uZmlnJ10+KVsnY3VzdG9tRmllbGRDb25maWcnXT4pWydHbG9iYWxTZXR0aW5ncyddPilbbnVtYmVyXT47XG4gIGV4cG9ydCB0eXBlIE9yZGVyID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldFNlcnZlckNvbmZpZ1F1ZXJ5WydnbG9iYWxTZXR0aW5ncyddPilbJ3NlcnZlckNvbmZpZyddPilbJ2N1c3RvbUZpZWxkQ29uZmlnJ10+KVsnT3JkZXInXT4pW251bWJlcl0+O1xuICBleHBvcnQgdHlwZSBPcmRlckxpbmUgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8R2V0U2VydmVyQ29uZmlnUXVlcnlbJ2dsb2JhbFNldHRpbmdzJ10+KVsnc2VydmVyQ29uZmlnJ10+KVsnY3VzdG9tRmllbGRDb25maWcnXT4pWydPcmRlckxpbmUnXT4pW251bWJlcl0+O1xuICBleHBvcnQgdHlwZSBQcm9kdWN0ID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldFNlcnZlckNvbmZpZ1F1ZXJ5WydnbG9iYWxTZXR0aW5ncyddPilbJ3NlcnZlckNvbmZpZyddPilbJ2N1c3RvbUZpZWxkQ29uZmlnJ10+KVsnUHJvZHVjdCddPilbbnVtYmVyXT47XG4gIGV4cG9ydCB0eXBlIFByb2R1Y3RPcHRpb24gPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8R2V0U2VydmVyQ29uZmlnUXVlcnlbJ2dsb2JhbFNldHRpbmdzJ10+KVsnc2VydmVyQ29uZmlnJ10+KVsnY3VzdG9tRmllbGRDb25maWcnXT4pWydQcm9kdWN0T3B0aW9uJ10+KVtudW1iZXJdPjtcbiAgZXhwb3J0IHR5cGUgUHJvZHVjdE9wdGlvbkdyb3VwID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldFNlcnZlckNvbmZpZ1F1ZXJ5WydnbG9iYWxTZXR0aW5ncyddPilbJ3NlcnZlckNvbmZpZyddPilbJ2N1c3RvbUZpZWxkQ29uZmlnJ10+KVsnUHJvZHVjdE9wdGlvbkdyb3VwJ10+KVtudW1iZXJdPjtcbiAgZXhwb3J0IHR5cGUgUHJvZHVjdFZhcmlhbnQgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8R2V0U2VydmVyQ29uZmlnUXVlcnlbJ2dsb2JhbFNldHRpbmdzJ10+KVsnc2VydmVyQ29uZmlnJ10+KVsnY3VzdG9tRmllbGRDb25maWcnXT4pWydQcm9kdWN0VmFyaWFudCddPilbbnVtYmVyXT47XG4gIGV4cG9ydCB0eXBlIFNoaXBwaW5nTWV0aG9kID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldFNlcnZlckNvbmZpZ1F1ZXJ5WydnbG9iYWxTZXR0aW5ncyddPilbJ3NlcnZlckNvbmZpZyddPilbJ2N1c3RvbUZpZWxkQ29uZmlnJ10+KVsnU2hpcHBpbmdNZXRob2QnXT4pW251bWJlcl0+O1xuICBleHBvcnQgdHlwZSBVc2VyID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldFNlcnZlckNvbmZpZ1F1ZXJ5WydnbG9iYWxTZXR0aW5ncyddPilbJ3NlcnZlckNvbmZpZyddPilbJ2N1c3RvbUZpZWxkQ29uZmlnJ10+KVsnVXNlciddPilbbnVtYmVyXT47XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgSm9iSW5mbyB7XG4gIGV4cG9ydCB0eXBlIEZyYWdtZW50ID0gSm9iSW5mb0ZyYWdtZW50O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEdldEpvYkluZm8ge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBHZXRKb2JJbmZvUXVlcnlWYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIFF1ZXJ5ID0gR2V0Sm9iSW5mb1F1ZXJ5O1xuICBleHBvcnQgdHlwZSBKb2IgPSAoTm9uTnVsbGFibGU8R2V0Sm9iSW5mb1F1ZXJ5Wydqb2InXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEdldEFsbEpvYnMge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBHZXRBbGxKb2JzUXVlcnlWYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIFF1ZXJ5ID0gR2V0QWxsSm9ic1F1ZXJ5O1xuICBleHBvcnQgdHlwZSBKb2JzID0gKE5vbk51bGxhYmxlPEdldEFsbEpvYnNRdWVyeVsnam9icyddPik7XG4gIGV4cG9ydCB0eXBlIEl0ZW1zID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxHZXRBbGxKb2JzUXVlcnlbJ2pvYnMnXT4pWydpdGVtcyddPilbbnVtYmVyXT47XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgR2V0Sm9ic0J5SWQge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBHZXRKb2JzQnlJZFF1ZXJ5VmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBRdWVyeSA9IEdldEpvYnNCeUlkUXVlcnk7XG4gIGV4cG9ydCB0eXBlIEpvYnNCeUlkID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldEpvYnNCeUlkUXVlcnlbJ2pvYnNCeUlkJ10+KVtudW1iZXJdPjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBHZXRKb2JRdWV1ZUxpc3Qge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBHZXRKb2JRdWV1ZUxpc3RRdWVyeVZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgUXVlcnkgPSBHZXRKb2JRdWV1ZUxpc3RRdWVyeTtcbiAgZXhwb3J0IHR5cGUgSm9iUXVldWVzID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldEpvYlF1ZXVlTGlzdFF1ZXJ5Wydqb2JRdWV1ZXMnXT4pW251bWJlcl0+O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIENhbmNlbEpvYiB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IENhbmNlbEpvYk11dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IENhbmNlbEpvYk11dGF0aW9uO1xuICBleHBvcnQgdHlwZSBDYW5jZWxKb2IgPSAoTm9uTnVsbGFibGU8Q2FuY2VsSm9iTXV0YXRpb25bJ2NhbmNlbEpvYiddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgUmVpbmRleCB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IFJlaW5kZXhNdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBSZWluZGV4TXV0YXRpb247XG4gIGV4cG9ydCB0eXBlIFJlaW5kZXggPSAoTm9uTnVsbGFibGU8UmVpbmRleE11dGF0aW9uWydyZWluZGV4J10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBDb25maWd1cmFibGVPcGVyYXRpb24ge1xuICBleHBvcnQgdHlwZSBGcmFnbWVudCA9IENvbmZpZ3VyYWJsZU9wZXJhdGlvbkZyYWdtZW50O1xuICBleHBvcnQgdHlwZSBBcmdzID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPENvbmZpZ3VyYWJsZU9wZXJhdGlvbkZyYWdtZW50WydhcmdzJ10+KVtudW1iZXJdPjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBDb25maWd1cmFibGVPcGVyYXRpb25EZWYge1xuICBleHBvcnQgdHlwZSBGcmFnbWVudCA9IENvbmZpZ3VyYWJsZU9wZXJhdGlvbkRlZkZyYWdtZW50O1xuICBleHBvcnQgdHlwZSBBcmdzID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPENvbmZpZ3VyYWJsZU9wZXJhdGlvbkRlZkZyYWdtZW50WydhcmdzJ10+KVtudW1iZXJdPjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBFcnJvclJlc3VsdCB7XG4gIGV4cG9ydCB0eXBlIEZyYWdtZW50ID0gRXJyb3JSZXN1bHRGcmFnbWVudDtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBTaGlwcGluZ01ldGhvZCB7XG4gIGV4cG9ydCB0eXBlIEZyYWdtZW50ID0gU2hpcHBpbmdNZXRob2RGcmFnbWVudDtcbiAgZXhwb3J0IHR5cGUgQ2hlY2tlciA9IChOb25OdWxsYWJsZTxTaGlwcGluZ01ldGhvZEZyYWdtZW50WydjaGVja2VyJ10+KTtcbiAgZXhwb3J0IHR5cGUgQ2FsY3VsYXRvciA9IChOb25OdWxsYWJsZTxTaGlwcGluZ01ldGhvZEZyYWdtZW50WydjYWxjdWxhdG9yJ10+KTtcbiAgZXhwb3J0IHR5cGUgVHJhbnNsYXRpb25zID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPFNoaXBwaW5nTWV0aG9kRnJhZ21lbnRbJ3RyYW5zbGF0aW9ucyddPilbbnVtYmVyXT47XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgR2V0U2hpcHBpbmdNZXRob2RMaXN0IHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gR2V0U2hpcHBpbmdNZXRob2RMaXN0UXVlcnlWYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIFF1ZXJ5ID0gR2V0U2hpcHBpbmdNZXRob2RMaXN0UXVlcnk7XG4gIGV4cG9ydCB0eXBlIFNoaXBwaW5nTWV0aG9kcyA9IChOb25OdWxsYWJsZTxHZXRTaGlwcGluZ01ldGhvZExpc3RRdWVyeVsnc2hpcHBpbmdNZXRob2RzJ10+KTtcbiAgZXhwb3J0IHR5cGUgSXRlbXMgPSBOb25OdWxsYWJsZTwoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldFNoaXBwaW5nTWV0aG9kTGlzdFF1ZXJ5WydzaGlwcGluZ01ldGhvZHMnXT4pWydpdGVtcyddPilbbnVtYmVyXT47XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgR2V0U2hpcHBpbmdNZXRob2Qge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBHZXRTaGlwcGluZ01ldGhvZFF1ZXJ5VmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBRdWVyeSA9IEdldFNoaXBwaW5nTWV0aG9kUXVlcnk7XG4gIGV4cG9ydCB0eXBlIFNoaXBwaW5nTWV0aG9kID0gKE5vbk51bGxhYmxlPEdldFNoaXBwaW5nTWV0aG9kUXVlcnlbJ3NoaXBwaW5nTWV0aG9kJ10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBHZXRTaGlwcGluZ01ldGhvZE9wZXJhdGlvbnMge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBHZXRTaGlwcGluZ01ldGhvZE9wZXJhdGlvbnNRdWVyeVZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgUXVlcnkgPSBHZXRTaGlwcGluZ01ldGhvZE9wZXJhdGlvbnNRdWVyeTtcbiAgZXhwb3J0IHR5cGUgU2hpcHBpbmdFbGlnaWJpbGl0eUNoZWNrZXJzID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldFNoaXBwaW5nTWV0aG9kT3BlcmF0aW9uc1F1ZXJ5WydzaGlwcGluZ0VsaWdpYmlsaXR5Q2hlY2tlcnMnXT4pW251bWJlcl0+O1xuICBleHBvcnQgdHlwZSBTaGlwcGluZ0NhbGN1bGF0b3JzID0gTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPEdldFNoaXBwaW5nTWV0aG9kT3BlcmF0aW9uc1F1ZXJ5WydzaGlwcGluZ0NhbGN1bGF0b3JzJ10+KVtudW1iZXJdPjtcbiAgZXhwb3J0IHR5cGUgRnVsZmlsbG1lbnRIYW5kbGVycyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxHZXRTaGlwcGluZ01ldGhvZE9wZXJhdGlvbnNRdWVyeVsnZnVsZmlsbG1lbnRIYW5kbGVycyddPilbbnVtYmVyXT47XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgQ3JlYXRlU2hpcHBpbmdNZXRob2Qge1xuICBleHBvcnQgdHlwZSBWYXJpYWJsZXMgPSBDcmVhdGVTaGlwcGluZ01ldGhvZE11dGF0aW9uVmFyaWFibGVzO1xuICBleHBvcnQgdHlwZSBNdXRhdGlvbiA9IENyZWF0ZVNoaXBwaW5nTWV0aG9kTXV0YXRpb247XG4gIGV4cG9ydCB0eXBlIENyZWF0ZVNoaXBwaW5nTWV0aG9kID0gKE5vbk51bGxhYmxlPENyZWF0ZVNoaXBwaW5nTWV0aG9kTXV0YXRpb25bJ2NyZWF0ZVNoaXBwaW5nTWV0aG9kJ10+KTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBVcGRhdGVTaGlwcGluZ01ldGhvZCB7XG4gIGV4cG9ydCB0eXBlIFZhcmlhYmxlcyA9IFVwZGF0ZVNoaXBwaW5nTWV0aG9kTXV0YXRpb25WYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIE11dGF0aW9uID0gVXBkYXRlU2hpcHBpbmdNZXRob2RNdXRhdGlvbjtcbiAgZXhwb3J0IHR5cGUgVXBkYXRlU2hpcHBpbmdNZXRob2QgPSAoTm9uTnVsbGFibGU8VXBkYXRlU2hpcHBpbmdNZXRob2RNdXRhdGlvblsndXBkYXRlU2hpcHBpbmdNZXRob2QnXT4pO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIERlbGV0ZVNoaXBwaW5nTWV0aG9kIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gRGVsZXRlU2hpcHBpbmdNZXRob2RNdXRhdGlvblZhcmlhYmxlcztcbiAgZXhwb3J0IHR5cGUgTXV0YXRpb24gPSBEZWxldGVTaGlwcGluZ01ldGhvZE11dGF0aW9uO1xuICBleHBvcnQgdHlwZSBEZWxldGVTaGlwcGluZ01ldGhvZCA9IChOb25OdWxsYWJsZTxEZWxldGVTaGlwcGluZ01ldGhvZE11dGF0aW9uWydkZWxldGVTaGlwcGluZ01ldGhvZCddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgVGVzdFNoaXBwaW5nTWV0aG9kIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gVGVzdFNoaXBwaW5nTWV0aG9kUXVlcnlWYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIFF1ZXJ5ID0gVGVzdFNoaXBwaW5nTWV0aG9kUXVlcnk7XG4gIGV4cG9ydCB0eXBlIFRlc3RTaGlwcGluZ01ldGhvZCA9IChOb25OdWxsYWJsZTxUZXN0U2hpcHBpbmdNZXRob2RRdWVyeVsndGVzdFNoaXBwaW5nTWV0aG9kJ10+KTtcbiAgZXhwb3J0IHR5cGUgUXVvdGUgPSAoTm9uTnVsbGFibGU8KE5vbk51bGxhYmxlPFRlc3RTaGlwcGluZ01ldGhvZFF1ZXJ5Wyd0ZXN0U2hpcHBpbmdNZXRob2QnXT4pWydxdW90ZSddPik7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgVGVzdEVsaWdpYmxlU2hpcHBpbmdNZXRob2RzIHtcbiAgZXhwb3J0IHR5cGUgVmFyaWFibGVzID0gVGVzdEVsaWdpYmxlU2hpcHBpbmdNZXRob2RzUXVlcnlWYXJpYWJsZXM7XG4gIGV4cG9ydCB0eXBlIFF1ZXJ5ID0gVGVzdEVsaWdpYmxlU2hpcHBpbmdNZXRob2RzUXVlcnk7XG4gIGV4cG9ydCB0eXBlIFRlc3RFbGlnaWJsZVNoaXBwaW5nTWV0aG9kcyA9IE5vbk51bGxhYmxlPChOb25OdWxsYWJsZTxUZXN0RWxpZ2libGVTaGlwcGluZ01ldGhvZHNRdWVyeVsndGVzdEVsaWdpYmxlU2hpcHBpbmdNZXRob2RzJ10+KVtudW1iZXJdPjtcbn1cbiJdfQ==
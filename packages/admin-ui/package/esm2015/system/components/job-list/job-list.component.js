import { ChangeDetectionStrategy, Component } from '@angular/core';
import { FormControl } from '@angular/forms';
import { ActivatedRoute, Router } from '@angular/router';
import { BaseListComponent, DataService, ModalService, NotificationService, SortOrder, } from '@vendure/admin-ui/core';
import { timer } from 'rxjs';
import { filter, map, takeUntil } from 'rxjs/operators';
export class JobListComponent extends BaseListComponent {
    constructor(dataService, modalService, notificationService, router, route) {
        super(router, route);
        this.dataService = dataService;
        this.modalService = modalService;
        this.notificationService = notificationService;
        this.liveUpdate = new FormControl(true);
        this.hideSettled = new FormControl(true);
        this.queueFilter = new FormControl('all');
        super.setQueryFn((...args) => this.dataService.settings.getAllJobs(...args), data => data.jobs, (skip, take) => {
            const queueFilter = this.queueFilter.value === 'all' ? null : { queueName: { eq: this.queueFilter.value } };
            const hideSettled = this.hideSettled.value;
            return {
                options: {
                    skip,
                    take,
                    filter: Object.assign(Object.assign({}, queueFilter), (hideSettled ? { isSettled: { eq: false } } : {})),
                    sort: {
                        createdAt: SortOrder.DESC,
                    },
                },
            };
        });
    }
    ngOnInit() {
        super.ngOnInit();
        timer(5000, 2000)
            .pipe(takeUntil(this.destroy$), filter(() => this.liveUpdate.value))
            .subscribe(() => {
            this.refresh();
        });
        this.queues$ = this.dataService.settings
            .getJobQueues()
            .mapStream(res => res.jobQueues)
            .pipe(map(queues => {
            return [{ name: 'all', running: true }, ...queues];
        }));
    }
    hasResult(job) {
        const result = job.result;
        if (result == null) {
            return false;
        }
        if (typeof result === 'object') {
            return Object.keys(result).length > 0;
        }
        return true;
    }
    cancelJob(id) {
        this.dataService.settings.cancelJob(id).subscribe(() => this.refresh());
    }
}
JobListComponent.decorators = [
    { type: Component, args: [{
                selector: 'vdr-job-list',
                template: "<vdr-action-bar>\n    <vdr-ab-left>\n        <clr-checkbox-container>\n            <clr-checkbox-wrapper>\n                <input type=\"checkbox\" clrCheckbox [formControl]=\"liveUpdate\" name=\"live-update\"/>\n                <label>{{ 'common.live-update' | translate }}</label>\n            </clr-checkbox-wrapper>\n            <clr-checkbox-wrapper>\n                <input\n                    type=\"checkbox\"\n                    clrCheckbox\n                    [formControl]=\"hideSettled\"\n                    name=\"hide-settled\"\n                    (change)=\"refresh()\"\n                />\n                <label>{{ 'system.hide-settled-jobs' | translate }}</label>\n            </clr-checkbox-wrapper>\n        </clr-checkbox-container>\n    </vdr-ab-left>\n    <vdr-ab-right>\n        <ng-select\n            [addTag]=\"false\"\n            [items]=\"queues$ | async\"\n            [hideSelected]=\"true\"\n            [multiple]=\"false\"\n            [markFirst]=\"false\"\n            [clearable]=\"false\"\n            [searchable]=\"false\"\n            bindValue=\"name\"\n            [formControl]=\"queueFilter\"\n            (change)=\"refresh()\"\n        >\n            <ng-template ng-label-tmp ng-option-tmp let-item=\"item\">\n                <ng-container *ngIf=\"item.name === 'all'; else others\">\n                    {{ 'system.all-job-queues' | translate }}\n                </ng-container>\n                <ng-template #others>\n                    <vdr-chip [colorFrom]=\"item.name\">{{ item.name }}</vdr-chip>\n                </ng-template>\n            </ng-template>\n        </ng-select>\n        <vdr-action-bar-items locationId=\"job-list\"></vdr-action-bar-items>\n    </vdr-ab-right>\n</vdr-action-bar>\n\n<vdr-data-table\n    [items]=\"items$ | async\"\n    [itemsPerPage]=\"itemsPerPage$ | async\"\n    [totalItems]=\"totalItems$ | async\"\n    [currentPage]=\"currentPage$ | async\"\n    (pageChange)=\"setPageNumber($event)\"\n    (itemsPerPageChange)=\"setItemsPerPage($event)\"\n>\n    <vdr-dt-column></vdr-dt-column>\n    <vdr-dt-column>{{ 'system.job-queue-name' | translate }}</vdr-dt-column>\n    <vdr-dt-column>{{ 'common.created-at' | translate }}</vdr-dt-column>\n    <vdr-dt-column>{{ 'system.job-state' | translate }}</vdr-dt-column>\n    <vdr-dt-column>{{ 'system.job-duration' | translate }}</vdr-dt-column>\n    <vdr-dt-column>{{ 'system.job-result' | translate }}</vdr-dt-column>\n    <vdr-dt-column></vdr-dt-column>\n    <ng-template let-job=\"item\">\n        <td class=\"left align-middle\">\n            <vdr-entity-info [entity]=\"job\"></vdr-entity-info>\n        </td>\n        <td class=\"left align-middle\">\n            <vdr-dropdown *ngIf=\"job.data\">\n                <button\n                    class=\"btn btn-link btn-icon\"\n                    vdrDropdownTrigger\n                    [title]=\"'system.job-data' | translate\"\n                >\n                    <clr-icon shape=\"details\"></clr-icon>\n                </button>\n                <vdr-dropdown-menu>\n                    <div class=\"result-detail\">\n                        <vdr-object-tree [value]=\"job.data\"></vdr-object-tree>\n                    </div>\n                </vdr-dropdown-menu>\n            </vdr-dropdown>\n            <vdr-chip [colorFrom]=\"job.queueName\">{{ job.queueName }}</vdr-chip>\n        </td>\n\n        <td class=\"left align-middle\">{{ job.createdAt | timeAgo }}</td>\n        <td class=\"left align-middle\">\n            <vdr-job-state-label [job]=\"job\"></vdr-job-state-label>\n        </td>\n        <td class=\"left align-middle\">{{ job.duration | duration }}</td>\n        <td class=\"left align-middle\">\n            <vdr-dropdown *ngIf=\"hasResult(job)\">\n                <button class=\"btn btn-link btn-sm details-button\" vdrDropdownTrigger>\n                    <clr-icon shape=\"details\"></clr-icon>\n                    {{ 'system.job-result' | translate }}\n                </button>\n                <vdr-dropdown-menu>\n                    <div class=\"result-detail\">\n                        <vdr-object-tree [value]=\"job.result\"></vdr-object-tree>\n                    </div>\n                </vdr-dropdown-menu>\n            </vdr-dropdown>\n            <vdr-dropdown *ngIf=\"job.error\">\n                <button class=\"btn btn-link btn-sm details-button\" vdrDropdownTrigger>\n                    <clr-icon shape=\"exclamation-circle\"></clr-icon>\n                    {{ 'system.job-error' | translate }}\n                </button>\n                <vdr-dropdown-menu>\n                    <div class=\"result-detail\">\n                        {{ job.error }}\n                    </div>\n                </vdr-dropdown-menu>\n            </vdr-dropdown>\n        </td>\n        <td class=\"right align-middle\">\n            <vdr-dropdown *ngIf=\"!job.isSettled && job.state !== 'FAILED'\">\n                <button class=\"icon-button\" vdrDropdownTrigger>\n                    <clr-icon shape=\"ellipsis-vertical\"></clr-icon>\n                </button>\n                <vdr-dropdown-menu vdrPosition=\"bottom-right\">\n                    <button\n                        type=\"button\"\n                        class=\"delete-button\"\n                        (click)=\"cancelJob(job.id)\"\n                        [disabled]=\"!(['DeleteSettings', 'DeleteSystem'] | hasPermission)\"\n                        vdrDropdownItem\n                    >\n                        <clr-icon shape=\"ban\" class=\"is-danger\"></clr-icon>\n                        {{ 'common.cancel' | translate }}\n                    </button>\n                </vdr-dropdown-menu>\n            </vdr-dropdown>\n        </td>\n    </ng-template>\n</vdr-data-table>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".result-detail{margin:0 12px}"]
            },] }
];
JobListComponent.ctorParameters = () => [
    { type: DataService },
    { type: ModalService },
    { type: NotificationService },
    { type: Router },
    { type: ActivatedRoute }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiam9iLWxpc3QuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9zeXN0ZW0vc3JjL2NvbXBvbmVudHMvam9iLWxpc3Qvam9iLWxpc3QuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDM0UsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDekQsT0FBTyxFQUNILGlCQUFpQixFQUNqQixXQUFXLEVBSVgsWUFBWSxFQUNaLG1CQUFtQixFQUNuQixTQUFTLEdBQ1osTUFBTSx3QkFBd0IsQ0FBQztBQUNoQyxPQUFPLEVBQWMsS0FBSyxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLFNBQVMsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBUXhELE1BQU0sT0FBTyxnQkFDVCxTQUFRLGlCQUFxRDtJQU83RCxZQUNZLFdBQXdCLEVBQ3hCLFlBQTBCLEVBQzFCLG1CQUF3QyxFQUNoRCxNQUFjLEVBQ2QsS0FBcUI7UUFFckIsS0FBSyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQztRQU5iLGdCQUFXLEdBQVgsV0FBVyxDQUFhO1FBQ3hCLGlCQUFZLEdBQVosWUFBWSxDQUFjO1FBQzFCLHdCQUFtQixHQUFuQixtQkFBbUIsQ0FBcUI7UUFQcEQsZUFBVSxHQUFHLElBQUksV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ25DLGdCQUFXLEdBQUcsSUFBSSxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDcEMsZ0JBQVcsR0FBRyxJQUFJLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQVVqQyxLQUFLLENBQUMsVUFBVSxD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blN0cmF0ZWd5LCBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybUNvbnRyb2wgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBBY3RpdmF0ZWRSb3V0ZSwgUm91dGVyIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7XG4gICAgQmFzZUxpc3RDb21wb25lbnQsXG4gICAgRGF0YVNlcnZpY2UsXG4gICAgR2V0QWxsSm9icyxcbiAgICBHZXRGYWNldExpc3QsXG4gICAgR2V0Sm9iUXVldWVMaXN0LFxuICAgIE1vZGFsU2VydmljZSxcbiAgICBOb3RpZmljYXRpb25TZXJ2aWNlLFxuICAgIFNvcnRPcmRlcixcbn0gZnJvbSAnQHZlbmR1cmUvYWRtaW4tdWkvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlLCB0aW1lciB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgZmlsdGVyLCBtYXAsIHRha2VVbnRpbCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICd2ZHItam9iLWxpc3QnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9qb2ItbGlzdC5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vam9iLWxpc3QuY29tcG9uZW50LnNjc3MnXSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgSm9iTGlzdENvbXBvbmVudFxuICAgIGV4dGVuZHMgQmFzZUxpc3RDb21wb25lbnQ8R2V0QWxsSm9icy5RdWVyeSwgR2V0QWxsSm9icy5JdGVtcz5cbiAgICBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gICAgcXVldWVzJDogT2JzZXJ2YWJsZTxHZXRKb2JRdWV1ZUxpc3QuSm9iUXVldWVzW10+O1xuICAgIGxpdmVVcGRhdGUgPSBuZXcgRm9ybUNvbnRyb2wodHJ1ZSk7XG4gICAgaGlkZVNldHRsZWQgPSBuZXcgRm9ybUNvbnRyb2wodHJ1ZSk7XG4gICAgcXVldWVGaWx0ZXIgPSBuZXcgRm9ybUNvbnRyb2woJ2FsbCcpO1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIHByaXZhdGUgZGF0YVNlcnZpY2U6IERhdGFTZXJ2aWNlLFxuICAgICAgICBwcml2YXRlIG1vZGFsU2VydmljZTogTW9kYWxTZXJ2aWNlLFxuICAgICAgICBwcml2YXRlIG5vdGlmaWNhdGlvblNlcnZpY2U6IE5vdGlmaWNhdGlvblNlcnZpY2UsXG4gICAgICAgIHJvdXRlcjogUm91dGVyLFxuICAgICAgICByb3V0ZTogQWN0aXZhdGVkUm91dGUsXG4gICAgKSB7XG4gICAgICAgIHN1cGVyKHJvdXRlciwgcm91dGUpO1xuICAgICAgICBzdXBlci5zZXRRdWVyeUZuKFxuICAgICAgICAgICAgKC4uLmFyZ3M6IGFueVtdKSA9PiB0aGlzLmRhdGFTZXJ2aWNlLnNldHRpbmdzLmdldEFsbEpvYnMoLi4uYXJncyksXG4gICAgICAgICAgICBkYXRhID0+IGRhdGEuam9icyxcbiAgICAgICAgICAgIChza2lwLCB0YWtlKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgcXVldWVGaWx0ZXIgPVxuICAgICAgICAgICAgICAgICAgICB0aGlzLnF1ZXVlRmlsdGVyLnZhbHVlID09PSAnYWxsJyA/IG51bGwgOiB7IHF1ZXVlTmFtZTogeyBlcTogdGhpcy5xdWV1ZUZpbHRlci52YWx1ZSB9IH07XG4gICAgICAgICAgICAgICAgY29uc3QgaGlkZVNldHRsZWQgPSB0aGlzLmhpZGVTZXR0bGVkLnZhbHVlO1xuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNraXAsXG4gICAgICAgICAgICAgICAgICAgICAgICB0YWtlLFxuICAgICAgICAgICAgICAgICAgICAgICAgZmlsdGVyOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLi4ucXVldWVGaWx0ZXIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLi4uKGhpZGVTZXR0bGVkID8geyBpc1NldHRsZWQ6IHsgZXE6IGZhbHNlIH0gfSA6IHt9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBzb3J0OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3JlYXRlZEF0OiBTb3J0T3JkZXIuREVTQyxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgICAgIHN1cGVyLm5nT25Jbml0KCk7XG4gICAgICAgIHRpbWVyKDUwMDAsIDIwMDApXG4gICAgICAgICAgICAucGlwZShcbiAgICAgICAgICAgICAgICB0YWtlVW50aWwodGhpcy5kZXN0cm95JCksXG4gICAgICAgICAgICAgICAgZmlsdGVyKCgpID0+IHRoaXMubGl2ZVVwZGF0ZS52YWx1ZSksXG4gICAgICAgICAgICApXG4gICAgICAgICAgICAuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLnJlZnJlc2goKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB0aGlzLnF1ZXVlcyQgPSB0aGlzLmRhdGFTZXJ2aWNlLnNldHRpbmdzXG4gICAgICAgICAgICAuZ2V0Sm9iUXVldWVzKClcbiAgICAgICAgICAgIC5tYXBTdHJlYW0ocmVzID0+IHJlcy5qb2JRdWV1ZXMpXG4gICAgICAgICAgICAucGlwZShcbiAgICAgICAgICAgICAgICBtYXAocXVldWVzID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFt7IG5hbWU6ICdhbGwnLCBydW5uaW5nOiB0cnVlIH0sIC4uLnF1ZXVlc107XG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICApO1xuICAgIH1cblxuICAgIGhhc1Jlc3VsdChqb2I6IEdldEFsbEpvYnMuSXRlbXMpOiBib29sZWFuIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gam9iLnJlc3VsdDtcbiAgICAgICAgaWYgKHJlc3VsdCA9PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiByZXN1bHQgPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmtleXMocmVzdWx0KS5sZW5ndGggPiAwO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIGNhbmNlbEpvYihpZDogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuZGF0YVNlcnZpY2Uuc2V0dGluZ3MuY2FuY2VsSm9iKGlkKS5zdWJzY3JpYmUoKCkgPT4gdGhpcy5yZWZyZXNoKCkpO1xuICAgIH1cbn1cbiJdfQ==
import { ChangeDetectorRef, OnDestroy, OnInit } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';
import { ActivatedRoute, Router } from '@angular/router';
import { BaseDetailComponent, ConfigurableOperation, ConfigurableOperationDefinition, DataService, NotificationService, PaymentMethod, Permission, ServerConfigService } from '@vendure/admin-ui/core';
export declare class PaymentMethodDetailComponent extends BaseDetailComponent<PaymentMethod.Fragment> implements OnInit, OnDestroy {
    private changeDetector;
    protected dataService: DataService;
    private formBuilder;
    private notificationService;
    detailForm: FormGroup;
    checkers: ConfigurableOperationDefinition[];
    handlers: ConfigurableOperationDefinition[];
    selectedChecker?: ConfigurableOperation | null;
    selectedCheckerDefinition?: ConfigurableOperationDefinition;
    selectedHandler?: ConfigurableOperation | null;
    selectedHandlerDefinition?: ConfigurableOperationDefinition;
    readonly updatePermission: Permission[];
    constructor(router: Router, route: ActivatedRoute, serverConfigService: ServerConfigService, changeDetector: ChangeDetectorRef, dataService: DataService, formBuilder: FormBuilder, notificationService: NotificationService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    updateCode(currentCode: string, nameValue: string): void;
    configArgsIsPopulated(): boolean;
    selectChecker(checker: ConfigurableOperationDefinition): void;
    selectHandler(handler: ConfigurableOperationDefinition): void;
    removeChecker(): void;
    removeHandler(): void;
    create(): void;
    save(): void;
    protected setFormValues(paymentMethod: PaymentMethod.Fragment): void;
}

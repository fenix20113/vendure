{"version":3,"file":"vendure-admin-ui-settings.umd.js","sources":["../../src/lib/settings/src/components/add-country-to-zone-dialog/add-country-to-zone-dialog.component.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/settings/src/components/admin-detail/admin-detail.component.ts","../../src/lib/settings/src/components/administrator-list/administrator-list.component.ts","../../src/lib/settings/src/components/channel-detail/channel-detail.component.ts","../../src/lib/settings/src/components/channel-list/channel-list.component.ts","../../src/lib/settings/src/components/country-detail/country-detail.component.ts","../../src/lib/settings/src/components/country-list/country-list.component.ts","../../src/lib/settings/src/components/global-settings/global-settings.component.ts","../../src/lib/settings/src/components/payment-method-detail/payment-method-detail.component.ts","../../src/lib/settings/src/components/payment-method-list/payment-method-list.component.ts","../../src/lib/settings/src/components/permission-grid/permission-grid.component.ts","../../src/lib/settings/src/components/profile/profile.component.ts","../../src/lib/settings/src/components/role-detail/role-detail.component.ts","../../src/lib/settings/src/components/role-list/role-list.component.ts","../../src/lib/settings/src/components/shipping-eligibility-test-result/shipping-eligibility-test-result.component.ts","../../src/lib/settings/src/components/shipping-method-detail/shipping-method-detail.component.ts","../../src/lib/settings/src/components/shipping-method-list/shipping-method-list.component.ts","../../src/lib/settings/src/components/shipping-method-test-result/shipping-method-test-result.component.ts","../../src/lib/settings/src/components/tax-category-detail/tax-category-detail.component.ts","../../src/lib/settings/src/components/tax-category-list/tax-category-list.component.ts","../../src/lib/settings/src/components/tax-rate-detail/tax-rate-detail.component.ts","../../src/lib/settings/src/components/tax-rate-list/tax-rate-list.component.ts","../../src/lib/settings/src/components/test-address-form/test-address-form.component.ts","../../src/lib/settings/src/components/test-order-builder/test-order-builder.component.ts","../../src/lib/settings/src/components/zone-detail-dialog/zone-detail-dialog.component.ts","../../src/lib/settings/src/components/zone-list/zone-list.component.ts","../../src/lib/settings/src/components/zone-member-list/zone-member-controls.directive.ts","../../src/lib/settings/src/components/zone-member-list/zone-member-list-header.directive.ts","../../src/lib/settings/src/components/zone-member-list/zone-member-list.component.ts","../../src/lib/settings/src/providers/routing/administrator-resolver.ts","../../src/lib/settings/src/providers/routing/channel-resolver.ts","../../src/lib/settings/src/providers/routing/country-resolver.ts","../../src/lib/settings/src/providers/routing/global-settings-resolver.ts","../../src/lib/settings/src/providers/routing/payment-method-resolver.ts","../../src/lib/settings/src/providers/routing/profile-resolver.ts","../../src/lib/settings/src/providers/routing/role-resolver.ts","../../src/lib/settings/src/providers/routing/shipping-method-resolver.ts","../../src/lib/settings/src/providers/routing/tax-category-resolver.ts","../../src/lib/settings/src/providers/routing/tax-rate-resolver.ts","../../src/lib/settings/src/settings.routes.ts","../../src/lib/settings/src/settings.module.ts","../../src/lib/settings/src/public_api.ts","../../src/lib/settings/src/vendure-admin-ui-settings.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { DataService, Dialog, GetCountryList, GetZones } from '@vendure/admin-ui/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\n@Component({\n    selector: 'vdr-add-country-to-zone-dialog',\n    templateUrl: './add-country-to-zone-dialog.component.html',\n    styleUrls: ['./add-country-to-zone-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AddCountryToZoneDialogComponent implements Dialog<string[]>, OnInit {\n    resolveWith: (result?: string[]) => void;\n    zoneName: string;\n    currentMembers: GetZones.Members[] = [];\n    availableCountries$: Observable<GetCountryList.Items[]>;\n    selectedMemberIds: string[] = [];\n\n    constructor(private dataService: DataService) {}\n\n    ngOnInit(): void {\n        const currentMemberIds = this.currentMembers.map(m => m.id);\n        this.availableCountries$ = this.dataService.settings\n            .getCountries(999)\n            .mapStream(data => data.countries.items)\n            .pipe(map(countries => countries.filter(c => !currentMemberIds.includes(c.id))));\n    }\n\n    cancel() {\n        this.resolveWith();\n    }\n\n    add() {\n        this.resolveWith(this.selectedMemberIds);\n    }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport { BaseDetailComponent, CustomFieldConfig, PermissionDefinition } from '@vendure/admin-ui/core';\nimport {\n    Administrator,\n    CreateAdministratorInput,\n    GetAdministrator,\n    LanguageCode,\n    Permission,\n    Role,\n    RoleFragment,\n    UpdateAdministratorInput,\n} from '@vendure/admin-ui/core';\nimport { NotificationService } from '@vendure/admin-ui/core';\nimport { DataService } from '@vendure/admin-ui/core';\nimport { ServerConfigService } from '@vendure/admin-ui/core';\nimport { CUSTOMER_ROLE_CODE } from '@vendure/common/lib/shared-constants';\nimport { Observable } from 'rxjs';\nimport { mergeMap, take } from 'rxjs/operators';\n\nexport interface PermissionsByChannel {\n    channelId: string;\n    channelCode: string;\n    permissions: { [K in Permission]: boolean };\n}\n\n@Component({\n    selector: 'vdr-admin-detail',\n    templateUrl: './admin-detail.component.html',\n    styleUrls: ['./admin-detail.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AdminDetailComponent\n    extends BaseDetailComponent<GetAdministrator.Administrator>\n    implements OnInit, OnDestroy {\n    customFields: CustomFieldConfig[];\n    administrator$: Observable<GetAdministrator.Administrator>;\n    permissionDefinitions: PermissionDefinition[];\n    allRoles$: Observable<Role.Fragment[]>;\n    selectedRoles: Role.Fragment[] = [];\n    detailForm: FormGroup;\n    selectedRolePermissions: { [channelId: string]: PermissionsByChannel } = {} as any;\n    selectedChannelId: string | null = null;\n\n    getAvailableChannels(): PermissionsByChannel[] {\n        return Object.values(this.selectedRolePermissions);\n    }\n\n    constructor(\n        router: Router,\n        route: ActivatedRoute,\n        serverConfigService: ServerConfigService,\n        private changeDetector: ChangeDetectorRef,\n        protected dataService: DataService,\n        private formBuilder: FormBuilder,\n        private notificationService: NotificationService,\n    ) {\n        super(route, router, serverConfigService, dataService);\n        this.customFields = this.getCustomFieldConfig('Administrator');\n        this.detailForm = this.formBuilder.group({\n            emailAddress: ['', Validators.required],\n            firstName: ['', Validators.required],\n            lastName: ['', Validators.required],\n            password: [''],\n            roles: [[]],\n            customFields: this.formBuilder.group(\n                this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\n            ),\n        });\n    }\n\n    ngOnInit() {\n        this.init();\n        this.administrator$ = this.entity$;\n        this.allRoles$ = this.dataService.administrator\n            .getRoles(999)\n            .mapStream(item => item.roles.items.filter(i => i.code !== CUSTOMER_ROLE_CODE));\n        this.dataService.client.userStatus().single$.subscribe(({ userStatus }) => {\n            if (!userStatus.permissions.includes(Permission.UpdateAdministrator)) {\n                const rolesSelect = this.detailForm.get('roles');\n                if (rolesSelect) {\n                    rolesSelect.disable();\n                }\n            }\n        });\n        this.permissionDefinitions = this.serverConfigService.getPermissionDefinitions();\n    }\n\n    ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    customFieldIsSet(name: string): boolean {\n        return !!this.detailForm.get(['customFields', name]);\n    }\n\n    rolesChanged(roles: Role[]) {\n        this.buildPermissionsMap();\n    }\n\n    getPermissionsForSelectedChannel(): string[] {\n        function getActivePermissions(input: PermissionsByChannel['permissions']): string[] {\n            return Object.entries(input)\n                .filter(([permission, active]) => active)\n                .map(([permission, active]) => permission);\n        }\n        if (this.selectedChannelId) {\n            const selectedChannel = this.selectedRolePermissions[this.selectedChannelId];\n            if (selectedChannel) {\n                const permissionMap = this.selectedRolePermissions[this.selectedChannelId].permissions;\n                return getActivePermissions(permissionMap);\n            }\n        }\n        const channels = Object.values(this.selectedRolePermissions);\n        if (0 < channels.length) {\n            this.selectedChannelId = channels[0].channelId;\n            return getActivePermissions(channels[0].permissions);\n        }\n        return [];\n    }\n\n    create() {\n        const formValue = this.detailForm.value;\n        const administrator: CreateAdministratorInput = {\n            emailAddress: formValue.emailAddress,\n            firstName: formValue.firstName,\n            lastName: formValue.lastName,\n            password: formValue.password,\n            customFields: formValue.customFields,\n            roleIds: formValue.roles.map(role => role.id),\n        };\n        this.dataService.administrator.createAdministrator(administrator).subscribe(\n            data => {\n                this.notificationService.success(_('common.notify-create-success'), {\n                    entity: 'Administrator',\n                });\n                this.detailForm.markAsPristine();\n                this.changeDetector.markForCheck();\n                this.router.navigate(['../', data.createAdministrator.id], { relativeTo: this.route });\n            },\n            err => {\n                this.notificationService.error(_('common.notify-create-error'), {\n                    entity: 'Administrator',\n                });\n            },\n        );\n    }\n\n    save() {\n        this.administrator$\n            .pipe(\n                take(1),\n                mergeMap(({ id }) => {\n                    const formValue = this.detailForm.value;\n                    const administrator: UpdateAdministratorInput = {\n                        id,\n                        emailAddress: formValue.emailAddress,\n                        firstName: formValue.firstName,\n                        lastName: formValue.lastName,\n                        password: formValue.password,\n                        customFields: formValue.customFields,\n                        roleIds: formValue.roles.map(role => role.id),\n                    };\n                    return this.dataService.administrator.updateAdministrator(administrator);\n                }),\n            )\n            .subscribe(\n                data => {\n                    this.notificationService.success(_('common.notify-update-success'), {\n                        entity: 'Administrator',\n                    });\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-update-error'), {\n                        entity: 'Administrator',\n                    });\n                },\n            );\n    }\n\n    protected setFormValues(administrator: Administrator, languageCode: LanguageCode): void {\n        this.detailForm.patchValue({\n            emailAddress: administrator.emailAddress,\n            firstName: administrator.firstName,\n            lastName: administrator.lastName,\n            roles: administrator.user.roles,\n        });\n        if (this.customFields.length) {\n            const customFieldsGroup = this.detailForm.get('customFields') as FormGroup;\n\n            for (const fieldDef of this.customFields) {\n                const key = fieldDef.name;\n                const value = (administrator as any).customFields[key];\n                const control = customFieldsGroup.get(key);\n                if (control) {\n                    control.patchValue(value);\n                }\n            }\n        }\n        const passwordControl = this.detailForm.get('password');\n        if (passwordControl) {\n            if (!administrator.id) {\n                passwordControl.setValidators([Validators.required]);\n            } else {\n                passwordControl.setValidators([]);\n            }\n        }\n        this.buildPermissionsMap();\n    }\n\n    private buildPermissionsMap() {\n        const permissionsControl = this.detailForm.get('roles');\n        if (permissionsControl) {\n            const roles: RoleFragment[] = permissionsControl.value;\n            const channelIdPermissionsMap = new Map<string, Set<Permission>>();\n            const channelIdCodeMap = new Map<string, string>();\n\n            for (const role of roles) {\n                for (const channel of role.channels) {\n                    const channelPermissions = channelIdPermissionsMap.get(channel.id);\n                    const permissionSet = channelPermissions || new Set<Permission>();\n\n                    role.permissions.forEach(p => permissionSet.add(p));\n                    channelIdPermissionsMap.set(channel.id, permissionSet);\n                    channelIdCodeMap.set(channel.id, channel.code);\n                }\n            }\n\n            this.selectedRolePermissions = {} as any;\n            for (const channelId of Array.from(channelIdPermissionsMap.keys())) {\n                // tslint:disable-next-line:no-non-null-assertion\n                const permissionSet = channelIdPermissionsMap.get(channelId)!;\n                const permissionsHash: { [K in Permission]: boolean } = {} as any;\n                for (const def of this.serverConfigService.getPermissionDefinitions()) {\n                    permissionsHash[def.name] = permissionSet.has(def.name as Permission);\n                }\n                this.selectedRolePermissions[channelId] = {\n                    // tslint:disable:no-non-null-assertion\n                    channelId,\n                    channelCode: channelIdCodeMap.get(channelId)!,\n                    permissions: permissionsHash,\n                    // tslint:enable:no-non-null-assertion\n                };\n            }\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    BaseListComponent,\n    DataService,\n    GetAdministrators,\n    ModalService,\n    NotificationService,\n} from '@vendure/admin-ui/core';\nimport { EMPTY } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n    selector: 'vdr-administrator-list',\n    templateUrl: './administrator-list.component.html',\n    styleUrls: ['./administrator-list.component.scss'],\n})\nexport class AdministratorListComponent extends BaseListComponent<\n    GetAdministrators.Query,\n    GetAdministrators.Items\n> {\n    constructor(\n        private dataService: DataService,\n        router: Router,\n        route: ActivatedRoute,\n        private modalService: ModalService,\n        private notificationService: NotificationService,\n    ) {\n        super(router, route);\n        super.setQueryFn(\n            (...args: any[]) => this.dataService.administrator.getAdministrators(...args),\n            (data) => data.administrators,\n        );\n    }\n\n    deleteAdministrator(administrator: GetAdministrators.Items) {\n        return this.modalService\n            .dialog({\n                title: _('catalog.confirm-delete-administrator'),\n                body: `${administrator.firstName} ${administrator.lastName}`,\n                buttons: [\n                    { type: 'secondary', label: _('common.cancel') },\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\n                ],\n            })\n            .pipe(\n                switchMap((res) =>\n                    res ? this.dataService.administrator.deleteAdministrator(administrator.id) : EMPTY,\n                ),\n            )\n            .subscribe(\n                () => {\n                    this.notificationService.success(_('common.notify-delete-success'), {\n                        entity: 'Administrator',\n                    });\n                    this.refresh();\n                },\n                (err) => {\n                    this.notificationService.error(_('common.notify-delete-error'), {\n                        entity: 'Administrator',\n                    });\n                },\n            );\n    }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport { BaseDetailComponent, CustomFieldConfig, Permission } from '@vendure/admin-ui/core';\nimport {\n    Channel,\n    CreateChannelInput,\n    CurrencyCode,\n    GetZones,\n    LanguageCode,\n    UpdateChannelInput,\n} from '@vendure/admin-ui/core';\nimport { getDefaultUiLanguage } from '@vendure/admin-ui/core';\nimport { NotificationService } from '@vendure/admin-ui/core';\nimport { DataService } from '@vendure/admin-ui/core';\nimport { ServerConfigService } from '@vendure/admin-ui/core';\nimport { DEFAULT_CHANNEL_CODE } from '@vendure/common/lib/shared-constants';\nimport { Observable } from 'rxjs';\nimport { map, mergeMap, take } from 'rxjs/operators';\n@Component({\n    selector: 'vdr-channel-detail',\n    templateUrl: './channel-detail.component.html',\n    styleUrls: ['./channel-detail.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ChannelDetailComponent\n    extends BaseDetailComponent<Channel.Fragment>\n    implements OnInit, OnDestroy {\n    customFields: CustomFieldConfig[];\n    zones$: Observable<GetZones.Zones[]>;\n    detailForm: FormGroup;\n    currencyCodes = Object.values(CurrencyCode);\n    availableLanguageCodes$: Observable<LanguageCode[]>;\n    readonly updatePermission = [Permission.SuperAdmin, Permission.UpdateChannel, Permission.CreateChannel];\n\n    constructor(\n        router: Router,\n        route: ActivatedRoute,\n        protected serverConfigService: ServerConfigService,\n        private changeDetector: ChangeDetectorRef,\n        protected dataService: DataService,\n        private formBuilder: FormBuilder,\n        private notificationService: NotificationService,\n    ) {\n        super(route, router, serverConfigService, dataService);\n        this.customFields = this.getCustomFieldConfig('Channel');\n        this.detailForm = this.formBuilder.group({\n            code: ['', Validators.required],\n            token: ['', Validators.required],\n            pricesIncludeTax: [false],\n            currencyCode: [''],\n            defaultShippingZoneId: ['', Validators.required],\n            defaultLanguageCode: [],\n            defaultTaxZoneId: ['', Validators.required],\n            customFields: this.formBuilder.group(\n                this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\n            ),\n        });\n    }\n\n    ngOnInit() {\n        this.init();\n        this.zones$ = this.dataService.settings.getZones().mapSingle(data => data.zones);\n        this.availableLanguageCodes$ = this.serverConfigService.getAvailableLanguages();\n    }\n\n    ngOnDestroy() {\n        this.destroy();\n    }\n\n    customFieldIsSet(name: string): boolean {\n        return !!this.detailForm.get(['customFields', name]);\n    }\n\n    saveButtonEnabled(): boolean {\n        return this.detailForm.dirty && this.detailForm.valid;\n    }\n\n    create() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const formValue = this.detailForm.value;\n        const input: CreateChannelInput = {\n            code: formValue.code,\n            token: formValue.token,\n            defaultLanguageCode: formValue.defaultLanguageCode,\n            pricesIncludeTax: formValue.pricesIncludeTax,\n            currencyCode: formValue.currencyCode,\n            defaultShippingZoneId: formValue.defaultShippingZoneId,\n            defaultTaxZoneId: formValue.defaultTaxZoneId,\n            customFields: formValue.customFields,\n        };\n        this.dataService.settings\n            .createChannel(input)\n            .pipe(\n                mergeMap(({ createChannel }) =>\n                    this.dataService.auth.currentUser().single$.pipe(\n                        map(({ me }) => ({\n                            me,\n                            createChannel,\n                        })),\n                    ),\n                ),\n                mergeMap(({ me, createChannel }) =>\n                    // tslint:disable-next-line:no-non-null-assertion\n                    this.dataService.client.updateUserChannels(me!.channels).pipe(map(() => createChannel)),\n                ),\n            )\n            .subscribe(data => {\n                switch (data.__typename) {\n                    case 'Channel':\n                        this.notificationService.success(_('common.notify-create-success'), {\n                            entity: 'Channel',\n                        });\n                        this.detailForm.markAsPristine();\n                        this.changeDetector.markForCheck();\n                        this.router.navigate(['../', data.id], { relativeTo: this.route });\n                        break;\n                    case 'LanguageNotAvailableError':\n                        this.notificationService.error(data.message);\n                        break;\n                }\n            });\n    }\n\n    save() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const formValue = this.detailForm.value;\n        this.entity$\n            .pipe(\n                take(1),\n                mergeMap(channel => {\n                    const input = {\n                        id: channel.id,\n                        code: formValue.code,\n                        pricesIncludeTax: formValue.pricesIncludeTax,\n                        currencyCode: formValue.currencyCode,\n                        defaultShippingZoneId: formValue.defaultShippingZoneId,\n                        defaultLanguageCode: formValue.defaultLanguageCode,\n                        defaultTaxZoneId: formValue.defaultTaxZoneId,\n                        customFields: formValue.customFields,\n                    } as UpdateChannelInput;\n                    return this.dataService.settings.updateChannel(input);\n                }),\n            )\n            .subscribe(({ updateChannel }) => {\n                switch (updateChannel.__typename) {\n                    case 'Channel':\n                        this.notificationService.success(_('common.notify-update-success'), {\n                            entity: 'Channel',\n                        });\n                        this.detailForm.markAsPristine();\n                        this.changeDetector.markForCheck();\n                        break;\n                    case 'LanguageNotAvailableError':\n                        this.notificationService.error(updateChannel.message);\n                }\n            });\n    }\n\n    /**\n     * Update the form values when the entity changes.\n     */\n    protected setFormValues(entity: Channel.Fragment, languageCode: LanguageCode): void {\n        this.detailForm.patchValue({\n            code: entity.code,\n            token: entity.token || this.generateToken(),\n            pricesIncludeTax: entity.pricesIncludeTax,\n            currencyCode: entity.currencyCode,\n            defaultShippingZoneId: entity.defaultShippingZone ? entity.defaultShippingZone.id : '',\n            defaultLanguageCode: entity.defaultLanguageCode,\n            defaultTaxZoneId: entity.defaultTaxZone ? entity.defaultTaxZone.id : '',\n        });\n        if (this.customFields.length) {\n            const customFieldsGroup = this.detailForm.get('customFields') as FormGroup;\n\n            for (const fieldDef of this.customFields) {\n                const key = fieldDef.name;\n                const value = (entity as any).customFields[key];\n                const control = customFieldsGroup.get(key);\n                if (control) {\n                    control.patchValue(value);\n                }\n            }\n        }\n        if (entity.code === DEFAULT_CHANNEL_CODE) {\n            const codeControl = this.detailForm.get('code');\n            if (codeControl) {\n                codeControl.disable();\n            }\n        }\n    }\n\n    private generateToken(): string {\n        const randomString = () => Math.random().toString(36).substr(3, 10);\n        return `${randomString()}${randomString()}`;\n    }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport { DEFAULT_CHANNEL_CODE } from '@vendure/common/lib/shared-constants';\nimport { EMPTY, Observable, Subject } from 'rxjs';\nimport { mergeMap, startWith, switchMap } from 'rxjs/operators';\n\nimport { Channel } from '@vendure/admin-ui/core';\nimport { NotificationService } from '@vendure/admin-ui/core';\nimport { DataService } from '@vendure/admin-ui/core';\nimport { ModalService } from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-channel-list',\n    templateUrl: './channel-list.component.html',\n    styleUrls: ['./channel-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ChannelListComponent {\n    channels$: Observable<Channel.Fragment[]>;\n    private refresh$ = new Subject();\n\n    constructor(\n        private dataService: DataService,\n        private modalService: ModalService,\n        private notificationService: NotificationService,\n    ) {\n        this.channels$ = this.refresh$.pipe(\n            startWith(1),\n            switchMap(() => this.dataService.settings.getChannels().mapStream(data => data.channels)),\n        );\n    }\n\n    isDefaultChannel(channelCode: string): boolean {\n        return channelCode === DEFAULT_CHANNEL_CODE;\n    }\n\n    deleteChannel(id: string) {\n        this.modalService\n            .dialog({\n                title: _('catalog.confirm-delete-channel'),\n                buttons: [\n                    { type: 'secondary', label: _('common.cancel') },\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\n                ],\n            })\n            .pipe(\n                switchMap(response => (response ? this.dataService.settings.deleteChannel(id) : EMPTY)),\n                mergeMap(() => this.dataService.auth.currentUser().single$),\n                // tslint:disable-next-line:no-non-null-assertion\n                mergeMap(data => this.dataService.client.updateUserChannels(data.me!.channels)),\n            )\n            .subscribe(\n                () => {\n                    this.notificationService.success(_('common.notify-delete-success'), {\n                        entity: 'Channel',\n                    });\n                    this.refresh$.next(1);\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-delete-error'), {\n                        entity: 'Channel',\n                    });\n                },\n            );\n    }\n}\n","import { ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    BaseDetailComponent,\n    Country,\n    CreateCountryInput,\n    createUpdatedTranslatable,\n    DataService,\n    findTranslation,\n    LanguageCode,\n    NotificationService,\n    Permission,\n    ServerConfigService,\n    UpdateCountryInput,\n} from '@vendure/admin-ui/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { mergeMap, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'vdr-country-detail',\n    templateUrl: './country-detail.component.html',\n    styleUrls: ['./country-detail.component.scss'],\n})\nexport class CountryDetailComponent\n    extends BaseDetailComponent<Country.Fragment>\n    implements OnInit, OnDestroy {\n    country$: Observable<Country.Fragment>;\n    detailForm: FormGroup;\n    readonly updatePermission = [Permission.UpdateSettings, Permission.UpdateCountry];\n\n    constructor(\n        router: Router,\n        route: ActivatedRoute,\n        serverConfigService: ServerConfigService,\n        private changeDetector: ChangeDetectorRef,\n        protected dataService: DataService,\n        private formBuilder: FormBuilder,\n        private notificationService: NotificationService,\n    ) {\n        super(route, router, serverConfigService, dataService);\n        this.detailForm = this.formBuilder.group({\n            code: ['', Validators.required],\n            name: ['', Validators.required],\n            enabled: [true],\n        });\n    }\n\n    ngOnInit() {\n        this.init();\n        this.country$ = this.entity$;\n    }\n\n    ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    create() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        combineLatest(this.country$, this.languageCode$)\n            .pipe(\n                take(1),\n                mergeMap(([country, languageCode]) => {\n                    const formValue = this.detailForm.value;\n                    const input: CreateCountryInput = createUpdatedTranslatable({\n                        translatable: country,\n                        updatedFields: formValue,\n                        languageCode,\n                        defaultTranslation: {\n                            name: formValue.name,\n                            languageCode,\n                        },\n                    });\n                    return this.dataService.settings.createCountry(input);\n                }),\n            )\n            .subscribe(\n                data => {\n                    this.notificationService.success(_('common.notify-create-success'), {\n                        entity: 'Country',\n                    });\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                    this.router.navigate(['../', data.createCountry.id], { relativeTo: this.route });\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-create-error'), {\n                        entity: 'Country',\n                    });\n                },\n            );\n    }\n\n    save() {\n        combineLatest(this.country$, this.languageCode$)\n            .pipe(\n                take(1),\n                mergeMap(([country, languageCode]) => {\n                    const formValue = this.detailForm.value;\n                    const input: UpdateCountryInput = createUpdatedTranslatable({\n                        translatable: country,\n                        updatedFields: formValue,\n                        languageCode,\n                        defaultTranslation: {\n                            name: formValue.name,\n                            languageCode,\n                        },\n                    });\n                    return this.dataService.settings.updateCountry(input);\n                }),\n            )\n            .subscribe(\n                data => {\n                    this.notificationService.success(_('common.notify-update-success'), {\n                        entity: 'Country',\n                    });\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-update-error'), {\n                        entity: 'Country',\n                    });\n                },\n            );\n    }\n\n    protected setFormValues(country: Country, languageCode: LanguageCode): void {\n        const currentTranslation = findTranslation(country, languageCode);\n\n        this.detailForm.patchValue({\n            code: country.code,\n            name: currentTranslation ? currentTranslation.name : '',\n            enabled: country.enabled,\n        });\n    }\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    DataService,\n    DeletionResult,\n    GetCountryList,\n    GetZones,\n    ModalService,\n    NotificationService,\n    Zone,\n} from '@vendure/admin-ui/core';\nimport { combineLatest, EMPTY, Observable, Subject } from 'rxjs';\nimport { map, startWith, switchMap, tap } from 'rxjs/operators';\n\n@Component({\n    selector: 'vdr-country-list',\n    templateUrl: './country-list.component.html',\n    styleUrls: ['./country-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CountryListComponent implements OnInit, OnDestroy {\n    searchTerm = new FormControl('');\n    countriesWithZones$: Observable<Array<GetCountryList.Items & { zones: GetZones.Zones[] }>>;\n    zones$: Observable<GetZones.Zones[]>;\n\n    private countries: GetCountryList.Items[] = [];\n    private destroy$ = new Subject();\n\n    constructor(\n        private dataService: DataService,\n        private notificationService: NotificationService,\n        private modalService: ModalService,\n    ) {}\n\n    ngOnInit() {\n        const countries$ = this.searchTerm.valueChanges.pipe(\n            startWith(null),\n            switchMap(term => this.dataService.settings.getCountries(999, 0, term).stream$),\n            tap(data => (this.countries = data.countries.items)),\n            map(data => data.countries.items),\n        );\n        this.zones$ = this.dataService.settings.getZones().mapStream(data => data.zones);\n        this.countriesWithZones$ = combineLatest(countries$, this.zones$).pipe(\n            map(([countries, zones]) => {\n                return countries.map(country => ({\n                    ...country,\n                    zones: zones.filter(z => !!z.members.find(c => c.id === country.id)),\n                }));\n            }),\n        );\n    }\n\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    deleteCountry(countryId: string) {\n        this.modalService\n            .dialog({\n                title: _('catalog.confirm-delete-country'),\n                buttons: [\n                    { type: 'secondary', label: _('common.cancel') },\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\n                ],\n            })\n            .pipe(\n                switchMap(response =>\n                    response ? this.dataService.settings.deleteCountry(countryId) : EMPTY,\n                ),\n            )\n            .subscribe(\n                response => {\n                    if (response.deleteCountry.result === DeletionResult.DELETED) {\n                        this.notificationService.success(_('common.notify-delete-success'), {\n                            entity: 'Country',\n                        });\n                        this.dataService.settings.getCountries(999, 0).single$.subscribe();\n                    } else {\n                        this.notificationService.error(response.deleteCountry.message || '');\n                    }\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-delete-error'), {\n                        entity: 'Country',\n                    });\n                },\n            );\n    }\n\n    private isZone(input: Zone.Fragment | { name: string } | string): input is Zone.Fragment {\n        return input.hasOwnProperty('id');\n    }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport { BaseDetailComponent } from '@vendure/admin-ui/core';\nimport { CustomFieldConfig, GlobalSettings, LanguageCode, Permission } from '@vendure/admin-ui/core';\nimport { NotificationService } from '@vendure/admin-ui/core';\nimport { DataService } from '@vendure/admin-ui/core';\nimport { ServerConfigService } from '@vendure/admin-ui/core';\nimport { switchMap, tap } from 'rxjs/operators';\n\n@Component({\n    selector: 'vdr-global-settings',\n    templateUrl: './global-settings.component.html',\n    styleUrls: ['./global-settings.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GlobalSettingsComponent extends BaseDetailComponent<GlobalSettings> implements OnInit {\n    detailForm: FormGroup;\n    customFields: CustomFieldConfig[];\n    languageCodes = Object.values(LanguageCode);\n    readonly updatePermission = [Permission.UpdateSettings, Permission.UpdateGlobalSettings];\n\n    constructor(\n        router: Router,\n        route: ActivatedRoute,\n        serverConfigService: ServerConfigService,\n        private changeDetector: ChangeDetectorRef,\n        protected dataService: DataService,\n        private formBuilder: FormBuilder,\n        private notificationService: NotificationService,\n    ) {\n        super(route, router, serverConfigService, dataService);\n        this.customFields = this.getCustomFieldConfig('GlobalSettings');\n        this.detailForm = this.formBuilder.group({\n            availableLanguages: [''],\n            trackInventory: false,\n            outOfStockThreshold: [0, Validators.required],\n            customFields: this.formBuilder.group(\n                this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\n            ),\n        });\n    }\n\n    ngOnInit(): void {\n        this.init();\n        this.dataService.client.userStatus().single$.subscribe(({ userStatus }) => {\n            if (!userStatus.permissions.includes(Permission.UpdateSettings)) {\n                const languagesSelect = this.detailForm.get('availableLanguages');\n                if (languagesSelect) {\n                    languagesSelect.disable();\n                }\n            }\n        });\n    }\n\n    customFieldIsSet(name: string): boolean {\n        return !!this.detailForm.get(['customFields', name]);\n    }\n\n    save() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n\n        this.dataService.settings\n            .updateGlobalSettings(this.detailForm.value)\n            .pipe(\n                tap(({ updateGlobalSettings }) => {\n                    switch (updateGlobalSettings.__typename) {\n                        case 'GlobalSettings':\n                            this.detailForm.markAsPristine();\n                            this.changeDetector.markForCheck();\n                            this.notificationService.success(_('common.notify-update-success'), {\n                                entity: 'Settings',\n                            });\n                            break;\n                        case 'ChannelDefaultLanguageError':\n                            this.notificationService.error(updateGlobalSettings.message);\n                    }\n                }),\n                switchMap(() => this.serverConfigService.refreshGlobalSettings()),\n            )\n            .subscribe();\n    }\n\n    protected setFormValues(entity: GlobalSettings, languageCode: LanguageCode): void {\n        this.detailForm.patchValue({\n            availableLanguages: entity.availableLanguages,\n            trackInventory: entity.trackInventory,\n            outOfStockThreshold: entity.outOfStockThreshold,\n        });\n        if (this.customFields.length) {\n            const customFieldsGroup = this.detailForm.get('customFields') as FormGroup;\n\n            for (const fieldDef of this.customFields) {\n                const key = fieldDef.name;\n                const value = (entity as any).customFields[key];\n                const control = customFieldsGroup.get(key);\n                if (control) {\n                    control.patchValue(value);\n                }\n            }\n        }\n    }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    BaseDetailComponent,\n    ConfigArgDefinition,\n    configurableDefinitionToInstance,\n    ConfigurableOperation,\n    ConfigurableOperationDefinition,\n    CreatePaymentMethodInput,\n    DataService,\n    encodeConfigArgValue,\n    getConfigArgValue,\n    NotificationService,\n    PaymentMethod,\n    Permission,\n    ServerConfigService,\n    toConfigurableOperationInput,\n    UpdatePaymentMethodInput,\n} from '@vendure/admin-ui/core';\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\nimport { combineLatest } from 'rxjs';\nimport { mergeMap, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'vdr-payment-method-detail',\n    templateUrl: './payment-method-detail.component.html',\n    styleUrls: ['./payment-method-detail.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentMethodDetailComponent\n    extends BaseDetailComponent<PaymentMethod.Fragment>\n    implements OnInit, OnDestroy {\n    detailForm: FormGroup;\n    checkers: ConfigurableOperationDefinition[] = [];\n    handlers: ConfigurableOperationDefinition[] = [];\n    selectedChecker?: ConfigurableOperation | null;\n    selectedCheckerDefinition?: ConfigurableOperationDefinition;\n    selectedHandler?: ConfigurableOperation | null;\n    selectedHandlerDefinition?: ConfigurableOperationDefinition;\n    readonly updatePermission = [Permission.UpdateSettings, Permission.UpdatePaymentMethod];\n\n    constructor(\n        router: Router,\n        route: ActivatedRoute,\n        serverConfigService: ServerConfigService,\n        private changeDetector: ChangeDetectorRef,\n        protected dataService: DataService,\n        private formBuilder: FormBuilder,\n        private notificationService: NotificationService,\n    ) {\n        super(route, router, serverConfigService, dataService);\n        this.detailForm = this.formBuilder.group({\n            code: ['', Validators.required],\n            name: ['', Validators.required],\n            description: '',\n            enabled: [true, Validators.required],\n            checker: {},\n            handler: {},\n        });\n    }\n\n    ngOnInit() {\n        this.init();\n        combineLatest([\n            this.dataService.settings.getPaymentMethodOperations().single$,\n            this.entity$.pipe(take(1)),\n        ]).subscribe(([data, entity]) => {\n            this.checkers = data.paymentMethodEligibilityCheckers;\n            this.handlers = data.paymentMethodHandlers;\n            this.changeDetector.markForCheck();\n            this.selectedCheckerDefinition = data.paymentMethodEligibilityCheckers.find(\n                c => c.code === (entity.checker && entity.checker.code),\n            );\n            this.selectedHandlerDefinition = data.paymentMethodHandlers.find(\n                c => c.code === (entity.handler && entity.handler.code),\n            );\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    updateCode(currentCode: string, nameValue: string) {\n        if (!currentCode) {\n            const codeControl = this.detailForm.get(['code']);\n            if (codeControl && codeControl.pristine) {\n                codeControl.setValue(normalizeString(nameValue, '-'));\n            }\n        }\n    }\n\n    configArgsIsPopulated(): boolean {\n        const configArgsGroup = this.detailForm.get('configArgs') as FormGroup | undefined;\n        if (!configArgsGroup) {\n            return false;\n        }\n        return 0 < Object.keys(configArgsGroup.controls).length;\n    }\n\n    selectChecker(checker: ConfigurableOperationDefinition) {\n        this.selectedCheckerDefinition = checker;\n        this.selectedChecker = configurableDefinitionToInstance(checker);\n        const formControl = this.detailForm.get('checker');\n        if (formControl) {\n            formControl.clearValidators();\n            formControl.updateValueAndValidity({ onlySelf: true });\n            formControl.patchValue(this.selectedChecker);\n        }\n        this.detailForm.markAsDirty();\n    }\n\n    selectHandler(handler: ConfigurableOperationDefinition) {\n        this.selectedHandlerDefinition = handler;\n        this.selectedHandler = configurableDefinitionToInstance(handler);\n        const formControl = this.detailForm.get('handler');\n        if (formControl) {\n            formControl.clearValidators();\n            formControl.updateValueAndValidity({ onlySelf: true });\n            formControl.patchValue(this.selectedHandler);\n        }\n        this.detailForm.markAsDirty();\n    }\n\n    removeChecker() {\n        this.selectedChecker = null;\n        this.detailForm.markAsDirty();\n    }\n\n    removeHandler() {\n        this.selectedHandler = null;\n        this.detailForm.markAsDirty();\n    }\n\n    create() {\n        const selectedChecker = this.selectedChecker;\n        const selectedHandler = this.selectedHandler;\n        if (!selectedHandler) {\n            return;\n        }\n        this.entity$\n            .pipe(\n                take(1),\n                mergeMap(({ id }) => {\n                    const formValue = this.detailForm.value;\n                    const input: CreatePaymentMethodInput = {\n                        name: formValue.name,\n                        code: formValue.code,\n                        description: formValue.description,\n                        enabled: formValue.enabled,\n                        checker: selectedChecker\n                            ? toConfigurableOperationInput(selectedChecker, formValue.checker)\n                            : null,\n                        handler: toConfigurableOperationInput(selectedHandler, formValue.handler),\n                    };\n                    return this.dataService.settings.createPaymentMethod(input);\n                }),\n            )\n            .subscribe(\n                data => {\n                    this.notificationService.success(_('common.notify-create-success'), {\n                        entity: 'PaymentMethod',\n                    });\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                    this.router.navigate(['../', data.createPaymentMethod.id], { relativeTo: this.route });\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-create-error'), {\n                        entity: 'PaymentMethod',\n                    });\n                },\n            );\n    }\n\n    save() {\n        const selectedChecker = this.selectedChecker;\n        const selectedHandler = this.selectedHandler;\n        if (!selectedHandler) {\n            return;\n        }\n        this.entity$\n            .pipe(\n                take(1),\n                mergeMap(({ id }) => {\n                    const formValue = this.detailForm.value;\n                    const input: UpdatePaymentMethodInput = {\n                        id,\n                        name: formValue.name,\n                        code: formValue.code,\n                        description: formValue.description,\n                        enabled: formValue.enabled,\n                        checker: selectedChecker\n                            ? toConfigurableOperationInput(selectedChecker, formValue.checker)\n                            : null,\n                        handler: toConfigurableOperationInput(selectedHandler, formValue.handler),\n                    };\n                    return this.dataService.settings.updatePaymentMethod(input);\n                }),\n            )\n            .subscribe(\n                data => {\n                    this.notificationService.success(_('common.notify-update-success'), {\n                        entity: 'PaymentMethod',\n                    });\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-update-error'), {\n                        entity: 'PaymentMethod',\n                    });\n                },\n            );\n    }\n\n    protected setFormValues(paymentMethod: PaymentMethod.Fragment): void {\n        this.detailForm.patchValue({\n            name: paymentMethod.name,\n            code: paymentMethod.code,\n            description: paymentMethod.description,\n            enabled: paymentMethod.enabled,\n            checker: paymentMethod.checker || {},\n            handler: paymentMethod.handler || {},\n        });\n        if (!this.selectedChecker) {\n            this.selectedChecker = paymentMethod.checker && {\n                code: paymentMethod.checker.code,\n                args: paymentMethod.checker.args.map(a => ({ ...a, value: getConfigArgValue(a.value) })),\n            };\n        }\n        if (!this.selectedHandler) {\n            this.selectedHandler = paymentMethod.handler && {\n                code: paymentMethod.handler.code,\n                args: paymentMethod.handler.args.map(a => ({ ...a, value: getConfigArgValue(a.value) })),\n            };\n        }\n    }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    BaseListComponent,\n    DataService,\n    DeletionResult,\n    GetPaymentMethodList,\n    ModalService,\n    NotificationService,\n} from '@vendure/admin-ui/core';\nimport { EMPTY } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\n@Component({\n    selector: 'vdr-payment-method-list',\n    templateUrl: './payment-method-list.component.html',\n    styleUrls: ['./payment-method-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentMethodListComponent extends BaseListComponent<\n    GetPaymentMethodList.Query,\n    GetPaymentMethodList.Items\n> {\n    constructor(\n        private dataService: DataService,\n        router: Router,\n        route: ActivatedRoute,\n        private modalService: ModalService,\n        private notificationService: NotificationService,\n    ) {\n        super(router, route);\n        super.setQueryFn(\n            (...args: any[]) => this.dataService.settings.getPaymentMethods(...args).refetchOnChannelChange(),\n            data => data.paymentMethods,\n        );\n    }\n\n    deletePaymentMethod(paymentMethodId: string) {\n        this.showModalAndDelete(paymentMethodId)\n            .pipe(\n                switchMap(response => {\n                    if (response.result === DeletionResult.DELETED) {\n                        return [true];\n                    } else {\n                        return this.showModalAndDelete(paymentMethodId, response.message || '').pipe(\n                            map(r => r.result === DeletionResult.DELETED),\n                        );\n                    }\n                }),\n                // Refresh the cached facets to reflect the changes\n                switchMap(() => this.dataService.settings.getPaymentMethods(100).single$),\n            )\n            .subscribe(\n                () => {\n                    this.notificationService.success(_('common.notify-delete-success'), {\n                        entity: 'PaymentMethod',\n                    });\n                    this.refresh();\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-delete-error'), {\n                        entity: 'PaymentMethod',\n                    });\n                },\n            );\n    }\n\n    private showModalAndDelete(paymentMethodId: string, message?: string) {\n        return this.modalService\n            .dialog({\n                title: _('settings.confirm-delete-payment-method'),\n                body: message,\n                buttons: [\n                    { type: 'secondary', label: _('common.cancel') },\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\n                ],\n            })\n            .pipe(\n                switchMap(res =>\n                    res ? this.dataService.settings.deletePaymentMethod(paymentMethodId, !!message) : EMPTY,\n                ),\n                map(res => res.deletePaymentMethod),\n            );\n    }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport { PermissionDefinition } from '@vendure/admin-ui/core';\n\nexport interface PermissionGridRow {\n    label: string;\n    description: string;\n    permissions: PermissionDefinition[];\n}\n\n/**\n * A table showing and allowing the setting of all possible CRUD permissions.\n */\n@Component({\n    selector: 'vdr-permission-grid',\n    templateUrl: './permission-grid.component.html',\n    styleUrls: ['./permission-grid.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PermissionGridComponent implements OnInit {\n    @Input() permissionDefinitions: PermissionDefinition[];\n    @Input() activePermissions: string[];\n    @Input() readonly = false;\n    @Output() permissionChange = new EventEmitter<{ permission: string; value: boolean }>();\n    gridData: PermissionGridRow[];\n\n    ngOnInit() {\n        this.buildGrid();\n    }\n\n    setPermission(permission: string, value: boolean) {\n        if (!this.readonly) {\n            this.permissionChange.emit({ permission, value });\n        }\n    }\n\n    toggleAll(defs: PermissionDefinition[]) {\n        const value = defs.some(d => !this.activePermissions.includes(d.name));\n        for (const def of defs) {\n            this.permissionChange.emit({ permission: def.name, value });\n        }\n    }\n\n    private buildGrid() {\n        const crudGroups = new Map<string, PermissionDefinition[]>();\n        const nonCrud: PermissionDefinition[] = [];\n        const crudRe = /^(Create|Read|Update|Delete)([a-zA-Z]+)$/;\n        for (const def of this.permissionDefinitions) {\n            const isCrud = crudRe.test(def.name);\n            if (isCrud) {\n                const groupName = def.name.match(crudRe)?.[2];\n                if (groupName) {\n                    const existing = crudGroups.get(groupName);\n                    if (existing) {\n                        existing.push(def);\n                    } else {\n                        crudGroups.set(groupName, [def]);\n                    }\n                }\n            } else if (def.assignable) {\n                nonCrud.push(def);\n            }\n        }\n        this.gridData = [\n            ...nonCrud.map(d => ({\n                label: d.name,\n                description: d.description,\n                permissions: [d],\n            })),\n            ...Array.from(crudGroups.entries()).map(([label, defs]) => {\n                return {\n                    label,\n                    description: this.extractCrudDescription(defs[0]),\n                    permissions: defs,\n                };\n            }),\n        ];\n    }\n\n    private extractCrudDescription(def: PermissionDefinition): string {\n        return def.description.replace(/Grants permission to [\\w]+/, 'Grants permissions on');\n    }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    Administrator,\n    BaseDetailComponent,\n    CustomFieldConfig,\n    DataService,\n    GetActiveAdministrator,\n    LanguageCode,\n    NotificationService,\n    ServerConfigService,\n    UpdateActiveAdministratorInput,\n} from '@vendure/admin-ui/core';\nimport { mergeMap, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'vdr-profile',\n    templateUrl: './profile.component.html',\n    styleUrls: ['./profile.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProfileComponent\n    extends BaseDetailComponent<GetActiveAdministrator.ActiveAdministrator>\n    implements OnInit, OnDestroy {\n    customFields: CustomFieldConfig[];\n    detailForm: FormGroup;\n\n    constructor(\n        router: Router,\n        route: ActivatedRoute,\n        serverConfigService: ServerConfigService,\n        private changeDetector: ChangeDetectorRef,\n        protected dataService: DataService,\n        private formBuilder: FormBuilder,\n        private notificationService: NotificationService,\n    ) {\n        super(route, router, serverConfigService, dataService);\n        this.customFields = this.getCustomFieldConfig('Administrator');\n        this.detailForm = this.formBuilder.group({\n            emailAddress: ['', Validators.required],\n            firstName: ['', Validators.required],\n            lastName: ['', Validators.required],\n            password: [''],\n            customFields: this.formBuilder.group(\n                this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\n            ),\n        });\n    }\n\n    ngOnInit() {\n        this.init();\n    }\n\n    ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    customFieldIsSet(name: string): boolean {\n        return !!this.detailForm.get(['customFields', name]);\n    }\n\n    save() {\n        this.entity$\n            .pipe(\n                take(1),\n                mergeMap(({ id }) => {\n                    const formValue = this.detailForm.value;\n                    const administrator: UpdateActiveAdministratorInput = {\n                        emailAddress: formValue.emailAddress,\n                        firstName: formValue.firstName,\n                        lastName: formValue.lastName,\n                        password: formValue.password,\n                        customFields: formValue.customFields,\n                    };\n                    return this.dataService.administrator.updateActiveAdministrator(administrator);\n                }),\n            )\n            .subscribe(\n                data => {\n                    this.notificationService.success(_('common.notify-update-success'), {\n                        entity: 'Administrator',\n                    });\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-update-error'), {\n                        entity: 'Administrator',\n                    });\n                },\n            );\n    }\n\n    protected setFormValues(administrator: Administrator, languageCode: LanguageCode): void {\n        this.detailForm.patchValue({\n            emailAddress: administrator.emailAddress,\n            firstName: administrator.firstName,\n            lastName: administrator.lastName,\n        });\n        if (this.customFields.length) {\n            const customFieldsGroup = this.detailForm.get('customFields') as FormGroup;\n\n            for (const fieldDef of this.customFields) {\n                const key = fieldDef.name;\n                const value = (administrator as any).customFields[key];\n                const control = customFieldsGroup.get(key);\n                if (control) {\n                    control.patchValue(value);\n                }\n            }\n        }\n    }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    BaseDetailComponent,\n    CreateRoleInput,\n    DataService,\n    LanguageCode,\n    NotificationService,\n    Permission,\n    PermissionDefinition,\n    Role,\n    ServerConfigService,\n    UpdateRoleInput,\n} from '@vendure/admin-ui/core';\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\nimport { unique } from '@vendure/common/lib/unique';\nimport { Observable } from 'rxjs';\nimport { mergeMap, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'vdr-role-detail',\n    templateUrl: './role-detail.component.html',\n    styleUrls: ['./role-detail.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RoleDetailComponent extends BaseDetailComponent<Role> implements OnInit, OnDestroy {\n    role$: Observable<Role>;\n    detailForm: FormGroup;\n    permissionDefinitions: PermissionDefinition[];\n    constructor(\n        router: Router,\n        route: ActivatedRoute,\n        serverConfigService: ServerConfigService,\n        private changeDetector: ChangeDetectorRef,\n        protected dataService: DataService,\n        private formBuilder: FormBuilder,\n        private notificationService: NotificationService,\n    ) {\n        super(route, router, serverConfigService, dataService);\n        this.detailForm = this.formBuilder.group({\n            code: ['', Validators.required],\n            description: ['', Validators.required],\n            channelIds: [],\n            permissions: [],\n        });\n    }\n\n    ngOnInit() {\n        this.init();\n        this.role$ = this.entity$;\n        this.permissionDefinitions = this.serverConfigService.getPermissionDefinitions();\n    }\n\n    ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    updateCode(nameValue: string) {\n        const codeControl = this.detailForm.get(['code']);\n        if (codeControl && codeControl.pristine) {\n            codeControl.setValue(normalizeString(nameValue, '-'));\n        }\n    }\n\n    setPermission(change: { permission: string; value: boolean }) {\n        const permissionsControl = this.detailForm.get('permissions');\n        if (permissionsControl) {\n            const currentPermissions = permissionsControl.value as string[];\n            const newValue =\n                change.value === true\n                    ? unique([...currentPermissions, change.permission])\n                    : currentPermissions.filter(p => p !== change.permission);\n            permissionsControl.setValue(newValue);\n            permissionsControl.markAsDirty();\n        }\n    }\n\n    create() {\n        const formValue = this.detailForm.value;\n        const role: CreateRoleInput = formValue;\n        this.dataService.administrator.createRole(role).subscribe(\n            data => {\n                this.notificationService.success(_('common.notify-create-success'), { entity: 'Role' });\n                this.detailForm.markAsPristine();\n                this.changeDetector.markForCheck();\n                this.router.navigate(['../', data.createRole.id], { relativeTo: this.route });\n            },\n            err => {\n                this.notificationService.error(_('common.notify-create-error'), {\n                    entity: 'Role',\n                });\n            },\n        );\n    }\n\n    save() {\n        this.role$\n            .pipe(\n                take(1),\n                mergeMap(({ id }) => {\n                    const formValue = this.detailForm.value;\n                    const role: UpdateRoleInput = { id, ...formValue };\n                    return this.dataService.administrator.updateRole(role);\n                }),\n            )\n            .subscribe(\n                data => {\n                    this.notificationService.success(_('common.notify-update-success'), { entity: 'Role' });\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-update-error'), {\n                        entity: 'Role',\n                    });\n                },\n            );\n    }\n\n    protected setFormValues(role: Role, languageCode: LanguageCode): void {\n        this.detailForm.patchValue({\n            description: role.description,\n            code: role.code,\n            channelIds: role.channels.map(c => c.id),\n            permissions: role.permissions,\n        });\n        // This was required to get the channel selector component to\n        // correctly display its contents. A while spent debugging the root\n        // cause did not yield a solution, therefore this next line.\n        this.changeDetector.detectChanges();\n    }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport { BaseListComponent } from '@vendure/admin-ui/core';\nimport { GetRoles, Role } from '@vendure/admin-ui/core';\nimport { NotificationService } from '@vendure/admin-ui/core';\nimport { DataService } from '@vendure/admin-ui/core';\nimport { ModalService } from '@vendure/admin-ui/core';\nimport { CUSTOMER_ROLE_CODE, SUPER_ADMIN_ROLE_CODE } from '@vendure/common/lib/shared-constants';\nimport { EMPTY, Observable } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\n@Component({\n    selector: 'vdr-role-list',\n    templateUrl: './role-list.component.html',\n    styleUrls: ['./role-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RoleListComponent extends BaseListComponent<GetRoles.Query, GetRoles.Items> implements OnInit {\n    readonly initialLimit = 3;\n    displayLimit: { [id: string]: number } = {};\n    visibleRoles$: Observable<GetRoles.Items[]>;\n\n    constructor(\n        private modalService: ModalService,\n        private notificationService: NotificationService,\n        private dataService: DataService,\n        router: Router,\n        route: ActivatedRoute,\n    ) {\n        super(router, route);\n        super.setQueryFn(\n            (...args: any[]) => this.dataService.administrator.getRoles(...args),\n            data => data.roles,\n        );\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n        this.visibleRoles$ = this.items$.pipe(\n            map(roles => roles.filter(role => role.code !== CUSTOMER_ROLE_CODE)),\n        );\n    }\n\n    toggleDisplayLimit(role: GetRoles.Items) {\n        if (this.displayLimit[role.id] === role.permissions.length) {\n            this.displayLimit[role.id] = this.initialLimit;\n        } else {\n            this.displayLimit[role.id] = role.permissions.length;\n        }\n    }\n\n    isDefaultRole(role: Role): boolean {\n        return role.code === SUPER_ADMIN_ROLE_CODE || role.code === CUSTOMER_ROLE_CODE;\n    }\n\n    deleteRole(id: string) {\n        this.modalService\n            .dialog({\n                title: _('settings.confirm-delete-role'),\n                buttons: [\n                    { type: 'secondary', label: _('common.cancel') },\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\n                ],\n            })\n            .pipe(switchMap(response => (response ? this.dataService.administrator.deleteRole(id) : EMPTY)))\n            .subscribe(\n                () => {\n                    this.notificationService.success(_('common.notify-delete-success'), {\n                        entity: 'Role',\n                    });\n                    this.refresh();\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-delete-error'), {\n                        entity: 'Role',\n                    });\n                },\n            );\n    }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { CurrencyCode, ShippingMethodQuote } from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-shipping-eligibility-test-result',\n    templateUrl: './shipping-eligibility-test-result.component.html',\n    styleUrls: ['./shipping-eligibility-test-result.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ShippingEligibilityTestResultComponent {\n    @Input() testResult: ShippingMethodQuote[];\n    @Input() okToRun = false;\n    @Input() testDataUpdated = false;\n    @Input() currencyCode: CurrencyCode;\n    @Output() runTest = new EventEmitter<void>();\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    BaseDetailComponent,\n    configurableDefinitionToInstance,\n    ConfigurableOperation,\n    ConfigurableOperationDefinition,\n    CreateShippingMethodInput,\n    createUpdatedTranslatable,\n    CustomFieldConfig,\n    DataService,\n    findTranslation,\n    GetActiveChannel,\n    getConfigArgValue,\n    LanguageCode,\n    NotificationService,\n    Permission,\n    ServerConfigService,\n    ShippingMethod,\n    TestShippingMethodInput,\n    TestShippingMethodResult,\n    toConfigurableOperationInput,\n    UpdateShippingMethodInput,\n} from '@vendure/admin-ui/core';\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\nimport { combineLatest, merge, Observable, of, Subject } from 'rxjs';\nimport { mergeMap, switchMap, take, takeUntil } from 'rxjs/operators';\n\nimport { TestAddress } from '../test-address-form/test-address-form.component';\nimport { TestOrderLine } from '../test-order-builder/test-order-builder.component';\n\n@Component({\n    selector: 'vdr-shipping-method-detail',\n    templateUrl: './shipping-method-detail.component.html',\n    styleUrls: ['./shipping-method-detail.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ShippingMethodDetailComponent\n    extends BaseDetailComponent<ShippingMethod.Fragment>\n    implements OnInit, OnDestroy {\n    detailForm: FormGroup;\n    checkers: ConfigurableOperationDefinition[] = [];\n    calculators: ConfigurableOperationDefinition[] = [];\n    fulfillmentHandlers: ConfigurableOperationDefinition[] = [];\n    selectedChecker?: ConfigurableOperation | null;\n    selectedCheckerDefinition?: ConfigurableOperationDefinition;\n    selectedCalculator?: ConfigurableOperation | null;\n    selectedCalculatorDefinition?: ConfigurableOperationDefinition;\n    activeChannel$: Observable<GetActiveChannel.ActiveChannel>;\n    testAddress: TestAddress;\n    testOrderLines: TestOrderLine[];\n    testDataUpdated = false;\n    testResult$: Observable<TestShippingMethodResult | undefined>;\n    customFields: CustomFieldConfig[];\n    readonly updatePermission = [Permission.UpdateSettings, Permission.UpdateShippingMethod];\n    private fetchTestResult$ = new Subject<[TestAddress, TestOrderLine[]]>();\n\n    constructor(\n        router: Router,\n        route: ActivatedRoute,\n        serverConfigService: ServerConfigService,\n        private changeDetector: ChangeDetectorRef,\n        protected dataService: DataService,\n        private formBuilder: FormBuilder,\n        private notificationService: NotificationService,\n    ) {\n        super(route, router, serverConfigService, dataService);\n        this.customFields = this.getCustomFieldConfig('ShippingMethod');\n        this.detailForm = this.formBuilder.group({\n            code: ['', Validators.required],\n            name: ['', Validators.required],\n            description: '',\n            fulfillmentHandler: ['', Validators.required],\n            checker: {},\n            calculator: {},\n            customFields: this.formBuilder.group(\n                this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\n            ),\n        });\n    }\n\n    ngOnInit() {\n        this.init();\n        combineLatest([\n            this.dataService.shippingMethod.getShippingMethodOperations().single$,\n            this.entity$.pipe(take(1)),\n        ]).subscribe(([data, entity]) => {\n            this.checkers = data.shippingEligibilityCheckers;\n            this.calculators = data.shippingCalculators;\n            this.fulfillmentHandlers = data.fulfillmentHandlers;\n            this.changeDetector.markForCheck();\n            this.selectedCheckerDefinition = data.shippingEligibilityCheckers.find(\n                c => c.code === (entity.checker && entity.checker.code),\n            );\n            this.selectedCalculatorDefinition = data.shippingCalculators.find(\n                c => c.code === (entity.calculator && entity.calculator.code),\n            );\n        });\n\n        this.activeChannel$ = this.dataService.settings\n            .getActiveChannel()\n            .mapStream(data => data.activeChannel);\n\n        this.testResult$ = this.fetchTestResult$.pipe(\n            switchMap(([address, lines]) => {\n                if (!this.selectedChecker || !this.selectedCalculator) {\n                    return of(undefined);\n                }\n                const formValue = this.detailForm.value;\n                const input: TestShippingMethodInput = {\n                    shippingAddress: { ...address, streetLine1: 'test' },\n                    lines: lines.map(l => ({ productVariantId: l.id, quantity: l.quantity })),\n                    checker: toConfigurableOperationInput(this.selectedChecker, formValue.checker),\n                    calculator: toConfigurableOperationInput(this.selectedCalculator, formValue.calculator),\n                };\n                return this.dataService.shippingMethod\n                    .testShippingMethod(input)\n                    .mapSingle(result => result.testShippingMethod);\n            }),\n        );\n\n        // tslint:disable:no-non-null-assertion\n        merge(\n            this.detailForm.get(['checker'])!.valueChanges,\n            this.detailForm.get(['calculator'])!.valueChanges,\n        )\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => (this.testDataUpdated = true));\n        // tslint:enable:no-non-null-assertion\n    }\n\n    ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    customFieldIsSet(name: string): boolean {\n        return !!this.detailForm.get(['customFields', name]);\n    }\n\n    updateCode(currentCode: string, nameValue: string) {\n        if (!currentCode) {\n            const codeControl = this.detailForm.get(['code']);\n            if (codeControl && codeControl.pristine) {\n                codeControl.setValue(normalizeString(nameValue, '-'));\n            }\n        }\n    }\n\n    selectChecker(checker: ConfigurableOperationDefinition) {\n        this.selectedCheckerDefinition = checker;\n        this.selectedChecker = configurableDefinitionToInstance(checker);\n        const formControl = this.detailForm.get('checker');\n        if (formControl) {\n            formControl.clearValidators();\n            formControl.updateValueAndValidity({ onlySelf: true });\n            formControl.patchValue(this.selectedChecker);\n        }\n        this.detailForm.markAsDirty();\n    }\n\n    selectCalculator(calculator: ConfigurableOperationDefinition) {\n        this.selectedCalculatorDefinition = calculator;\n        this.selectedCalculator = configurableDefinitionToInstance(calculator);\n        const formControl = this.detailForm.get('calculator');\n        if (formControl) {\n            formControl.clearValidators();\n            formControl.updateValueAndValidity({ onlySelf: true });\n            formControl.patchValue(this.selectedCalculator);\n        }\n        this.detailForm.markAsDirty();\n    }\n\n    create() {\n        const selectedChecker = this.selectedChecker;\n        const selectedCalculator = this.selectedCalculator;\n        if (!selectedChecker || !selectedCalculator) {\n            return;\n        }\n        combineLatest([this.entity$, this.languageCode$])\n            .pipe(\n                take(1),\n                mergeMap(([shippingMethod, languageCode]) => {\n                    const formValue = this.detailForm.value;\n                    const input = {\n                        ...(this.getUpdatedShippingMethod(\n                            shippingMethod,\n                            this.detailForm,\n                            languageCode,\n                        ) as CreateShippingMethodInput),\n                        checker: toConfigurableOperationInput(selectedChecker, formValue.checker),\n                        calculator: toConfigurableOperationInput(selectedCalculator, formValue.calculator),\n                    };\n                    return this.dataService.shippingMethod.createShippingMethod(input);\n                }),\n            )\n            .subscribe(\n                data => {\n                    this.notificationService.success(_('common.notify-create-success'), {\n                        entity: 'ShippingMethod',\n                    });\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                    this.router.navigate(['../', data.createShippingMethod.id], { relativeTo: this.route });\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-create-error'), {\n                        entity: 'ShippingMethod',\n                    });\n                },\n            );\n    }\n\n    save() {\n        const selectedChecker = this.selectedChecker;\n        const selectedCalculator = this.selectedCalculator;\n        if (!selectedChecker || !selectedCalculator) {\n            return;\n        }\n        combineLatest([this.entity$, this.languageCode$])\n            .pipe(\n                take(1),\n                mergeMap(([shippingMethod, languageCode]) => {\n                    const formValue = this.detailForm.value;\n                    const input = {\n                        ...(this.getUpdatedShippingMethod(\n                            shippingMethod,\n                            this.detailForm,\n                            languageCode,\n                        ) as UpdateShippingMethodInput),\n                        checker: toConfigurableOperationInput(selectedChecker, formValue.checker),\n                        calculator: toConfigurableOperationInput(selectedCalculator, formValue.calculator),\n                    };\n                    return this.dataService.shippingMethod.updateShippingMethod(input);\n                }),\n            )\n            .subscribe(\n                data => {\n                    this.notificationService.success(_('common.notify-update-success'), {\n                        entity: 'ShippingMethod',\n                    });\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-update-error'), {\n                        entity: 'ShippingMethod',\n                    });\n                },\n            );\n    }\n\n    setTestOrderLines(event: TestOrderLine[]) {\n        this.testOrderLines = event;\n        this.testDataUpdated = true;\n    }\n\n    setTestAddress(event: TestAddress) {\n        this.testAddress = event;\n        this.testDataUpdated = true;\n    }\n\n    allTestDataPresent(): boolean {\n        return !!(\n            this.testAddress &&\n            this.testOrderLines &&\n            this.testOrderLines.length &&\n            this.selectedChecker &&\n            this.selectedCalculator\n        );\n    }\n\n    runTest() {\n        this.fetchTestResult$.next([this.testAddress, this.testOrderLines]);\n        this.testDataUpdated = false;\n    }\n\n    /**\n     * Given a ShippingMethod and the value of the detailForm, this method creates an updated copy which\n     * can then be persisted to the API.\n     */\n    private getUpdatedShippingMethod(\n        shippingMethod: ShippingMethod.Fragment,\n        formGroup: FormGroup,\n        languageCode: LanguageCode,\n    ): Omit<CreateShippingMethodInput | UpdateShippingMethodInput, 'checker' | 'calculator'> {\n        const formValue = formGroup.value;\n        const input = createUpdatedTranslatable({\n            translatable: shippingMethod,\n            updatedFields: formValue,\n            customFieldConfig: this.customFields,\n            languageCode,\n            defaultTranslation: {\n                languageCode,\n                name: shippingMethod.name || '',\n                description: shippingMethod.description || '',\n            },\n        });\n        return { ...input, fulfillmentHandler: formValue.fulfillmentHandler };\n    }\n\n    protected setFormValues(shippingMethod: ShippingMethod.Fragment, languageCode: LanguageCode): void {\n        const currentTranslation = findTranslation(shippingMethod, languageCode);\n        this.detailForm.patchValue({\n            name: currentTranslation?.name ?? '',\n            description: currentTranslation?.description ?? '',\n            code: shippingMethod.code,\n            fulfillmentHandler: shippingMethod.fulfillmentHandlerCode,\n            checker: shippingMethod.checker || {},\n            calculator: shippingMethod.calculator || {},\n        });\n        if (!this.selectedChecker) {\n            this.selectedChecker = shippingMethod.checker && {\n                code: shippingMethod.checker.code,\n                args: shippingMethod.checker.args.map(a => ({ ...a, value: getConfigArgValue(a.value) })),\n            };\n        }\n        if (!this.selectedCalculator) {\n            this.selectedCalculator = shippingMethod.calculator && {\n                code: shippingMethod.calculator?.code,\n                args: shippingMethod.calculator?.args.map(a => ({ ...a, value: getConfigArgValue(a.value) })),\n            };\n        }\n        if (this.customFields.length) {\n            const customFieldsGroup = this.detailForm.get('customFields') as FormGroup;\n\n            for (const fieldDef of this.customFields) {\n                const key = fieldDef.name;\n                const value =\n                    fieldDef.type === 'localeString'\n                        ? (currentTranslation as any).customFields[key]\n                        : (shippingMethod as any).customFields[key];\n                const control = customFieldsGroup.get(key);\n                if (control) {\n                    control.patchValue(value);\n                }\n            }\n        }\n    }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport { BaseListComponent } from '@vendure/admin-ui/core';\nimport {\n    GetActiveChannel,\n    GetShippingMethodList,\n    ShippingMethodQuote,\n    TestEligibleShippingMethodsInput,\n    TestShippingMethodInput,\n} from '@vendure/admin-ui/core';\nimport { NotificationService } from '@vendure/admin-ui/core';\nimport { DataService } from '@vendure/admin-ui/core';\nimport { ModalService } from '@vendure/admin-ui/core';\nimport { EMPTY, Observable, of, Subject } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nimport { TestAddress } from '../test-address-form/test-address-form.component';\nimport { TestOrderLine } from '../test-order-builder/test-order-builder.component';\n\n@Component({\n    selector: 'vdr-shipping-method-list',\n    templateUrl: './shipping-method-list.component.html',\n    styleUrls: ['./shipping-method-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ShippingMethodListComponent\n    extends BaseListComponent<GetShippingMethodList.Query, GetShippingMethodList.Items>\n    implements OnInit {\n    activeChannel$: Observable<GetActiveChannel.ActiveChannel>;\n    testAddress: TestAddress;\n    testOrderLines: TestOrderLine[];\n    testDataUpdated = false;\n    testResult$: Observable<ShippingMethodQuote[] | undefined>;\n    private fetchTestResult$ = new Subject<[TestAddress, TestOrderLine[]]>();\n\n    constructor(\n        private modalService: ModalService,\n        private notificationService: NotificationService,\n        private dataService: DataService,\n        router: Router,\n        route: ActivatedRoute,\n    ) {\n        super(router, route);\n        super.setQueryFn(\n            (...args: any[]) =>\n                this.dataService.shippingMethod.getShippingMethods(...args).refetchOnChannelChange(),\n            data => data.shippingMethods,\n        );\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n        this.testResult$ = this.fetchTestResult$.pipe(\n            switchMap(([address, lines]) => {\n                const input: TestEligibleShippingMethodsInput = {\n                    shippingAddress: { ...address, streetLine1: 'test' },\n                    lines: lines.map(l => ({ productVariantId: l.id, quantity: l.quantity })),\n                };\n                return this.dataService.shippingMethod\n                    .testEligibleShippingMethods(input)\n                    .mapSingle(result => result.testEligibleShippingMethods);\n            }),\n        );\n        this.activeChannel$ = this.dataService.settings\n            .getActiveChannel()\n            .mapStream(data => data.activeChannel);\n    }\n\n    deleteShippingMethod(id: string) {\n        this.modalService\n            .dialog({\n                title: _('catalog.confirm-delete-shipping-method'),\n                buttons: [\n                    { type: 'secondary', label: _('common.cancel') },\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\n                ],\n            })\n            .pipe(\n                switchMap(response =>\n                    response ? this.dataService.shippingMethod.deleteShippingMethod(id) : EMPTY,\n                ),\n            )\n            .subscribe(\n                () => {\n                    this.notificationService.success(_('common.notify-delete-success'), {\n                        entity: 'ShippingMethod',\n                    });\n                    this.refresh();\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-delete-error'), {\n                        entity: 'ShippingMethod',\n                    });\n                },\n            );\n    }\n\n    setTestOrderLines(event: TestOrderLine[]) {\n        this.testOrderLines = event;\n        this.testDataUpdated = true;\n    }\n\n    setTestAddress(event: TestAddress) {\n        this.testAddress = event;\n        this.testDataUpdated = true;\n    }\n\n    allTestDataPresent(): boolean {\n        return !!(this.testAddress && this.testOrderLines && this.testOrderLines.length);\n    }\n\n    runTest() {\n        this.fetchTestResult$.next([this.testAddress, this.testOrderLines]);\n        this.testDataUpdated = false;\n    }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { CurrencyCode, TestShippingMethodResult } from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-shipping-method-test-result',\n    templateUrl: './shipping-method-test-result.component.html',\n    styleUrls: ['./shipping-method-test-result.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ShippingMethodTestResultComponent {\n    @Input() testResult: TestShippingMethodResult;\n    @Input() okToRun = false;\n    @Input() testDataUpdated = false;\n    @Input() currencyCode: CurrencyCode;\n    @Output() runTest = new EventEmitter<void>();\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport { BaseDetailComponent, Permission } from '@vendure/admin-ui/core';\nimport {\n    ConfigurableOperation,\n    CreateTaxCategoryInput,\n    LanguageCode,\n    TaxCategory,\n    UpdateTaxCategoryInput,\n} from '@vendure/admin-ui/core';\nimport { NotificationService } from '@vendure/admin-ui/core';\nimport { DataService } from '@vendure/admin-ui/core';\nimport { ServerConfigService } from '@vendure/admin-ui/core';\nimport { Observable } from 'rxjs';\nimport { mergeMap, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'vdr-tax-detail',\n    templateUrl: './tax-category-detail.component.html',\n    styleUrls: ['./tax-category-detail.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TaxCategoryDetailComponent\n    extends BaseDetailComponent<TaxCategory.Fragment>\n    implements OnInit, OnDestroy {\n    taxCategory$: Observable<TaxCategory.Fragment>;\n    detailForm: FormGroup;\n    readonly updatePermission = [Permission.UpdateSettings, Permission.UpdateTaxCategory];\n\n    private taxCondition: ConfigurableOperation;\n    private taxAction: ConfigurableOperation;\n\n    constructor(\n        router: Router,\n        route: ActivatedRoute,\n        serverConfigService: ServerConfigService,\n        private changeDetector: ChangeDetectorRef,\n        protected dataService: DataService,\n        private formBuilder: FormBuilder,\n        private notificationService: NotificationService,\n    ) {\n        super(route, router, serverConfigService, dataService);\n        this.detailForm = this.formBuilder.group({\n            name: ['', Validators.required],\n            isDefault: false,\n        });\n    }\n\n    ngOnInit() {\n        this.init();\n        this.taxCategory$ = this.entity$;\n    }\n\n    ngOnDestroy() {\n        this.destroy();\n    }\n\n    saveButtonEnabled(): boolean {\n        return this.detailForm.dirty && this.detailForm.valid;\n    }\n\n    create() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const formValue = this.detailForm.value;\n        const input = { name: formValue.name, isDefault: formValue.isDefault } as CreateTaxCategoryInput;\n        this.dataService.settings.createTaxCategory(input).subscribe(\n            data => {\n                this.notificationService.success(_('common.notify-create-success'), {\n                    entity: 'TaxCategory',\n                });\n                this.detailForm.markAsPristine();\n                this.changeDetector.markForCheck();\n                this.router.navigate(['../', data.createTaxCategory.id], { relativeTo: this.route });\n            },\n            err => {\n                this.notificationService.error(_('common.notify-create-error'), {\n                    entity: 'TaxCategory',\n                });\n            },\n        );\n    }\n\n    save() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const formValue = this.detailForm.value;\n        this.taxCategory$\n            .pipe(\n                take(1),\n                mergeMap(taxCategory => {\n                    const input = {\n                        id: taxCategory.id,\n                        name: formValue.name,\n                        isDefault: formValue.isDefault,\n                    } as UpdateTaxCategoryInput;\n                    return this.dataService.settings.updateTaxCategory(input);\n                }),\n            )\n            .subscribe(\n                data => {\n                    this.notificationService.success(_('common.notify-update-success'), {\n                        entity: 'TaxCategory',\n                    });\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-update-error'), {\n                        entity: 'TaxCategory',\n                    });\n                },\n            );\n    }\n\n    /**\n     * Update the form values when the entity changes.\n     */\n    protected setFormValues(entity: TaxCategory.Fragment, languageCode: LanguageCode): void {\n        this.detailForm.patchValue({\n            name: entity.name,\n            isDefault: entity.isDefault,\n        });\n    }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport { EMPTY, Observable } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\nimport { DeletionResult, GetTaxCategories, TaxCategory } from '@vendure/admin-ui/core';\nimport { NotificationService } from '@vendure/admin-ui/core';\nimport { DataService } from '@vendure/admin-ui/core';\nimport { QueryResult } from '@vendure/admin-ui/core';\nimport { ModalService } from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-tax-list',\n    templateUrl: './tax-category-list.component.html',\n    styleUrls: ['./tax-category-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TaxCategoryListComponent {\n    taxCategories$: Observable<TaxCategory.Fragment[]>;\n    private queryResult: QueryResult<GetTaxCategories.Query>;\n\n    constructor(\n        private dataService: DataService,\n        private notificationService: NotificationService,\n        private modalService: ModalService,\n    ) {\n        this.queryResult = this.dataService.settings.getTaxCategories();\n        this.taxCategories$ = this.queryResult.mapStream(data => data.taxCategories);\n    }\n\n    deleteTaxCategory(taxCategory: TaxCategory.Fragment) {\n        return this.modalService\n            .dialog({\n                title: _('settings.confirm-delete-tax-category'),\n                body: taxCategory.name,\n                buttons: [\n                    { type: 'secondary', label: _('common.cancel') },\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\n                ],\n            })\n            .pipe(\n                switchMap(res => (res ? this.dataService.settings.deleteTaxCategory(taxCategory.id) : EMPTY)),\n                map(res => res.deleteTaxCategory),\n            )\n            .subscribe(\n                res => {\n                    if (res.result === DeletionResult.DELETED) {\n                        this.notificationService.success(_('common.notify-delete-success'), {\n                            entity: 'TaxRate',\n                        });\n                        this.queryResult.ref.refetch();\n                    } else {\n                        this.notificationService.error(res.message || _('common.notify-delete-error'), {\n                            entity: 'TaxRate',\n                        });\n                    }\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-delete-error'), {\n                        entity: 'TaxRate',\n                    });\n                },\n            );\n    }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    BaseDetailComponent,\n    CreateTaxRateInput,\n    CustomerGroup,\n    DataService,\n    GetZones,\n    LanguageCode,\n    NotificationService,\n    Permission,\n    ServerConfigService,\n    TaxCategory,\n    TaxRate,\n    UpdateTaxRateInput,\n} from '@vendure/admin-ui/core';\nimport { Observable } from 'rxjs';\nimport { mergeMap, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'vdr-tax-rate-detail',\n    templateUrl: './tax-rate-detail.component.html',\n    styleUrls: ['./tax-rate-detail.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TaxRateDetailComponent\n    extends BaseDetailComponent<TaxRate.Fragment>\n    implements OnInit, OnDestroy {\n    taxCategories$: Observable<TaxCategory.Fragment[]>;\n    zones$: Observable<GetZones.Zones[]>;\n    groups$: Observable<CustomerGroup[]>;\n    detailForm: FormGroup;\n    readonly updatePermission = [Permission.UpdateSettings, Permission.UpdateTaxRate];\n\n    constructor(\n        router: Router,\n        route: ActivatedRoute,\n        serverConfigService: ServerConfigService,\n        private changeDetector: ChangeDetectorRef,\n        protected dataService: DataService,\n        private formBuilder: FormBuilder,\n        private notificationService: NotificationService,\n    ) {\n        super(route, router, serverConfigService, dataService);\n        this.detailForm = this.formBuilder.group({\n            name: ['', Validators.required],\n            enabled: [true],\n            value: [0, Validators.required],\n            taxCategoryId: [''],\n            zoneId: [''],\n            customerGroupId: [''],\n        });\n    }\n\n    ngOnInit() {\n        this.init();\n        this.taxCategories$ = this.dataService.settings\n            .getTaxCategories()\n            .mapSingle(data => data.taxCategories);\n        this.zones$ = this.dataService.settings.getZones().mapSingle(data => data.zones);\n    }\n\n    ngOnDestroy() {\n        this.destroy();\n    }\n\n    saveButtonEnabled(): boolean {\n        return this.detailForm.dirty && this.detailForm.valid;\n    }\n\n    create() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const formValue = this.detailForm.value;\n        const input = {\n            name: formValue.name,\n            enabled: formValue.enabled,\n            value: formValue.value,\n            categoryId: formValue.taxCategoryId,\n            zoneId: formValue.zoneId,\n            customerGroupId: formValue.customerGroupId,\n        } as CreateTaxRateInput;\n        this.dataService.settings.createTaxRate(input).subscribe(\n            data => {\n                this.notificationService.success(_('common.notify-create-success'), {\n                    entity: 'TaxRate',\n                });\n                this.detailForm.markAsPristine();\n                this.changeDetector.markForCheck();\n                this.router.navigate(['../', data.createTaxRate.id], { relativeTo: this.route });\n            },\n            err => {\n                this.notificationService.error(_('common.notify-create-error'), {\n                    entity: 'TaxRate',\n                });\n            },\n        );\n    }\n\n    save() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const formValue = this.detailForm.value;\n        this.entity$\n            .pipe(\n                take(1),\n                mergeMap(taxRate => {\n                    const input = {\n                        id: taxRate.id,\n                        name: formValue.name,\n                        enabled: formValue.enabled,\n                        value: formValue.value,\n                        categoryId: formValue.taxCategoryId,\n                        zoneId: formValue.zoneId,\n                        customerGroupId: formValue.customerGroupId,\n                    } as UpdateTaxRateInput;\n                    return this.dataService.settings.updateTaxRate(input);\n                }),\n            )\n            .subscribe(\n                data => {\n                    this.notificationService.success(_('common.notify-update-success'), {\n                        entity: 'TaxRate',\n                    });\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-update-error'), {\n                        entity: 'TaxRate',\n                    });\n                },\n            );\n    }\n\n    /**\n     * Update the form values when the entity changes.\n     */\n    protected setFormValues(entity: TaxRate.Fragment, languageCode: LanguageCode): void {\n        this.detailForm.patchValue({\n            name: entity.name,\n            enabled: entity.enabled,\n            value: entity.value,\n            taxCategoryId: entity.category ? entity.category.id : '',\n            zoneId: entity.zone ? entity.zone.id : '',\n            customerGroupId: entity.customerGroup ? entity.customerGroup.id : '',\n        });\n    }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport { EMPTY } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\nimport { BaseListComponent } from '@vendure/admin-ui/core';\nimport { DeletionResult, GetTaxRateList } from '@vendure/admin-ui/core';\nimport { NotificationService } from '@vendure/admin-ui/core';\nimport { DataService } from '@vendure/admin-ui/core';\nimport { ModalService } from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-tax-rate-list',\n    templateUrl: './tax-rate-list.component.html',\n    styleUrls: ['./tax-rate-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TaxRateListComponent extends BaseListComponent<GetTaxRateList.Query, GetTaxRateList.Items> {\n    constructor(\n        private modalService: ModalService,\n        private notificationService: NotificationService,\n        private dataService: DataService,\n        router: Router,\n        route: ActivatedRoute,\n    ) {\n        super(router, route);\n        super.setQueryFn(\n            (...args: any[]) => this.dataService.settings.getTaxRates(...args),\n            data => data.taxRates,\n        );\n    }\n\n    deleteTaxRate(taxRate: GetTaxRateList.Items) {\n        return this.modalService\n            .dialog({\n                title: _('settings.confirm-delete-tax-rate'),\n                body: taxRate.name,\n                buttons: [\n                    { type: 'secondary', label: _('common.cancel') },\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\n                ],\n            })\n            .pipe(\n                switchMap(res => (res ? this.dataService.settings.deleteTaxRate(taxRate.id) : EMPTY)),\n                map(res => res.deleteTaxRate),\n            )\n            .subscribe(\n                res => {\n                    if (res.result === DeletionResult.DELETED) {\n                        this.notificationService.success(_('common.notify-delete-success'), {\n                            entity: 'TaxRate',\n                        });\n                        this.refresh();\n                    } else {\n                        this.notificationService.error(res.message || _('common.notify-delete-error'), {\n                            entity: 'TaxRate',\n                        });\n                    }\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-delete-error'), {\n                        entity: 'TaxRate',\n                    });\n                },\n            );\n    }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, OnDestroy, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { DataService, GetAvailableCountries, LocalStorageService } from '@vendure/admin-ui/core';\nimport { Observable, Subscription } from 'rxjs';\n\nexport interface TestAddress {\n    city: string;\n    province: string;\n    postalCode: string;\n    countryCode: string;\n}\n\n@Component({\n    selector: 'vdr-test-address-form',\n    templateUrl: './test-address-form.component.html',\n    styleUrls: ['./test-address-form.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TestAddressFormComponent implements OnInit, OnDestroy {\n    @Output() addressChange = new EventEmitter<TestAddress>();\n    availableCountries$: Observable<GetAvailableCountries.Items[]>;\n    form: FormGroup;\n    private subscription: Subscription;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private dataService: DataService,\n        private localStorageService: LocalStorageService,\n    ) {}\n\n    ngOnInit() {\n        this.availableCountries$ = this.dataService.settings\n            .getAvailableCountries()\n            .mapSingle(result => result.countries.items);\n        const storedValue = this.localStorageService.getForCurrentLocation('shippingTestAddress');\n        const initialValue: TestAddress = storedValue\n            ? storedValue\n            : {\n                  city: '',\n                  countryCode: '',\n                  postalCode: '',\n                  province: '',\n              };\n        this.addressChange.emit(initialValue);\n\n        this.form = this.formBuilder.group(initialValue);\n        this.subscription = this.form.valueChanges.subscribe(value => {\n            this.localStorageService.setForCurrentLocation('shippingTestAddress', value);\n            this.addressChange.emit(value);\n        });\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport {\n    CurrencyCode,\n    DataService,\n    LocalStorageService,\n    ProductSelectorSearch,\n} from '@vendure/admin-ui/core';\n\nexport interface TestOrderLine {\n    id: string;\n    name: string;\n    preview: string;\n    sku: string;\n    unitPriceWithTax: number;\n    quantity: number;\n}\n\n@Component({\n    selector: 'vdr-test-order-builder',\n    templateUrl: './test-order-builder.component.html',\n    styleUrls: ['./test-order-builder.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TestOrderBuilderComponent implements OnInit {\n    @Output() orderLinesChange = new EventEmitter<TestOrderLine[]>();\n    lines: TestOrderLine[] = [];\n    currencyCode: CurrencyCode;\n    get subTotal(): number {\n        return this.lines.reduce((sum, l) => sum + l.unitPriceWithTax * l.quantity, 0);\n    }\n\n    constructor(private dataService: DataService, private localStorageService: LocalStorageService) {}\n\n    ngOnInit() {\n        this.lines = this.loadFromLocalStorage();\n        if (this.lines) {\n            this.orderLinesChange.emit(this.lines);\n        }\n        this.dataService.settings.getActiveChannel('cache-first').single$.subscribe(result => {\n            this.currencyCode = result.activeChannel.currencyCode;\n        });\n    }\n\n    selectResult(result: ProductSelectorSearch.Items) {\n        if (result) {\n            this.addToLines(result);\n        }\n    }\n\n    private addToLines(result: ProductSelectorSearch.Items) {\n        if (!this.lines.find(l => l.id === result.productVariantId)) {\n            this.lines.push({\n                id: result.productVariantId,\n                name: result.productVariantName,\n                preview: result.productAsset?.preview ?? '',\n                quantity: 1,\n                sku: result.sku,\n                unitPriceWithTax:\n                    (result.priceWithTax.__typename === 'SinglePrice' && result.priceWithTax.value) || 0,\n            });\n            this.persistToLocalStorage();\n            this.orderLinesChange.emit(this.lines);\n        }\n    }\n\n    updateQuantity() {\n        this.persistToLocalStorage();\n        this.orderLinesChange.emit(this.lines);\n    }\n\n    removeLine(line: TestOrderLine) {\n        this.lines = this.lines.filter(l => l.id !== line.id);\n        this.persistToLocalStorage();\n        this.orderLinesChange.emit(this.lines);\n    }\n\n    private persistToLocalStorage() {\n        this.localStorageService.setForCurrentLocation('shippingTestOrder', this.lines);\n    }\n\n    private loadFromLocalStorage(): TestOrderLine[] {\n        return this.localStorageService.getForCurrentLocation('shippingTestOrder') || [];\n    }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Dialog } from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-zone-detail-dialog',\n    templateUrl: './zone-detail-dialog.component.html',\n    styleUrls: ['./zone-detail-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZoneDetailDialogComponent implements Dialog<string> {\n    zone: { id?: string; name: string };\n    resolveWith: (result?: string) => void;\n\n    cancel() {\n        this.resolveWith();\n    }\n\n    save() {\n        this.resolveWith(this.zone.name);\n    }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    Country,\n    DataService,\n    DeletionResult,\n    GetZones,\n    ModalService,\n    NotificationService,\n} from '@vendure/admin-ui/core';\nimport { combineLatest, EMPTY, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, map, mapTo, startWith, switchMap, tap } from 'rxjs/operators';\n\nimport { AddCountryToZoneDialogComponent } from '../add-country-to-zone-dialog/add-country-to-zone-dialog.component';\nimport { ZoneDetailDialogComponent } from '../zone-detail-dialog/zone-detail-dialog.component';\n\n@Component({\n    selector: 'vdr-zone-list',\n    templateUrl: './zone-list.component.html',\n    styleUrls: ['./zone-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZoneListComponent implements OnInit {\n    activeZone$: Observable<GetZones.Zones | undefined>;\n    zones$: Observable<GetZones.Zones[]>;\n    members$: Observable<GetZones.Members[]>;\n    selectedMemberIds: string[] = [];\n\n    constructor(\n        private dataService: DataService,\n        private notificationService: NotificationService,\n        private modalService: ModalService,\n        private route: ActivatedRoute,\n        private router: Router,\n    ) {}\n\n    ngOnInit(): void {\n        this.zones$ = this.dataService.settings.getZones().mapStream(data => data.zones);\n        const activeZoneId$ = this.route.paramMap.pipe(\n            map(pm => pm.get('contents')),\n            distinctUntilChanged(),\n            tap(() => (this.selectedMemberIds = [])),\n        );\n        this.activeZone$ = combineLatest(this.zones$, activeZoneId$).pipe(\n            map(([zones, activeZoneId]) => {\n                if (activeZoneId) {\n                    return zones.find(z => z.id === activeZoneId);\n                }\n            }),\n        );\n    }\n\n    create() {\n        this.modalService\n            .fromComponent(ZoneDetailDialogComponent, { locals: { zone: { name: '' } } })\n            .pipe(\n                switchMap(name =>\n                    name ? this.dataService.settings.createZone({ name, memberIds: [] }) : EMPTY,\n                ),\n                // refresh list\n                switchMap(() => this.dataService.settings.getZones().single$),\n            )\n            .subscribe(\n                () => {\n                    this.notificationService.success(_('common.notify-create-success'), {\n                        entity: 'Zone',\n                    });\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-create-error'), {\n                        entity: 'Zone',\n                    });\n                },\n            );\n    }\n\n    delete(zoneId: string) {\n        this.modalService\n            .dialog({\n                title: _('catalog.confirm-delete-zone'),\n                buttons: [\n                    { type: 'secondary', label: _('common.cancel') },\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\n                ],\n            })\n            .pipe(\n                switchMap(response => (response ? this.dataService.settings.deleteZone(zoneId) : EMPTY)),\n\n                switchMap(result => {\n                    if (result.deleteZone.result === DeletionResult.DELETED) {\n                        // refresh list\n                        return this.dataService.settings\n                            .getZones()\n                            .mapSingle(() => ({ errorMessage: false }));\n                    } else {\n                        return of({ errorMessage: result.deleteZone.message });\n                    }\n                }),\n            )\n            .subscribe(\n                result => {\n                    if (typeof result.errorMessage === 'string') {\n                        this.notificationService.error(result.errorMessage);\n                    } else {\n                        this.notificationService.success(_('common.notify-delete-success'), {\n                            entity: 'Zone',\n                        });\n                    }\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-delete-error'), {\n                        entity: 'Zone',\n                    });\n                },\n            );\n    }\n\n    update(zone: GetZones.Zones) {\n        this.modalService\n            .fromComponent(ZoneDetailDialogComponent, { locals: { zone } })\n            .pipe(\n                switchMap(name =>\n                    name ? this.dataService.settings.updateZone({ id: zone.id, name }) : EMPTY,\n                ),\n            )\n            .subscribe(\n                () => {\n                    this.notificationService.success(_('common.notify-update-success'), {\n                        entity: 'Zone',\n                    });\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-update-error'), {\n                        entity: 'Zone',\n                    });\n                },\n            );\n    }\n\n    closeMembers() {\n        const params = { ...this.route.snapshot.params };\n        delete params.contents;\n        this.router.navigate(['./', params], { relativeTo: this.route, queryParamsHandling: 'preserve' });\n    }\n\n    addToZone(zone: GetZones.Zones) {\n        this.modalService\n            .fromComponent(AddCountryToZoneDialogComponent, {\n                locals: {\n                    zoneName: zone.name,\n                    currentMembers: zone.members,\n                },\n                size: 'md',\n            })\n            .pipe(\n                switchMap(memberIds =>\n                    memberIds\n                        ? this.dataService.settings\n                              .addMembersToZone(zone.id, memberIds)\n                              .pipe(mapTo(memberIds))\n                        : EMPTY,\n                ),\n            )\n            .subscribe({\n                next: result => {\n                    this.notificationService.success(_(`settings.add-countries-to-zone-success`), {\n                        countryCount: result.length,\n                        zoneName: zone.name,\n                    });\n                },\n                error: err => {\n                    this.notificationService.error(err);\n                },\n            });\n    }\n\n    removeFromZone(zone: GetZones.Zones, memberIds: string[]) {\n        this.dataService.settings.removeMembersFromZone(zone.id, memberIds).subscribe({\n            complete: () => {\n                this.notificationService.success(_(`settings.remove-countries-from-zone-success`), {\n                    countryCount: memberIds.length,\n                    zoneName: zone.name,\n                });\n            },\n        });\n    }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n    selector: '[vdrZoneMemberControls]',\n})\nexport class ZoneMemberControlsDirective {\n    constructor(public templateRef: TemplateRef<any>) {}\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n    selector: '[vdrZoneMemberListHeader]',\n})\nexport class ZoneMemberListHeaderDirective {\n    constructor(public templateRef: TemplateRef<any>) {}\n}\n","import { ChangeDetectionStrategy, Component, ContentChild, EventEmitter, Input, Output } from '@angular/core';\nimport { GetZones } from '@vendure/admin-ui/core';\n\nimport { ZoneMemberControlsDirective } from './zone-member-controls.directive';\nimport { ZoneMemberListHeaderDirective } from './zone-member-list-header.directive';\n\nexport type ZoneMember = { id: string; name: string; code: string };\n\n@Component({\n    selector: 'vdr-zone-member-list',\n    templateUrl: './zone-member-list.component.html',\n    styleUrls: ['./zone-member-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZoneMemberListComponent {\n    @Input() members: ZoneMember[] = [];\n    @Input() selectedMemberIds: string[] = [];\n    @Output() selectionChange = new EventEmitter<string[]>();\n    @ContentChild(ZoneMemberListHeaderDirective) headerTemplate: ZoneMemberListHeaderDirective;\n    @ContentChild(ZoneMemberControlsDirective) controlsTemplate: ZoneMemberControlsDirective;\n    filterTerm = '';\n\n    filteredMembers(): ZoneMember[] {\n        if (this.filterTerm !== '') {\n            const term = this.filterTerm.toLocaleLowerCase();\n            return this.members.filter(\n                m => m.name.toLocaleLowerCase().includes(term) || m.code.toLocaleLowerCase().includes(term),\n            );\n        } else {\n            return this.members;\n        }\n    }\n\n    areAllSelected(): boolean {\n        if (this.members) {\n            return this.selectedMemberIds.length === this.members.length;\n        } else {\n            return false;\n        }\n    }\n\n    toggleSelectAll() {\n        if (this.areAllSelected()) {\n            this.selectionChange.emit([]);\n        } else {\n            this.selectionChange.emit(this.members.map(v => v.id));\n        }\n    }\n\n    toggleSelectMember(member: ZoneMember) {\n        if (this.selectedMemberIds.includes(member.id)) {\n            this.selectionChange.emit(this.selectedMemberIds.filter(id => id !== member.id));\n        } else {\n            this.selectionChange.emit([...this.selectedMemberIds, member.id]);\n        }\n    }\n\n    isMemberSelected = (member: ZoneMember): boolean => {\n        return -1 < this.selectedMemberIds.indexOf(member.id);\n    };\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BaseEntityResolver } from '@vendure/admin-ui/core';\nimport { Administrator, Role } from '@vendure/admin-ui/core';\nimport { DataService } from '@vendure/admin-ui/core';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AdministratorResolver extends BaseEntityResolver<Administrator.Fragment> {\n    constructor(router: Router, dataService: DataService) {\n        super(\n            router,\n            {\n                __typename: 'Administrator' as 'Administrator',\n                id: '',\n                createdAt: '',\n                updatedAt: '',\n                emailAddress: '',\n                firstName: '',\n                lastName: '',\n                user: { roles: [] } as any,\n            },\n            id => dataService.administrator.getAdministrator(id).mapStream(data => data.administrator),\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BaseEntityResolver } from '@vendure/admin-ui/core';\nimport { Channel, CurrencyCode } from '@vendure/admin-ui/core';\nimport { getDefaultUiLanguage } from '@vendure/admin-ui/core';\nimport { DataService } from '@vendure/admin-ui/core';\n\n/**\n * Resolves the id from the path into a Customer entity.\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class ChannelResolver extends BaseEntityResolver<Channel.Fragment> {\n    constructor(router: Router, dataService: DataService) {\n        super(\n            router,\n            {\n                __typename: 'Channel',\n                id: '',\n                createdAt: '',\n                updatedAt: '',\n                code: '',\n                token: '',\n                pricesIncludeTax: false,\n                currencyCode: CurrencyCode.USD,\n                defaultLanguageCode: getDefaultUiLanguage(),\n                defaultShippingZone: {} as any,\n                defaultTaxZone: {} as any,\n            },\n            (id) => dataService.settings.getChannel(id).mapStream((data) => data.channel),\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BaseEntityResolver } from '@vendure/admin-ui/core';\nimport { Country } from '@vendure/admin-ui/core';\nimport { DataService } from '@vendure/admin-ui/core';\n\n/**\n * Resolves the id from the path into a Customer entity.\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class CountryResolver extends BaseEntityResolver<Country.Fragment> {\n    constructor(router: Router, dataService: DataService) {\n        super(\n            router,\n            {\n                __typename: 'Country',\n                id: '',\n                createdAt: '',\n                updatedAt: '',\n                code: '',\n                name: '',\n                enabled: false,\n                translations: [],\n            },\n            id => dataService.settings.getCountry(id).mapStream(data => data.country),\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BaseEntityResolver } from '@vendure/admin-ui/core';\nimport { GetGlobalSettings } from '@vendure/admin-ui/core';\nimport { DataService } from '@vendure/admin-ui/core';\n\n/**\n * Resolves the global settings.\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class GlobalSettingsResolver extends BaseEntityResolver<GetGlobalSettings.GlobalSettings> {\n    constructor(router: Router, dataService: DataService) {\n        super(\n            router,\n            // we will never be creating a new GlobalSettings entity, so this part is not used.\n            {} as any,\n            () => dataService.settings.getGlobalSettings().mapStream(data => data.globalSettings),\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BaseEntityResolver } from '@vendure/admin-ui/core';\nimport { PaymentMethod } from '@vendure/admin-ui/core';\nimport { DataService } from '@vendure/admin-ui/core';\n\n/**\n * Resolves the id from the path into a Customer entity.\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class PaymentMethodResolver extends BaseEntityResolver<PaymentMethod.Fragment> {\n    constructor(router: Router, dataService: DataService) {\n        super(\n            router,\n            {\n                __typename: 'PaymentMethod',\n                id: '',\n                createdAt: '',\n                updatedAt: '',\n                name: '',\n                code: '',\n                description: '',\n                enabled: true,\n                checker: undefined as any,\n                handler: undefined as any,\n            },\n            id => dataService.settings.getPaymentMethod(id).mapStream(data => data.paymentMethod),\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BaseEntityResolver } from '@vendure/admin-ui/core';\nimport { Administrator, Role } from '@vendure/admin-ui/core';\nimport { DataService } from '@vendure/admin-ui/core';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ProfileResolver extends BaseEntityResolver<Administrator.Fragment> {\n    constructor(router: Router, dataService: DataService) {\n        super(\n            router,\n            {\n                __typename: 'Administrator' as 'Administrator',\n                id: '',\n                createdAt: '',\n                updatedAt: '',\n                emailAddress: '',\n                firstName: '',\n                lastName: '',\n                user: { roles: [] } as any,\n            },\n            id =>\n                dataService.administrator\n                    .getActiveAdministrator()\n                    .mapStream(data => data.activeAdministrator),\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BaseEntityResolver } from '@vendure/admin-ui/core';\nimport { Role } from '@vendure/admin-ui/core';\nimport { DataService } from '@vendure/admin-ui/core';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RoleResolver extends BaseEntityResolver<Role.Fragment> {\n    constructor(router: Router, dataService: DataService) {\n        super(\n            router,\n            {\n                __typename: 'Role' as 'Role',\n                id: '',\n                createdAt: '',\n                updatedAt: '',\n                code: '',\n                description: '',\n                permissions: [],\n                channels: [],\n            },\n            id => dataService.administrator.getRole(id).mapStream(data => data.role),\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BaseEntityResolver } from '@vendure/admin-ui/core';\nimport { ShippingMethod } from '@vendure/admin-ui/core';\nimport { DataService } from '@vendure/admin-ui/core';\n\n/**\n * Resolves the id from the path into a Customer entity.\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class ShippingMethodResolver extends BaseEntityResolver<ShippingMethod.Fragment> {\n    constructor(router: Router, dataService: DataService) {\n        super(\n            router,\n            {\n                __typename: 'ShippingMethod',\n                createdAt: '',\n                updatedAt: '',\n                id: '',\n                code: '',\n                name: '',\n                description: '',\n                fulfillmentHandlerCode: undefined as any,\n                checker: undefined as any,\n                calculator: undefined as any,\n                translations: [],\n            },\n            id => dataService.shippingMethod.getShippingMethod(id).mapStream(data => data.shippingMethod),\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BaseEntityResolver, DataService, TaxCategory } from '@vendure/admin-ui/core';\n\n/**\n * Resolves the id from the path into a Customer entity.\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class TaxCategoryResolver extends BaseEntityResolver<TaxCategory.Fragment> {\n    constructor(router: Router, dataService: DataService) {\n        super(\n            router,\n            {\n                __typename: 'TaxCategory',\n                id: '',\n                createdAt: '',\n                updatedAt: '',\n                name: '',\n                isDefault: false,\n            },\n            id => dataService.settings.getTaxCategory(id).mapStream(data => data.taxCategory),\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BaseEntityResolver, DataService, TaxRate } from '@vendure/admin-ui/core';\n\n/**\n * Resolves the id from the path into a Customer entity.\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class TaxRateResolver extends BaseEntityResolver<TaxRate.Fragment> {\n    constructor(router: Router, dataService: DataService) {\n        super(\n            router,\n            {\n                __typename: 'TaxRate',\n                id: '',\n                createdAt: '',\n                updatedAt: '',\n                name: '',\n                value: 0,\n                enabled: true,\n                category: {} as any,\n                zone: {} as any,\n                customerGroup: null,\n            },\n            id => dataService.settings.getTaxRate(id).mapStream(data => data.taxRate),\n        );\n    }\n}\n","import { Route } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    Administrator,\n    CanDeactivateDetailGuard,\n    Channel,\n    Country,\n    createResolveData,\n    detailBreadcrumb,\n    Role,\n    ShippingMethod,\n    TaxCategory,\n    TaxRate,\n} from '@vendure/admin-ui/core';\n\nimport { AdminDetailComponent } from './components/admin-detail/admin-detail.component';\nimport { AdministratorListComponent } from './components/administrator-list/administrator-list.component';\nimport { ChannelDetailComponent } from './components/channel-detail/channel-detail.component';\nimport { ChannelListComponent } from './components/channel-list/channel-list.component';\nimport { CountryDetailComponent } from './components/country-detail/country-detail.component';\nimport { CountryListComponent } from './components/country-list/country-list.component';\nimport { GlobalSettingsComponent } from './components/global-settings/global-settings.component';\nimport { PaymentMethodDetailComponent } from './components/payment-method-detail/payment-method-detail.component';\nimport { PaymentMethodListComponent } from './components/payment-method-list/payment-method-list.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { RoleDetailComponent } from './components/role-detail/role-detail.component';\nimport { RoleListComponent } from './components/role-list/role-list.component';\nimport { ShippingMethodDetailComponent } from './components/shipping-method-detail/shipping-method-detail.component';\nimport { ShippingMethodListComponent } from './components/shipping-method-list/shipping-method-list.component';\nimport { TaxCategoryDetailComponent } from './components/tax-category-detail/tax-category-detail.component';\nimport { TaxCategoryListComponent } from './components/tax-category-list/tax-category-list.component';\nimport { TaxRateDetailComponent } from './components/tax-rate-detail/tax-rate-detail.component';\nimport { TaxRateListComponent } from './components/tax-rate-list/tax-rate-list.component';\nimport { ZoneListComponent } from './components/zone-list/zone-list.component';\nimport { AdministratorResolver } from './providers/routing/administrator-resolver';\nimport { ChannelResolver } from './providers/routing/channel-resolver';\nimport { CountryResolver } from './providers/routing/country-resolver';\nimport { GlobalSettingsResolver } from './providers/routing/global-settings-resolver';\nimport { PaymentMethodResolver } from './providers/routing/payment-method-resolver';\nimport { ProfileResolver } from './providers/routing/profile-resolver';\nimport { RoleResolver } from './providers/routing/role-resolver';\nimport { ShippingMethodResolver } from './providers/routing/shipping-method-resolver';\nimport { TaxCategoryResolver } from './providers/routing/tax-category-resolver';\nimport { TaxRateResolver } from './providers/routing/tax-rate-resolver';\n\nexport const settingsRoutes: Route[] = [\n    {\n        path: 'profile',\n        component: ProfileComponent,\n        resolve: createResolveData(ProfileResolver),\n        canDeactivate: [CanDeactivateDetailGuard],\n        data: {\n            breadcrumb: _('breadcrumb.profile'),\n        },\n    },\n    {\n        path: 'administrators',\n        component: AdministratorListComponent,\n        data: {\n            breadcrumb: _('breadcrumb.administrators'),\n        },\n    },\n    {\n        path: 'administrators/:id',\n        component: AdminDetailComponent,\n        resolve: createResolveData(AdministratorResolver),\n        canDeactivate: [CanDeactivateDetailGuard],\n        data: { breadcrumb: administratorBreadcrumb },\n    },\n    {\n        path: 'channels',\n        component: ChannelListComponent,\n        data: {\n            breadcrumb: _('breadcrumb.channels'),\n        },\n    },\n    {\n        path: 'channels/:id',\n        component: ChannelDetailComponent,\n        resolve: createResolveData(ChannelResolver),\n        canDeactivate: [CanDeactivateDetailGuard],\n        data: { breadcrumb: channelBreadcrumb },\n    },\n    {\n        path: 'roles',\n        component: RoleListComponent,\n        data: {\n            breadcrumb: _('breadcrumb.roles'),\n        },\n    },\n    {\n        path: 'roles/:id',\n        component: RoleDetailComponent,\n        resolve: createResolveData(RoleResolver),\n        canDeactivate: [CanDeactivateDetailGuard],\n        data: { breadcrumb: roleBreadcrumb },\n    },\n    {\n        path: 'tax-categories',\n        component: TaxCategoryListComponent,\n        data: {\n            breadcrumb: _('breadcrumb.tax-categories'),\n        },\n    },\n    {\n        path: 'tax-categories/:id',\n        component: TaxCategoryDetailComponent,\n        resolve: createResolveData(TaxCategoryResolver),\n        canDeactivate: [CanDeactivateDetailGuard],\n        data: {\n            breadcrumb: taxCategoryBreadcrumb,\n        },\n    },\n    {\n        path: 'tax-rates',\n        component: TaxRateListComponent,\n        data: {\n            breadcrumb: _('breadcrumb.tax-rates'),\n        },\n    },\n    {\n        path: 'tax-rates/:id',\n        component: TaxRateDetailComponent,\n        resolve: createResolveData(TaxRateResolver),\n        canDeactivate: [CanDeactivateDetailGuard],\n        data: {\n            breadcrumb: taxRateBreadcrumb,\n        },\n    },\n    {\n        path: 'countries',\n        component: CountryListComponent,\n        data: {\n            breadcrumb: _('breadcrumb.countries'),\n        },\n    },\n    {\n        path: 'countries/:id',\n        component: CountryDetailComponent,\n        resolve: createResolveData(CountryResolver),\n        canDeactivate: [CanDeactivateDetailGuard],\n        data: {\n            breadcrumb: countryBreadcrumb,\n        },\n    },\n    {\n        path: 'zones',\n        component: ZoneListComponent,\n        data: {\n            breadcrumb: _('breadcrumb.zones'),\n        },\n    },\n    {\n        path: 'shipping-methods',\n        component: ShippingMethodListComponent,\n        data: {\n            breadcrumb: _('breadcrumb.shipping-methods'),\n        },\n    },\n    {\n        path: 'shipping-methods/:id',\n        component: ShippingMethodDetailComponent,\n        resolve: createResolveData(ShippingMethodResolver),\n        canDeactivate: [CanDeactivateDetailGuard],\n        data: {\n            breadcrumb: shippingMethodBreadcrumb,\n        },\n    },\n    {\n        path: 'payment-methods',\n        component: PaymentMethodListComponent,\n        data: {\n            breadcrumb: _('breadcrumb.payment-methods'),\n        },\n    },\n    {\n        path: 'payment-methods/:id',\n        component: PaymentMethodDetailComponent,\n        resolve: createResolveData(PaymentMethodResolver),\n        canDeactivate: [CanDeactivateDetailGuard],\n        data: {\n            breadcrumb: paymentMethodBreadcrumb,\n        },\n    },\n    {\n        path: 'global-settings',\n        component: GlobalSettingsComponent,\n        resolve: createResolveData(GlobalSettingsResolver),\n        canDeactivate: [CanDeactivateDetailGuard],\n        data: {\n            breadcrumb: _('breadcrumb.global-settings'),\n        },\n    },\n];\n\nexport function administratorBreadcrumb(data: any, params: any) {\n    return detailBreadcrumb<Administrator>({\n        entity: data.entity,\n        id: params.id,\n        breadcrumbKey: 'breadcrumb.administrators',\n        getName: admin => `${admin.firstName} ${admin.lastName}`,\n        route: 'administrators',\n    });\n}\n\nexport function channelBreadcrumb(data: any, params: any) {\n    return detailBreadcrumb<Channel>({\n        entity: data.entity,\n        id: params.id,\n        breadcrumbKey: 'breadcrumb.channels',\n        getName: channel => channel.code,\n        route: 'channels',\n    });\n}\n\nexport function roleBreadcrumb(data: any, params: any) {\n    return detailBreadcrumb<Role>({\n        entity: data.entity,\n        id: params.id,\n        breadcrumbKey: 'breadcrumb.roles',\n        getName: role => role.description,\n        route: 'roles',\n    });\n}\n\nexport function taxCategoryBreadcrumb(data: any, params: any) {\n    return detailBreadcrumb<TaxCategory.Fragment>({\n        entity: data.entity,\n        id: params.id,\n        breadcrumbKey: 'breadcrumb.tax-categories',\n        getName: category => category.name,\n        route: 'tax-categories',\n    });\n}\n\nexport function taxRateBreadcrumb(data: any, params: any) {\n    return detailBreadcrumb<TaxRate.Fragment>({\n        entity: data.entity,\n        id: params.id,\n        breadcrumbKey: 'breadcrumb.tax-rates',\n        getName: category => category.name,\n        route: 'tax-rates',\n    });\n}\n\nexport function countryBreadcrumb(data: any, params: any) {\n    return detailBreadcrumb<Country.Fragment>({\n        entity: data.entity,\n        id: params.id,\n        breadcrumbKey: 'breadcrumb.countries',\n        getName: promotion => promotion.name,\n        route: 'countries',\n    });\n}\n\nexport function shippingMethodBreadcrumb(data: any, params: any) {\n    return detailBreadcrumb<ShippingMethod.Fragment>({\n        entity: data.entity,\n        id: params.id,\n        breadcrumbKey: 'breadcrumb.shipping-methods',\n        getName: method => method.name,\n        route: 'shipping-methods',\n    });\n}\n\nexport function paymentMethodBreadcrumb(data: any, params: any) {\n    return detailBreadcrumb<ShippingMethod.Fragment>({\n        entity: data.entity,\n        id: params.id,\n        breadcrumbKey: 'breadcrumb.payment-methods',\n        getName: method => method.code,\n        route: 'payment-methods',\n    });\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '@vendure/admin-ui/core';\n\nimport { AddCountryToZoneDialogComponent } from './components/add-country-to-zone-dialog/add-country-to-zone-dialog.component';\nimport { AdminDetailComponent } from './components/admin-detail/admin-detail.component';\nimport { AdministratorListComponent } from './components/administrator-list/administrator-list.component';\nimport { ChannelDetailComponent } from './components/channel-detail/channel-detail.component';\nimport { ChannelListComponent } from './components/channel-list/channel-list.component';\nimport { CountryDetailComponent } from './components/country-detail/country-detail.component';\nimport { CountryListComponent } from './components/country-list/country-list.component';\nimport { GlobalSettingsComponent } from './components/global-settings/global-settings.component';\nimport { PaymentMethodDetailComponent } from './components/payment-method-detail/payment-method-detail.component';\nimport { PaymentMethodListComponent } from './components/payment-method-list/payment-method-list.component';\nimport { PermissionGridComponent } from './components/permission-grid/permission-grid.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { RoleDetailComponent } from './components/role-detail/role-detail.component';\nimport { RoleListComponent } from './components/role-list/role-list.component';\nimport { ShippingEligibilityTestResultComponent } from './components/shipping-eligibility-test-result/shipping-eligibility-test-result.component';\nimport { ShippingMethodDetailComponent } from './components/shipping-method-detail/shipping-method-detail.component';\nimport { ShippingMethodListComponent } from './components/shipping-method-list/shipping-method-list.component';\nimport { ShippingMethodTestResultComponent } from './components/shipping-method-test-result/shipping-method-test-result.component';\nimport { TaxCategoryDetailComponent } from './components/tax-category-detail/tax-category-detail.component';\nimport { TaxCategoryListComponent } from './components/tax-category-list/tax-category-list.component';\nimport { TaxRateDetailComponent } from './components/tax-rate-detail/tax-rate-detail.component';\nimport { TaxRateListComponent } from './components/tax-rate-list/tax-rate-list.component';\nimport { TestAddressFormComponent } from './components/test-address-form/test-address-form.component';\nimport { TestOrderBuilderComponent } from './components/test-order-builder/test-order-builder.component';\nimport { ZoneDetailDialogComponent } from './components/zone-detail-dialog/zone-detail-dialog.component';\nimport { ZoneListComponent } from './components/zone-list/zone-list.component';\nimport { ZoneMemberControlsDirective } from './components/zone-member-list/zone-member-controls.directive';\nimport { ZoneMemberListHeaderDirective } from './components/zone-member-list/zone-member-list-header.directive';\nimport { ZoneMemberListComponent } from './components/zone-member-list/zone-member-list.component';\nimport { settingsRoutes } from './settings.routes';\n\n@NgModule({\n    imports: [SharedModule, RouterModule.forChild(settingsRoutes)],\n    declarations: [\n        TaxCategoryListComponent,\n        TaxCategoryDetailComponent,\n        AdministratorListComponent,\n        RoleListComponent,\n        RoleDetailComponent,\n        AdminDetailComponent,\n        PermissionGridComponent,\n        CountryListComponent,\n        CountryDetailComponent,\n        TaxRateListComponent,\n        TaxRateDetailComponent,\n        ChannelListComponent,\n        ChannelDetailComponent,\n        ShippingMethodListComponent,\n        ShippingMethodDetailComponent,\n        PaymentMethodListComponent,\n        PaymentMethodDetailComponent,\n        GlobalSettingsComponent,\n        TestOrderBuilderComponent,\n        TestAddressFormComponent,\n        ShippingMethodTestResultComponent,\n        ShippingEligibilityTestResultComponent,\n        ZoneListComponent,\n        AddCountryToZoneDialogComponent,\n        ZoneMemberListComponent,\n        ZoneMemberListHeaderDirective,\n        ZoneMemberControlsDirective,\n        ZoneDetailDialogComponent,\n        ProfileComponent,\n    ],\n})\nexport class SettingsModule {}\n","// This file was generated by the build-public-api.ts script\nexport * from './components/add-country-to-zone-dialog/add-country-to-zone-dialog.component';\nexport * from './components/admin-detail/admin-detail.component';\nexport * from './components/administrator-list/administrator-list.component';\nexport * from './components/channel-detail/channel-detail.component';\nexport * from './components/channel-list/channel-list.component';\nexport * from './components/country-detail/country-detail.component';\nexport * from './components/country-list/country-list.component';\nexport * from './components/global-settings/global-settings.component';\nexport * from './components/payment-method-detail/payment-method-detail.component';\nexport * from './components/payment-method-list/payment-method-list.component';\nexport * from './components/permission-grid/permission-grid.component';\nexport * from './components/profile/profile.component';\nexport * from './components/role-detail/role-detail.component';\nexport * from './components/role-list/role-list.component';\nexport * from './components/shipping-eligibility-test-result/shipping-eligibility-test-result.component';\nexport * from './components/shipping-method-detail/shipping-method-detail.component';\nexport * from './components/shipping-method-list/shipping-method-list.component';\nexport * from './components/shipping-method-test-result/shipping-method-test-result.component';\nexport * from './components/tax-category-detail/tax-category-detail.component';\nexport * from './components/tax-category-list/tax-category-list.component';\nexport * from './components/tax-rate-detail/tax-rate-detail.component';\nexport * from './components/tax-rate-list/tax-rate-list.component';\nexport * from './components/test-address-form/test-address-form.component';\nexport * from './components/test-order-builder/test-order-builder.component';\nexport * from './components/zone-detail-dialog/zone-detail-dialog.component';\nexport * from './components/zone-list/zone-list.component';\nexport * from './components/zone-member-list/zone-member-controls.directive';\nexport * from './components/zone-member-list/zone-member-list-header.directive';\nexport * from './components/zone-member-list/zone-member-list.component';\nexport * from './providers/routing/administrator-resolver';\nexport * from './providers/routing/channel-resolver';\nexport * from './providers/routing/country-resolver';\nexport * from './providers/routing/global-settings-resolver';\nexport * from './providers/routing/payment-method-resolver';\nexport * from './providers/routing/profile-resolver';\nexport * from './providers/routing/role-resolver';\nexport * from './providers/routing/shipping-method-resolver';\nexport * from './providers/routing/tax-category-resolver';\nexport * from './providers/routing/tax-rate-resolver';\nexport * from './settings.module';\nexport * from './settings.routes';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["map","Component","ChangeDetectionStrategy","DataService","Validators","CUSTOMER_ROLE_CODE","Permission","_","take","mergeMap","BaseDetailComponent","Router","ActivatedRoute","ServerConfigService","ChangeDetectorRef","FormBuilder","NotificationService","switchMap","EMPTY","BaseListComponent","ModalService","CurrencyCode","DEFAULT_CHANNEL_CODE","Subject","startWith","combineLatest","createUpdatedTranslatable","findTranslation","FormControl","tap","DeletionResult","LanguageCode","normalizeString","configurableDefinitionToInstance","toConfigurableOperationInput","getConfigArgValue","EventEmitter","Input","Output","unique","SUPER_ADMIN_ROLE_CODE","of","merge","takeUntil","LocalStorageService","distinctUntilChanged","mapTo","Directive","TemplateRef","ContentChild","BaseEntityResolver","Injectable","getDefaultUiLanguage","createResolveData","CanDeactivateDetailGuard","detailBreadcrumb","NgModule","SharedModule","RouterModule"],"mappings":"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"}
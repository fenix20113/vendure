{"version":3,"sources":["webpack:///src/lib/dashboard/src/components/dashboard-widget/dashboard-widget.component.html","webpack:///src/lib/dashboard/src/components/dashboard-widget/dashboard-widget.component.ts","webpack:///src/lib/dashboard/src/components/dashboard/dashboard.component.html","webpack:///src/lib/dashboard/src/components/dashboard/dashboard.component.ts","webpack:///src/lib/dashboard/src/dashboard.routes.ts","webpack:///src/lib/dashboard/src/widgets/latest-orders-widget/latest-orders-widget.component.html","webpack:///src/lib/dashboard/src/widgets/latest-orders-widget/latest-orders-widget.component.ts","webpack:///src/lib/dashboard/src/widgets/order-summary-widget/order-summary-widget.component.html","webpack:///src/lib/dashboard/src/widgets/order-summary-widget/order-summary-widget.component.ts","webpack:///src/lib/dashboard/src/widgets/test-widget/test-widget.component.ts","webpack:///src/lib/dashboard/src/widgets/test-widget/test-widget.component.html","webpack:///src/lib/dashboard/src/widgets/welcome-widget/welcome-widget.component.html","webpack:///src/lib/dashboard/src/widgets/welcome-widget/welcome-widget.component.ts","webpack:///src/lib/dashboard/src/default-widgets.ts","webpack:///src/lib/dashboard/src/dashboard.module.ts"],"names":["componentFactoryResolver","this","loadWidget","loadComponentResult","widgetConfig","loadComponent","componentType","Promise","componentRef","portal","createComponent","resolveComponentFactory","changeDetectorRef","markForCheck","destroy","dashboardWidgetService","localStorageService","changedDetectorRef","dataService","deletionMarker","availableWidgetIds$","client","userStatus","stream$","pipe","map","permissions","getAvailableIds","tap","ids","widgetLayout","initLayout","width","assertNever","config","supportedWidths","widget","recalculateLayout","index","row","item","id","join","getWidgetById","getSupportedWidths","targetRow","length","push","event","currentIndex","previousIndex","previousContainer","container","data","previousLayoutRow","newLayoutRow","splice","availableIds","savedLayoutDef","get","layoutDef","filter","includes","getWidgetLayout","newLayoutDef","reduce","flat","set","setTimeout","dashboardRoutes","path","component","pathMatch","latestOrders$","order","getOrders","take","active","eq","sort","orderPlacedAt","DESC","refetchOnChannelChange","mapStream","orders","items","LatestOrdersWidgetModule","selection$","date","today","Date","yesterday","setDate","getDate","BehaviorSubject","timeframe","dateRange$","distinctUntilChanged","selection","start","startOf","toDate","end","endOf","shareReplay","orderSummary$","switchMap","getOrderSummary","totalOrderCount$","res","totalItems","totalOrderValue$","total","currencyCode$","settings","getActiveChannel","activeChannel","currencyCode","undefined","OrderSummaryWidgetModule","TestWidgetComponent","TestWidgetModule","version","brand","hideVendureBranding","hideVersion","administrator$","administrator","getActiveAdministrator","activeAdministrator","WelcomeWidgetModule","DEFAULT_DASHBOARD_WIDGET_LAYOUT","DEFAULT_WIDGETS","welcome","orderSummary","title","requiresPermissions","ReadOrder","latestOrders","testWidget","Object","entries","registerWidget","getDefaultLayout","setDefaultLayout","forChild"],"mappings":"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","file":"x","sourcesContent":["<div class=\"card\">\n    <div class=\"card-header\">\n        <div class=\"title\">\n            <ng-container *ngIf=\"widgetConfig.title as title\">{{ title | translate }}</ng-container>\n        </div>\n        <div class=\"controls\">\n            <ng-content></ng-content>\n        </div>\n    </div>\n    <div class=\"card-block\">\n        <ng-template #portal></ng-template>\n    </div>\n</div>\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport { DashboardWidgetConfig } from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-dashboard-widget',\n    templateUrl: './dashboard-widget.component.html',\n    styleUrls: ['./dashboard-widget.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DashboardWidgetComponent implements AfterViewInit, OnDestroy {\n    @Input() widgetConfig: DashboardWidgetConfig;\n\n    @ViewChild('portal', { read: ViewContainerRef })\n    private portal: ViewContainerRef;\n\n    private componentRef: ComponentRef<any>;\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver) {}\n\n    ngAfterViewInit(): void {\n        this.loadWidget();\n    }\n\n    private async loadWidget() {\n        const loadComponentResult = this.widgetConfig.loadComponent();\n        const componentType =\n            loadComponentResult instanceof Promise ? await loadComponentResult : loadComponentResult;\n        this.componentRef = this.portal.createComponent(\n            this.componentFactoryResolver.resolveComponentFactory(componentType),\n        );\n        this.componentRef.changeDetectorRef.markForCheck();\n    }\n\n    ngOnDestroy() {\n        if (this.componentRef) {\n            this.componentRef.destroy();\n        }\n    }\n}\n","<div class=\"widget-header\">\n    <vdr-dropdown>\n        <button class=\"btn btn-secondary btn-sm\" vdrDropdownTrigger>\n            <clr-icon shape=\"plus\"></clr-icon>\n            {{ 'dashboard.add-widget' | translate }}\n        </button>\n        <vdr-dropdown-menu vdrPosition=\"bottom-right\">\n            <button\n                class=\"button\"\n                vdrDropdownItem\n                *ngFor=\"let id of availableWidgetIds$ | async\"\n                (click)=\"addWidget(id)\"\n            >\n                {{ id }}\n            </button>\n        </vdr-dropdown-menu>\n    </vdr-dropdown>\n</div>\n<div cdkDropListGroup>\n    <div\n        class=\"clr-row dashboard-row\"\n        *ngFor=\"let row of widgetLayout; index as rowIndex; trackBy: trackRow\"\n        cdkDropList\n        (cdkDropListDropped)=\"drop($event)\"\n        cdkDropListOrientation=\"horizontal\"\n        [cdkDropListData]=\"{ index: rowIndex }\"\n    >\n        <div\n            *ngFor=\"let widget of row; trackBy: trackRowItem\"\n            class=\"dashboard-item\"\n            [ngClass]=\"getClassForWidth(widget.width)\"\n            cdkDrag\n            [cdkDragData]=\"widget\"\n        >\n            <vdr-dashboard-widget\n                *vdrIfPermissions=\"widget.config.requiresPermissions || null\"\n                [widgetConfig]=\"widget.config\"\n            >\n                <div class=\"flex\">\n                    <div class=\"drag-handle\" cdkDragHandle>\n                        <clr-icon shape=\"drag-handle\" size=\"24\"></clr-icon>\n                    </div>\n                    <vdr-dropdown>\n                        <button class=\"icon-button\" vdrDropdownTrigger>\n                            <clr-icon shape=\"ellipsis-vertical\"></clr-icon>\n                        </button>\n                        <vdr-dropdown-menu vdrPosition=\"bottom-right\">\n                            <h4 class=\"dropdown-header\">{{ 'dashboard.widget-resize' | translate }}</h4>\n                            <button\n                                class=\"button\"\n                                vdrDropdownItem\n                                [disabled]=\"width === widget.width\"\n                                *ngFor=\"let width of getSupportedWidths(widget.config)\"\n                                (click)=\"setWidgetWidth(widget, width)\"\n                            >\n                                {{ 'dashboard.widget-width' | translate: { width: width } }}\n                            </button>\n                            <div class=\"dropdown-divider\" role=\"separator\"></div>\n                            <button class=\"button\" vdrDropdownItem (click)=\"removeWidget(widget)\">\n                                <clr-icon shape=\"trash\" class=\"is-danger\"></clr-icon>\n                                {{ 'dashboard.remove-widget' | translate }}\n                            </button>\n                        </vdr-dropdown-menu>\n                    </vdr-dropdown>\n                </div>\n            </vdr-dashboard-widget>\n        </div>\n    </div>\n</div>\n","import { CdkDragDrop } from '@angular/cdk/drag-drop';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport {\n    DashboardWidgetConfig,\n    DashboardWidgetService,\n    DashboardWidgetWidth,\n    DataService,\n    LocalStorageService,\n    WidgetLayout,\n    WidgetLayoutDefinition,\n} from '@vendure/admin-ui/core';\nimport { assertNever } from '@vendure/common/lib/shared-utils';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\n@Component({\n    selector: 'vdr-dashboard',\n    templateUrl: './dashboard.component.html',\n    styleUrls: ['./dashboard.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DashboardComponent implements OnInit {\n    widgetLayout: WidgetLayout | undefined;\n    availableWidgetIds$: Observable<string[]>;\n    private readonly deletionMarker = '__delete__';\n\n    constructor(\n        private dashboardWidgetService: DashboardWidgetService,\n        private localStorageService: LocalStorageService,\n        private changedDetectorRef: ChangeDetectorRef,\n        private dataService: DataService,\n    ) {}\n\n    ngOnInit() {\n        this.availableWidgetIds$ = this.dataService.client.userStatus().stream$.pipe(\n            map(({ userStatus }) => userStatus.permissions),\n            map(permissions => this.dashboardWidgetService.getAvailableIds(permissions)),\n            tap(ids => (this.widgetLayout = this.initLayout(ids))),\n        );\n    }\n\n    getClassForWidth(width: DashboardWidgetWidth): string {\n        switch (width) {\n            case 3:\n                return `clr-col-12 clr-col-sm-6 clr-col-lg-3`;\n            case 4:\n                return `clr-col-12 clr-col-sm-6 clr-col-lg-4`;\n            case 6:\n                return `clr-col-12 clr-col-lg-6`;\n            case 8:\n                return `clr-col-12 clr-col-lg-8`;\n            case 12:\n                return `clr-col-12`;\n            default:\n                assertNever(width);\n        }\n    }\n\n    getSupportedWidths(config: DashboardWidgetConfig): DashboardWidgetWidth[] {\n        return config.supportedWidths || [3, 4, 6, 8, 12];\n    }\n\n    setWidgetWidth(widget: WidgetLayout[number][number], width: DashboardWidgetWidth) {\n        widget.width = width;\n        this.recalculateLayout();\n    }\n\n    trackRow(index: number, row: WidgetLayout[number]) {\n        const id = row.map(item => `${item.id}:${item.width}`).join('|');\n        return id;\n    }\n\n    trackRowItem(index: number, item: WidgetLayout[number][number]) {\n        return item.config;\n    }\n\n    addWidget(id: string) {\n        const config = this.dashboardWidgetService.getWidgetById(id);\n        if (config) {\n            const width = this.getSupportedWidths(config)[0];\n            const widget: WidgetLayout[number][number] = {\n                id,\n                config,\n                width,\n            };\n            let targetRow: WidgetLayout[number];\n            if (this.widgetLayout && this.widgetLayout.length) {\n                targetRow = this.widgetLayout[this.widgetLayout.length - 1];\n            } else {\n                targetRow = [];\n                this.widgetLayout?.push(targetRow);\n            }\n            targetRow.push(widget);\n            this.recalculateLayout();\n        }\n    }\n\n    removeWidget(widget: WidgetLayout[number][number]) {\n        widget.id = this.deletionMarker;\n        this.recalculateLayout();\n    }\n\n    drop(event: CdkDragDrop<{ index: number }>) {\n        const { currentIndex, previousIndex, previousContainer, container } = event;\n        if (previousIndex === currentIndex && previousContainer.data.index === container.data.index) {\n            // Nothing changed\n            return;\n        }\n        if (this.widgetLayout) {\n            const previousLayoutRow = this.widgetLayout[previousContainer.data.index];\n            const newLayoutRow = this.widgetLayout[container.data.index];\n\n            previousLayoutRow.splice(previousIndex, 1);\n            newLayoutRow.splice(currentIndex, 0, event.item.data);\n            this.recalculateLayout();\n        }\n    }\n\n    private initLayout(availableIds: string[]): WidgetLayout {\n        const savedLayoutDef = this.localStorageService.get('dashboardWidgetLayout');\n        let layoutDef: WidgetLayoutDefinition | undefined;\n        if (savedLayoutDef) {\n            // validate all the IDs from the saved layout are still available\n            layoutDef = savedLayoutDef.filter(item => availableIds.includes(item.id));\n        }\n        return this.dashboardWidgetService.getWidgetLayout(layoutDef);\n    }\n\n    private recalculateLayout() {\n        if (this.widgetLayout) {\n            const flattened = this.widgetLayout\n                .reduce((flat, row) => [...flat, ...row], [])\n                .filter(item => item.id !== this.deletionMarker);\n            const newLayoutDef: WidgetLayoutDefinition = flattened.map(item => ({\n                id: item.id,\n                width: item.width,\n            }));\n            this.widgetLayout = this.dashboardWidgetService.getWidgetLayout(newLayoutDef);\n            this.localStorageService.set('dashboardWidgetLayout', newLayoutDef);\n            setTimeout(() => this.changedDetectorRef.markForCheck());\n        }\n    }\n}\n","import { Routes } from '@angular/router';\n\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\n\nexport const dashboardRoutes: Routes = [\n    {\n        path: '',\n        component: DashboardComponent,\n        pathMatch: 'full',\n    },\n];\n","<vdr-data-table [items]=\"latestOrders$ | async\">\n    <ng-template let-order=\"item\">\n        <td class=\"left align-middle\">\n            {{ order.code }}\n            <vdr-order-state-label [state]=\"order.state\"></vdr-order-state-label>\n        </td>\n        <td class=\"left align-middle\">\n            <vdr-customer-label [customer]=\"order.customer\"></vdr-customer-label>\n        </td>\n        <td class=\"left align-middle\">{{ order.total | localeCurrency: order.currencyCode }}</td>\n        <td class=\"left align-middle\">{{ order.orderPlacedAt | timeAgo }}</td>\n        <td class=\"right align-middle\">\n            <vdr-table-row-action\n                iconShape=\"shopping-cart\"\n                [label]=\"'common.open' | translate\"\n                [linkTo]=\"['/orders/', order.id]\"\n            ></vdr-table-row-action>\n        </td>\n    </ng-template>\n</vdr-data-table>\n","import { ChangeDetectionStrategy, Component, NgModule, OnInit } from '@angular/core';\nimport { CoreModule, DataService, GetOrderList, SharedModule, SortOrder } from '@vendure/admin-ui/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'vdr-latest-orders-widget',\n    templateUrl: './latest-orders-widget.component.html',\n    styleUrls: ['./latest-orders-widget.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LatestOrdersWidgetComponent implements OnInit {\n    latestOrders$: Observable<GetOrderList.Items[]>;\n    constructor(private dataService: DataService) {}\n\n    ngOnInit(): void {\n        this.latestOrders$ = this.dataService.order\n            .getOrders({\n                take: 10,\n                filter: {\n                    active: { eq: false },\n                },\n                sort: {\n                    orderPlacedAt: SortOrder.DESC,\n                },\n            })\n            .refetchOnChannelChange()\n            .mapStream(data => data.orders.items);\n    }\n}\n\n@NgModule({\n    imports: [CoreModule, SharedModule],\n    declarations: [LatestOrdersWidgetComponent],\n})\nexport class LatestOrdersWidgetModule {}\n","<div class=\"stats\">\n    <div class=\"stat\">\n        <div class=\"stat-figure\">{{ totalOrderCount$ | async }}</div>\n        <div class=\"stat-label\">{{ 'dashboard.total-orders' | translate }}</div>\n    </div>\n    <div class=\"stat\">\n        <div class=\"stat-figure\">\n            {{ totalOrderValue$ | async | currency: (currencyCode$ | async) || undefined }}\n        </div>\n        <div class=\"stat-label\">{{ 'dashboard.total-order-value' | translate }}</div>\n    </div>\n</div>\n<div class=\"footer\">\n    <div class=\"btn-group btn-outline-primary btn-sm\" *ngIf=\"selection$ | async as selection\">\n        <button class=\"btn\" [class.btn-primary]=\"selection.date === today\" (click)=\"selection$.next({timeframe: 'day', date: today})\">\n            {{ 'dashboard.today' | translate }}\n        </button>\n        <button class=\"btn\" [class.btn-primary]=\"selection.date === yesterday\" (click)=\"selection$.next({timeframe: 'day', date: yesterday})\">\n            {{ 'dashboard.yesterday' | translate }}\n        </button>\n        <button class=\"btn\" [class.btn-primary]=\"selection.timeframe === 'week'\" (click)=\"selection$.next({timeframe: 'week'})\">\n            {{ 'dashboard.thisWeek' | translate }}\n        </button>\n        <button class=\"btn\" [class.btn-primary]=\"selection.timeframe === 'month'\" (click)=\"selection$.next({timeframe: 'month'})\">\n            {{ 'dashboard.thisMonth' | translate }}\n        </button>\n    </div>\n\n    <div class=\"date-range p5\" *ngIf=\"dateRange$ | async as range\">\n        {{ range.start | localeDate }} - {{ range.end | localeDate }}\n    </div>\n</div>\n","import { ChangeDetectionStrategy, Component, NgModule, OnInit } from '@angular/core';\nimport { CoreModule, DataService } from '@vendure/admin-ui/core';\nimport dayjs from 'dayjs';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { distinctUntilChanged, map, shareReplay, switchMap } from 'rxjs/operators';\n\nexport type Timeframe = 'day' | 'week' | 'month';\n\n@Component({\n    selector: 'vdr-order-summary-widget',\n    templateUrl: './order-summary-widget.component.html',\n    styleUrls: ['./order-summary-widget.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderSummaryWidgetComponent implements OnInit {\n    today = new Date();\n    yesterday = new Date(new Date().setDate(this.today.getDate() - 1));\n    totalOrderCount$: Observable<number>;\n    totalOrderValue$: Observable<number>;\n    currencyCode$: Observable<string | undefined>;\n    selection$ = new BehaviorSubject<{ timeframe: Timeframe; date?: Date }>({\n        timeframe: 'day',\n        date: this.today,\n    });\n    dateRange$: Observable<{ start: Date; end: Date }>;\n\n    constructor(private dataService: DataService) {}\n\n    ngOnInit(): void {\n        this.dateRange$ = this.selection$.pipe(\n            distinctUntilChanged(),\n            map(selection => {\n                return {\n                    start: dayjs(selection.date).startOf(selection.timeframe).toDate(),\n                    end: dayjs(selection.date).endOf(selection.timeframe).toDate(),\n                };\n            }),\n            shareReplay(1),\n        );\n        const orderSummary$ = this.dateRange$.pipe(\n            switchMap(({ start, end }) => {\n                return this.dataService.order\n                    .getOrderSummary(start, end)\n                    .refetchOnChannelChange()\n                    .mapStream(data => data.orders);\n            }),\n            shareReplay(1),\n        );\n        this.totalOrderCount$ = orderSummary$.pipe(map(res => res.totalItems));\n        this.totalOrderValue$ = orderSummary$.pipe(\n            map(res => res.items.reduce((total, order) => total + order.total, 0) / 100),\n        );\n        this.currencyCode$ = this.dataService.settings\n            .getActiveChannel()\n            .refetchOnChannelChange()\n            .mapStream(data => data.activeChannel.currencyCode || undefined);\n    }\n}\n\n@NgModule({\n    imports: [CoreModule],\n    declarations: [OrderSummaryWidgetComponent],\n})\nexport class OrderSummaryWidgetModule {}\n","import { ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\n\n@Component({\n    selector: 'vdr-test-widget',\n    templateUrl: './test-widget.component.html',\n    styleUrls: ['./test-widget.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TestWidgetComponent {}\n\n@NgModule({\n    declarations: [TestWidgetComponent],\n})\nexport class TestWidgetModule {}\n","<p>This is a test widget!</p>\n","<div *ngIf=\"administrator$ | async as administrator\">\n    <h4 class=\"h4\">\n        Welcome, {{ administrator.firstName }} {{ administrator.lastName }}<br />\n        <small class=\"p5\">Last login: {{ administrator.user.lastLogin | timeAgo }}</small>\n    </h4>\n\n    <p class=\"p5\" *ngIf=\"!hideVendureBranding || !hideVersion\">\n        {{ hideVendureBranding ? '' : 'Vendure' }} {{ hideVersion ? '' : ('Admin UI v' + version) }}\n    </p>\n</div>\n<div class=\"placeholder\">\n    <clr-icon shape=\"line-chart\" size=\"128\"></clr-icon>\n</div>\n","import { ChangeDetectionStrategy, Component, NgModule, OnInit } from '@angular/core';\nimport {\n    Administrator,\n    ADMIN_UI_VERSION,\n    CoreModule,\n    DataService,\n    GetActiveAdministrator,\n    getAppConfig,\n} from '@vendure/admin-ui/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'vdr-welcome-widget',\n    templateUrl: './welcome-widget.component.html',\n    styleUrls: ['./welcome-widget.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WelcomeWidgetComponent implements OnInit {\n    version = ADMIN_UI_VERSION;\n    administrator$: Observable<GetActiveAdministrator.ActiveAdministrator | null>;\n    brand = getAppConfig().brand;\n    hideVendureBranding = getAppConfig().hideVendureBranding;\n    hideVersion = getAppConfig().hideVersion;\n\n    constructor(private dataService: DataService) {}\n\n    ngOnInit(): void {\n        this.administrator$ = this.dataService.administrator\n            .getActiveAdministrator()\n            .mapStream(data => data.activeAdministrator || null);\n    }\n}\n\n@NgModule({\n    imports: [CoreModule],\n    declarations: [WelcomeWidgetComponent],\n})\nexport class WelcomeWidgetModule {}\n","import { APP_INITIALIZER, FactoryProvider } from '@angular/core';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    DashboardWidgetConfig,\n    DashboardWidgetService,\n    Permission,\n    WidgetLayoutDefinition,\n} from '@vendure/admin-ui/core';\n\nimport { LatestOrdersWidgetComponent } from './widgets/latest-orders-widget/latest-orders-widget.component';\nimport { OrderSummaryWidgetComponent } from './widgets/order-summary-widget/order-summary-widget.component';\nimport { TestWidgetComponent } from './widgets/test-widget/test-widget.component';\nimport { WelcomeWidgetComponent } from './widgets/welcome-widget/welcome-widget.component';\n\nexport const DEFAULT_DASHBOARD_WIDGET_LAYOUT: WidgetLayoutDefinition = [\n    { id: 'welcome', width: 12 },\n    { id: 'orderSummary', width: 6 },\n    { id: 'latestOrders', width: 6 },\n];\n\nexport const DEFAULT_WIDGETS: { [id: string]: DashboardWidgetConfig } = {\n    welcome: {\n        loadComponent: () => WelcomeWidgetComponent,\n    },\n    orderSummary: {\n        title: _('dashboard.orders-summary'),\n        loadComponent: () => OrderSummaryWidgetComponent,\n        requiresPermissions: [Permission.ReadOrder],\n    },\n    latestOrders: {\n        title: _('dashboard.latest-orders'),\n        loadComponent: () => LatestOrdersWidgetComponent,\n        supportedWidths: [6, 8, 12],\n        requiresPermissions: [Permission.ReadOrder],\n    },\n    testWidget: {\n        title: 'Test Widget',\n        loadComponent: () => TestWidgetComponent,\n    },\n};\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { DashboardWidgetService, SharedModule } from '@vendure/admin-ui/core';\n\nimport { DashboardWidgetComponent } from './components/dashboard-widget/dashboard-widget.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { dashboardRoutes } from './dashboard.routes';\nimport { DEFAULT_DASHBOARD_WIDGET_LAYOUT, DEFAULT_WIDGETS } from './default-widgets';\n\n@NgModule({\n    imports: [SharedModule, RouterModule.forChild(dashboardRoutes)],\n    declarations: [DashboardComponent, DashboardWidgetComponent],\n})\nexport class DashboardModule {\n    constructor(dashboardWidgetService: DashboardWidgetService) {\n        Object.entries(DEFAULT_WIDGETS).map(([id, config]) =>\n            dashboardWidgetService.registerWidget(id, config),\n        );\n        if (dashboardWidgetService.getDefaultLayout().length === 0) {\n            dashboardWidgetService.setDefaultLayout(DEFAULT_DASHBOARD_WIDGET_LAYOUT);\n        }\n    }\n}\n"]}